var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddMemberDialog.html",[0,0.159,1,0.9]],["body/components/AddMemberDialog.html",[0,0.222,1,1.382,2,1.091,3,0.092,4,0.079,5,0.81,6,0.825,7,0.81,8,0.81,9,0.055,10,7.094,11,5.653,12,3.134,13,1.548,14,2.407,15,0.687,16,1.761,17,1.758,18,1.714,19,1.46,20,3.001,21,1.091,22,5.823,23,1.091,24,4.95,25,0.213,26,0.617,27,1.477,28,2.953,29,2.427,30,4.462,31,4.258,32,0.716,33,6.385,34,4.587,35,5.467,36,2.64,37,0.839,38,3.134,39,5.471,40,4.462,41,4.474,42,4.985,43,4.669,44,0.908,45,3.842,46,0.514,47,0.007,48,0.604,49,0.332,50,0.435,51,3.842,52,0.832,53,1.382,54,3.842,55,3.842,56,3.842,57,1.838,58,3.793,59,3.842,60,0.687,61,0.59,62,1.543,63,2.825,64,2.138,65,2.631,66,2.897,67,3.842,68,2.202,69,3.842,70,3.842,71,0.497,72,2.617,73,0.321,74,1.247,75,2.497,76,2.393,77,1.149,78,2.14,79,2.924,80,2.924,81,0.924,82,2.497,83,1.029,84,2.924,85,0.124,86,0.649,87,3.177,88,1.052,89,2.885,90,0.177,91,1.132,92,2.924,93,1.754,94,2.924,95,2.756,96,2.924,97,4.238,98,2.756,99,4.238,100,2.756,101,2.924,102,2.924,103,1.891,104,1.891,105,2.14,106,0.726,107,3.415,108,2.617,109,3.001,110,1.153,111,1.325,112,1.946,113,1.109,114,1.175,115,0.81,116,1.174,117,1.284,118,0.674,119,1.487,120,0.81,121,1.381,122,0.726,123,0.781,124,0.753,125,0.81,126,0.739,127,0.81,128,0.753,129,0.781,130,0.81,131,0.753,132,0.81,133,0.753,134,0.81,135,0.739,136,0.781,137,0.81,138,0.753,139,0.81,140,0.781,141,0.739,142,1.149,143,0.839,144,1.174,145,0.739,146,1.174,147,0.726,148,1.834,149,0.739,150,0.662,151,0.81,152,0.739,153,1.261,154,0.739,155,0.739,156,0.753,157,0.81,158,0.739,159,0.81,160,0.767,161,0.699,162,1.284,163,0.753,164,0.81,165,0.753,166,1.091,167,0.81,168,0.753,169,0.81,170,0.753,171,0.753,172,0.81,173,0.753,174,0.81,175,0.753,176,0.81,177,0.739,178,0.781,179,0.753,180,0.839,181,0.81,182,0.739,183,0.81,184,0.739,185,0.753,186,0.81,187,0.753,188,1.381,189,0.699,190,0.81,191,0.753,192,1.174,193,0.81,194,0.753,195,0.81,196,0.753,197,0.81,198,0.739,199,0.767,200,0.739,201,0.81,202,0.739,203,0.795,204,1.052,205,0.739,206,0.753,207,0.753,208,0.81,209,0.739,210,1.55,211,0.726,212,0.81,213,0.739,214,0.767,215,0.739,216,0.739,217,0.81,218,0.753,219,0.81,220,1.174,221,0.753,222,0.81,223,0.753,224,0.81,225,0.81,226,0.753,227,0.81,228,0.726,229,0.906,230,0.739,231,0.753,232,0.81,233,0.753,234,0.81,235,1.052,236,1.174,237,1.174,238,0.739,239,0.781,240,0.687,241,0.739,242,0.739,243,0.795,244,0.767,245,0.81,246,0.739,247,0.81,248,0.726,249,0.781,250,0.81,251,0.004,252,0.004]],["title/interfaces/AddMemberDialogData.html",[39,3.357,86,0.791]],["body/interfaces/AddMemberDialogData.html",[0,0.255,1,1.151,3,0.143,4,0.124,9,0.086,10,4.881,11,3.889,12,4.881,13,1.663,14,2.763,16,1.069,17,1.069,18,1.582,19,1.216,20,3.225,21,1.173,22,5.319,23,1.173,24,5.319,25,0.331,26,0.833,27,1.431,28,2.46,29,2.022,30,4.075,31,3.889,33,5.319,34,3.451,35,4.554,36,2.199,37,0.902,39,5.9,40,4.075,41,4.683,42,4.554,43,4.888,47,0.007,49,0.347,50,0.852,58,4.075,62,1.615,63,3.243,64,2.297,65,3.02,66,3.325,68,2.374,71,0.551,72,4.075,73,0.499,74,1.942,75,3.889,76,3.726,77,1.05,78,3.333,79,4.554,80,4.554,81,0.992,82,3.889,83,1.602,84,4.554,85,0.167,86,1.011,87,4.072,88,1.714,89,3.698,90,0.276,91,1.529,92,4.554,93,2.202,94,4.554,95,4.293,96,4.554,97,5.723,98,4.293,99,5.723,100,4.293,101,4.554,102,4.554,103,2.945,104,2.945,105,3.333,106,1.13,107,5.319,108,4.075,251,0.005,252,0.005,253,1.981]],["title/components/AlertDialog.html",[0,0.159,122,0.884]],["body/components/AlertDialog.html",[0,0.25,1,0.684,2,1.032,3,0.085,4,0.073,5,0.75,6,0.764,7,0.75,8,0.75,9,0.051,15,0.636,16,1.755,17,1.751,18,0.684,19,1.07,20,5.193,21,1.032,23,1.032,25,0.197,26,0.583,27,1.283,28,3.605,32,0.677,34,4.263,37,1.044,38,2.901,40,4.716,41,4.312,44,0.849,46,0.476,47,0.007,48,0.586,49,0.357,50,0.403,52,0.896,53,1.013,57,2.519,58,3.585,60,1.431,61,0.963,71,0.311,72,2.423,73,0.297,75,2.312,76,2.215,77,0.923,81,0.59,85,0.139,86,0.889,90,0.164,91,0.723,108,2.423,111,1.227,115,0.75,116,1.11,117,1.228,118,0.624,119,1.434,120,0.75,121,1.321,122,1.308,123,1.573,124,0.697,125,0.75,126,0.684,127,0.75,128,0.697,129,0.723,130,0.75,131,0.697,132,0.75,133,0.697,134,0.75,135,0.684,136,0.723,137,0.75,138,0.697,139,0.75,140,0.723,141,0.684,142,1.099,143,0.793,144,1.11,145,0.684,146,1.11,147,0.672,148,1.801,149,0.684,150,0.612,151,0.75,152,0.684,153,1.206,154,0.684,155,0.684,156,0.697,157,0.75,158,0.684,159,0.75,160,0.71,161,0.648,162,1.228,163,0.697,164,0.75,165,0.697,166,1.032,167,0.75,168,0.697,169,0.75,170,0.697,171,0.697,172,0.75,173,0.697,174,0.75,175,0.697,176,0.75,177,0.684,178,0.723,179,0.697,180,0.793,181,0.75,182,0.684,183,0.75,184,0.684,185,0.697,186,0.75,187,0.697,188,1.321,189,0.648,190,0.75,191,0.697,192,1.11,193,0.75,194,0.697,195,0.75,196,0.697,197,0.75,198,0.684,199,0.71,200,0.684,201,0.75,202,0.684,203,0.736,204,0.994,205,0.684,206,0.697,207,0.697,208,0.75,209,0.684,210,1.503,211,0.672,212,0.75,213,0.684,214,0.71,215,0.684,216,0.684,217,0.75,218,0.697,219,0.75,220,1.11,221,0.697,222,0.75,223,0.697,224,0.75,225,0.75,226,0.697,227,0.75,228,0.672,229,0.856,230,0.684,231,0.697,232,0.75,233,0.697,234,0.75,235,0.994,236,1.11,237,1.11,238,0.684,239,0.723,240,0.636,241,0.684,242,0.684,243,0.736,244,0.71,245,0.75,246,0.684,247,0.75,248,0.672,249,0.723,250,0.75,251,0.004,252,0.004,254,2.707,255,1.194,256,4.678,257,2.968,258,3.062,259,4.678,260,3.421,261,5.569,262,4.678,263,5.745,264,5.344,265,4.804,266,4.006,267,5.263,268,5.302,269,5.263,270,3.278,271,4.968,272,3.271,273,5.111,274,2.836,275,1.88,276,5.569,277,4.768,278,5.263,279,2.161,280,5.111,281,2.842,282,3.557,283,6.155,284,1.976,285,6.155,286,5.648,287,4.293,288,6.155,289,3.557,290,1.642,291,4.678,292,4.678,293,3.744,294,4.293,295,3.557,296,4.678,297,2.552,298,3.062,299,4.006,300,4.293,301,2.215,302,3.162,303,2.707,304,4.006,305,1.127,306,2.552,307,2.388,308,2.164,309,2.552,310,2.423,311,2.066,312,3.162,313,3.162,314,3.162,315,5.263,316,5.263,317,5.263,318,6.924]],["title/interfaces/AlertDialogData.html",[86,0.791,268,3.357]],["body/interfaces/AlertDialogData.html",[0,0.26,3,0.124,4,0.107,9,0.074,16,0.924,17,0.924,20,5.272,21,1.014,23,1.014,25,0.286,26,0.759,27,1.135,28,3.715,34,4.425,37,1.032,40,4.662,41,4.263,47,0.007,49,0.417,50,1.046,52,0.792,58,3.522,60,1.371,71,0.405,72,3.522,73,0.432,75,3.362,76,3.221,85,0.171,86,1.296,90,0.239,91,1.051,108,3.522,111,2.361,122,0.977,123,1.66,251,0.005,252,0.005,253,1.712,254,3.936,255,1.173,256,4.597,257,3.673,258,3.936,259,4.597,260,3.362,261,4.597,262,4.597,263,6.261,264,5.307,265,4.986,268,5.504,270,3.221,271,4.91,272,2.7,273,4.219,274,2.787,275,1.552,276,4.597,277,3.936,279,1.784,280,4.219,281,2.346,283,6.084,284,1.942,285,6.084,286,5.583,287,4.219,288,6.084,290,1.613,291,4.597,292,4.597,293,4.578,294,4.219,296,4.597,297,3.71,298,3.859,299,5.839,300,6.258,301,3.221,302,6.084,303,5.209,304,6.214,305,1.525,306,4.91,307,3.704,308,3.357,309,5.858,310,5.561,311,2.687,312,4.597,313,4.597,314,4.597]],["title/injectables/ApiService.html",[319,1.648,320,2.371]],["body/injectables/ApiService.html",[3,0.093,4,0.08,9,0.094,25,0.215,26,0.621,27,1.54,32,0.72,37,0.992,44,0.893,46,1.205,47,0.007,48,0.652,49,0.419,50,0.932,52,1.033,60,1.177,61,0.596,68,2.575,71,0.453,73,0.324,85,0.086,90,0.179,91,1.338,106,1.507,150,1.242,251,0.004,252,0.004,255,1.866,290,1.209,305,1.539,311,3.534,319,1.974,320,2.839,321,1.964,322,3.445,323,2.589,324,4.572,325,4.657,326,5.852,327,6.412,328,6.412,329,7.213,330,5.314,331,3.876,332,7.486,333,5.604,334,3.817,335,5.604,336,5.251,337,7.098,338,3.876,339,6.07,340,7.929,341,6.279,342,7.929,343,5.184,344,8.92,345,7.929,346,6.789,347,6.789,348,5.604,349,3.876,350,5.604,351,3.876,352,5.604,353,3.876,354,5.604,355,3.876,356,5.604,357,3.876,358,3.887,359,5.604,360,2.839,361,5.604,362,2.926,363,5.01,364,4.572,365,2.95,366,3.876,367,3.445,368,3.876,369,3.876,370,1.964,371,1.855,372,1.283,373,3.876,374,3.876,375,3.161,376,3.445,377,3.445,378,3.876,379,3.876,380,3.876,381,3.876,382,3.876]],["title/components/AppComponent.html",[0,0.159,124,0.917]],["body/components/AppComponent.html",[0,0.277,1,0.891,2,1.246,3,0.111,4,0.096,5,0.977,6,0.995,7,0.977,8,0.977,9,0.066,15,0.828,16,1.774,17,1.771,18,0.891,19,1.292,21,1.246,23,1.246,25,0.257,26,0.704,27,1.203,37,1.093,44,0.674,47,0.007,48,0.619,49,0.214,60,0.828,61,0.712,71,0.274,73,0.387,77,1.115,81,0.768,85,0.103,90,0.214,113,1.337,114,1.417,115,0.977,116,1.34,117,1.422,118,0.813,119,1.694,120,0.977,121,1.53,122,0.875,123,0.942,124,1.53,125,0.977,126,0.891,127,0.977,128,0.908,129,0.942,130,0.977,131,0.908,132,0.977,133,0.908,134,0.977,135,0.891,136,0.942,137,0.977,138,0.908,139,0.977,140,0.942,141,0.891,142,1.273,143,0.958,144,1.34,145,0.891,146,1.34,147,0.875,148,1.908,149,0.891,150,0.798,151,0.977,152,0.891,153,1.396,154,0.891,155,0.891,156,0.908,157,0.977,158,0.891,159,0.977,160,0.925,161,0.843,162,1.422,163,0.908,164,0.977,165,0.908,166,1.246,167,0.977,168,0.908,169,0.977,170,0.908,171,0.908,172,0.977,173,0.908,174,0.977,175,0.908,176,0.977,177,0.891,178,0.942,179,0.908,180,0.958,181,0.977,182,0.891,183,0.977,184,0.891,185,1.603,186,0.977,187,0.908,188,1.53,189,0.843,190,0.977,191,0.908,192,1.34,193,0.977,194,0.908,195,0.977,196,0.908,197,0.977,198,0.891,199,0.925,200,0.891,201,0.977,202,0.891,203,0.959,204,1.201,205,0.891,206,0.908,207,0.908,208,0.977,209,0.891,210,1.663,211,0.875,212,0.977,213,0.891,214,0.925,215,0.891,216,0.891,217,0.977,218,0.908,219,0.977,220,1.34,221,0.908,222,0.977,223,0.908,224,0.977,225,0.977,226,0.908,227,0.977,228,0.875,229,1.034,230,0.891,231,0.908,232,0.977,233,0.908,234,0.977,235,1.201,236,1.34,237,1.34,238,0.891,239,0.942,240,1.296,241,0.891,242,0.891,243,0.959,244,0.925,245,0.977,246,0.891,247,0.977,248,0.875,249,0.942,250,0.977,251,0.005,252,0.005,255,1.051,257,3.285,279,1.598,305,0.754,371,3.041,383,4.118,384,6.355,385,6.355,386,2.675,387,5.649,388,7.254,389,6.355,390,6.355,391,5.649,392,4.632,393,4.632,394,1.598,395,1.8,396,2.048,397,2.419]],["title/modules/AppModule.html",[398,1.837,399,3.561]],["body/modules/AppModule.html",[3,0.157,4,0.136,9,0.094,47,0.007,71,0.55,73,0.55,85,0.147,90,0.304,124,1.898,177,1.787,178,1.339,251,0.006,252,0.006,399,7.395,400,2.707,401,4.299,402,5.854,403,5.854,404,5.854,405,5.854,406,6.663,407,5.559,408,4.776,409,3.439,410,2.988,411,6.586,412,4.776,413,3.818,414,7.978,415,3.926,416,7.978,417,5.854,418,6.586,419,6.586,420,6.586,421,6.072,422,5.854,423,5.012,424,4.281]],["title/modules/AppRoutingModule.html",[398,1.837,406,3.357]],["body/modules/AppRoutingModule.html",[0,0.267,3,0.155,4,0.134,9,0.093,47,0.007,64,2.484,71,0.538,73,0.54,85,0.144,90,0.299,93,1.733,177,1.519,178,1.605,184,1.519,240,1.157,251,0.006,252,0.006,400,2.66,406,5.663,413,3.097,415,3.885,421,6.008,422,5.752,425,6.471,426,4.725,427,4.59,428,1.941,429,6.008,430,6.471,431,6.471,432,6.471,433,4.925,434,5.752,435,5.76,436,5.279,437,7.883,438,6.471,439,6.471,440,5.752,441,5.279,442,6.471,443,6.471,444,4.643,445,6.471,446,6.471,447,6.471,448,6.471,449,6.471,450,6.471,451,5.752,452,6.471,453,6.471,454,4.03]],["title/modules/AuthModule.html",[398,1.837,455,3.561]],["body/modules/AuthModule.html",[3,0.147,4,0.127,9,0.088,47,0.007,71,0.566,73,0.514,74,1.999,85,0.137,90,0.284,135,1.758,149,1.758,158,1.758,182,1.758,200,1.758,202,1.758,251,0.006,252,0.006,400,2.532,401,4.126,407,5.47,408,4.583,409,3.216,410,2.794,412,4.583,413,3.664,415,3.768,423,4.687,455,7.46,456,5.474,457,5.474,458,5.474,459,6.556,460,6.158,461,4.768,462,3.835,463,5.215,464,6.158,465,5.474,466,4.687,467,6.806,468,5.474,469,4.687,470,5.493,471,5.474,472,4.687,473,5.474,474,5.474,475,5.474,476,4.687]],["title/modules/AuthRoutingModule.html",[398,1.837,459,3.357]],["body/modules/AuthRoutingModule.html",[0,0.316,3,0.153,4,0.132,9,0.091,47,0.007,62,1.371,71,0.558,73,0.533,85,0.142,90,0.295,93,1.71,135,1.507,149,1.507,150,1.1,158,1.507,180,0.963,182,1.629,200,1.507,202,1.507,203,1.322,204,1.479,251,0.006,252,0.006,281,2.897,398,2.507,400,2.625,409,3.335,413,3.056,415,3.853,426,4.687,427,4.882,428,1.916,435,5.815,436,6.387,454,3.977,459,5.617,465,5.677,466,4.86,467,6.96,468,5.677,469,4.86,470,5.617,471,5.677,472,4.86,473,5.677,474,5.677,475,5.677,476,4.86,477,6.386,478,4.151,479,4.86,480,4.86,481,4.088,482,4.35]],["title/injectables/AuthService.html",[319,1.648,483,2.522]],["body/injectables/AuthService.html",[3,0.121,4,0.104,9,0.072,25,0.28,27,1.618,32,0.866,37,0.762,44,0.975,46,1.161,47,0.007,48,0.721,49,0.431,50,0.982,52,1.054,64,3.494,71,0.449,73,0.422,85,0.112,90,0.233,106,1.737,251,0.005,252,0.005,275,2.022,284,1.897,290,1.576,305,1.555,319,2.374,320,4.392,321,2.56,323,2.187,370,2.56,371,2.418,372,1.673,478,4.929,479,6.157,480,5.772,481,4.802,483,3.632,484,4.491,485,7.191,486,6.74,487,8.09,488,8.09,489,6.186,490,5.991,491,3.025,492,5.053,493,5.053,494,6.74,495,5.053,496,6.157,497,5.053,498,5.053,499,5.189,500,5.053,501,5.053,502,5.053,503,5.053,504,5.053,505,5.053,506,5.053,507,6.74,508,5.053,509,3.625,510,3.442,511,4.539,512,4.087,513,5.053,514,4.425,515,6.741,516,5.053,517,4.491,518,5.053,519,5.053,520,5.053,521,5.053,522,5.053,523,5.053,524,4.491]],["title/components/BoardPage.html",[0,0.159,126,0.9]],["body/components/BoardPage.html",[0,0.166,1,0.465,2,0.764,3,0.058,4,0.05,5,0.509,6,0.519,7,0.509,8,0.509,9,0.035,13,1.084,14,1.802,15,0.432,16,1.718,17,1.721,18,0.465,19,0.793,21,0.764,23,0.764,25,0.134,26,0.432,27,1.457,30,4.927,32,0.501,36,2.069,37,0.588,44,0.931,46,0.827,47,0.007,48,0.592,49,0.369,50,0.787,52,0.805,53,1.083,60,1.242,61,1.068,62,0.838,68,2.157,71,0.499,73,0.202,77,0.684,81,0.934,83,0.647,85,0.054,87,1.068,88,1.411,89,2.653,90,0.112,91,1.519,93,1.937,106,1.167,109,2.643,110,2.085,112,1.224,113,1.784,114,1.89,115,0.509,116,0.822,117,1.295,118,0.424,119,1.547,120,0.509,121,1.034,122,0.456,123,0.997,124,0.473,125,0.509,126,1.083,127,0.509,128,0.473,129,1.595,130,0.509,131,0.473,132,0.509,133,0.473,134,0.509,135,0.465,136,0.491,137,0.509,138,0.473,139,0.509,140,0.491,141,0.465,142,0.86,143,0.996,144,0.822,145,0.465,146,0.822,147,0.456,148,1.618,149,0.465,150,0.416,151,0.509,152,0.465,153,0.944,154,0.465,155,0.465,156,0.473,157,0.509,158,0.465,159,0.509,160,0.482,161,0.44,162,0.961,163,0.473,164,0.509,165,0.473,166,0.764,167,0.509,168,0.473,169,0.509,170,0.473,171,0.473,172,0.509,173,0.473,174,0.509,175,0.473,176,0.509,177,0.465,178,0.491,179,0.473,180,0.849,181,0.509,182,0.465,183,0.509,184,0.465,185,0.473,186,0.509,187,0.473,188,1.034,189,0.44,190,0.509,191,0.473,192,0.822,193,0.509,194,0.473,195,0.509,196,0.473,197,0.509,198,0.465,199,0.482,200,0.465,201,0.509,202,0.465,203,0.5,204,0.737,205,0.465,206,0.473,207,0.473,208,0.509,209,0.465,210,1.256,211,0.456,212,0.509,213,0.465,214,0.482,215,0.465,216,0.465,217,0.509,218,0.473,219,0.509,220,0.822,221,0.473,222,0.509,223,0.473,224,0.509,225,0.509,226,0.473,227,0.509,228,0.737,229,1.373,230,0.465,231,0.473,232,0.509,233,0.473,234,0.509,235,0.737,236,1.034,237,0.822,238,0.465,239,0.491,240,0.432,241,0.465,242,0.465,243,0.5,244,0.482,245,0.509,246,0.465,247,0.509,248,0.456,249,0.491,250,0.509,251,0.003,252,0.003,257,1.97,258,1.725,279,0.833,293,1.224,305,1.131,308,1.603,309,2.798,310,2.656,330,2.643,336,1.302,394,0.833,395,2.049,396,1.725,428,0.725,525,2.147,526,4.001,527,4.904,528,3.9,529,5.389,530,5.872,531,5.389,532,5.389,533,4.294,534,4.904,535,4.904,536,5.004,537,3.9,538,3.9,539,3.9,540,3.034,541,5.63,542,1.57,543,3.161,544,3.872,545,4.518,546,3.153,547,3.421,548,4.01,549,3.9,550,3.9,551,5.63,552,2.416,553,1.838,554,3.9,555,4.36,556,2.416,557,2.416,558,3.9,559,2.416,560,1.446,561,3.9,562,2.416,563,4.904,564,2.416,565,2.416,566,2.416,567,2.416,568,2.416,569,2.416,570,2.416,571,2.416,572,2.416,573,2.416,574,2.416,575,2.416,576,3.341,577,2.416,578,2.416,579,2.732,580,3.519,581,3.181,582,2.416,583,2.416,584,3.9,585,2.147,586,1.346,587,1.57,588,1.504,589,1.302,590,1.57,591,1.838,592,1.042,593,1.433,594,1.017,595,1.042,596,2.416,597,2.416,598,2.416,599,2.535,600,1.504,601,2.147,602,2.147,603,1.733,604,2.416,605,2.416,606,1.346,607,2.25,608,1.838,609,2.147,610,2.416,611,2.416,612,3.733,613,2.416,614,2.416,615,3.9,616,2.147,617,2.416,618,2.147,619,1.97,620,2.416,621,2.416,622,2.416,623,2.416,624,2.416,625,2.416,626,3.9,627,2.416,628,2.416,629,2.416,630,2.416,631,5.63,632,2.416,633,3.9,634,3.9,635,3.9,636,4.904,637,5.63,638,2.147,639,2.416,640,2.416,641,2.416,642,2.416,643,2.416,644,2.416,645,2.416,646,3.341,647,0.907,648,2.416,649,3.733,650,4.904,651,2.414,652,2.147,653,3.9,654,3.054,655,3.181,656,3.181,657,3.9,658,1.838,659,1.97,660,1.733,661,2.416,662,3.181,663,3.519,664,3.054,665,2.416,666,2.416,667,2.416,668,1.733,669,1.733,670,1.446,671,1.97,672,2.147,673,1.446,674,2.416,675,2.416,676,2.416,677,2.416,678,3.181,679,3.181,680,2.968,681,2.25,682,1.872,683,2.391,684,2.668,685,2.49,686,3.045,687,3.519,688,2.44,689,3.63,690,2.285,691,1.393,692,2.416,693,2.535,694,2.998,695,3.045,696,2.416,697,2.147,698,2.414,699,2.37,700,1.97,701,1.97,702,1.645,703,2.877,704,1.733,705,3.467,706,2.284,707,2.416,708,3.9,709,1.504,710,2.414,711,1.733,712,2.798,713,1.645,714,1.403,715,1.433,716,1.433,717,0.869,718,1.241,719,1.261,720,1.224,721,1.883,722,2.416,723,2.416,724,2.169,725,2.116,726,1.393,727,2.116,728,1.725,729,2.416,730,3.9,731,4.904,732,2.968,733,3.68,734,2.416,735,3.9,736,3.9,737,3.9,738,3.9,739,1.925,740,2.416,741,2.416,742,2.416,743,1.504,744,0.739,745,0.869,746,1.725,747,3.341,748,1.346,749,1.224,750,1.096,751,1.189,752,1.393,753,1.838,754,3.9,755,1.446,756,1.393,757,1.838]],["title/components/BoardTaskComponent.html",[0,0.159,128,0.917]],["body/components/BoardTaskComponent.html",[0,0.198,1,0.609,2,0.945,3,0.076,4,0.065,5,0.668,6,0.68,7,0.668,8,0.668,9,0.045,15,0.566,16,1.745,17,1.741,18,0.609,19,0.98,21,0.945,23,0.945,25,0.175,26,0.535,27,0.969,32,0.62,37,0.477,44,0.894,46,0.646,47,0.007,48,0.61,49,0.325,50,0.546,52,0.756,53,1.124,60,1.167,61,1.08,62,1.036,71,0.481,73,0.264,77,0.846,81,0.525,85,0.07,88,0.911,89,2.623,90,0.146,91,0.644,106,0.911,109,3.148,110,1.447,111,1.664,113,1.886,114,1.475,115,0.668,116,1.017,117,1.145,118,0.555,119,1.771,120,0.668,121,1.232,122,0.598,123,0.644,124,0.621,125,0.668,126,0.609,127,0.668,128,1.28,129,1.687,130,0.668,131,0.621,132,0.668,133,0.621,134,0.668,135,0.609,136,0.644,137,0.668,138,0.621,139,0.668,140,0.644,141,0.609,142,1.233,143,0.727,144,1.017,145,0.609,146,1.017,147,0.598,148,1.749,149,0.609,150,1.326,151,0.668,152,0.609,153,1.565,154,0.609,155,0.609,156,0.621,157,0.668,158,0.609,159,0.668,160,0.632,161,0.576,162,1.145,163,0.621,164,0.668,165,0.621,166,1.452,167,0.668,168,0.621,169,0.668,170,0.621,171,1.509,172,0.668,173,0.621,174,0.668,175,0.621,176,0.668,177,0.609,178,0.644,179,0.621,180,0.727,181,0.668,182,0.609,183,0.668,184,0.609,185,0.621,186,0.668,187,0.621,188,1.232,189,0.576,190,0.668,191,0.621,192,1.017,193,0.668,194,0.621,195,0.668,196,0.621,197,0.668,198,0.609,199,0.632,200,0.609,201,0.668,202,0.609,203,0.656,204,0.911,205,0.609,206,0.621,207,0.621,208,0.668,209,0.609,210,1.429,211,0.598,212,0.668,213,0.609,214,0.632,215,0.609,216,0.609,217,0.668,218,0.621,219,0.668,220,1.017,221,0.621,222,0.668,223,0.621,224,0.668,225,0.668,226,0.621,227,0.668,228,0.911,229,1.483,230,0.609,231,0.621,232,0.668,233,0.621,234,0.668,235,0.911,236,1.017,237,1.017,238,0.609,239,0.644,240,0.566,241,0.609,242,0.609,243,0.656,244,0.632,245,0.668,246,0.609,247,0.668,248,0.598,249,0.644,250,0.668,251,0.004,252,0.004,257,1.937,279,1.092,290,0.988,293,1.604,308,2.89,336,1.706,372,1.048,394,2.555,395,2.554,514,2.373,529,6.042,531,6.042,532,6.042,544,4.29,546,3.36,586,1.764,587,2.058,588,1.972,592,1.366,593,1.163,594,1.333,595,1.366,600,1.972,603,2.271,607,1.826,649,2.41,654,1.972,668,2.271,669,2.271,670,1.895,671,2.583,673,3.497,679,3.934,682,1.88,683,2.393,684,1.215,685,1.4,686,1.333,688,2.237,690,2.15,694,2.08,695,2.75,703,2.721,706,3.042,710,2.875,714,1.139,715,1.163,716,1.772,717,2.101,718,1.858,721,1.215,724,2.583,725,2.08,727,2.52,728,2.583,733,4.29,739,1.893,744,0.968,745,1.139,746,2.133,747,3.979,749,2.96,750,2.963,751,1.558,752,2.782,753,2.41,758,7.602,759,6.976,760,2.814,761,5.842,762,4.823,763,3.67,764,5.806,765,1.893,766,2.583,767,4.823,768,2.75,769,3.166,770,3.166,771,3.166,772,3.67,773,3.166,774,3.166,775,3.166,776,3.166,777,3.166,778,3.166,779,1.895,780,2.41,781,2.156,782,3.003,783,2.814,784,4.823,785,2.814,786,3.638,787,2.058,788,3.166,789,2.814,790,2.814,791,2.41,792,2.41,793,2.583,794,2.271,795,2.271,796,2.814,797,4.823,798,4.287,799,4.823,800,1.764,801,2.03,802,1.653,803,2.887,804,3.934,805,3.166,806,2.814,807,2.41,808,1.972,809,1.515,810,3.166,811,2.583,812,4.191,813,3.166,814,3.638,815,3.638,816,2.814,817,2.814,818,3.166,819,3.166,820,2.156,821,2.156,822,1.653,823,3.166,824,3.166,825,2.373,826,3.166,827,2.058]],["title/components/ButtonComponent.html",[0,0.159,131,0.917]],["body/components/ButtonComponent.html",[0,0.24,1,0.621,2,0.959,3,0.077,4,0.067,5,0.681,6,0.693,7,0.681,8,0.681,9,0.046,13,1.36,15,0.577,16,1.747,17,1.745,18,0.621,19,0.995,21,0.959,23,0.959,25,0.179,26,0.542,32,0.629,44,0.791,47,0.007,48,0.523,49,0.369,52,0.374,53,0.621,57,1.544,60,1.056,61,0.908,71,0.39,73,0.269,77,0.858,81,0.535,85,0.072,90,0.149,110,0.968,111,1.113,113,1.904,115,0.681,116,1.246,117,1.519,118,0.566,119,1.873,120,0.681,121,1.246,122,0.61,123,0.656,124,0.633,125,0.681,126,0.621,127,0.681,128,0.633,129,0.656,130,0.681,131,1.293,132,0.681,133,0.633,134,0.681,135,0.621,136,0.656,137,0.681,138,0.633,139,0.681,140,0.656,141,0.621,142,1.037,143,0.738,144,1.032,145,0.621,146,1.032,147,0.61,148,1.758,149,0.621,150,0.556,151,0.681,152,0.621,153,1.137,154,0.621,155,0.621,156,0.633,157,0.681,158,0.621,159,0.681,160,0.644,161,0.588,162,1.158,163,0.633,164,0.681,165,0.633,166,1.519,167,0.681,168,0.633,169,0.681,170,0.633,171,0.633,172,0.681,173,0.633,174,0.681,175,0.633,176,0.681,177,0.621,178,0.656,179,0.633,180,0.738,181,0.681,182,0.621,183,0.681,184,0.621,185,1.158,186,0.681,187,0.633,188,1.246,189,0.588,190,0.681,191,0.633,192,1.032,193,0.681,194,0.633,195,0.681,196,0.633,197,0.681,198,0.621,199,0.644,200,0.621,201,0.681,202,0.621,203,0.668,204,0.924,205,0.621,206,0.633,207,0.633,208,0.681,209,0.621,210,1.441,211,0.61,212,0.681,213,0.621,214,0.644,215,0.621,216,0.621,217,0.681,218,0.633,219,0.681,220,1.032,221,0.633,222,0.681,223,0.633,224,0.681,225,0.681,226,0.633,227,0.681,228,0.61,229,0.796,230,0.621,231,0.633,232,0.681,233,0.633,234,0.681,235,0.924,236,1.032,237,1.032,238,0.621,239,0.656,240,0.577,241,0.621,242,0.621,243,0.668,244,0.644,245,0.681,246,0.621,247,0.681,248,0.61,249,0.656,250,0.681,251,0.004,252,0.004,255,0.732,257,1.296,264,5.191,271,3.511,275,1.468,284,1.838,293,3.592,305,0.796,307,4.339,308,2.43,394,3.137,395,2.632,396,3.616,592,1.392,593,2.424,594,1.359,595,1.392,682,1.61,683,1.44,684,1.878,688,1.88,690,2.592,694,1.392,698,4.024,699,1.359,703,3.072,706,2.279,709,2.01,714,1.76,715,1.798,716,2.424,717,1.76,718,1.88,721,1.239,725,1.392,727,3.596,728,2.917,733,4.157,739,1.921,746,2.917,749,3.342,750,3.385,755,2.929,765,1.921,800,1.798,801,2.777,802,2.555,803,2.929,804,3.992,806,4.35,814,1.798,815,1.798,822,2.555,828,2.869,829,2.06,830,5.911,831,5.911,832,4.893,833,6.891,834,7.752,835,4.821,836,3.227,837,3.227,838,3.047,839,4.893,840,4.893,841,5.02,842,3.227,843,5.039,844,3.227,845,4.35,846,3.227,847,6.596,848,3.409,849,4.893,850,3.227,851,3.227,852,2.01,853,2.098,854,3.227,855,2.869,856,3.724,857,2.869,858,3.227,859,3.227,860,3.227,861,2.869,862,3.992,863,3.227,864,3.227,865,1.932,866,3.227,867,3.227,868,3.227,869,4.498,870,4.35,871,3.227,872,2.456,873,3.393,874,7.09,875,3.227,876,3.227,877,2.632,878,2.198,879,3.227,880,5.192,881,4.241]],["title/components/CardComponent.html",[0,0.159,133,0.917]],["body/components/CardComponent.html",[0,0.24,1,0.851,2,1.206,3,0.106,4,0.091,5,0.932,6,0.949,7,0.932,8,0.932,9,0.063,13,1.71,14,2.601,15,0.79,16,1.771,17,1.768,18,0.851,19,1.251,21,1.206,23,1.206,25,0.245,32,0.791,36,2.812,37,1.067,44,0.652,47,0.007,48,0.606,52,0.512,53,0.851,71,0.364,73,0.369,77,1.079,81,0.733,85,0.098,90,0.204,110,1.326,115,0.932,116,1.297,117,1.387,118,0.776,119,1.875,120,0.932,121,1.492,122,0.835,123,0.899,124,0.866,125,0.932,126,0.851,127,0.932,128,0.866,129,0.899,130,0.932,131,0.866,132,0.932,133,1.5,134,0.932,135,0.851,136,0.899,137,0.932,138,0.866,139,0.932,140,0.899,141,0.851,142,1.242,143,0.927,144,1.297,145,0.851,146,1.297,147,0.835,148,1.89,149,0.851,150,0.761,151,0.932,152,0.851,153,1.362,154,0.851,155,0.851,156,0.866,157,0.932,158,0.851,159,0.932,160,0.882,161,0.805,162,1.387,163,0.866,164,0.932,165,0.866,166,1.206,167,0.932,168,0.866,169,0.932,170,0.866,171,0.866,172,0.932,173,0.866,174,0.932,175,0.866,176,0.932,177,0.851,178,0.899,179,0.866,180,0.927,181,0.932,182,0.851,183,0.932,184,0.851,185,0.866,186,0.932,187,0.866,188,1.492,189,0.805,190,0.932,191,0.866,192,1.297,193,0.932,194,0.866,195,0.932,196,0.866,197,0.932,198,0.851,199,0.882,200,0.851,201,0.932,202,0.851,203,0.915,204,1.162,205,0.851,206,0.866,207,0.866,208,0.932,209,0.851,210,1.635,211,0.835,212,0.932,213,0.851,214,0.882,215,0.851,216,0.851,217,0.932,218,0.866,219,0.932,220,1.297,221,0.866,222,0.932,223,0.866,224,0.932,225,0.932,226,0.866,227,0.932,228,0.835,229,1.001,230,0.851,231,0.866,232,0.932,233,0.866,234,0.932,235,1.162,236,1.297,237,1.297,238,0.851,239,0.899,240,0.79,241,0.851,242,0.851,243,0.915,244,0.882,245,0.932,246,0.851,247,0.932,248,0.835,249,0.899,250,0.932,251,0.004,252,0.004,257,1.776,264,2.873,279,1.525,308,2.909,395,2.539,396,1.955,397,3.213,514,3.028,593,2.261,682,1.079,683,1.811,685,1.955,686,1.861,688,1.957,713,4.191,718,1.406,721,2.362,727,3.301,728,2.721,733,2.463,755,3.683,756,2.55,800,2.463,814,3.942,815,3.942,827,2.873,882,3.93,883,8.713,884,7.077,885,6.153,886,4.421,887,4.421,888,5.469,889,6.802,890,4.421,891,4.421,892,3.365,893,4.421]],["title/components/ChangePasswordPage.html",[0,0.159,135,0.9]],["body/components/ChangePasswordPage.html",[0,0.201,1,0.626,2,0.965,3,0.078,4,0.067,5,0.686,6,0.699,7,0.686,8,0.686,9,0.047,13,1.369,14,2.183,15,0.581,16,1.748,17,1.746,18,0.626,19,1.001,21,0.965,23,0.965,25,0.18,26,0.546,27,0.985,29,2.869,32,0.633,36,2.434,37,0.742,44,0.794,46,0.436,47,0.007,48,0.564,49,0.274,50,0.806,52,0.57,53,0.947,60,0.581,61,0.5,62,1.848,63,2.562,65,2.858,66,3.146,71,0.474,73,0.272,74,1.056,77,0.864,81,0.54,83,0.871,85,0.072,90,0.15,91,1.666,93,0.871,103,1.601,104,1.601,106,0.615,110,0.976,111,1.122,113,2.614,114,2.449,115,0.686,116,1.038,117,1.164,118,0.571,119,1.61,120,0.686,121,1.252,122,0.615,123,0.661,124,0.638,125,0.686,126,0.626,127,0.686,128,0.638,129,0.661,130,0.686,131,0.638,132,0.686,133,0.638,134,0.686,135,1.275,136,1.628,137,0.686,138,0.638,139,0.686,140,0.661,141,0.626,142,1.042,143,0.742,144,1.038,145,0.626,146,1.038,147,0.615,148,1.762,149,0.626,150,0.56,151,0.686,152,0.626,153,1.143,154,0.626,155,0.626,156,0.638,157,0.686,158,0.626,159,0.686,160,0.649,161,0.592,162,1.164,163,0.638,164,0.686,165,0.638,166,1.164,167,0.686,168,0.638,169,0.686,170,0.638,171,0.638,172,0.686,173,0.638,174,0.686,175,0.638,176,0.686,177,0.626,178,0.661,179,0.638,180,0.742,181,0.686,182,0.626,183,0.686,184,0.626,185,1.467,186,0.686,187,0.638,188,1.252,189,0.592,190,0.686,191,0.638,192,1.038,193,0.686,194,0.638,195,0.686,196,0.638,197,0.686,198,0.626,199,0.649,200,0.626,201,0.686,202,0.626,203,0.674,204,0.93,205,0.626,206,0.638,207,0.638,208,0.686,209,0.626,210,1.446,211,0.615,212,0.686,213,0.626,214,0.649,215,0.626,216,0.626,217,0.686,218,0.638,219,0.686,220,1.038,221,0.638,222,0.686,223,0.638,224,0.686,225,0.686,226,0.638,227,0.686,228,0.615,229,0.801,230,0.626,231,0.638,232,0.686,233,0.638,234,0.686,235,0.93,236,1.038,237,1.038,238,0.626,239,0.661,240,0.581,241,0.626,242,0.626,243,0.674,244,0.649,245,0.686,246,0.626,247,0.686,248,0.615,249,0.661,250,0.686,251,0.004,252,0.004,281,2.233,305,0.801,307,1.476,386,3.273,394,2.582,395,2.12,397,1.699,409,2.571,428,0.976,466,5.916,481,4.493,483,4.034,490,5.887,496,5.415,543,3.72,579,3.309,682,1.617,683,2.356,684,3.146,685,2.177,686,2.073,688,1.89,690,1.817,709,2.026,710,1.601,714,2.382,715,2.183,716,2.434,717,2.136,718,1.89,719,1.699,720,1.648,721,1.89,724,1.439,725,1.403,726,2.84,801,1.37,803,4.259,809,1.557,825,1.601,865,1.947,894,6.91,895,2.654,896,5.28,897,4.376,898,5.28,899,2.216,900,4.923,901,2.892,902,3.253,903,5.415,904,4.376,905,4.376,906,4.376,907,4.376,908,4.376,909,3.253,910,2.653,911,4.923,912,3.253,913,2.892,914,2.334,915,2.476,916,2.892,917,2.892,918,2.334,919,2.654,920,4.923,921,4.376,922,2.892,923,2.476,924,2.654,925,3.253,926,3.253,927,2.026,928,2.654,929,3.747,930,2.115,931,1.877,932,2.026,933,1.699,934,4.034,935,2.216,936,3.2,937,2.216,938,1.877,939,5.69,940,2.947,941,2.115,942,1.877,943,2.026,944,2.115,945,2.115,946,2.334,947,4.511,948,2.216,949,4.846,950,4.511,951,2.216,952,2.216,953,2.216,954,2.216,955,2.216,956,2.216,957,2.216,958,2.216]],["title/components/CheckboxComponent.html",[0,0.159,138,0.917]],["body/components/CheckboxComponent.html",[0,0.213,1,0.686,2,1.033,3,0.085,4,0.074,5,0.752,6,0.766,7,0.752,8,0.752,9,0.051,15,0.637,16,1.755,17,1.752,18,0.686,19,1.072,21,1.033,23,1.033,25,0.197,26,0.584,27,0.874,29,2.12,32,0.678,44,0.94,46,0.928,47,0.007,48,0.652,49,0.38,50,0.785,52,0.928,53,1.542,60,1.322,61,1.313,62,1.489,64,1.368,68,1.811,71,0.312,73,0.298,77,0.925,81,0.591,85,0.079,90,0.165,91,1.762,115,0.752,116,1.112,117,1.45,118,0.925,119,1.435,120,0.752,121,1.323,122,0.673,123,0.725,124,0.699,125,0.752,126,0.686,127,0.752,128,0.699,129,0.725,130,0.752,131,0.699,132,0.752,133,0.699,134,0.752,135,0.686,136,0.725,137,0.752,138,1.359,139,0.752,140,1.845,141,0.686,142,1.101,143,0.795,144,1.112,145,0.686,146,1.112,147,0.673,148,1.802,149,0.686,150,0.614,151,0.752,152,0.686,153,1.207,154,0.686,155,0.686,156,0.699,157,0.752,158,0.686,159,0.752,160,0.712,161,0.649,162,1.23,163,0.699,164,0.752,165,0.699,166,1.359,167,0.752,168,0.699,169,0.752,170,0.699,171,0.699,172,0.752,173,0.699,174,0.752,175,0.699,176,0.752,177,0.686,178,0.725,179,0.699,180,0.795,181,0.752,182,0.686,183,0.752,184,0.686,185,0.699,186,0.752,187,0.699,188,1.323,189,0.649,190,0.752,191,0.699,192,1.112,193,0.752,194,0.699,195,0.752,196,0.699,197,0.752,198,0.686,199,0.712,200,0.686,201,0.752,202,0.686,203,0.738,204,0.996,205,0.686,206,0.699,207,0.699,208,0.752,209,0.686,210,1.504,211,0.673,212,0.752,213,0.686,214,0.712,215,0.686,216,0.686,217,0.752,218,0.699,219,0.752,220,1.112,221,0.699,222,0.752,223,0.699,224,0.752,225,0.752,226,0.699,227,0.752,228,0.673,229,0.858,230,0.686,231,0.699,232,0.752,233,0.699,234,0.752,235,0.996,236,1.56,237,1.112,238,0.686,239,0.725,240,0.637,241,0.686,242,0.686,243,0.738,244,0.712,245,0.752,246,0.686,247,0.752,248,0.673,249,0.725,250,0.752,251,0.004,252,0.004,255,1.572,274,1.921,275,1.882,279,1.23,281,3.356,284,1.339,290,1.112,298,2.331,305,0.858,323,1.157,325,3.178,358,3.381,362,1.861,540,3.381,647,1.98,651,2.594,682,1.287,691,4.467,694,1.538,721,1.368,745,1.282,748,2.937,751,1.754,752,2.056,765,2.07,801,2.219,802,1.861,812,2.557,822,1.861,829,1.501,856,5.275,873,1.706,878,3.591,959,3.169,960,2.523,961,4.3,962,6.273,963,5.272,964,3.156,965,3.156,966,3.998,967,4.636,968,3.755,969,3.755,970,3.156,971,3.156,972,3.156,973,3.156,974,3.156,975,3.565,976,5.464,977,2.22,978,2.134,979,2.937,980,2.134,981,2.134,982,2.056,983,1.921,984,1.921,985,2.22,986,4.606,987,2.937,988,1.986,989,2.22,990,2.056,991,1.986,992,2.22,993,4.428,994,2.134,995,1.986,996,2.056,997,2.056,998,2.134,999,2.134,1000,1.282,1001,3.156,1002,2.134,1003,2.22,1004,3.156,1005,2.523,1006,4.636,1007,2.134,1008,3.494,1009,2.056,1010,3.494,1011,3.156,1012,2.392,1013,4.149,1014,1.986,1015,2.134,1016,3.156,1017,2.134,1018,2.22,1019,2.134,1020,2.134,1021,2.22,1022,3.156,1023,2.134,1024,2.134,1025,2.317,1026,2.22,1027,2.22,1028,2.22,1029,2.22,1030,2.22,1031,2.134,1032,2.937,1033,2.22,1034,3.156,1035,2.908,1036,2.713,1037,2.22,1038,2.317,1039,2.22,1040,5.272,1041,3.427,1042,3.565,1043,3.565,1044,3.178,1045,2.713,1046,3.169,1047,3.565,1048,2.428,1049,2.908]],["title/directives/ClickStopPropagationDirective.html",[118,0.821,242,0.9]],["body/directives/ClickStopPropagationDirective.html",[3,0.162,4,0.14,9,0.097,15,1.215,16,1.453,25,0.377,27,1.443,32,1.045,44,0.862,46,0.91,47,0.007,48,0.539,49,0.314,50,0.77,52,0.787,53,1.565,57,3.253,62,1.46,71,0.402,73,0.568,85,0.151,90,0.314,118,1.427,241,1.308,242,1.565,243,1.867,244,1.84,251,0.006,252,0.006,290,2.537,553,6.862,1050,7.734,1051,6.043,1052,8.132,1053,8.132,1054,8.132,1055,6.798,1056,8.132,1057,8.132,1058,8.132,1059,6.798,1060,6.798,1061,6.798,1062,6.798,1063,6.798,1064,6.798]],["title/components/ControlAccessor.html",[0,0.159,140,0.951]],["body/components/ControlAccessor.html",[0,0.236,1,0.526,2,0.844,3,0.065,4,0.056,5,0.576,7,0.908,8,0.576,9,0.039,13,1.196,15,0.489,16,1.729,17,1.724,18,0.526,19,0.875,25,0.151,26,0.477,27,1.254,29,2.692,32,0.553,37,0.91,44,0.933,46,0.879,47,0.007,48,0.654,49,0.349,50,0.744,52,0.94,53,1.612,60,1.079,61,1.361,62,1.671,64,1.652,65,2.638,68,2.014,71,0.357,73,0.228,74,0.887,77,0.755,81,0.453,83,0.732,85,0.061,90,0.279,91,1.775,93,0.732,106,1.318,115,0.576,116,0.908,117,1.431,118,0.934,119,1.25,120,0.576,121,1.123,122,0.516,123,0.556,124,0.536,125,0.576,126,0.526,127,0.576,128,0.536,129,0.556,130,0.576,131,0.536,132,0.576,133,0.536,134,0.576,135,0.526,136,0.556,137,0.576,138,0.536,139,0.576,140,1.228,141,0.526,142,0.934,143,0.649,144,0.908,145,0.526,146,0.908,147,0.516,148,1.68,149,0.526,150,0.471,151,0.576,152,0.526,153,1.024,154,0.526,155,0.526,156,0.536,157,0.576,158,0.526,159,0.576,160,0.546,161,0.498,162,1.043,163,0.536,164,0.576,165,0.536,166,1.184,167,0.576,168,0.536,169,0.576,170,0.536,171,0.536,172,0.576,173,0.536,174,0.576,175,0.536,176,0.576,177,0.526,178,0.556,179,0.536,180,0.649,181,0.576,182,0.526,183,0.576,184,0.526,185,0.536,186,0.576,187,0.536,188,1.123,189,0.498,190,0.576,191,0.536,192,0.908,193,0.576,194,0.536,195,0.576,196,0.536,197,0.576,198,0.526,199,0.546,200,0.526,201,0.576,202,0.526,203,0.566,204,0.813,205,0.526,206,0.536,207,0.536,208,0.576,209,0.526,210,1.335,211,0.516,212,0.576,213,0.526,214,0.546,215,0.526,216,0.526,217,0.576,218,0.536,219,0.576,220,0.908,221,0.536,222,0.576,223,0.536,224,0.576,225,0.576,226,0.536,227,0.576,228,0.516,229,0.7,230,0.526,231,0.536,232,0.576,233,0.536,234,0.576,235,0.813,236,1.595,237,0.908,238,0.526,239,0.556,240,0.489,241,0.526,242,0.526,243,0.566,244,0.546,245,0.576,246,0.526,247,0.576,248,0.516,249,0.556,250,0.576,251,0.003,252,0.003,255,1.582,274,2.319,275,1.971,281,3.431,284,1.616,290,1.884,298,3.228,303,2.08,311,2.579,323,1.397,325,3.534,358,3.76,362,2.247,424,2.798,526,4.343,540,3.254,647,2.268,651,2.972,712,3.088,748,3.886,751,2.118,765,2.371,829,1.812,838,1.702,873,2.06,964,3.187,965,3.187,966,4.892,967,4.658,968,3.615,969,3.615,970,2.576,971,2.576,972,2.576,973,2.576,974,3.187,978,2.576,979,3.364,980,2.576,981,3.187,982,2.483,983,2.319,984,2.319,986,5.09,987,4.524,988,2.397,990,2.483,991,2.397,993,4.768,994,2.576,995,3.364,996,2.483,997,2.483,998,2.576,999,2.576,1000,1.548,1001,3.615,1002,2.576,1004,3.615,1005,2.89,1006,4.943,1007,2.576,1008,3.886,1009,2.483,1010,3.886,1011,3.615,1012,2.74,1013,4.527,1014,2.397,1015,2.576,1016,3.615,1017,2.576,1019,2.576,1020,2.576,1022,3.615,1023,3.187,1024,2.576,1026,2.68,1027,2.68,1028,2.68,1029,2.68,1031,2.576,1032,3.659,1034,3.615,1036,4.999,1065,7.873,1066,2.43,1067,3.826,1068,3.511,1069,3.153,1070,4.304,1071,3.276,1072,5.323,1073,2.798,1074,3.088,1075,3.626,1076,5.358,1077,1.862,1078,2.733,1079,3.511,1080,3.511,1081,2.397,1082,2.733,1083,2.733,1084,2.733,1085,2.733,1086,2.733,1087,2.733,1088,2.733,1089,2.733,1090,2.733,1091,2.733,1092,2.733,1093,2.733,1094,2.733,1095,2.733,1096,3.826,1097,2.733,1098,2.733,1099,2.23,1100,2.733,1101,2.733,1102,2.733,1103,2.733,1104,2.733,1105,5.323,1106,2.06,1107,2.23,1108,1.862,1109,2.23,1110,2.733,1111,2.43,1112,2.23,1113,2.08,1114,2.08,1115,2.733,1116,2.733,1117,4.304,1118,2.733,1119,2.733,1120,2.733,1121,2.733,1122,2.43,1123,2.733,1124,2.733,1125,2.733,1126,5.323,1127,2.733,1128,2.23,1129,2.733,1130,2.733,1131,2.733,1132,2.23,1133,4.304,1134,4.304,1135,2.733,1136,2.733,1137,2.733,1138,2.733,1139,2.733,1140,2.733]],["title/components/CreateProjectMembersPage.html",[0,0.159,141,0.9]],["body/components/CreateProjectMembersPage.html",[0,0.202,1,0.953,2,0.971,3,0.078,4,0.068,5,0.692,6,0.704,7,0.692,8,0.692,9,0.047,11,2.132,15,0.586,16,1.748,17,1.746,18,1.149,19,1.452,21,0.971,23,0.971,25,0.182,26,0.549,27,1.429,28,2.036,29,2.829,32,0.637,37,1.002,44,0.871,46,0.439,47,0.007,48,0.618,49,0.33,50,0.809,52,0.573,53,1.149,60,1.189,61,0.761,62,1.674,63,2.575,65,2.397,66,2.64,68,1.723,71,0.516,73,0.274,74,1.064,77,1.591,78,1.827,81,0.544,83,0.878,85,0.073,87,3.157,88,0.936,90,0.151,91,1.752,93,0.878,103,1.614,104,1.614,105,1.827,106,0.936,109,2.669,110,1.791,111,1.709,112,2.51,113,0.947,114,1.003,115,0.692,116,1.045,117,1.17,118,0.575,119,1.377,120,0.692,121,1.259,122,0.62,123,0.667,124,0.643,125,0.692,126,0.631,127,0.692,128,0.643,129,0.667,130,0.692,131,0.643,132,0.692,133,0.643,134,0.692,135,0.631,136,0.667,137,0.692,138,0.643,139,0.692,140,0.667,141,1.28,142,1.469,143,1.429,144,1.045,145,0.631,146,1.045,147,0.62,148,1.765,149,0.631,150,0.565,151,0.692,152,0.631,153,1.149,154,0.631,155,0.631,156,0.643,157,0.692,158,0.631,159,0.692,160,0.655,161,0.597,162,1.17,163,0.643,164,0.692,165,0.643,166,0.971,167,0.692,168,0.643,169,0.692,170,0.643,171,0.643,172,0.692,173,0.643,174,0.692,175,0.643,176,0.692,177,0.631,178,0.667,179,0.643,180,1.076,181,0.692,182,0.631,183,0.692,184,0.631,185,0.643,186,0.692,187,0.643,188,1.259,189,0.597,190,0.692,191,0.643,192,1.045,193,0.692,194,0.643,195,0.692,196,0.643,197,0.692,198,0.631,199,0.655,200,0.631,201,0.692,202,0.631,203,0.679,204,0.936,205,0.631,206,0.643,207,0.643,208,0.692,209,0.631,210,1.452,211,0.62,212,0.692,213,0.631,214,0.655,215,0.631,216,0.631,217,0.692,218,0.643,219,0.692,220,1.045,221,0.643,222,0.692,223,0.643,224,0.692,225,0.692,226,0.643,227,0.692,228,0.62,229,0.806,230,0.631,231,0.643,232,0.692,233,0.643,234,0.692,235,0.936,236,1.045,237,1.045,238,0.631,239,0.667,240,0.586,241,0.631,242,0.631,243,0.679,244,0.655,245,0.692,246,0.631,247,0.692,248,0.62,249,0.667,250,0.692,251,0.004,252,0.004,255,0.744,258,2.19,270,3.085,279,1.131,305,0.806,307,2.247,311,1.945,323,2.605,386,3.629,428,0.984,533,4.88,543,3.73,546,3.536,547,3.836,548,4.497,579,3.977,590,2.132,592,1.415,593,1.205,594,1.381,595,1.415,606,1.827,654,2.042,663,2.353,664,2.042,670,1.963,682,1.457,683,1.757,688,1.899,689,2.587,694,2.137,717,1.18,718,1.043,721,1.259,745,1.18,779,1.963,825,1.614,910,2.669,933,1.713,1044,2.51,1141,6.371,1142,6.371,1143,2.675,1144,5.306,1145,4.403,1146,4.869,1147,4.869,1148,5.425,1149,5.425,1150,1.963,1151,3.73,1152,4.953,1153,3.28,1154,3.085,1155,3.374,1156,3.22,1157,3.22,1158,2.965,1159,3.374,1160,3.28,1161,3.28,1162,5.425,1163,3.28,1164,3.374,1165,3.28,1166,2.915,1167,3.28,1168,2.675,1169,2.496,1170,2.042,1171,2.234,1172,2.234,1173,2.042,1174,2.234,1175,2.042,1176,2.132,1177,2.496,1178,2.675,1179,2.496,1180,2.496,1181,2.675,1182,4.041,1183,2.675,1184,4.041,1185,2.915,1186,2.915,1187,2.915,1188,4.403,1189,3.22,1190,2.915]],["title/components/CreateProjectPage.html",[0,0.159,145,0.9]],["body/components/CreateProjectPage.html",[0,0.201,1,0.945,2,0.963,3,0.077,4,0.067,5,0.684,6,0.697,7,0.684,8,0.684,9,0.046,11,2.109,15,0.58,16,1.747,17,1.744,18,1.141,19,1.445,21,0.963,23,0.963,25,0.18,26,0.545,27,1.501,28,2.02,29,2.821,32,0.632,34,2.834,37,0.997,44,0.868,46,0.434,47,0.007,48,0.615,49,0.328,50,0.672,52,0.569,53,1.141,60,1.27,61,0.911,62,1.668,63,2.558,65,2.382,66,2.622,68,1.712,71,0.515,73,0.271,74,1.053,77,1.619,78,1.807,81,0.538,83,0.869,85,0.072,87,3.142,88,0.928,90,0.15,91,1.52,93,0.869,103,1.597,104,1.597,105,1.807,106,0.928,109,3.196,110,1.984,111,1.695,112,2.489,113,1.418,114,1.503,115,0.684,116,1.036,117,1.162,118,0.569,119,1.37,120,0.684,121,1.25,122,0.613,123,0.66,124,0.636,125,0.684,126,0.624,127,0.684,128,0.636,129,0.66,130,0.684,131,0.636,132,0.684,133,0.636,134,0.684,135,0.624,136,0.66,137,0.684,138,0.636,139,0.684,140,0.66,141,0.624,142,1.465,143,1.127,144,1.036,145,1.273,146,1.036,147,0.613,148,1.76,149,0.624,150,0.559,151,0.684,152,0.624,153,1.141,154,0.624,155,0.624,156,0.636,157,0.684,158,0.624,159,0.684,160,0.648,161,0.591,162,1.162,163,0.636,164,0.684,165,0.636,166,0.963,167,0.684,168,0.636,169,0.684,170,0.636,171,0.636,172,0.684,173,0.636,174,0.684,175,0.636,176,0.684,177,0.624,178,0.66,179,0.636,180,1.071,181,0.684,182,0.624,183,0.684,184,0.624,185,0.636,186,0.684,187,0.636,188,1.25,189,0.591,190,0.684,191,0.636,192,1.036,193,0.684,194,0.636,195,0.684,196,0.636,197,0.684,198,0.624,199,0.648,200,0.624,201,0.684,202,0.624,203,0.672,204,0.928,205,0.624,206,0.636,207,0.636,208,0.684,209,0.624,210,1.445,211,0.613,212,0.684,213,0.624,214,0.648,215,0.624,216,0.624,217,0.684,218,0.636,219,0.684,220,1.036,221,0.636,222,0.684,223,0.636,224,0.684,225,0.684,226,0.636,227,0.684,228,0.613,229,0.8,230,0.624,231,0.636,232,0.684,233,0.636,234,0.684,235,0.928,236,1.036,237,1.036,238,0.624,239,0.66,240,0.58,241,0.624,242,0.624,243,0.672,244,0.648,245,0.684,246,0.624,247,0.684,248,0.613,249,0.66,250,0.684,251,0.004,252,0.004,255,0.736,258,2.173,260,2.109,270,3.06,279,1.119,305,0.8,307,1.472,311,1.929,323,2.596,386,3.62,428,0.973,533,4.86,543,3.717,546,3.523,547,3.822,548,4.48,579,3.959,590,2.109,592,1.399,593,1.192,594,1.366,595,1.399,606,1.807,654,2.021,663,2.328,664,2.021,670,1.942,682,1.734,683,1.946,688,1.887,689,1.694,690,0.992,694,2.119,695,2.068,714,1.167,715,1.192,716,1.192,717,1.167,718,1.032,745,1.767,746,1.435,779,1.942,825,1.597,910,2.648,933,1.694,943,2.021,1044,2.489,1141,6.354,1146,4.837,1147,4.837,1148,5.395,1149,5.395,1150,1.942,1151,3.717,1154,3.06,1155,3.346,1156,3.194,1157,3.194,1158,2.941,1159,3.346,1162,5.395,1164,3.346,1168,2.647,1169,2.469,1170,2.021,1171,2.21,1172,2.21,1173,2.021,1174,2.21,1175,2.021,1176,2.109,1177,2.469,1178,2.647,1179,2.469,1180,2.469,1181,2.647,1182,4.837,1183,2.647,1184,4.008,1185,2.884,1186,2.884,1187,2.884,1188,4.367,1189,3.194,1191,6.354,1192,2.647,1193,5.271,1194,4.367,1195,4.913,1196,3.244,1197,3.244,1198,3.244,1199,3.244,1200,3.244,1201,3.244,1202,3.244,1203,4.008,1204,3.194]],["title/components/CreateWorkspacePage.html",[0,0.159,147,0.884]],["body/components/CreateWorkspacePage.html",[0,0.258,1,0.733,2,1.085,3,0.091,4,0.079,5,0.803,6,0.818,7,0.803,8,0.803,9,0.055,15,0.681,16,1.76,17,1.757,18,0.733,19,1.125,21,1.085,23,1.085,25,0.211,26,0.613,27,1.417,28,2.275,29,2.933,32,0.711,34,3.192,37,0.982,44,0.759,46,0.51,47,0.007,48,0.648,49,0.255,50,0.738,52,0.441,53,1.065,60,1.165,61,0.585,62,1.8,63,2.811,65,2.618,66,2.882,71,0.496,73,0.318,74,1.236,77,1.651,81,0.632,83,1.02,85,0.085,90,0.176,91,0.774,103,1.874,104,1.874,105,2.122,106,1.045,110,1.143,111,1.314,115,0.803,116,1.167,117,1.278,118,0.668,119,1.481,120,0.803,121,1.374,122,0.72,123,0.774,124,0.746,125,0.803,126,0.733,127,0.803,128,0.746,129,0.774,130,0.803,131,0.746,132,0.803,133,0.746,134,0.803,135,0.733,136,0.774,137,0.803,138,0.746,139,0.803,140,0.774,141,0.733,142,1.587,143,0.834,144,1.167,145,0.733,146,1.167,147,1.352,148,1.83,149,0.733,150,0.656,151,0.803,152,0.733,153,1.254,154,0.733,155,0.733,156,0.746,157,0.803,158,0.733,159,0.803,160,0.76,161,0.693,162,1.278,163,0.746,164,0.803,165,0.746,166,1.085,167,0.803,168,0.746,169,0.803,170,0.746,171,0.746,172,0.803,173,0.746,174,0.803,175,0.746,176,0.803,177,0.733,178,0.774,179,0.746,180,1.078,181,0.803,182,0.733,183,0.803,184,0.733,185,0.746,186,0.803,187,0.746,188,1.374,189,0.693,190,0.803,191,0.746,192,1.167,193,0.803,194,0.746,195,0.803,196,0.746,197,0.803,198,0.733,199,0.76,200,0.733,201,0.803,202,0.733,203,0.789,204,1.045,205,0.733,206,0.746,207,0.746,208,0.803,209,0.733,210,1.545,211,0.72,212,0.803,213,0.733,214,0.76,215,0.733,216,0.733,217,0.803,218,0.746,219,0.803,220,1.167,221,0.746,222,0.803,223,0.746,224,0.803,225,0.803,226,0.746,227,0.803,228,0.72,229,0.901,230,0.733,231,0.746,232,0.803,233,0.746,234,0.803,235,1.045,236,1.167,237,1.167,238,0.733,239,0.774,240,1.462,241,0.733,242,0.733,243,0.789,244,0.76,245,0.803,246,0.733,247,0.803,248,0.72,249,0.774,250,0.803,251,0.004,252,0.004,255,1.255,258,2.447,260,2.476,270,3.446,311,2.172,323,2.72,372,1.261,386,3.742,428,1.143,579,4.233,682,1.351,683,1.121,688,1.761,695,2.33,745,1.37,746,1.684,910,2.982,942,2.197,1044,2.804,1141,5.784,1146,5.317,1149,5.836,1150,2.28,1151,3.915,1154,3.446,1155,3.769,1156,3.597,1157,3.597,1158,3.313,1159,3.769,1162,5.836,1164,3.769,1170,2.372,1171,2.594,1172,2.594,1173,2.372,1175,2.372,1183,3.107,1184,4.514,1189,2.476,1204,3.597,1205,5.784,1206,3.107,1207,5.794,1208,4.919,1209,5.534,1210,3.809,1211,3.809,1212,3.385,1213,3.809,1214,3.385]],["title/modules/DashboardModule.html",[398,1.837,1215,3.561]],["body/modules/DashboardModule.html",[1,1.697,3,0.128,4,0.111,9,0.077,11,3.492,47,0.007,71,0.571,73,0.448,74,1.744,85,0.12,90,0.248,141,1.697,143,1.249,145,1.697,147,1.666,152,1.697,154,1.697,155,1.697,175,1.728,187,1.728,198,1.697,235,1.666,238,1.697,251,0.005,252,0.005,400,2.209,401,3.782,407,5.279,408,4.201,409,2.805,410,2.437,412,4.201,413,3.358,415,3.454,423,4.089,424,4.562,461,4.371,462,3.346,463,4.78,1142,4.089,1169,4.089,1191,4.089,1205,4.089,1215,7.505,1216,4.776,1217,4.776,1218,4.776,1219,4.776,1220,6.327,1221,4.753,1222,5.372,1223,4.776,1224,4.383,1225,5.372,1226,5.372,1227,4.383,1228,5.372,1229,4.776,1230,3.854,1231,4.776,1232,5.372,1233,5.372,1234,6.948,1235,6.238,1236,6.238,1237,6.238,1238,6.948,1239,4.089,1240,4.089,1241,4.089,1242,4.776,1243,4.089,1244,5.341,1245,4.776,1246,4.089,1247,5.372,1248,3.346]],["title/modules/DashboardRoutingModule.html",[398,1.837,1220,3.357]],["body/modules/DashboardRoutingModule.html",[0,0.318,3,0.135,4,0.117,9,0.081,28,2.978,47,0.007,71,0.562,73,0.471,85,0.126,87,2.495,89,2.266,90,0.26,93,1.51,141,1.394,142,1.271,143,1.273,145,1.394,147,1.369,152,1.394,153,1.086,154,1.394,155,1.394,160,1.446,161,1.027,180,0.85,189,1.319,198,1.394,210,1.147,238,1.394,251,0.005,252,0.005,290,1.76,398,2.215,400,2.319,413,2.7,415,3.565,426,4.336,427,4.706,428,1.693,435,5.984,437,6.439,441,4.602,454,3.514,482,3.843,934,3.04,1142,4.294,1191,4.294,1205,4.294,1220,5.197,1234,7.112,1235,6.439,1236,6.439,1237,6.439,1238,7.112,1239,4.294,1240,4.294,1241,4.294,1242,5.015,1243,4.294,1244,5.513,1245,5.015,1246,4.294,1249,5.642,1250,4.294,1251,5.642,1252,4.602,1253,5.642,1254,7.112,1255,5.513,1256,5.513,1257,5.642,1258,5.642,1259,5.642,1260,5.642,1261,6.439,1262,7.244,1263,5.642,1264,5.642,1265,7.244,1266,5.642,1267,5.642,1268,5.642]],["title/components/DeleteAccountPage.html",[0,0.159,149,0.9]],["body/components/DeleteAccountPage.html",[0,0.214,1,0.693,2,1.041,3,0.086,4,0.074,5,0.759,6,0.773,7,0.759,8,0.759,9,0.052,13,1.476,14,2.318,15,0.643,16,1.756,17,1.754,18,0.693,19,1.079,21,1.041,23,1.041,25,0.199,29,2.51,32,0.683,36,2.559,37,0.8,44,0.669,46,0.711,47,0.007,48,0.616,49,0.245,50,0.601,52,0.615,53,1.022,71,0.373,73,0.3,77,0.931,81,0.597,85,0.08,90,0.166,91,1.283,93,0.964,110,1.08,111,1.241,113,2.64,114,2.377,115,0.759,116,1.12,117,1.236,118,0.631,119,1.744,120,0.759,121,1.33,122,0.68,123,0.732,124,0.705,125,0.759,126,0.693,127,0.759,128,0.705,129,0.732,130,0.759,131,0.705,132,0.759,133,0.705,134,0.759,135,0.693,136,0.732,137,0.759,138,0.705,139,0.759,140,0.732,141,0.693,142,1.107,143,0.8,144,1.12,145,0.693,146,1.12,147,0.68,148,1.806,149,1.34,150,1.42,151,0.759,152,0.693,153,1.214,154,0.693,155,0.693,156,0.705,157,0.759,158,0.693,159,0.759,160,0.718,161,0.655,162,1.236,163,0.705,164,0.759,165,0.705,166,1.236,167,0.759,168,0.705,169,0.759,170,0.705,171,0.705,172,0.759,173,0.705,174,0.759,175,0.705,176,0.759,177,0.693,178,0.732,179,0.705,180,0.8,181,0.759,182,0.693,183,0.759,184,0.693,185,1.523,186,0.759,187,0.705,188,1.33,189,0.655,190,0.759,191,0.705,192,1.12,193,0.759,194,0.705,195,0.759,196,0.705,197,0.759,198,0.693,199,0.718,200,0.693,201,0.759,202,0.693,203,0.745,204,1.559,205,0.693,206,0.705,207,0.705,208,0.759,209,0.693,210,1.51,211,0.68,212,0.759,213,0.693,214,0.718,215,0.693,216,0.693,217,0.759,218,0.705,219,0.759,220,1.12,221,0.705,222,0.759,223,0.705,224,0.759,225,0.759,226,0.705,227,0.759,228,0.68,229,0.864,230,0.693,231,0.705,232,0.759,233,0.705,234,0.759,235,1.003,236,1.12,237,1.12,238,0.693,239,0.732,240,0.643,241,0.693,242,0.693,243,1.306,244,0.718,245,0.759,246,0.693,247,0.759,248,0.68,249,0.732,250,0.759,251,0.004,252,0.004,305,1.027,307,1.633,386,3.384,394,2.681,395,2.461,397,1.879,428,1.08,469,5.3,470,3.809,483,4.188,485,4.719,496,4.801,543,3.846,682,1.54,683,2.186,684,3.167,685,1.592,686,1.515,688,2.007,690,1.93,703,1.676,706,1.676,709,2.241,710,1.771,714,2.269,715,1.951,716,2.318,717,1.295,718,1.145,721,2.038,724,2.348,725,2.29,726,3.063,749,1.823,750,2.409,801,1.515,803,4.446,809,1.722,825,1.771,865,2.154,899,2.451,918,2.582,919,2.936,930,2.339,931,2.076,932,2.241,933,1.879,934,4.188,935,2.451,936,3.451,937,2.451,938,2.076,939,5.834,940,3.178,942,2.076,943,2.241,944,2.339,945,2.339,946,2.582,947,4.743,948,2.451,949,5.059,950,4.743,951,2.451,952,2.451,953,2.451,954,2.451,955,2.451,956,2.451,957,2.451,958,2.451,1269,6.19,1270,2.739,1271,5.146,1272,4.331,1273,3.199,1274,5.309,1275,3.199,1276,3.199,1277,3.599,1278,3.599,1279,3.616,1280,5.309,1281,5.309,1282,4.743,1283,4.041,1284,2.613]],["title/injectables/DialogService.html",[319,1.648,546,2.123]],["body/injectables/DialogService.html",[0,0.281,3,0.104,4,0.09,9,0.062,20,5.154,25,0.24,26,0.673,27,0.72,28,3.857,32,0.781,37,1.056,41,2.704,44,0.957,46,1.138,47,0.007,48,0.674,49,0.407,50,0.963,52,1.034,53,0.835,60,1.357,61,0.934,62,1.63,71,0.513,73,0.362,76,2.704,77,1.491,78,2.418,83,1.162,85,0.097,90,0.2,91,1.684,93,1.877,106,1.606,113,1.253,122,0.82,123,1.235,143,1.281,150,1.046,251,0.004,252,0.004,255,1.813,257,2.815,258,3.099,263,3.115,265,4.935,268,6.223,271,5.941,272,4.324,273,6.755,274,3.274,277,5.334,293,3.551,305,1.141,309,4.359,310,4.774,311,3.137,319,2.14,321,2.2,323,2.464,334,4.138,367,3.859,370,2.2,371,2.078,372,1.438,546,2.756,589,2.34,655,4.956,656,4.956,662,4.956,664,2.704,670,2.599,690,1.328,768,2.558,1044,3.551,1045,4.624,1069,3.173,1285,3.859,1286,4.956,1287,7.103,1288,7.009,1289,6.748,1290,6.076,1291,6.076,1292,3.637,1293,6.076,1294,7.009,1295,4.341,1296,9.025,1297,4.341,1298,6.076,1299,4.341,1300,6.755,1301,6.076,1302,8.281,1303,7.361,1304,4.341,1305,6.076,1306,4.341,1307,6.076,1308,4.341,1309,6.076,1310,4.341,1311,6.076,1312,4.341,1313,6.076,1314,6.076,1315,4.359,1316,5.401,1317,6.076,1318,4.341,1319,6.076,1320,4.341,1321,4.341,1322,4.341,1323,4.341,1324,2.704,1325,2.418,1326,3.859,1327,5.717,1328,3.859,1329,4.341,1330,4.341,1331,3.859,1332,3.304,1333,4.341,1334,4.341,1335,4.341,1336,6.076,1337,4.341,1338,4.341,1339,4.341,1340,4.341,1341,4.341,1342,6.076,1343,6.076,1344,6.748,1345,4.624,1346,4.624]],["title/classes/ESet.html",[90,0.216,1347,3.561]],["body/classes/ESet.html",[3,0.172,4,0.149,9,0.103,25,0.399,32,1.082,44,0.764,46,0.964,47,0.007,48,0.571,49,0.333,50,0.816,52,0.834,53,1.386,85,0.16,90,0.333,251,0.006,252,0.006,281,3.818,960,4.027,1081,4.012,1347,6.404,1348,7.48,1349,6.403,1350,6.404,1351,8.415,1352,7.203,1353,4.906,1354,7.203,1355,7.203,1356,7.203]],["title/components/EditProjectMembersPage.html",[0,0.159,152,0.9]],["body/components/EditProjectMembersPage.html",[0,0.184,1,0.849,2,0.865,3,0.067,4,0.058,5,0.595,6,0.606,7,0.595,8,0.595,9,0.04,11,1.834,15,0.504,16,1.735,17,1.732,18,1.045,19,1.356,21,0.865,23,0.865,25,0.156,26,0.489,27,1.536,28,2.526,29,2.716,31,3.531,32,0.567,37,0.926,39,3.165,44,0.915,46,0.727,47,0.007,48,0.623,49,0.363,50,0.837,52,0.818,53,1.422,60,1.192,61,0.835,62,1.642,63,2.343,65,2.182,66,2.403,68,1.925,71,0.505,73,0.235,74,0.916,77,1.58,78,1.571,81,0.468,83,0.755,85,0.063,87,2.949,88,1.547,89,2.839,90,0.13,91,1.692,93,0.755,103,1.388,104,1.388,105,1.571,106,0.833,109,2.378,110,1.63,111,1.522,112,2.235,113,0.814,114,0.863,115,0.595,116,0.93,117,1.065,118,0.495,119,1.272,120,0.595,121,1.146,122,0.533,123,0.574,124,0.553,125,0.595,126,0.543,127,0.595,128,0.553,129,0.574,130,0.595,131,0.553,132,0.595,133,0.553,134,0.595,135,0.543,136,0.574,137,0.595,138,0.553,139,0.595,140,0.574,141,0.543,142,0.953,143,1.451,144,0.93,145,0.543,146,0.93,147,0.533,148,1.695,149,0.543,150,0.486,151,0.595,152,1.182,153,1.547,154,0.543,155,0.543,156,0.553,157,0.595,158,0.543,159,0.595,160,0.563,161,0.514,162,1.065,163,0.553,164,0.595,165,0.553,166,0.865,167,0.595,168,0.553,169,0.595,170,0.553,171,0.553,172,0.595,173,0.553,174,0.595,175,0.553,176,0.595,177,0.543,178,0.574,179,0.553,180,1.005,181,0.595,182,0.543,183,0.595,184,0.543,185,0.553,186,0.595,187,0.553,188,1.146,189,0.514,190,0.595,191,0.553,192,0.93,193,0.595,194,0.553,195,0.595,196,0.553,197,0.595,198,0.543,199,0.563,200,0.543,201,0.595,202,0.543,203,0.584,204,0.833,205,0.543,206,0.553,207,0.553,208,0.595,209,0.543,210,1.356,211,0.533,212,0.595,213,0.543,214,0.563,215,0.543,216,0.543,217,0.595,218,0.553,219,0.595,220,0.93,221,0.553,222,0.595,223,0.553,224,0.595,225,0.595,226,0.553,227,0.595,228,0.533,229,0.718,230,0.543,231,0.553,232,0.595,233,0.553,234,0.595,235,0.833,236,0.93,237,0.93,238,0.543,239,0.574,240,0.504,241,0.543,242,0.543,243,0.584,244,0.563,245,0.595,246,0.543,247,0.595,248,0.533,249,0.574,250,0.595,251,0.003,252,0.003,255,1.001,258,1.951,270,2.748,279,0.973,307,2.001,311,2.412,323,2.771,386,3.504,428,0.846,533,4.595,540,3.311,543,3.983,546,3.351,547,3.636,548,4.261,579,4.378,589,1.52,590,1.834,592,1.217,593,1.037,594,1.188,595,1.217,606,1.571,607,2.545,608,2.147,654,1.757,663,2.024,664,1.757,670,1.689,673,1.689,682,1.326,683,1.599,688,1.728,689,2.304,694,1.903,717,1.015,718,0.897,721,1.083,744,1.879,745,1.015,779,1.689,825,1.388,910,2.378,927,1.757,933,1.473,1044,2.235,1106,1.35,1143,2.301,1144,4.829,1145,3.922,1148,5.012,1150,1.689,1151,3.535,1155,3.005,1156,2.868,1157,2.868,1158,2.641,1159,3.005,1164,3.005,1166,2.508,1168,2.301,1169,2.147,1170,1.757,1171,1.921,1172,1.921,1173,1.757,1174,1.921,1175,1.757,1176,3.531,1179,2.147,1180,2.147,1181,2.301,1190,2.508,1239,6.628,1357,6.628,1358,4.432,1359,4.432,1360,4.676,1361,3.922,1362,3.922,1363,5.012,1364,4.412,1365,2.821,1366,3.922,1367,2.821,1368,6.236,1369,3.922,1370,2.821,1371,3.358,1372,2.821,1373,3.165,1374,3.358,1375,3.358,1376,3.922,1377,3.922,1378,2.821,1379,2.821,1380,2.868,1381,2.821,1382,3.005,1383,2.821,1384,3.599,1385,2.821,1386,3.005,1387,2.821,1388,3.599,1389,2.821,1390,3.005,1391,2.821,1392,2.301,1393,2.508,1394,2.508,1395,2.508,1396,2.508,1397,3.599,1398,2.821,1399,2.508,1400,2.301,1401,5.439,1402,2.508,1403,2.508,1404,2.508,1405,2.301,1406,2.508,1407,3.922,1408,2.641,1409,2.821,1410,2.821,1411,2.508,1412,2.508]],["title/components/EditProjectPage.html",[0,0.159,154,0.9]],["body/components/EditProjectPage.html",[0,0.192,1,0.578,2,0.908,3,0.072,4,0.062,5,0.634,6,0.645,7,0.634,8,0.634,9,0.043,13,1.288,15,0.537,16,1.741,17,1.736,18,0.578,19,0.942,21,0.908,23,0.908,25,0.166,26,0.514,27,1.559,28,2.613,29,2.764,31,3.676,32,0.596,34,2.673,37,0.958,44,0.908,46,0.757,47,0.007,48,0.635,49,0.37,50,0.856,52,0.795,53,1.396,60,1.136,61,0.712,62,1.677,63,2.439,65,2.271,66,2.501,68,1.982,71,0.484,73,0.251,74,0.975,77,1.621,78,1.674,81,0.498,83,0.804,85,0.067,87,2.811,88,1.573,89,2.553,90,0.139,91,1.537,93,1.241,95,2.156,98,2.156,100,2.156,103,1.479,104,1.479,105,1.674,106,0.875,110,1.39,111,1.036,112,1.522,115,0.634,116,0.977,117,1.108,118,0.527,119,1.316,120,0.634,121,1.193,122,0.568,123,0.611,124,0.589,125,0.634,126,0.578,127,0.634,128,0.589,129,0.611,130,0.634,131,0.589,132,0.634,133,0.589,134,0.634,135,0.578,136,0.611,137,0.634,138,0.589,139,0.634,140,0.611,141,0.578,142,0.992,143,1.304,144,0.977,145,0.578,146,0.977,147,0.568,148,1.725,149,0.578,150,0.517,151,0.634,152,0.578,153,1.574,154,1.223,155,0.578,156,0.589,157,0.634,158,0.578,159,0.634,160,0.6,161,0.547,162,1.108,163,0.589,164,0.634,165,0.589,166,0.908,167,0.634,168,0.589,169,0.634,170,0.589,171,0.589,172,0.634,173,0.589,174,0.634,175,0.589,176,0.634,177,0.578,178,0.611,179,0.589,180,0.958,181,0.634,182,0.578,183,0.634,184,0.578,185,0.589,186,0.634,187,0.589,188,1.193,189,0.547,190,0.634,191,0.589,192,0.977,193,0.634,194,0.589,195,0.634,196,0.589,197,0.634,198,0.578,199,0.6,200,0.578,201,0.634,202,0.578,203,0.622,204,0.875,205,0.578,206,0.589,207,0.589,208,0.634,209,0.578,210,1.396,211,0.568,212,0.634,213,0.578,214,0.6,215,0.578,216,0.578,217,0.634,218,0.589,219,0.634,220,0.977,221,0.589,222,0.634,223,0.589,224,0.634,225,0.634,226,0.589,227,0.634,228,0.568,229,0.754,230,0.578,231,0.589,232,0.634,233,0.589,234,0.634,235,0.875,236,0.977,237,0.977,238,0.578,239,0.611,240,0.537,241,0.578,242,0.578,243,0.622,244,0.6,245,0.634,246,0.578,247,0.634,248,0.568,249,0.611,250,0.634,251,0.003,252,0.003,255,1.051,258,2.049,260,1.953,270,2.886,279,1.036,311,2.495,323,2.808,386,3.557,400,1.905,428,0.901,526,4.613,540,3.425,543,4.044,547,3.721,579,4.462,589,1.619,606,1.674,607,1.733,608,2.287,673,1.799,682,1.38,683,0.884,688,1.474,689,1.569,694,1.296,695,1.951,744,1.944,745,1.667,746,1.329,910,2.497,927,1.871,1044,2.347,1106,1.438,1150,1.799,1151,3.618,1155,3.156,1156,3.012,1157,3.012,1158,2.774,1159,3.156,1164,3.156,1170,1.871,1171,2.047,1172,2.047,1173,1.871,1174,2.047,1175,1.871,1176,4.131,1179,2.287,1180,2.287,1192,2.451,1193,5.027,1194,4.119,1204,3.012,1240,6.586,1346,3.526,1357,6.586,1358,4.613,1359,4.613,1360,4.837,1361,4.119,1362,4.119,1363,5.185,1366,4.119,1368,6.368,1369,4.119,1371,3.526,1373,3.324,1374,3.526,1375,3.526,1376,4.119,1377,4.119,1380,3.012,1382,3.156,1384,3.78,1386,3.156,1388,3.78,1390,3.156,1392,2.451,1393,2.671,1394,2.671,1395,2.671,1396,2.671,1397,3.78,1400,2.451,1401,5.601,1402,2.671,1403,2.671,1404,2.671,1405,2.451,1406,2.671,1407,4.119,1408,2.774,1411,2.671,1412,2.671,1413,4.633,1414,3.005,1415,3.005,1416,3.005,1417,3.005,1418,3.005,1419,3.005,1420,3.005,1421,3.005,1422,3.005,1423,3.005,1424,3.005,1425,3.005,1426,3.005,1427,3.005,1428,3.005,1429,4.119,1430,3.005]],["title/components/EditWorkspacePage.html",[0,0.159,155,0.9]],["body/components/EditWorkspacePage.html",[0,0.247,1,0.662,2,1.006,3,0.082,4,0.071,5,0.725,6,0.738,7,0.725,8,0.725,9,0.049,15,0.614,16,1.752,17,1.749,18,0.662,19,1.043,21,1.006,23,1.006,25,0.19,26,0.569,27,1.485,28,2.799,29,2.863,32,0.66,34,2.96,37,1.026,44,0.84,46,0.687,47,0.007,48,0.645,49,0.336,50,0.866,52,0.594,53,0.988,60,1.097,61,0.528,62,1.641,63,2.649,65,2.926,66,2.715,68,1.773,71,0.482,73,0.287,74,1.116,77,1.684,78,1.915,81,0.57,83,0.92,85,0.077,87,1.52,88,1.16,90,0.159,91,1.554,93,0.92,103,1.692,104,1.692,105,1.915,106,0.97,110,1.031,111,1.186,115,0.725,116,1.082,117,1.204,118,0.603,119,1.41,120,0.725,121,1.295,122,0.65,123,0.699,124,0.674,125,0.725,126,0.662,127,0.725,128,0.674,129,0.699,130,0.725,131,0.674,132,0.725,133,0.674,134,0.725,135,0.662,136,0.699,137,0.725,138,0.674,139,0.725,140,0.699,141,0.662,142,1.077,143,0.774,144,1.082,145,0.662,146,1.082,147,0.65,148,1.786,149,0.662,150,0.592,151,0.725,152,0.662,153,1.71,154,0.662,155,1.31,156,0.674,157,0.725,158,0.662,159,0.725,160,0.686,161,0.626,162,1.204,163,0.674,164,0.725,165,0.674,166,1.006,167,0.725,168,0.674,169,0.725,170,0.674,171,0.674,172,0.725,173,0.674,174,0.725,175,0.674,176,0.725,177,0.662,178,0.699,179,0.674,180,1.026,181,0.725,182,0.662,183,0.725,184,0.662,185,0.674,186,0.725,187,0.674,188,1.295,189,0.626,190,0.725,191,0.674,192,1.082,193,0.725,194,0.674,195,0.725,196,0.674,197,0.725,198,0.662,199,0.686,200,0.662,201,0.725,202,0.662,203,0.712,204,0.97,205,0.662,206,0.674,207,0.674,208,0.725,209,0.662,210,1.481,211,0.65,212,0.725,213,0.662,214,0.686,215,0.662,216,0.662,217,0.725,218,0.674,219,0.725,220,1.082,221,0.674,222,0.725,223,0.674,224,0.725,225,0.725,226,0.674,227,0.725,228,0.65,229,0.835,230,0.662,231,0.674,232,0.725,233,0.674,234,0.725,235,0.97,236,1.082,237,1.082,238,0.662,239,0.699,240,1.302,241,0.662,242,0.662,243,0.712,244,0.686,245,0.725,246,0.662,247,0.725,248,0.65,249,0.699,250,0.725,251,0.004,252,0.004,255,1.393,258,2.269,260,2.235,270,3.196,311,2.673,323,2.883,386,3.666,428,1.031,543,4.167,579,4.635,606,1.915,682,1.253,683,1.012,688,1.633,695,2.16,739,2.015,744,2.338,745,1.237,746,1.52,910,2.766,942,1.983,1044,2.6,1150,2.058,1151,3.79,1155,3.495,1156,3.336,1157,3.336,1158,3.072,1159,3.495,1164,3.495,1170,2.141,1171,2.342,1172,2.342,1173,2.141,1175,2.141,1177,2.617,1189,2.235,1203,4.186,1204,3.336,1206,2.804,1207,5.458,1208,4.562,1214,3.056,1241,6.195,1357,6.195,1358,5.009,1359,5.009,1363,5.555,1371,3.906,1380,3.336,1384,4.186,1386,3.495,1388,4.186,1392,2.804,1397,2.804,1399,3.056,1400,2.804,1401,4.186,1431,5.132,1432,5.132,1433,5.132,1434,3.438,1435,3.438,1436,3.438,1437,3.438,1438,3.438,1439,3.438,1440,3.438,1441,3.438]],["title/modules/EmailsModule.html",[398,1.837,1442,3.561]],["body/modules/EmailsModule.html",[3,0.171,4,0.147,9,0.102,47,0.007,71,0.526,73,0.596,85,0.159,90,0.33,251,0.006,252,0.006,400,2.935,401,4.511,408,5.011,409,3.728,410,3.239,412,4.274,413,4.006,415,4.12,461,5.213,462,4.446,1442,7.199,1443,6.346,1444,6.346,1445,6.787,1446,7.139,1447,7.139]],["title/modules/EmailsRoutingModule.html",[398,1.837,1445,3.357]],["body/modules/EmailsRoutingModule.html",[0,0.237,3,0.167,4,0.145,9,0.1,28,2.88,47,0.007,71,0.521,73,0.585,85,0.156,90,0.323,93,1.876,180,1.056,189,1.507,251,0.006,252,0.006,398,2.75,400,2.88,413,3.352,415,4.074,426,4.955,427,5.007,428,2.102,435,4.363,454,4.363,482,4.771,934,3.775,984,4.461,1250,5.331,1255,5.331,1256,5.331,1445,5.939,1448,7.005,1449,7.005]],["title/classes/Enum.html",[90,0.216,301,2.914]],["body/classes/Enum.html",[3,0.104,4,0.09,9,0.062,25,0.24,27,1.259,32,0.781,44,0.805,46,1.016,47,0.007,48,0.602,49,0.35,50,0.86,52,1.004,61,1.167,85,0.097,88,1.148,90,0.2,93,1.162,106,1.606,251,0.004,252,0.004,255,1.813,275,1.823,284,2.632,290,2.186,301,6.076,305,1.141,311,2.98,690,2.322,739,3.648,820,6.329,829,3.486,1005,3.963,1014,4.974,1081,2.418,1122,5.401,1315,4.359,1353,4.774,1450,3.859,1451,3.859,1452,3.304,1453,4.341,1454,5.92,1455,6.755,1456,6.076,1457,7.711,1458,6.076,1459,4.341,1460,8.814,1461,6.667,1462,9.178,1463,9.178,1464,7.072,1465,7.009,1466,8.674,1467,6.076,1468,6.076,1469,6.076,1470,7.361,1471,6.076,1472,4.341,1473,4.624,1474,7.592,1475,6.076,1476,5.401,1477,6.076,1478,4.956,1479,6.076,1480,4.341,1481,7.009,1482,6.076,1483,4.341,1484,7.009,1485,4.341,1486,4.341,1487,4.341,1488,4.341,1489,3.541,1490,6.076,1491,6.076,1492,4.341,1493,6.076,1494,3.541,1495,4.341,1496,6.076,1497,3.541,1498,6.076,1499,6.076,1500,4.341,1501,4.341]],["title/interceptors/ErrorInterceptor.html",[1502,4.159,1503,3.357]],["body/interceptors/ErrorInterceptor.html",[3,0.146,4,0.127,9,0.088,13,1.703,25,0.339,26,0.846,32,0.981,37,0.924,44,0.881,46,1.022,47,0.007,48,0.605,49,0.384,50,0.865,52,0.709,60,1.095,61,0.942,68,2.4,71,0.53,73,0.512,83,1.64,85,0.136,88,1.158,90,0.283,91,1.769,106,1.691,204,1.158,251,0.006,252,0.006,319,2.688,365,4.663,372,2.029,386,3.897,428,1.838,517,6.784,524,5.447,546,4.14,647,2.301,690,2.335,739,2.405,766,4.998,779,3.668,928,4.998,1112,6.781,1279,4.173,1503,5.476,1504,6.127,1505,5.447,1506,8.313,1507,7.632,1508,6.127,1509,7.632,1510,8.7,1511,8.7,1512,6.127,1513,6.127,1514,6.127,1515,6.127,1516,7.632,1517,4.998,1518,6.242,1519,7.632,1520,6.127,1521,4.998,1522,6.127,1523,6.127,1524,6.127,1525,7.632,1526,6.127,1527,6.127,1528,6.127,1529,6.127,1530,6.127,1531,6.127,1532,6.127]],["title/interfaces/ErrorValidationTree.html",[86,0.791,1533,3.561]],["body/interfaces/ErrorValidationTree.html",[3,0.142,4,0.155,9,0.085,44,0.631,47,0.007,49,0.275,52,0.688,62,1.609,68,2.367,71,0.443,81,1.36,83,1.592,85,0.167,86,1.005,88,1.123,93,2.462,106,1.737,251,0.005,252,0.005,253,1.969,257,2.388,258,3.312,305,1.474,310,4.05,360,3.013,375,6.11,499,3.56,546,3.398,664,3.703,751,4.036,779,3.56,1000,2.139,1005,4.119,1044,4.154,1106,2.846,1353,5.585,1533,6.241,1534,6.11,1535,4.851,1536,5.947,1537,5.947,1538,5.286,1539,5.947,1540,5.947,1541,7.49,1542,5.947,1543,5.947,1544,5.585,1545,5.947,1546,5.947,1547,6.658,1548,6.11,1549,5.947,1550,5.947,1551,5.947,1552,5.947,1553,5.947,1554,5.701,1555,4.851,1556,5.947,1557,5.947,1558,5.947,1559,5.947,1560,5.947,1561,5.947,1562,5.947,1563,5.947,1564,5.947,1565,5.947,1566,8.608,1567,5.947,1568,7.49,1569,5.947,1570,5.947,1571,5.947,1572,5.947,1573,5.947,1574,5.947]],["title/interfaces/FilterCheckbox.html",[86,0.791,1575,3.357]],["body/interfaces/FilterCheckbox.html",[3,0.159,4,0.138,9,0.096,25,0.37,26,0.892,32,1.034,44,0.708,46,0.894,47,0.007,48,0.529,49,0.448,50,0.756,52,0.773,61,1.377,85,0.192,86,1.128,166,1.309,251,0.006,252,0.006,253,2.211,305,1.405,336,4.83,339,7.172,499,4.815,690,2.741,691,5.17,739,3.518,961,6.562,990,4.64,1106,3.85,1325,3.719,1575,6.194,1576,5.446,1577,8.044,1578,5.881,1579,6.677,1580,5.935]],["title/classes/Filters.html",[90,0.216,1581,2.914]],["body/classes/Filters.html",[3,0.162,4,0.14,9,0.097,25,0.377,27,1.127,32,1.045,44,0.721,46,0.91,47,0.007,48,0.539,49,0.375,50,0.77,52,0.787,61,1.045,71,0.481,85,0.151,90,0.314,106,1.536,229,1.323,251,0.006,252,0.006,305,1.467,336,3.664,681,3.922,690,2.488,691,3.922,739,2.669,961,5.546,1081,3.787,1454,5.656,1575,6.243,1578,4.631,1581,5.065,1582,6.043,1583,8.132,1584,8.132,1585,6.798,1586,8.132,1587,4.878,1588,5.546,1589,6.798,1590,6.189,1591,6.798,1592,6.043,1593,6.043,1594,6.798]],["title/components/FiltersComponent.html",[0,0.159,156,0.917]],["body/components/FiltersComponent.html",[0,0.199,1,0.616,2,0.953,3,0.076,4,0.066,5,0.675,6,0.687,7,0.675,8,0.675,9,0.046,15,0.572,16,1.746,17,1.743,18,0.616,19,0.988,21,0.953,23,0.953,25,0.326,26,0.539,27,1.422,29,2.513,32,0.625,37,0.482,44,0.968,46,1.035,47,0.007,48,0.67,49,0.408,50,0.924,52,0.963,53,1.57,60,1.262,61,1.278,62,1.66,64,1.228,65,2.638,68,1.697,71,0.389,73,0.267,74,1.038,77,0.853,81,0.531,85,0.071,88,1.111,90,0.148,91,1.782,93,1.574,106,1.241,113,1.697,114,1.798,115,0.675,116,1.025,117,1.384,118,0.853,119,1.36,120,0.675,121,1.24,122,0.604,123,0.65,124,0.627,125,0.675,126,0.616,127,0.675,128,0.627,129,0.65,130,0.675,131,0.627,132,0.675,133,0.627,134,0.675,135,0.616,136,0.65,137,0.675,138,0.627,139,0.675,140,1.812,141,0.616,142,1.031,143,0.733,144,1.025,145,0.616,146,1.025,147,0.604,148,1.754,149,0.616,150,0.551,151,0.675,152,0.616,153,1.131,154,0.616,155,0.616,156,1.287,157,0.675,158,0.616,159,0.675,160,0.639,161,0.583,162,1.152,163,0.627,164,0.675,165,0.627,166,1.287,167,0.675,168,0.627,169,0.675,170,0.627,171,0.627,172,0.675,173,0.627,174,0.675,175,0.627,176,0.675,177,0.616,178,0.65,179,0.627,180,0.733,181,0.675,182,0.616,183,0.675,184,0.616,185,0.627,186,0.675,187,0.627,188,1.24,189,0.583,190,0.675,191,0.627,192,1.025,193,0.675,194,0.627,195,0.675,196,0.627,197,0.675,198,0.616,199,0.639,200,0.616,201,0.675,202,0.616,203,0.662,204,0.918,205,0.616,206,0.627,207,0.627,208,0.675,209,0.616,210,1.436,211,0.604,212,0.675,213,0.616,214,0.639,215,0.616,216,0.616,217,0.675,218,0.627,219,0.675,220,1.025,221,0.627,222,0.675,223,0.627,224,0.675,225,0.675,226,0.627,227,0.675,228,0.604,229,0.791,230,0.616,231,0.627,232,0.675,233,0.627,234,0.675,235,0.918,236,1.489,237,1.025,238,0.616,239,0.65,240,0.572,241,0.616,242,0.616,243,0.662,244,0.639,245,0.675,246,0.616,247,0.675,248,0.604,249,0.65,250,0.675,251,0.004,252,0.004,255,1.49,274,1.724,275,1.764,281,3.204,284,1.201,290,0.998,298,1.415,307,2.205,323,1.038,325,2.979,358,3.169,362,1.671,540,3.169,647,1.826,651,2.392,690,0.979,739,1.256,748,2.708,751,1.575,765,1.908,829,1.347,873,1.531,960,2.326,964,2.91,965,2.91,966,4.798,967,4.228,968,3.519,969,3.519,970,2.91,971,2.91,972,2.91,973,2.91,974,2.91,976,5.339,977,1.993,978,1.915,979,2.708,980,1.915,981,1.915,982,1.846,983,1.724,984,1.724,985,1.993,986,4.556,987,2.708,988,1.782,989,1.993,990,1.846,991,1.782,992,1.993,993,4.228,994,1.915,995,1.782,996,1.846,997,1.846,998,1.915,999,1.915,1000,1.151,1001,2.91,1002,1.915,1003,1.993,1004,2.91,1005,2.326,1006,4.452,1007,1.915,1008,3.275,1009,1.846,1010,3.275,1011,2.91,1012,2.205,1013,3.931,1014,1.782,1015,1.915,1016,2.91,1017,1.915,1018,1.993,1019,1.915,1020,1.915,1021,1.993,1022,2.91,1023,1.915,1024,1.915,1025,2.08,1026,1.993,1027,1.993,1028,1.993,1029,1.993,1030,1.993,1031,1.915,1032,2.708,1033,1.993,1034,2.91,1037,1.993,1038,2.08,1039,1.993,1069,2.539,1077,2.179,1099,3.966,1204,3.16,1325,4.71,1581,5.339,1587,2.295,1595,2.844,1596,5.879,1597,4.861,1598,5.879,1599,6.567,1600,4.861,1601,4.861,1602,4.861,1603,3.199,1604,3.199,1605,3.199,1606,6.567,1607,3.199,1608,3.199,1609,3.199,1610,3.199,1611,3.199,1612,4.861,1613,3.199,1614,3.199,1615,4.861,1616,2.295,1617,2.08,1618,2.295,1619,3.199,1620,3.199,1621,3.199,1622,4.861,1623,3.199,1624,3.199,1625,3.199,1626,3.199,1627,4.861,1628,3.7,1629,4.861,1630,2.844,1631,2.844]],["title/directives/FocusInitialDirective.html",[118,0.821,246,0.9]],["body/directives/FocusInitialDirective.html",[3,0.157,4,0.135,9,0.094,13,2.212,15,1.172,16,1.422,25,0.363,32,1.023,37,1.291,44,0.844,46,0.878,47,0.007,48,0.52,49,0.303,50,0.743,52,0.759,53,1.531,60,1.422,71,0.388,73,0.548,85,0.146,90,0.303,117,1.746,118,1.662,166,1.56,240,1.422,241,1.262,246,1.531,251,0.006,252,0.006,255,1.805,271,5.71,311,2.575,372,2.172,658,6.057,711,5.71,833,7.074,848,5.139,1079,6.492,1374,6.057,1375,6.057,1632,7.616,1633,5.83,1634,6.521,1635,7.958,1636,6.78,1637,6.559,1638,6.559,1639,8.568,1640,6.559,1641,6.559]],["title/components/ForgotPasswordPage.html",[0,0.159,158,0.9]],["body/components/ForgotPasswordPage.html",[0,0.201,1,0.625,2,0.963,3,0.078,4,0.067,5,0.685,6,0.697,7,0.685,8,0.685,9,0.047,15,0.58,16,1.748,17,1.748,18,0.625,19,0.999,21,0.963,23,0.963,25,0.18,26,0.545,27,0.984,29,2.867,32,0.632,37,0.489,44,0.754,46,0.435,47,0.007,48,0.563,49,0.227,50,0.672,52,0.376,53,0.625,60,0.879,61,0.755,62,1.421,63,2.559,64,2.871,65,2.383,66,2.623,71,0.46,73,0.271,74,1.054,77,0.862,81,0.538,83,0.869,85,0.072,90,0.15,91,1.345,103,1.598,104,1.598,106,0.929,110,0.974,111,1.12,113,2.614,114,2.447,115,0.685,116,1.037,117,1.163,118,0.57,119,1.757,120,0.685,121,1.251,122,0.613,123,0.66,124,0.636,125,0.685,126,0.625,127,0.685,128,0.636,129,0.66,130,0.685,131,0.636,132,0.685,133,0.636,134,0.685,135,0.625,136,0.66,137,0.685,138,0.636,139,0.685,140,0.66,141,0.625,142,1.041,143,0.741,144,1.037,145,0.625,146,1.037,147,0.613,148,1.761,149,0.625,150,0.559,151,0.685,152,0.625,153,1.142,154,0.625,155,0.625,156,0.636,157,0.685,158,1.273,159,1.687,160,0.648,161,0.591,162,1.163,163,0.636,164,0.685,165,0.636,166,1.163,167,0.685,168,0.636,169,0.685,170,0.636,171,0.636,172,0.685,173,0.636,174,0.685,175,0.636,176,0.685,177,0.625,178,0.66,179,0.636,180,0.741,181,0.685,182,0.625,183,0.685,184,0.625,185,1.466,186,0.685,187,0.636,188,1.251,189,0.591,190,0.685,191,0.636,192,1.037,193,0.685,194,0.636,195,0.685,196,0.636,197,0.685,198,0.625,199,0.648,200,0.625,201,0.685,202,0.625,203,0.672,204,0.929,205,0.625,206,0.636,207,0.636,208,0.685,209,0.625,210,1.445,211,0.613,212,0.685,213,0.625,214,0.648,215,0.625,216,0.625,217,0.685,218,0.636,219,0.685,220,1.037,221,0.636,222,0.685,223,0.636,224,0.685,225,0.685,226,0.636,227,0.685,228,0.613,229,0.8,230,0.625,231,0.636,232,0.685,233,0.636,234,0.685,235,0.929,236,1.037,237,1.037,238,0.625,239,0.66,240,1.27,241,0.625,242,0.625,243,0.672,244,0.648,245,0.685,246,0.625,247,0.685,248,0.613,249,0.66,250,0.685,251,0.004,252,0.004,307,2.23,372,1.075,386,3.27,394,2.58,395,2.512,397,1.695,409,4.178,428,0.974,472,5.692,478,3.195,481,4.178,483,4.031,489,5.397,579,3.305,592,1.4,593,1.193,594,1.367,595,1.4,682,1.896,683,2.497,684,3.144,685,2.174,686,2.069,688,2.261,690,2.288,698,2.419,699,1.367,700,2.648,703,1.512,706,1.512,709,2.022,710,1.598,714,2.794,715,2.612,716,2.855,717,2.38,718,2.105,719,1.695,720,1.645,721,1.887,724,2.174,725,2.12,726,2.836,743,2.022,745,1.168,746,1.436,749,1.645,750,2.691,752,1.873,801,2.069,802,1.695,803,4.255,809,1.554,825,1.598,865,1.943,895,2.648,896,5.273,897,4.37,898,5.273,899,2.211,901,2.886,910,2.649,914,2.329,918,2.329,921,4.37,922,2.886,923,2.471,929,3.741,930,2.11,931,1.873,932,2.022,933,1.695,934,4.031,935,2.211,936,3.195,937,2.211,938,1.873,939,5.687,940,2.943,941,3.195,942,1.873,943,2.022,944,2.11,945,2.11,946,3.527,947,4.507,948,2.211,949,4.842,950,4.507,951,2.211,952,2.211,953,2.211,954,2.211,955,2.211,956,2.211,957,2.211,958,2.211,1284,3.681,1642,6.648,1643,5.692,1644,3.247,1645,3.247,1646,3.247,1647,3.247,1648,3.247,1649,4.01,1650,4.916,1651,4.916,1652,3.247]],["title/interfaces/FormGroup.html",[63,2.018,86,0.791]],["body/interfaces/FormGroup.html",[3,0.173,4,0.149,9,0.104,25,0.4,32,1.084,44,0.766,47,0.007,52,0.836,53,1.622,63,3.967,71,0.428,74,2.345,85,0.161,86,1.221,251,0.006,252,0.006,253,2.392,841,6.999,1005,3.457,1653,6.422,1654,7.225,1655,7.225,1656,5.893,1657,7.225,1658,7.225]],["title/interfaces/GitAccount.html",[86,0.791,1659,2.699]],["body/interfaces/GitAccount.html",[3,0.159,4,0.138,9,0.096,25,0.369,26,0.891,47,0.007,49,0.398,85,0.204,86,1.549,88,1.76,91,1.356,251,0.006,252,0.006,253,2.208,255,1.823,257,3.228,275,2.688,305,1.595,323,2.609,341,5.224,651,3.956,744,2.882,1284,3.281,1659,4.636,1660,4.541,1661,4.541,1662,6.102,1663,6.102,1664,5.006,1665,4.784,1666,4.152,1667,4.784,1668,3.593,1669,3.593,1670,4.541]],["title/interfaces/GitAccountWithUsage.html",[86,0.791,1671,3.561]],["body/interfaces/GitAccountWithUsage.html",[0,0.263,3,0.15,4,0.13,9,0.09,13,1.75,14,2.852,16,1.125,17,1.125,21,1.234,23,1.234,25,0.349,26,0.86,27,1.457,36,2.313,47,0.007,49,0.358,53,1.493,68,2.652,71,0.52,73,0.525,83,1.685,85,0.14,86,1.064,90,0.291,106,1.59,204,1.704,210,1.711,211,1.189,251,0.006,252,0.006,253,2.084,372,2.084,768,2.65,1221,4.534,1248,3.92,1284,3.098,1659,5.299,1671,5.906,1672,4.287,1673,4.516,1674,5.135,1675,8.019,1676,3.92,1677,3.92,1678,4.091,1679,4.091,1680,4.791,1681,5.595,1682,5.595,1683,5.595,1684,5.595,1685,5.595,1686,5.595,1687,5.595,1688,5.135,1689,5.135,1690,5.595,1691,5.595,1692,5.595,1693,5.595,1694,4.791,1695,5.595,1696,5.135,1697,5.135,1698,5.595,1699,5.595,1700,5.595]],["title/interfaces/GitIntegration.html",[86,0.791,1666,2.914]],["body/interfaces/GitIntegration.html",[3,0.161,4,0.139,9,0.096,25,0.373,26,0.896,47,0.007,49,0.373,85,0.205,86,1.553,88,1.698,91,1.369,251,0.006,252,0.006,253,2.229,255,1.834,257,3.247,275,2.425,305,1.596,323,2.624,341,5.255,651,3.979,744,2.749,1284,4.423,1659,3.883,1660,4.586,1661,4.586,1662,4.586,1663,4.586,1664,5.597,1665,4.83,1666,5.035,1667,6.448,1668,3.628,1669,3.628,1670,4.586]],["title/injectables/GitIntegrationService.html",[319,1.648,1221,2.522]],["body/injectables/GitIntegrationService.html",[3,0.08,4,0.069,9,0.048,25,0.186,27,1.61,32,0.648,37,0.506,44,0.959,46,1.184,47,0.007,48,0.712,49,0.408,50,1.002,52,1.059,62,1.3,68,2.665,71,0.465,73,0.28,83,0.899,85,0.075,88,1.824,89,3.32,90,0.155,91,0.682,93,1.35,106,1.709,143,0.912,150,0.868,161,1.61,162,1.584,180,0.506,204,1.744,240,1.354,251,0.004,252,0.004,255,1.373,272,3.514,275,1.512,286,4.938,290,2.099,305,1.345,311,2.376,319,1.775,320,3.838,321,1.701,323,2.184,324,4.112,343,3.277,358,2.717,360,2.554,370,1.701,371,1.606,372,1.112,478,3.277,491,2.009,509,2.408,514,2.979,547,3.867,589,1.809,646,4.583,647,1.893,660,5.434,739,1.318,744,1.542,768,2.122,829,2.833,941,4.374,982,3.882,1000,1.813,1221,2.717,1284,2.481,1292,4.028,1300,4.112,1303,4.481,1315,4.828,1325,1.87,1405,2.738,1476,4.481,1555,5.489,1659,4.662,1662,2.286,1666,2.091,1668,3.626,1669,3.626,1676,2.091,1677,2.091,1679,2.182,1688,2.738,1689,2.738,1694,2.555,1697,4.112,1701,8.088,1702,2.984,1703,5.041,1704,3.837,1705,7.575,1706,6.729,1707,4.607,1708,5.041,1709,5.041,1710,5.041,1711,5.041,1712,5.041,1713,5.041,1714,5.041,1715,6.729,1716,5.041,1717,6.729,1718,5.041,1719,5.041,1720,5.041,1721,5.041,1722,5.041,1723,3.357,1724,5.041,1725,7.575,1726,3.357,1727,5.041,1728,6.215,1729,4.191,1730,3.357,1731,5.041,1732,3.357,1733,5.041,1734,3.357,1735,4.481,1736,5.041,1737,3.617,1738,5.041,1739,5.041,1740,3.357,1741,5.041,1742,3.357,1743,5.041,1744,3.357,1745,3.357,1746,3.357,1747,3.357,1748,5.041,1749,3.357,1750,5.041,1751,3.357,1752,5.041,1753,3.357,1754,5.041,1755,3.357,1756,4.112,1757,6.729,1758,3.837,1759,3.837,1760,3.357,1761,4.481,1762,5.041,1763,3.357,1764,5.041,1765,3.357,1766,5.041,1767,5.041,1768,5.041,1769,5.041,1770,5.041,1771,2.984,1772,3.357,1773,3.357,1774,3.357,1775,3.357,1776,3.357,1777,3.357,1778,3.357,1779,5.041,1780,3.357,1781,3.357,1782,3.357,1783,2.984,1784,2.984,1785,3.357,1786,3.357,1787,3.357,1788,2.555,1789,3.357,1790,2.738,1791,3.357,1792,3.357,1793,3.357,1794,3.357,1795,3.357,1796,3.357,1797,3.357,1798,3.357,1799,5.041,1800,3.357,1801,3.357,1802,3.357,1803,3.357,1804,3.357,1805,3.357,1806,3.357,1807,3.357,1808,5.041,1809,3.357,1810,3.357,1811,2.984,1812,3.357,1813,3.357,1814,3.357]],["title/interfaces/GitIssue.html",[86,0.791,1668,2.522]],["body/interfaces/GitIssue.html",[3,0.155,4,0.134,9,0.093,25,0.359,26,0.876,47,0.007,49,0.427,85,0.203,86,1.537,88,1.748,91,1.317,251,0.006,252,0.006,253,2.146,255,2.063,257,3.653,275,2.37,305,1.609,323,2.952,341,5.912,651,4.476,744,2.865,1284,3.189,1659,3.738,1660,4.414,1661,4.414,1662,4.414,1663,4.414,1664,4.92,1665,4.649,1666,4.036,1667,4.649,1668,4.257,1669,3.492,1670,4.414]],["title/interfaces/GitPull.html",[86,0.791,1669,2.522]],["body/interfaces/GitPull.html",[3,0.153,4,0.133,9,0.092,25,0.356,26,0.871,47,0.007,49,0.432,85,0.202,86,1.533,88,1.744,91,1.305,251,0.006,252,0.006,253,2.126,255,2.058,257,3.644,275,2.357,305,1.611,323,2.944,341,5.897,651,4.465,744,2.859,1284,3.159,1659,3.703,1660,4.373,1661,4.373,1662,4.373,1663,4.373,1664,4.892,1665,4.606,1666,3.998,1667,4.606,1668,3.46,1669,4.233,1670,6.024]],["title/interfaces/GitRepository.html",[86,0.791,1664,2.914]],["body/interfaces/GitRepository.html",[3,0.159,4,0.138,9,0.096,25,0.369,26,0.891,47,0.007,49,0.398,85,0.204,86,1.549,88,1.76,91,1.821,251,0.006,252,0.006,253,2.208,255,1.823,257,3.228,275,2.688,305,1.595,323,2.609,341,5.224,651,3.956,744,2.882,1284,3.281,1659,3.846,1660,4.541,1661,4.541,1662,4.541,1663,4.541,1664,5.374,1665,6.427,1666,4.152,1667,4.784,1668,3.593,1669,3.593,1670,4.541]],["title/components/GithubIntegrationPage.html",[0,0.159,160,0.934]],["body/components/GithubIntegrationPage.html",[0,0.238,1,0.835,2,1.191,3,0.104,4,0.09,5,0.915,6,0.932,7,0.915,8,0.915,9,0.062,13,1.689,14,2.575,15,0.776,16,1.77,17,1.767,18,0.835,19,1.235,21,1.191,23,1.191,25,0.24,32,0.781,36,2.79,37,0.916,44,0.644,46,0.581,47,0.007,48,0.633,49,0.2,50,0.492,52,0.503,53,0.835,71,0.415,73,0.362,77,1.066,81,0.72,85,0.097,90,0.2,91,1.235,93,1.162,114,1.328,115,0.915,116,1.281,117,1.374,118,0.762,119,1.715,120,0.915,121,1.478,122,0.82,123,0.883,124,0.851,125,0.915,126,0.835,127,0.915,128,0.851,129,0.883,130,0.915,131,0.851,132,0.915,133,0.851,134,0.915,135,0.835,136,0.883,137,0.915,138,0.851,139,0.915,140,0.883,141,0.835,142,1.23,143,0.916,144,1.281,145,0.835,146,1.281,147,0.82,148,1.883,149,0.835,150,0.748,151,0.915,152,0.835,153,1.349,154,0.835,155,0.835,156,0.851,157,0.915,158,0.835,159,0.915,160,1.516,161,1.626,162,1.566,163,0.851,164,0.915,165,0.851,166,1.191,167,0.915,168,0.851,169,0.915,170,0.851,171,0.851,172,0.915,173,0.851,174,0.915,175,0.851,176,0.915,177,0.835,178,0.883,179,0.851,180,0.916,181,0.915,182,0.835,183,0.915,184,0.835,185,0.851,186,0.915,187,0.851,188,1.478,189,0.79,190,0.915,191,0.851,192,1.281,193,0.915,194,0.851,195,0.915,196,0.851,197,0.915,198,0.835,199,0.867,200,0.835,201,0.915,202,0.835,203,0.899,204,1.148,205,0.835,206,0.851,207,0.851,208,0.915,209,0.835,210,1.625,211,0.82,212,0.915,213,0.835,214,0.867,215,0.835,216,0.835,217,0.915,218,0.851,219,0.915,220,1.281,221,0.851,222,0.915,223,0.851,224,0.915,225,0.915,226,0.851,227,0.915,228,0.82,229,0.989,230,0.835,231,0.851,232,0.915,233,0.851,234,0.915,235,1.148,236,1.281,237,1.281,238,0.835,239,0.883,240,1.428,241,0.835,242,0.835,243,0.899,244,0.867,245,0.915,246,0.835,247,0.915,248,0.82,249,0.883,250,0.915,251,0.004,252,0.004,279,1.498,308,2.498,395,2.151,428,1.302,542,2.822,543,3.963,682,1.06,683,1.788,684,1.667,685,1.92,686,1.828,714,1.562,715,1.595,716,2.233,717,1.562,718,1.381,733,2.418,812,3.115,919,3.541,943,2.704,944,2.822,945,2.822,1012,2.756,1048,2.957,1221,4.581,1248,2.704,1252,5.717,1554,4.624,1678,2.822,1735,5.401,1815,6.23,1816,3.859,1817,7.009,1818,6.076,1819,4.341,1820,4.341,1821,6.076,1822,7.991,1823,4.341,1824,4.341,1825,5.401,1826,4.359,1827,3.859]],["title/components/IconComponent.html",[0,0.159,163,0.917]],["body/components/IconComponent.html",[0,0.236,1,0.595,2,0.929,3,0.074,4,0.064,5,0.652,6,0.664,7,0.652,8,0.652,9,0.044,15,0.553,16,1.743,17,1.739,18,0.595,19,0.963,21,0.929,23,0.929,25,0.171,26,0.525,27,1.367,44,0.923,46,0.414,47,0.007,48,0.674,49,0.364,50,0.35,52,0.85,53,0.595,60,1.153,61,1.174,71,0.382,73,0.258,77,0.831,81,0.513,85,0.069,90,0.143,91,1.414,93,0.828,106,1.526,113,2.275,115,0.652,116,1.361,117,1.129,118,0.543,119,1.336,120,0.652,121,1.214,122,0.584,123,0.629,124,0.606,125,0.652,126,0.595,127,0.652,128,0.606,129,0.629,130,0.652,131,0.606,132,0.652,133,0.606,134,0.652,135,0.595,136,0.629,137,0.652,138,0.606,139,0.652,140,0.629,141,0.595,142,1.01,143,0.714,144,0.999,145,0.595,146,0.999,147,0.584,148,1.739,149,0.595,150,0.533,151,0.652,152,0.595,153,1.108,154,0.595,155,0.595,156,0.606,157,0.652,158,0.595,159,0.652,160,0.617,161,0.563,162,1.129,163,1.265,164,0.652,165,0.606,166,1.644,167,0.652,168,0.606,169,0.652,170,0.606,171,0.606,172,0.652,173,0.606,174,0.652,175,0.606,176,0.652,177,0.595,178,0.629,179,0.606,180,0.714,181,0.652,182,0.595,183,0.652,184,0.595,185,0.606,186,0.652,187,0.606,188,1.214,189,0.563,190,0.652,191,0.606,192,0.999,193,0.652,194,0.606,195,0.652,196,0.606,197,0.652,198,0.595,199,0.617,200,0.595,201,0.652,202,0.595,203,0.64,204,0.895,205,0.595,206,0.606,207,0.606,208,0.652,209,0.595,210,1.414,211,0.584,212,0.652,213,0.595,214,0.617,215,0.595,216,0.595,217,0.652,218,0.606,219,0.652,220,0.999,221,0.606,222,0.652,223,0.606,224,0.652,225,0.652,226,0.606,227,0.652,228,0.584,229,0.771,230,0.595,231,0.606,232,0.652,233,0.606,234,0.652,235,0.895,236,0.999,237,0.999,238,0.595,239,0.629,240,0.553,241,0.595,242,0.595,243,0.64,244,0.617,245,0.652,246,0.595,247,0.652,248,0.584,249,0.629,250,0.652,251,0.003,252,0.003,255,0.702,266,3.606,279,1.986,280,6.428,281,2.612,297,2.219,305,1.452,360,4.41,592,1.334,593,1.137,594,1.994,595,3.001,682,1.698,683,1.394,684,3.101,690,0.946,698,4.698,714,1.704,715,1.741,716,2.371,717,1.704,718,1.507,765,1.86,812,6.356,829,3.216,835,7.168,845,6.184,856,4.383,861,6.184,862,6.231,1005,2.267,1048,4.739,1069,2.474,1071,3.606,1113,2.354,1828,2.749,1829,6.453,1830,3.865,1831,4.738,1832,5.758,1833,4.738,1834,5.758,1835,4.738,1836,4.738,1837,6.957,1838,4.738,1839,6.957,1840,7.639,1841,7.639,1842,4.697,1843,3.093,1844,4.738,1845,6.453,1846,4.738,1847,4.738,1848,4.738,1849,7.339,1850,7.339,1851,4.738,1852,3.093,1853,3.865,1854,8.507,1855,4.738,1856,4.738,1857,7.88,1858,3.093,1859,6.957,1860,4.738,1861,3.093,1862,3.093,1863,3.093,1864,3.093,1865,3.093,1866,3.093,1867,3.093,1868,3.093,1869,4.738,1870,3.093,1871,3.093,1872,3.093,1873,3.093,1874,4.738,1875,2.733,1876,4.738,1877,4.738,1878,2.749,1879,2.749,1880,2.354,1881,3.093,1882,4.211,1883,3.093,1884,6.453,1885,4.211,1886,4.738,1887,3.093,1888,2.219,1889,4.738,1890,3.093,1891,4.738,1892,3.093,1893,3.093,1894,3.093,1895,3.093,1896,7.339,1897,3.093,1898,3.093,1899,4.738]],["title/components/InputAssigneeComponent.html",[0,0.159,165,0.917]],["body/components/InputAssigneeComponent.html",[0,0.163,1,0.45,2,0.745,3,0.056,4,0.048,5,0.494,6,0.503,7,0.494,8,0.494,9,0.034,15,0.418,16,1.715,17,1.709,18,0.45,19,1.395,21,0.745,23,0.745,25,0.13,26,0.421,27,1.488,29,1.622,32,0.489,37,0.353,44,0.969,46,0.989,47,0.007,48,0.638,49,0.398,50,0.88,52,0.946,53,1.573,57,1.12,60,1.226,61,1.218,62,1.535,64,0.899,68,1.386,71,0.449,73,0.195,74,0.76,77,0.667,81,0.388,83,0.627,85,0.052,88,1.044,89,1.928,90,0.108,91,1.684,93,1.285,106,1.044,109,4.187,110,1.44,111,0.807,113,1.596,115,0.494,116,0.802,117,1.191,118,0.667,119,1.735,120,0.494,121,1.012,122,0.442,123,0.476,124,0.459,125,0.494,126,0.45,127,0.494,128,0.459,129,0.476,130,0.494,131,0.459,132,0.494,133,0.459,134,0.494,135,0.45,136,0.476,137,0.494,138,0.459,139,0.494,140,1.703,141,0.45,142,0.842,143,0.573,144,0.802,145,0.45,146,0.802,147,0.442,148,1.601,149,0.45,150,0.403,151,0.494,152,0.45,153,0.924,154,0.45,155,0.45,156,0.459,157,0.494,158,0.45,159,0.494,160,0.467,161,0.426,162,0.941,163,0.459,164,0.494,165,1.083,166,1.603,167,0.494,168,0.459,169,0.494,170,0.459,171,0.459,172,0.494,173,0.459,174,0.494,175,0.459,176,0.494,177,0.45,178,0.476,179,0.459,180,0.573,181,0.494,182,0.45,183,0.494,184,0.45,185,0.459,186,0.494,187,0.459,188,1.012,189,0.426,190,0.494,191,0.459,192,0.802,193,0.494,194,0.459,195,0.494,196,0.459,197,0.494,198,0.45,199,0.467,200,0.45,201,0.494,202,0.45,203,0.485,204,0.718,205,0.45,206,0.459,207,0.459,208,0.494,209,0.45,210,1.236,211,0.442,212,0.494,213,0.45,214,0.467,215,0.45,216,0.45,217,0.494,218,0.459,219,0.494,220,0.802,221,0.459,222,0.494,223,0.459,224,0.494,225,0.494,226,0.459,227,0.494,228,0.442,229,0.619,230,0.45,231,0.459,232,0.494,233,0.459,234,0.494,235,0.718,236,1.282,237,0.802,238,0.45,239,0.476,240,0.418,241,0.45,242,0.45,243,0.787,244,0.467,245,0.494,246,0.45,247,0.494,248,0.442,249,0.476,250,0.494,251,0.003,252,0.003,255,1.254,257,1.527,274,1.261,275,1.954,281,3.113,284,0.879,290,0.73,298,1.035,308,2.272,323,0.76,325,2.432,358,2.587,362,1.222,394,2.549,395,2.562,396,2.88,424,2.471,512,1.261,540,2.587,544,3.822,586,4.555,587,1.522,588,1.458,607,2.193,647,1.428,651,1.871,673,1.401,682,1.484,683,1.916,684,2.122,685,1.035,686,0.985,688,1.21,689,1.222,690,1.468,694,1.01,695,2.021,703,1.771,706,1.771,710,1.152,714,1.988,715,2.031,716,2.521,717,1.727,718,1.758,724,1.681,725,1.64,727,2.622,728,2.688,733,2.674,743,2.368,746,1.681,747,2.59,748,2.118,750,1.062,751,1.152,755,2.276,756,2.769,765,1.493,768,2.327,781,1.594,800,1.304,801,1.601,802,1.222,803,1.401,804,1.909,807,1.782,809,2.297,811,6.756,814,2.118,815,2.118,822,1.222,829,0.985,843,1.522,848,2.769,852,1.458,853,1.522,872,1.782,873,1.819,927,2.368,960,1.819,964,2.276,965,2.276,966,4.57,967,3.638,968,2.874,969,2.874,970,2.276,971,2.276,972,2.276,973,2.276,974,2.276,976,4.935,977,1.458,978,1.401,979,2.118,980,1.401,981,1.401,982,1.35,983,1.261,984,1.261,985,1.458,986,4.093,987,2.118,988,1.304,989,1.458,990,1.35,991,1.304,992,1.458,993,3.638,994,1.401,995,1.304,996,1.35,997,1.35,998,1.401,999,1.401,1000,1.368,1001,2.276,1002,1.401,1003,1.458,1004,2.276,1005,1.819,1006,3.898,1007,1.401,1008,2.674,1009,1.35,1010,2.674,1011,2.276,1012,1.725,1013,3.308,1014,1.304,1015,1.401,1016,2.276,1017,1.401,1018,1.458,1019,1.401,1020,1.401,1021,1.458,1022,2.276,1023,1.401,1024,1.401,1025,1.522,1026,1.458,1027,1.458,1028,1.458,1029,1.458,1030,1.458,1031,1.401,1032,2.118,1033,1.458,1034,2.276,1037,1.458,1038,1.522,1039,1.458,1069,1.985,1073,2.471,1074,2.728,1075,3.27,1077,1.594,1106,3.856,1107,1.909,1108,1.594,1109,1.909,1113,1.782,1292,3.308,1324,2.99,1325,1.304,1350,4.206,1497,1.909,1616,1.679,1617,1.522,1618,1.679,1679,1.522,1728,3.444,1788,1.782,1826,3.965,1827,2.081,1900,7.712,1901,7.077,1902,2.081,1903,4.801,1904,3.802,1905,4.801,1906,4.801,1907,3.654,1908,5.788,1909,4.508,1910,3.101,1911,2.341,1912,3.802,1913,3.802,1914,2.341,1915,2.341,1916,2.341,1917,2.341,1918,3.802,1919,2.341,1920,2.341,1921,2.341,1922,2.341,1923,2.894,1924,2.341,1925,2.341,1926,2.341,1927,3.38,1928,2.341,1929,2.341,1930,2.341,1931,2.341,1932,2.341,1933,2.081,1934,2.341,1935,2.081,1936,2.341,1937,1.909,1938,1.782,1939,2.341,1940,1.909,1941,2.341,1942,3.802,1943,3.802,1944,2.341,1945,1.782,1946,2.341,1947,2.341,1948,3.802,1949,3.802,1950,2.341,1951,3.802,1952,2.341,1953,2.341,1954,2.081,1955,2.081,1956,2.081,1957,1.909,1958,2.081,1959,1.782,1960,3.916,1961,2.081,1962,2.081,1963,2.081,1964,2.081,1965,3.38,1966,2.341,1967,2.341,1968,3.802,1969,3.802,1970,3.802,1971,3.802,1972,3.802,1973,4.913,1974,2.728,1975,2.894,1976,2.341,1977,2.341,1978,1.401,1979,1.522,1980,4.801,1981,2.341,1982,2.341,1983,1.909,1984,2.341,1985,2.341,1986,1.909,1987,1.909,1988,2.341,1989,2.471,1990,5.527,1991,2.341]],["title/components/InputComponent.html",[0,0.159,168,0.917]],["body/components/InputComponent.html",[0,0.212,1,0.475,2,0.778,3,0.059,4,0.051,5,0.521,6,0.53,7,0.521,8,0.521,9,0.035,15,0.441,16,1.721,17,1.715,18,0.475,19,0.807,21,0.778,23,0.778,25,0.22,26,0.44,27,0.658,29,2.255,32,0.51,37,0.372,44,0.945,46,0.837,47,0.007,48,0.596,49,0.404,50,0.708,52,0.871,53,1.448,57,1.9,60,1.381,61,1.273,62,1.342,64,1.911,68,1.437,71,0.37,73,0.206,74,0.802,77,0.697,81,0.41,85,0.055,88,0.75,90,0.114,91,1.635,110,1.711,111,2.155,113,2.173,114,1.911,115,0.521,116,0.837,117,1.225,118,0.697,119,1.855,120,0.521,121,1.05,122,0.467,123,0.502,124,0.484,125,0.521,126,0.475,127,0.521,128,0.484,129,0.502,130,0.521,131,0.484,132,0.521,133,0.484,134,0.521,135,0.475,136,0.502,137,0.521,138,0.484,139,0.521,140,1.723,141,0.475,142,0.873,143,0.598,144,0.837,145,0.475,146,0.837,147,0.467,148,1.629,149,0.475,150,0.425,151,0.521,152,0.475,153,0.958,154,0.475,155,0.475,156,0.484,157,0.521,158,0.475,159,0.521,160,0.493,161,0.45,162,0.976,163,0.484,164,0.521,165,0.484,166,1.833,167,0.521,168,1.118,169,0.521,170,0.484,171,0.484,172,0.521,173,0.484,174,0.521,175,0.484,176,0.521,177,0.475,178,0.502,179,0.484,180,0.598,181,0.521,182,0.475,183,0.521,184,0.475,185,0.484,186,0.521,187,0.484,188,1.05,189,0.45,190,0.521,191,0.484,192,0.837,193,0.521,194,0.484,195,0.521,196,0.484,197,0.521,198,0.475,199,0.493,200,0.475,201,0.521,202,0.475,203,0.511,204,0.75,205,0.475,206,0.484,207,0.484,208,0.521,209,0.475,210,1.27,211,0.467,212,0.521,213,0.475,214,0.493,215,0.475,216,0.475,217,0.521,218,0.484,219,0.521,220,0.837,221,0.484,222,0.521,223,0.484,224,0.521,225,0.521,226,0.484,227,0.521,228,0.467,229,0.646,230,0.475,231,0.484,232,0.521,233,0.484,234,0.521,235,0.75,236,1.317,237,0.837,238,0.475,239,0.502,240,0.441,241,0.475,242,0.475,243,0.511,244,0.493,245,0.521,246,0.475,247,0.521,248,0.467,249,0.502,250,0.521,251,0.003,252,0.003,255,1.417,257,1.595,266,3.022,274,1.331,275,1.711,281,2.587,284,2.346,290,1.238,297,1.772,298,1.092,305,1.187,308,3.549,323,0.802,325,2.522,358,2.683,360,2.012,362,1.29,394,2.516,395,2.589,410,1.12,481,2.073,514,1.954,540,2.683,593,0.908,647,1.491,651,1.954,682,1.837,683,1.839,684,2.693,685,1.092,686,1.04,688,2.32,689,1.29,690,2.231,691,4.456,694,3.617,695,1.04,699,1.671,703,1.849,704,1.772,706,2.319,710,1.215,714,0.888,715,0.908,716,0.908,718,1.584,721,2.562,725,1.065,727,3.803,728,3.556,732,4.755,733,1.376,739,1.559,746,3.225,748,2.212,749,2.522,750,1.801,751,1.215,756,3.289,765,1.559,800,1.376,801,2.401,802,2.073,812,3.572,814,3.177,815,3.177,820,1.682,822,2.073,829,1.04,838,2.473,843,1.605,848,2.872,852,1.538,873,1.182,877,2.015,878,1.682,881,1.772,888,4.425,889,2.195,960,1.9,964,2.377,965,2.377,966,4.456,967,3.74,968,2.98,969,2.98,970,2.377,971,2.377,972,2.377,973,2.377,974,2.377,976,5.008,977,1.538,978,1.478,979,3.717,980,1.478,981,1.478,982,1.425,983,1.331,984,1.331,985,1.538,986,4.057,987,2.773,988,1.376,989,1.538,990,1.425,991,1.376,992,1.538,993,3.74,994,1.478,995,1.376,996,1.425,997,1.425,998,1.478,999,1.478,1000,0.888,1001,2.377,1002,1.478,1003,1.538,1004,2.377,1005,1.9,1006,3.995,1007,1.478,1008,2.773,1009,1.425,1010,2.773,1011,2.377,1012,1.801,1013,3.414,1014,1.376,1015,1.478,1016,2.377,1017,1.478,1018,1.538,1019,1.478,1020,1.478,1021,1.538,1022,2.377,1023,1.478,1024,1.478,1025,1.605,1026,1.538,1027,1.538,1028,1.538,1029,1.538,1030,1.538,1031,1.478,1032,2.212,1033,1.538,1034,2.377,1037,1.538,1039,1.538,1041,2.581,1044,1.251,1048,3.391,1049,2.015,1073,2.581,1077,1.682,1113,1.88,1331,2.195,1454,4.061,1616,1.772,1617,1.605,1618,1.772,1888,1.772,1992,2.195,1993,4.978,1994,3.97,1995,4.425,1996,5.703,1997,5.703,1998,4.755,1999,5.554,2000,5.554,2001,3.97,2002,7.014,2003,3.97,2004,2.47,2005,5.932,2006,2.47,2007,3.529,2008,2.581,2009,2.47,2010,2.47,2011,2.47,2012,3.97,2013,2.47,2014,2.47,2015,3.97,2016,3.529,2017,2.47,2018,2.47,2019,2.47,2020,3.97,2021,3.97,2022,5.703,2023,3.97,2024,5.703,2025,2.47,2026,2.47,2027,8.171,2028,6.248,2029,1.88,2030,2.47,2031,2.195,2032,3.97,2033,2.47,2034,2.47,2035,2.47,2036,2.47,2037,2.47,2038,2.47,2039,2.47,2040,3.97,2041,2.47]],["title/components/InputDateTimeComponent.html",[0,0.159,170,0.917]],["body/components/InputDateTimeComponent.html",[0,0.197,1,0.603,2,0.937,3,0.075,4,0.065,5,0.66,6,0.672,7,0.66,8,0.66,9,0.045,13,1.329,14,2.132,15,0.56,16,1.744,17,1.74,18,0.603,19,0.972,21,0.937,23,0.937,25,0.173,26,0.53,27,1.16,29,2.592,32,0.615,36,2.386,37,0.472,44,0.96,46,0.987,47,0.007,48,0.655,49,0.399,50,0.835,52,0.938,53,1.592,57,1.498,60,1.318,61,1.246,62,1.395,64,1.202,65,2.81,68,1.675,71,0.384,73,0.261,74,1.016,77,0.839,81,0.519,85,0.07,88,1.096,90,0.145,91,1.71,106,0.592,115,0.66,116,1.008,117,1.137,118,0.839,119,1.527,120,0.66,121,1.223,122,0.592,123,0.637,124,0.614,125,0.66,126,0.603,127,0.66,128,0.614,129,0.637,130,0.66,131,0.614,132,0.66,133,0.614,134,0.66,135,0.603,136,1.422,137,0.66,138,0.614,139,0.66,140,1.805,141,0.603,142,1.018,143,0.721,144,1.008,145,0.603,146,1.008,147,0.592,148,1.744,149,0.603,150,0.539,151,0.66,152,0.603,153,1.116,154,0.603,155,0.603,156,0.614,157,0.66,158,0.603,159,0.66,160,0.625,161,0.57,162,1.137,163,0.614,164,0.66,165,0.614,166,1.672,167,0.66,168,0.614,169,0.66,170,1.273,171,1.832,172,0.66,173,0.614,174,0.66,175,0.614,176,0.66,177,0.603,178,0.637,179,0.614,180,0.721,181,0.66,182,0.603,183,0.66,184,0.603,185,0.614,186,0.66,187,0.614,188,1.223,189,0.57,190,0.66,191,0.614,192,1.008,193,0.66,194,0.614,195,0.66,196,0.614,197,0.66,198,0.603,199,0.625,200,0.603,201,0.66,202,0.603,203,0.648,204,0.903,205,0.603,206,0.614,207,0.614,208,0.66,209,0.603,210,1.422,211,0.592,212,0.66,213,0.603,214,0.625,215,0.603,216,0.603,217,0.66,218,0.614,219,0.66,220,1.008,221,0.614,222,0.66,223,0.614,224,0.66,225,0.66,226,0.614,227,0.66,228,0.592,229,0.778,230,0.603,231,0.614,232,0.66,233,0.614,234,0.66,235,0.903,236,1.223,237,1.008,238,0.603,239,0.637,240,0.56,241,0.603,242,0.603,243,0.648,244,0.625,245,0.66,246,0.603,247,0.66,248,0.592,249,0.637,250,0.66,251,0.003,252,0.003,255,1.316,264,4.547,274,1.687,275,1.741,281,2.946,284,1.796,290,0.977,298,1.385,305,1.057,323,1.016,325,2.423,358,2.577,362,1.635,394,1.65,395,2.383,540,3.127,647,1.796,651,2.353,691,3.746,732,4.416,748,2.664,751,1.541,763,3.64,765,1.877,772,3.64,782,2.978,791,2.383,792,2.383,793,2.554,794,2.246,795,2.246,829,1.318,848,3.347,852,1.95,856,4.943,873,1.498,960,2.288,964,2.863,965,2.863,966,4.771,967,4.187,968,3.473,969,3.473,970,2.863,971,2.863,972,2.863,973,2.863,974,2.863,976,5.313,977,1.95,978,1.874,979,4.108,980,1.874,981,1.874,982,1.806,983,1.687,984,1.687,985,1.95,986,4.369,987,2.664,988,1.744,989,1.95,990,1.806,991,1.744,992,1.95,993,4.187,994,1.874,995,1.744,996,1.806,997,1.806,998,1.874,999,1.874,1000,1.126,1001,2.863,1002,1.874,1003,1.95,1004,2.863,1005,2.288,1006,4.187,1007,1.874,1008,2.664,1009,1.806,1010,2.664,1011,2.863,1012,2.169,1013,3.473,1014,1.744,1015,1.874,1016,2.863,1017,1.874,1018,1.95,1019,1.874,1020,1.874,1021,1.95,1022,2.863,1023,1.874,1024,2.863,1030,1.95,1031,1.874,1032,2.664,1033,1.95,1034,2.863,1037,1.95,1038,2.035,1039,1.95,1077,2.133,1350,2.383,1616,2.246,1617,3.108,1618,2.246,1630,5.773,1631,4.251,1978,2.863,1995,4.251,1998,5.324,2016,4.251,2042,7.032,2043,6.453,2044,2.783,2045,5.773,2046,5.802,2047,4.782,2048,5.802,2049,5.802,2050,4.782,2051,3.131,2052,3.131,2053,3.131,2054,3.131,2055,3.131,2056,3.131,2057,3.131,2058,3.131,2059,3.131,2060,3.131,2061,3.131,2062,5.802,2063,4.782,2064,5.802,2065,4.251,2066,3.131,2067,3.131]],["title/components/IntegrationEntryComponent.html",[0,0.159,173,0.917]],["body/components/IntegrationEntryComponent.html",[0,0.232,1,0.803,2,1.158,3,0.1,4,0.086,5,0.88,6,0.896,7,0.88,8,0.88,9,0.06,13,1.642,14,2.521,15,0.746,16,1.767,17,1.764,18,0.803,19,1.201,21,1.158,23,1.158,25,0.231,32,0.76,36,2.741,37,1.034,44,0.891,47,0.007,48,0.591,49,0.364,52,0.483,53,0.803,60,0.746,61,0.641,62,0.896,71,0.247,73,0.348,77,1.037,81,0.692,85,0.093,90,0.193,110,1.773,113,1.205,114,1.276,115,0.88,116,1.246,117,1.345,118,0.732,119,1.693,120,0.88,121,1.447,122,0.788,123,0.848,124,0.818,125,0.88,126,0.803,127,0.88,128,0.818,129,0.848,130,0.88,131,0.818,132,0.88,133,0.818,134,0.88,135,0.803,136,0.848,137,0.88,138,0.818,139,0.88,140,0.848,141,0.803,142,1.203,143,0.891,144,1.246,145,0.803,146,1.246,147,0.788,148,1.867,149,0.803,150,0.719,151,0.88,152,0.803,153,1.32,154,0.803,155,0.803,156,0.818,157,0.88,158,0.803,159,0.88,160,0.833,161,0.76,162,1.8,163,0.818,164,0.88,165,0.818,166,1.648,167,0.88,168,0.818,169,0.88,170,0.818,171,0.818,172,0.88,173,1.462,174,0.88,175,0.818,176,0.88,177,0.803,178,0.848,179,0.818,180,0.891,181,0.88,182,0.803,183,0.88,184,0.803,185,0.818,186,0.88,187,0.818,188,1.447,189,0.76,190,0.88,191,0.818,192,1.246,193,0.88,194,0.818,195,0.88,196,0.818,197,0.88,198,0.803,199,0.833,200,0.803,201,0.88,202,0.803,203,0.864,204,1.116,205,0.803,206,0.818,207,0.818,208,0.88,209,0.803,210,1.601,211,0.788,212,0.88,213,0.803,214,0.833,215,0.803,216,0.803,217,0.88,218,0.818,219,0.88,220,1.246,221,0.818,222,0.88,223,0.818,224,0.88,225,0.88,226,0.818,227,0.88,228,0.788,229,0.962,230,0.803,231,0.818,232,0.88,233,0.818,234,0.88,235,1.116,236,1.246,237,1.246,238,0.803,239,0.848,240,0.746,241,0.803,242,0.803,243,0.864,244,0.833,245,0.88,246,0.803,247,0.88,248,0.788,249,0.848,250,0.88,251,0.004,252,0.004,255,1.855,275,1.773,284,2.219,305,1.214,395,1.182,396,1.845,593,1.533,682,1.674,683,1.739,688,1.328,690,1.276,691,4.542,694,1.8,710,2.054,714,2.125,715,2.171,716,2.171,717,1.501,718,1.328,719,2.179,720,2.114,721,1.602,727,2.959,728,2.613,733,3.291,745,1.501,747,4.025,755,2.498,765,2.32,892,3.176,1106,2.828,1663,5.081,1978,2.498,1987,5.596,2068,7.634,2069,7.005,2070,3.709,2071,6.86,2072,5.909,2073,5.909,2074,6.999,2075,5.909,2076,4.173,2077,4.173,2078,4.173,2079,4.173,2080,6.86,2081,4.173,2082,5.909,2083,3.176]],["title/components/IntegrationGithubComponent.html",[0,0.159,175,0.917]],["body/components/IntegrationGithubComponent.html",[0,0.222,1,0.742,2,1.094,3,0.092,4,0.08,5,0.813,6,0.828,7,0.813,8,0.813,9,0.055,13,1.552,14,2.411,15,0.689,16,1.761,17,1.759,18,1.263,19,1.135,21,1.094,23,1.094,25,0.213,26,0.619,27,1.32,29,2.218,32,0.718,36,2.644,37,0.581,44,0.909,46,0.516,47,0.007,48,0.605,49,0.303,50,0.437,52,0.833,53,1.384,60,1.173,61,1.008,62,1.545,63,2.831,65,1.548,66,2.902,71,0.452,73,0.322,74,1.251,77,0.979,81,0.639,85,0.086,88,1.055,89,2.636,90,0.178,110,1.156,113,1.611,114,1.707,115,0.813,116,1.177,117,1.286,118,0.676,119,1.741,120,0.813,121,1.384,122,0.728,123,0.784,124,0.755,125,0.813,126,0.742,127,0.813,128,0.755,129,0.784,130,0.813,131,0.755,132,0.813,133,0.755,134,0.813,135,0.742,136,0.784,137,0.813,138,0.755,139,0.813,140,0.784,141,0.742,142,1.151,143,0.841,144,1.177,145,0.742,146,1.177,147,0.728,148,1.835,149,0.742,150,0.664,151,0.813,152,0.742,153,1.263,154,0.742,155,0.742,156,0.755,157,0.813,158,0.742,159,0.813,160,0.769,161,1.531,162,1.706,163,0.755,164,0.813,165,0.755,166,1.41,167,0.813,168,0.755,169,0.813,170,0.755,171,0.755,172,0.813,173,0.755,174,0.813,175,1.41,176,0.813,177,0.742,178,0.784,179,0.755,180,0.841,181,0.813,182,0.742,183,0.813,184,0.742,185,1.094,186,0.813,187,0.755,188,1.384,189,0.702,190,0.813,191,0.755,192,1.177,193,0.813,194,0.755,195,0.813,196,0.755,197,0.813,198,0.742,199,0.769,200,0.742,201,0.813,202,0.742,203,0.798,204,1.055,205,0.742,206,0.755,207,0.755,208,0.813,209,0.742,210,1.552,211,0.728,212,0.813,213,0.742,214,0.769,215,0.742,216,0.742,217,0.813,218,0.755,219,0.813,220,1.177,221,0.755,222,0.813,223,0.755,224,0.813,225,0.813,226,0.755,227,0.813,228,0.728,229,0.908,230,0.742,231,0.755,232,0.813,233,0.755,234,0.813,235,1.055,236,1.177,237,1.177,238,0.742,239,0.784,240,0.689,241,0.742,242,0.742,243,0.798,244,0.769,245,0.813,246,0.742,247,0.813,248,0.728,249,0.784,250,0.813,251,0.004,252,0.004,284,2.464,290,1.202,307,1.748,308,2.295,372,1.276,394,1.329,395,2.255,396,1.704,660,5.161,682,0.941,683,1.643,685,1.704,686,1.622,688,1.226,714,1.386,715,1.416,716,2.051,717,2.008,718,1.776,719,2.012,720,1.953,721,1.479,727,2.408,728,2.468,765,2.191,808,2.4,914,2.765,927,2.4,933,2.915,1221,4.29,1224,7.099,1248,2.4,1382,3.802,1664,4.087,1676,2.4,1677,2.4,1678,2.505,1696,3.144,1979,2.505,2084,7.736,2085,3.426,2086,6.562,2087,5.582,2088,6.562,2089,6.562,2090,7.194,2091,7.194,2092,7.194,2093,3.426,2094,5.582,2095,3.854,2096,3.854,2097,3.854,2098,3.854,2099,3.854,2100,3.854,2101,3.854,2102,3.854,2103,5.582,2104,5.582,2105,3.854,2106,3.854,2107,3.854,2108,3.854,2109,3.854,2110,4.962,2111,5.582]],["title/components/LandingPageComponent.html",[0,0.159,177,0.9]],["body/components/LandingPageComponent.html",[0,0.252,1,0.936,2,1.288,3,0.116,4,0.1,5,1.026,6,1.045,7,1.026,8,1.026,9,0.07,15,0.87,16,1.777,17,1.775,18,0.936,19,1.336,21,1.288,23,1.288,37,1.121,44,0.516,47,0.007,48,0.631,71,0.288,73,0.406,77,1.153,81,0.807,85,0.108,90,0.225,115,1.026,116,1.386,117,1.458,118,0.853,119,1.65,120,1.026,121,1.569,122,0.919,123,0.989,124,0.954,125,1.026,126,0.936,127,1.026,128,0.954,129,0.989,130,1.026,131,0.954,132,1.026,133,0.954,134,1.026,135,0.936,136,0.989,137,1.026,138,0.954,139,1.026,140,0.989,141,0.936,142,1.305,143,0.99,144,1.386,145,0.936,146,1.386,147,0.919,148,1.925,149,0.936,150,0.838,151,1.026,152,0.936,153,1.432,154,0.936,155,0.936,156,0.954,157,1.026,158,0.936,159,1.026,160,0.971,161,0.886,162,1.458,163,0.954,164,1.026,165,0.954,166,1.288,167,1.026,168,0.954,169,1.026,170,0.954,171,0.954,172,1.026,173,0.954,174,1.026,175,0.954,176,1.026,177,1.533,178,1.812,179,0.954,180,0.99,181,1.026,182,0.936,183,1.026,184,0.936,185,0.954,186,1.026,187,0.954,188,1.569,189,0.886,190,1.026,191,0.954,192,1.386,193,1.026,194,0.954,195,1.026,196,0.954,197,1.026,198,0.936,199,0.971,200,0.936,201,1.026,202,0.936,203,1.007,204,1.241,205,0.936,206,0.954,207,0.954,208,1.026,209,0.936,210,1.692,211,0.919,212,1.026,213,0.936,214,0.971,215,0.936,216,0.936,217,1.026,218,0.954,219,1.026,220,1.386,221,0.954,222,1.026,223,0.954,224,1.026,225,1.026,226,0.954,227,1.026,228,0.919,229,1.069,230,0.936,231,0.954,232,1.026,233,0.954,234,1.026,235,1.241,236,1.386,237,1.386,238,0.936,239,0.989,240,1.33,241,0.936,242,0.936,243,1.007,244,0.971,245,1.026,246,0.936,247,1.026,248,0.919,249,0.989,250,1.026,251,0.005,252,0.005,421,6.063,2112,5.84,2113,4.324,2114,7.44,2115,6.57,2116,4.865]],["title/interfaces/LetContext.html",[86,0.791,2117,3.561]],["body/interfaces/LetContext.html",[3,0.167,4,0.144,9,0.1,16,1.25,25,0.387,26,0.917,47,0.007,49,0.323,61,1.075,71,0.414,73,0.584,85,0.156,86,1.182,90,0.323,91,1.422,118,1.451,166,1.621,248,1.322,249,1.914,251,0.006,252,0.006,253,2.316,281,3.173,339,6.927,1106,3.347,2117,6.703,2118,5.706,2119,7.352,2120,7.352,2121,6.218,2122,6.218,2123,6.218,2124,6.218,2125,6.218,2126,6.218,2127,6.218]],["title/directives/LetDirective.html",[118,0.821,248,0.884]],["body/directives/LetDirective.html",[3,0.155,4,0.134,9,0.093,15,1.158,16,1.412,25,0.359,26,0.876,37,0.977,44,0.941,46,1.058,47,0.007,48,0.626,49,0.41,50,0.895,52,0.75,53,1.247,60,1.158,61,1.31,71,0.383,73,0.541,85,0.144,86,1.095,90,0.299,91,1.733,118,1.386,166,1.548,241,1.247,248,1.492,249,1.936,251,0.006,252,0.006,281,2.94,339,6.923,765,3.101,1069,4.125,1106,3.78,2117,6.486,2118,5.286,2119,7.886,2120,7.886,2121,7.576,2122,7.022,2123,7.576,2124,5.76,2125,5.76,2126,5.76,2127,5.76,2128,7.9,2129,6.48,2130,7.9,2131,6.48]],["title/components/ListGroupComponent.html",[0,0.159,179,0.917]],["body/components/ListGroupComponent.html",[0,0.244,1,0.879,2,1.233,3,0.109,4,0.094,5,0.963,6,0.981,7,0.963,8,0.963,9,0.065,13,1.749,14,2.646,15,0.816,16,1.773,17,1.77,18,0.879,19,1.279,21,1.233,23,1.233,25,0.253,32,0.809,36,2.851,37,1.085,44,0.763,47,0.007,48,0.615,49,0.211,52,0.529,53,0.879,71,0.27,73,0.381,77,1.104,81,0.757,85,0.102,90,0.211,110,1.37,113,1.318,114,1.397,115,0.963,116,1.327,117,1.411,118,0.801,119,1.742,120,0.963,121,1.518,122,0.863,123,0.928,124,0.895,125,0.963,126,0.879,127,0.963,128,0.895,129,0.928,130,0.963,131,0.895,132,0.963,133,0.895,134,0.963,135,0.879,136,0.928,137,0.963,138,0.895,139,0.963,140,0.928,141,0.879,142,1.263,143,0.949,144,1.327,145,0.879,146,1.327,147,0.863,148,1.902,149,0.879,150,0.786,151,0.963,152,0.879,153,1.386,154,0.879,155,0.879,156,0.895,157,0.963,158,0.879,159,0.963,160,0.912,161,0.831,162,1.411,163,0.895,164,0.963,165,0.895,166,1.521,167,0.963,168,0.895,169,0.963,170,0.895,171,0.895,172,0.963,173,0.895,174,0.963,175,0.895,176,0.963,177,0.879,178,0.928,179,1.521,180,1.343,181,0.963,182,0.879,183,0.963,184,0.879,185,0.895,186,0.963,187,0.895,188,1.518,189,0.831,190,0.963,191,0.895,192,1.327,193,0.963,194,0.895,195,0.963,196,0.895,197,0.963,198,0.879,199,0.912,200,0.879,201,0.963,202,0.879,203,0.946,204,1.189,205,0.879,206,0.895,207,0.895,208,0.963,209,0.879,210,1.655,211,0.863,212,0.963,213,0.879,214,0.912,215,0.879,216,0.879,217,0.963,218,0.895,219,0.963,220,1.327,221,0.895,222,0.963,223,0.895,224,0.963,225,0.963,226,0.895,227,0.963,228,0.863,229,1.024,230,0.879,231,0.895,232,0.963,233,0.895,234,0.963,235,1.189,236,1.327,237,1.327,238,0.879,239,0.928,240,0.816,241,0.879,242,0.879,243,0.946,244,0.912,245,0.963,246,0.879,247,0.963,248,0.863,249,0.928,250,0.963,251,0.005,252,0.005,305,1.024,395,2.04,396,2.783,593,1.678,682,1.115,690,1.397,691,4.695,721,1.753,727,1.97,745,1.643,752,2.634,755,2.734,765,2.47,910,3.391,1048,3.11,1978,3.767,2132,6.897,2133,6.329,2134,4.059,2135,7.2,2136,6.293,2137,6.293,2138,4.567,2139,4.567,2140,4.059,2141,4.059]],["title/guards/LoggedInUsersGuard.html",[429,3.561,2142,3.561]],["body/guards/LoggedInUsersGuard.html",[3,0.163,4,0.141,9,0.098,13,1.892,25,0.377,32,1.046,37,1.026,44,0.863,46,0.912,47,0.007,48,0.539,49,0.314,50,0.771,52,0.788,71,0.515,73,0.568,85,0.152,90,0.314,91,1.384,106,1.538,251,0.006,252,0.006,275,2.042,284,2.557,290,2.124,319,2.866,370,3.449,371,3.258,372,2.254,386,3.94,428,2.042,429,6.194,440,8.319,483,5.098,928,5.554,2143,6.052,2144,7.739,2145,6.052,2146,6.052,2147,6.808,2148,6.808,2149,5.182,2150,6.808]],["title/components/LoginPage.html",[0,0.159,182,0.9]],["body/components/LoginPage.html",[0,0.197,1,0.603,2,0.937,3,0.075,4,0.065,5,0.66,6,0.672,7,0.66,8,0.66,9,0.045,13,1.329,14,2.132,15,0.56,16,1.744,17,1.742,18,0.603,19,0.972,21,0.937,23,0.937,25,0.173,26,0.53,27,1.223,29,2.842,32,0.615,36,2.386,37,0.721,44,0.813,46,0.64,47,0.007,48,0.584,49,0.3,50,0.835,52,0.672,53,1.116,60,0.56,61,0.481,62,1.699,63,2.503,64,1.836,65,3.081,66,3.093,71,0.454,73,0.261,74,1.016,77,0.839,81,0.519,83,0.838,85,0.07,90,0.145,91,1.499,103,1.541,104,1.541,106,0.903,110,0.939,111,1.08,113,2.599,114,2.42,115,0.66,116,1.008,117,1.137,118,0.549,119,1.679,120,0.66,121,1.223,122,0.592,123,0.637,124,0.614,125,0.66,126,0.603,127,0.66,128,0.614,129,0.637,130,0.66,131,0.614,132,0.66,133,0.614,134,0.66,135,0.603,136,0.637,137,0.66,138,0.614,139,0.66,140,0.637,141,0.603,142,1.018,143,0.721,144,1.008,145,0.603,146,1.008,147,0.592,148,1.744,149,0.603,150,0.539,151,0.66,152,0.603,153,1.116,154,0.603,155,0.603,156,0.614,157,0.66,158,0.603,159,1.223,160,0.625,161,0.57,162,1.137,163,0.614,164,0.66,165,0.614,166,1.137,167,0.66,168,0.614,169,0.66,170,0.614,171,0.614,172,0.66,173,0.614,174,0.66,175,0.614,176,0.66,177,0.603,178,0.637,179,0.614,180,0.721,181,0.66,182,1.25,183,0.66,184,0.603,185,1.445,186,0.66,187,0.614,188,1.223,189,0.57,190,0.66,191,0.614,192,1.008,193,0.66,194,0.614,195,0.66,196,0.614,197,0.66,198,0.603,199,0.625,200,0.603,201,0.66,202,0.603,203,0.648,204,1.096,205,0.603,206,0.614,207,0.614,208,0.66,209,0.603,210,1.422,211,0.592,212,0.66,213,0.603,214,0.625,215,0.603,216,0.603,217,0.66,218,0.614,219,0.66,220,1.008,221,0.614,222,0.66,223,0.614,224,0.66,225,0.66,226,0.614,227,0.66,228,0.592,229,0.778,230,0.603,231,0.614,232,0.66,233,0.614,234,0.66,235,0.903,236,1.008,237,1.008,238,0.603,239,0.637,240,0.56,241,0.603,242,0.603,243,1.201,244,0.625,245,0.66,246,0.603,247,0.66,248,0.592,249,0.637,250,0.66,251,0.003,252,0.003,290,1.492,305,0.778,307,1.42,386,3.23,394,2.544,395,2.383,397,1.635,409,2.497,428,0.939,478,5.545,480,3.64,481,4.006,483,3.974,512,1.687,515,5.157,579,3.232,682,1.585,683,2.328,684,3.112,685,2.115,686,2.013,688,2.066,690,1.775,703,1.458,706,1.458,709,1.95,710,1.541,714,2.336,715,2.132,716,2.386,717,2.087,718,1.846,719,1.635,720,1.586,721,2.227,724,2.115,725,2.063,726,2.758,749,1.586,750,2.169,801,1.318,803,4.187,809,1.498,825,1.541,838,2.978,865,1.874,899,2.133,910,2.577,918,2.246,923,2.383,924,2.554,929,4.943,930,2.035,931,1.806,932,1.95,933,1.635,934,3.974,935,2.133,936,3.108,937,2.133,938,1.806,939,5.634,940,2.863,941,2.035,942,1.806,943,1.95,944,2.035,945,3.108,946,2.246,947,4.423,948,2.133,949,4.765,950,4.423,951,2.133,952,2.133,953,2.133,954,2.133,955,2.133,956,2.133,957,2.133,958,2.133,1000,1.126,1044,3.736,1132,3.901,1173,1.95,1282,3.257,1283,3.64,1284,2.353,1408,2.863,1517,2.554,1518,3.431,1521,2.554,1875,2.758,2151,2.783,2152,5.802,2153,4.782,2154,5.802,2155,4.251,2156,5.225,2157,3.131,2158,4.251,2159,3.131,2160,3.131,2161,3.131,2162,3.131,2163,3.131,2164,3.131,2165,2.554,2166,3.131,2167,4.782,2168,4.782,2169,3.131,2170,3.131,2171,2.783,2172,3.131,2173,3.131,2174,3.131,2175,1.95,2176,2.783,2177,3.131,2178,4.251,2179,2.783,2180,2.783,2181,3.131,2182,2.783,2183,3.131,2184,4.251,2185,4.251,2186,4.251,2187,4.251]],["title/modules/MainModule.html",[398,1.837,407,2.801]],["body/modules/MainModule.html",[2,1.464,3,0.1,4,0.086,9,0.06,47,0.007,71,0.583,73,0.349,74,1.358,76,2.606,85,0.153,90,0.317,93,1.12,117,1.16,122,1.118,131,1.16,133,1.16,138,1.16,156,1.16,163,1.16,168,1.16,170,1.16,171,1.16,184,1.139,185,1.346,189,1.078,191,1.16,194,1.16,196,1.16,207,1.16,218,1.16,221,1.16,223,1.16,231,1.16,233,1.16,242,1.139,244,0.835,246,1.139,248,1.118,251,0.004,252,0.004,255,0.949,272,2.185,290,1.305,320,2.999,334,4.032,364,3.413,365,3.184,398,3.094,400,3.24,401,4.025,407,4.898,408,3.543,409,2.185,410,1.898,412,4.471,413,3.772,415,3.381,424,3.848,426,3.543,428,1.255,433,3.184,434,3.719,454,2.606,461,3.687,462,2.606,463,4.032,536,3.719,546,2.685,585,3.719,829,1.761,857,3.719,979,2.331,987,3.297,995,3.297,1073,2.719,1074,3.002,1328,3.719,1454,2.719,1503,4.247,1555,3.413,1704,4.505,1737,4.247,1830,3.413,2043,3.413,2188,3.413,2189,5.919,2190,5.919,2191,4.829,2192,4.184,2193,5.919,2194,5.262,2195,5.262,2196,4.184,2197,5.262,2198,4.184,2199,5.262,2200,4.184,2201,5.262,2202,5.262,2203,8.183,2204,5.262,2205,5.262,2206,4.184,2207,5.262,2208,4.184,2209,6.106,2210,4.184,2211,5.262,2212,4.184,2213,6.106,2214,4.184,2215,5.262,2216,5.262,2217,4.184,2218,5.262,2219,4.184,2220,5.262,2221,4.184,2222,5.262,2223,4.184,2224,5.262,2225,4.184,2226,5.262,2227,4.184,2228,5.262,2229,4.184,2230,5.262,2231,4.184,2232,5.262,2233,4.184,2234,5.262,2235,3.719,2236,3.719,2237,4.184,2238,4.184,2239,4.184,2240,4.184,2241,4.184,2242,3.719,2243,4.184,2244,4.184,2245,4.184,2246,5.919,2247,3.413,2248,4.184,2249,3.413,2250,4.184,2251,4.184,2252,4.184,2253,4.184,2254,3.413,2255,5.919,2256,4.184,2257,3.413,2258,4.184,2259,4.184,2260,4.184,2261,4.184,2262,3.413,2263,4.184,2264,4.184,2265,4.184,2266,4.184,2267,4.184,2268,4.184,2269,4.184,2270,4.247,2271,4.184,2272,4.184,2273,4.184,2274,3.719,2275,3.413,2276,4.829,2277,3.719,2278,3.413,2279,3.719,2280,3.719,2281,3.719,2282,4.184,2283,4.184,2284,5.919,2285,4.184,2286,5.919,2287,4.184,2288,4.184,2289,4.184,2290,4.184]],["title/components/MainViewComponent.html",[0,0.159,184,0.9]],["body/components/MainViewComponent.html",[0,0.244,1,0.88,2,1.235,3,0.109,4,0.094,5,0.965,6,0.983,7,0.965,8,0.965,9,0.066,13,1.751,14,2.648,15,0.818,16,1.773,17,1.771,18,0.88,19,1.281,21,1.235,23,1.235,25,0.253,32,0.81,36,2.853,37,1.086,44,0.668,47,0.007,48,0.615,52,0.53,53,0.88,71,0.271,73,0.382,77,1.105,81,0.759,85,0.102,90,0.211,113,1.819,114,2.491,115,0.965,116,1.329,117,1.413,118,0.803,119,1.686,120,0.965,121,1.52,122,0.864,123,0.93,124,0.897,125,0.965,126,0.88,127,0.965,128,0.897,129,0.93,130,0.965,131,0.897,132,0.965,133,0.897,134,0.965,135,0.88,136,0.93,137,0.965,138,0.897,139,0.965,140,0.93,141,0.88,142,1.264,143,0.95,144,1.329,145,0.88,146,1.329,147,0.864,148,1.903,149,0.88,150,0.788,151,0.965,152,0.88,153,1.387,154,0.88,155,0.88,156,0.897,157,0.965,158,0.88,159,0.965,160,0.913,161,0.833,162,1.413,163,0.897,164,0.965,165,0.897,166,1.235,167,0.965,168,0.897,169,0.965,170,0.897,171,0.897,172,0.965,173,0.897,174,0.965,175,0.897,176,0.965,177,0.88,178,0.93,179,0.897,180,0.95,181,0.965,182,0.88,183,0.965,184,1.494,185,1.748,186,0.965,187,0.897,188,1.52,189,0.833,190,0.965,191,0.897,192,1.329,193,0.965,194,0.897,195,0.965,196,0.897,197,0.965,198,0.88,199,0.913,200,0.88,201,0.965,202,0.88,203,0.947,204,1.19,205,0.88,206,0.897,207,0.897,208,0.965,209,0.88,210,1.656,211,0.864,212,0.965,213,0.88,214,0.913,215,0.88,216,0.88,217,0.965,218,0.897,219,0.965,220,1.329,221,0.897,222,0.965,223,0.897,224,0.965,225,0.965,226,0.897,227,0.965,228,0.864,229,1.025,230,0.88,231,0.897,232,0.965,233,0.897,234,0.965,235,1.19,236,1.638,237,1.329,238,0.88,239,0.93,240,0.818,241,0.88,242,0.88,243,0.947,244,0.913,245,0.965,246,0.88,247,0.965,248,0.864,249,0.93,250,0.965,251,0.005,252,0.005,279,1.578,394,1.578,395,1.785,396,2.023,397,2.389,433,5.485,682,1.538,683,2.285,684,2.767,685,2.023,686,1.926,687,3.283,693,4.685,702,4.292,739,1.796,808,2.849,2029,3.482,2291,6.406,2292,4.067,2293,7.207,2294,6.301,2295,4.575,2296,4.575,2297,5.601,2298,4.067]],["title/components/MemberListComponent.html",[0,0.159,187,0.917]],["body/components/MemberListComponent.html",[0,0.226,1,0.764,2,1.118,3,0.095,4,0.082,5,0.837,6,0.853,7,0.837,8,0.837,9,0.057,13,1.585,14,2.452,15,0.71,16,1.763,17,1.76,18,0.764,19,1.803,21,1.118,23,1.118,25,0.22,26,0.632,27,1.334,32,0.733,36,2.68,37,0.599,44,0.899,46,0.764,47,0.007,48,0.672,49,0.404,50,0.646,52,0.66,53,1.098,60,0.71,61,0.61,64,2.8,68,1.927,71,0.457,73,0.332,77,1.001,81,0.659,83,1.063,85,0.088,87,1.756,88,1.46,89,3.103,90,0.183,91,0.807,93,1.063,115,0.837,116,1.203,117,1.308,118,0.697,119,1.51,120,0.837,121,1.407,122,0.75,123,0.807,124,0.778,125,0.837,126,0.764,127,0.837,128,0.778,129,0.807,130,0.837,131,0.778,132,0.837,133,0.778,134,0.837,135,0.764,136,0.807,137,0.837,138,0.778,139,0.837,140,0.807,141,0.764,142,1.355,143,0.86,144,1.203,145,0.764,146,1.203,147,0.75,148,1.847,149,0.764,150,1.149,151,0.837,152,0.764,153,1.594,154,0.764,155,0.764,156,0.778,157,0.837,158,0.764,159,0.837,160,0.793,161,0.723,162,1.308,163,0.778,164,0.837,165,0.778,166,1.576,167,0.837,168,0.778,169,0.837,170,0.778,171,0.778,172,0.837,173,0.778,174,0.837,175,0.778,176,0.837,177,0.764,178,0.807,179,0.778,180,1.1,181,0.837,182,0.764,183,0.837,184,0.764,185,0.778,186,0.837,187,1.43,188,1.407,189,0.723,190,0.837,191,0.778,192,1.203,193,0.837,194,0.778,195,0.837,196,0.778,197,0.837,198,0.764,199,0.793,200,0.764,201,0.837,202,0.764,203,0.822,204,1.078,205,0.764,206,0.778,207,0.778,208,0.837,209,0.764,210,1.571,211,0.75,212,0.837,213,0.764,214,0.793,215,0.764,216,0.764,217,0.837,218,0.778,219,0.837,220,1.203,221,0.778,222,0.837,223,0.778,224,0.837,225,0.837,226,0.778,227,0.837,228,0.75,229,0.928,230,0.764,231,0.778,232,0.837,233,0.778,234,0.837,235,1.078,236,1.203,237,1.203,238,0.764,239,0.807,240,0.71,241,0.764,242,0.764,243,0.822,244,0.793,245,0.837,246,0.764,247,0.837,248,0.75,249,0.807,250,0.837,251,0.004,252,0.004,305,0.928,372,1.315,428,1.191,511,3.414,512,3.931,543,3.965,548,4.639,586,3.718,587,2.581,588,2.473,590,2.581,606,2.212,607,2.291,673,2.377,744,1.215,757,4.341,765,2.239,1147,6.56,1182,3.239,1227,7.042,2299,7.673,2300,3.53,2301,6.674,2302,5.703,2303,5.703,2304,6.674,2305,3.971,2306,5.703,2307,3.971,2308,3.971,2309,5.703,2310,3.971,2311,3.971,2312,3.971,2313,3.971,2314,3.971,2315,3.971,2316,3.971,2317,5.703,2318,5.703,2319,5.703,2320,5.703]],["title/injectables/MemberService.html",[319,1.648,548,2.699]],["body/injectables/MemberService.html",[3,0.11,4,0.095,9,0.066,18,1.569,19,1.788,25,0.254,27,1.553,32,0.812,37,0.692,44,0.893,46,1.128,47,0.007,48,0.668,49,0.389,50,0.954,52,1.045,62,0.985,68,2.762,71,0.482,73,0.383,83,1.228,85,0.102,88,1.808,89,3.531,90,0.212,106,1.592,109,5.07,143,1.438,180,1.172,199,1.723,251,0.005,252,0.005,255,1.849,305,1.175,311,3.452,319,2.223,320,4.268,321,2.325,323,2.049,330,5.142,346,6.872,347,6.872,370,2.325,371,2.196,372,1.519,491,2.747,509,3.292,510,3.125,514,3.552,548,3.642,586,3.517,587,2.982,588,2.857,744,2.812,768,3.634,984,4.54,1154,3.932,1315,5.578,1973,6.911,2321,4.079,2322,8.425,2323,4.588,2324,4.588,2325,4.588,2326,6.313,2327,6.416,2328,6.313,2329,4.588,2330,5.15,2331,4.588,2332,5.15,2333,6.313,2334,4.588,2335,6.313,2336,4.588,2337,6.313,2338,6.313,2339,4.588,2340,4.588,2341,4.588,2342,3.743,2343,4.588,2344,4.588,2345,4.588,2346,4.079,2347,4.079,2348,4.079,2349,3.743]],["title/modules/MessagesModule.html",[398,1.837,2350,3.561]],["body/modules/MessagesModule.html",[3,0.171,4,0.147,9,0.102,47,0.007,71,0.526,73,0.596,85,0.159,90,0.33,251,0.006,252,0.006,400,2.935,401,4.511,408,5.011,409,3.728,410,3.239,412,4.274,413,4.006,415,4.12,461,5.213,462,4.446,2350,7.199,2351,6.346,2352,6.346,2353,6.787,2354,7.139,2355,7.139]],["title/modules/MessagesRoutingModule.html",[398,1.837,2353,3.357]],["body/modules/MessagesRoutingModule.html",[0,0.237,3,0.167,4,0.145,9,0.1,28,2.88,47,0.007,71,0.521,73,0.585,85,0.156,90,0.323,93,1.876,180,1.056,189,1.507,251,0.006,252,0.006,398,2.75,400,2.88,413,3.352,415,4.074,426,4.955,427,5.007,428,2.102,435,4.363,444,5.939,454,4.363,482,4.771,934,3.775,1250,5.331,1255,5.331,1256,5.331,2353,5.939,2356,7.005,2357,7.005]],["title/components/MockPage.html",[0,0.159,189,0.852]],["body/components/MockPage.html",[0,0.239,1,0.847,2,1.202,3,0.105,4,0.091,5,0.928,6,0.945,7,0.928,8,0.928,9,0.063,13,1.705,14,2.594,15,0.787,16,1.77,17,1.768,18,0.847,19,1.247,21,1.202,23,1.202,25,0.244,26,0.68,27,1.171,32,0.788,36,2.806,37,0.663,44,0.749,46,0.589,47,0.007,48,0.636,49,0.283,50,0.499,52,0.509,53,0.847,60,0.787,61,0.676,71,0.363,73,0.367,77,1.076,81,0.73,85,0.098,90,0.203,110,1.32,111,1.518,113,1.27,114,1.346,115,0.928,116,1.293,117,1.384,118,0.772,119,1.663,120,0.928,121,1.489,122,0.831,123,0.895,124,0.863,125,0.928,126,0.847,127,0.928,128,0.863,129,0.895,130,0.928,131,0.863,132,0.928,133,0.863,134,0.928,135,0.847,136,0.895,137,0.928,138,0.863,139,0.928,140,0.895,141,0.847,142,1.239,143,0.924,144,1.293,145,0.847,146,1.293,147,0.831,148,1.888,149,0.847,150,0.758,151,0.928,152,0.847,153,1.359,154,0.847,155,0.847,156,0.863,157,0.928,158,0.847,159,0.928,160,0.878,161,0.801,162,1.384,163,0.863,164,0.928,165,0.863,166,1.202,167,0.928,168,0.863,169,0.928,170,0.863,171,0.863,172,0.928,173,0.863,174,0.928,175,0.863,176,0.928,177,0.847,178,0.895,179,0.863,180,0.924,181,0.928,182,0.847,183,0.928,184,0.847,185,0.863,186,0.928,187,0.863,188,1.489,189,1.39,190,0.928,191,0.863,192,1.293,193,0.928,194,0.863,195,0.928,196,0.863,197,0.928,198,0.847,199,0.878,200,0.847,201,0.928,202,0.847,203,0.911,204,1.159,205,0.847,206,0.863,207,0.863,208,0.928,209,0.847,210,1.633,211,0.831,212,0.928,213,0.847,214,0.878,215,0.847,216,0.847,217,0.928,218,0.863,219,0.928,220,1.293,221,0.863,222,0.928,223,0.863,224,0.928,225,0.928,226,0.863,227,0.928,228,0.831,229,0.998,230,0.847,231,0.863,232,0.928,233,0.863,234,0.928,235,1.159,236,1.293,237,1.293,238,0.847,239,0.895,240,0.787,241,0.847,242,0.847,243,0.911,244,0.878,245,0.928,246,0.847,247,0.928,248,0.831,249,0.895,250,0.928,251,0.004,252,0.004,279,1.518,305,0.998,308,2.521,372,1.457,394,1.518,395,1.737,428,1.32,542,2.86,543,3.98,593,1.617,682,1.497,694,1.898,695,1.853,699,1.853,714,2.206,716,2.254,718,1.4,727,3.045,728,2.712,745,2.206,801,2.582,802,2.298,809,3.655,822,2.298,869,3.349,934,4.328,942,2.538,1048,2.997,2140,3.912,2141,3.912,2358,3.912,2359,5.452,2360,7.06,2361,6.133,2362,4.401,2363,4.401,2364,4.401,2365,4.401,2366,4.401,2367,4.401,2368,5.452,2369,4.401,2370,2.86,2371,3.157,2372,4.401]],["title/interfaces/ModifyUser.html",[86,0.791,2373,3.041]],["body/interfaces/ModifyUser.html",[3,0.16,4,0.139,9,0.096,25,0.372,26,0.895,47,0.007,48,0.739,49,0.415,64,2.577,85,0.2,86,1.517,88,1.635,251,0.006,252,0.006,253,2.223,305,1.609,481,4.796,511,5.584,512,4.35,647,3.25,744,2.469,1989,6.064,2373,5.246,2374,4.817,2375,4.573,2376,4.573,2377,4.364]],["title/components/NavElementComponent.html",[0,0.159,191,0.917]],["body/components/NavElementComponent.html",[0,0.211,1,0.679,2,1.026,3,0.084,4,0.073,5,0.745,6,0.758,7,0.745,8,0.745,9,0.051,13,1.455,15,0.631,16,1.755,17,1.752,18,0.679,19,1.064,21,1.026,23,1.026,25,0.196,26,0.58,27,1.512,32,0.673,37,0.94,44,0.917,47,0.007,48,0.547,49,0.34,50,0.593,52,0.799,53,1.418,57,1.69,60,1.115,61,0.959,62,1.124,71,0.408,73,0.295,77,0.918,81,0.586,83,0.945,85,0.079,90,0.163,110,2.07,113,1.801,114,2.443,115,0.745,116,1.104,117,1.513,118,0.619,119,1.654,120,0.745,121,1.315,122,0.667,123,0.718,124,0.692,125,0.745,126,0.679,127,0.745,128,0.692,129,0.718,130,0.745,131,0.692,132,0.745,133,0.692,134,0.745,135,0.679,136,0.718,137,0.745,138,0.692,139,0.745,140,0.718,141,0.679,142,1.094,143,0.789,144,1.104,145,0.679,146,1.104,147,0.667,148,1.798,149,0.679,150,0.608,151,0.745,152,0.679,153,1.2,154,0.679,155,0.679,156,0.692,157,0.745,158,0.679,159,0.745,160,0.705,161,0.643,162,1.223,163,0.692,164,0.745,165,0.692,166,1.444,167,0.745,168,0.692,169,0.745,170,0.692,171,0.692,172,0.745,173,0.692,174,0.745,175,0.692,176,0.745,177,0.679,178,0.718,179,0.692,180,0.94,181,0.745,182,0.679,183,0.745,184,0.679,185,0.692,186,0.745,187,0.692,188,1.315,189,0.643,190,0.745,191,1.352,192,1.767,193,0.745,194,0.692,195,0.745,196,0.692,197,0.745,198,0.679,199,0.705,200,0.679,201,0.745,202,0.679,203,0.731,204,0.989,205,0.679,206,0.692,207,0.692,208,0.745,209,0.679,210,1.498,211,0.667,212,0.745,213,0.679,214,0.705,215,0.679,216,0.679,217,0.745,218,0.692,219,0.745,220,1.104,221,0.692,222,0.745,223,0.692,224,0.745,225,0.745,226,0.692,227,0.745,228,0.667,229,0.852,230,0.679,231,0.692,232,0.745,233,0.692,234,0.745,235,0.989,236,1.104,237,1.104,238,0.679,239,0.718,240,0.631,241,0.679,242,0.679,243,0.731,244,0.705,245,0.745,246,0.679,247,0.745,248,0.667,249,0.718,250,0.745,251,0.004,252,0.004,257,1.418,275,2.07,279,1.218,284,2.342,290,1.101,305,0.852,306,2.533,307,1.602,308,1.451,336,2.821,394,1.218,395,2.263,396,1.561,410,1.602,592,1.523,593,1.297,594,1.486,595,2.258,682,2.081,683,2.466,684,2.828,685,1.561,686,1.486,687,2.533,690,2.509,693,2.295,698,1.738,699,1.486,702,3.565,703,1.644,706,1.644,714,2.776,715,2.836,716,3.133,717,2.65,718,2.344,719,1.844,720,1.789,724,2.315,725,2.258,739,1.386,745,1.27,749,1.789,750,1.602,752,3.598,765,2.055,800,1.967,808,2.199,814,1.967,815,1.967,848,3.598,852,2.199,853,2.295,878,2.405,880,4.589,933,1.844,938,2.037,1292,2.114,1324,3.885,1634,4.748,1636,5.251,1643,5.874,1923,3.984,1978,2.114,1979,2.295,2249,7.142,2298,3.139,2378,7.142,2379,3.139,2380,6.238,2381,5.235,2382,5.545,2383,5.545,2384,6.899,2385,6.899,2386,6.899,2387,5.545,2388,6.238,2389,5.235,2390,3.531,2391,3.531,2392,3.531,2393,3.531,2394,3.531,2395,3.531,2396,3.531,2397,4.653,2398,3.531,2399,3.531,2400,5.545,2401,3.531,2402,3.531,2403,3.139,2404,4.653,2405,3.139,2406,2.88,2407,3.139]],["title/components/NavElementWorkspaceComponent.html",[0,0.159,194,0.917]],["body/components/NavElementWorkspaceComponent.html",[0,0.172,1,0.489,2,0.796,3,0.061,4,0.053,5,0.536,6,0.546,7,0.536,8,0.536,9,0.036,13,1.13,15,0.454,16,1.724,17,1.72,18,0.489,19,0.826,21,0.796,23,0.796,25,0.141,26,0.45,27,1.428,32,0.522,37,0.613,44,0.939,46,0.95,47,0.007,48,0.631,49,0.374,50,0.861,52,0.966,53,1.624,57,1.217,60,1.036,61,0.891,62,0.873,71,0.461,73,0.212,77,1.51,81,0.422,83,0.681,85,0.057,90,0.117,91,1.179,110,1.902,113,1.83,114,2.435,115,0.536,116,0.857,117,1.883,118,0.446,119,1.704,120,0.536,121,1.07,122,0.48,123,0.517,124,0.498,125,0.536,126,0.489,127,0.536,128,0.498,129,0.517,130,0.536,131,0.498,132,0.536,133,0.498,134,0.536,135,0.489,136,0.517,137,0.536,138,0.498,139,0.536,140,0.517,141,0.489,142,1.186,143,1.402,144,0.857,145,0.489,146,0.857,147,0.48,148,1.644,149,0.489,150,1.092,151,0.536,152,0.489,153,1.463,154,0.489,155,0.489,156,0.498,157,0.536,158,0.489,159,0.536,160,0.508,161,0.463,162,0.995,163,0.498,164,0.536,165,0.498,166,1.243,167,0.536,168,0.498,169,0.536,170,0.498,171,0.498,172,0.536,173,0.498,174,0.536,175,0.498,176,0.536,177,0.489,178,0.517,179,0.498,180,0.613,181,0.536,182,0.489,183,0.536,184,0.489,185,0.498,186,0.536,187,0.498,188,1.07,189,0.463,190,0.536,191,0.498,192,1.603,193,0.536,194,1.136,195,0.536,196,0.498,197,0.536,198,0.489,199,1.013,200,0.489,201,0.536,202,0.489,203,0.526,204,0.768,205,0.489,206,0.498,207,0.498,208,0.536,209,0.489,210,1.289,211,0.48,212,0.536,213,0.489,214,0.508,215,0.489,216,0.489,217,0.536,218,0.498,219,0.536,220,0.857,221,0.498,222,0.536,223,0.498,224,0.536,225,0.536,226,0.498,227,0.536,228,0.48,229,0.661,230,0.489,231,0.498,232,0.536,233,0.498,234,0.536,235,0.768,236,0.857,237,0.857,238,0.489,239,0.517,240,0.454,241,0.489,242,0.489,243,0.526,244,0.508,245,0.536,246,0.489,247,0.536,248,0.48,249,0.517,250,0.536,251,0.003,252,0.003,257,1.021,275,1.219,279,0.877,284,1.906,290,2.109,305,0.661,306,1.824,307,1.843,336,2.19,386,2.987,394,2.448,395,2.416,396,2.803,397,1.328,410,1.843,428,0.763,546,3.219,547,3.492,592,1.097,593,0.934,594,1.07,595,2.189,682,2.009,683,2.343,684,2.83,690,2.518,698,1.251,699,1.07,702,2.768,703,1.893,706,1.893,714,2.734,715,2.793,716,3.024,717,2.432,718,2.151,719,2.122,720,2.059,724,1.797,725,1.753,727,2.501,728,2.564,739,1.993,743,1.583,744,1.243,745,0.914,749,2.059,750,1.843,752,2.928,756,2.344,765,1.595,800,1.416,814,1.416,815,1.416,848,2.928,852,1.583,853,1.653,878,1.732,880,2.531,938,2.344,1150,1.522,1151,3.235,1189,2.641,1286,3.315,1292,4.248,1324,3.161,1360,3.093,1408,3.795,1628,3.093,1634,3.863,1636,4.413,1643,5.145,1694,3.863,1784,3.612,1923,3.093,1978,2.432,1979,2.641,1983,3.315,2247,7.268,2274,2.26,2378,7.268,2382,4.512,2383,4.512,2387,4.512,2397,3.612,2403,2.26,2404,5.154,2405,3.612,2406,2.074,2407,2.26,2408,2.26,2409,5.076,2410,4.064,2411,5.076,2412,5.798,2413,5.798,2414,3.612,2415,5.154,2416,5.154,2417,4.064,2418,4.064,2419,4.064,2420,5.154,2421,4.064,2422,5.798,2423,5.798,2424,4.064,2425,2.542,2426,2.542,2427,2.542,2428,2.542,2429,3.612,2430,2.542,2431,2.542,2432,3.612,2433,2.542,2434,2.542,2435,2.542,2436,4.064,2437,2.542,2438,4.064,2439,2.542,2440,4.064,2441,2.542,2442,2.542,2443,4.064,2444,2.542,2445,2.542,2446,2.542,2447,2.542,2448,2.542,2449,2.542,2450,2.542,2451,2.26,2452,2.542,2453,2.26,2454,5.076,2455,2.542,2456,2.542,2457,6.339,2458,6.339,2459,6.339,2460,6.339,2461,3.612,2462,2.26,2463,2.26,2464,2.542,2465,2.542,2466,2.542,2467,2.542,2468,2.542,2469,2.542,2470,4.064,2471,4.064,2472,5.154,2473,5.154,2474,4.16,2475,4.064,2476,2.26,2477,2.542]],["title/components/OptionComponent.html",[0,0.159,196,0.917]],["body/components/OptionComponent.html",[0,0.244,1,0.882,2,1.237,3,0.109,4,0.095,5,0.967,6,0.984,7,0.967,8,0.967,9,0.066,15,0.819,16,1.773,17,1.771,18,0.882,19,1.283,21,1.237,23,1.237,25,0.254,26,0.699,27,0.76,37,0.691,44,0.864,46,0.614,47,0.007,48,0.646,49,0.333,50,0.519,60,0.819,61,1.194,71,0.373,73,0.383,77,1.107,81,0.76,85,0.102,90,0.212,106,0.866,115,0.967,116,1.33,117,1.414,118,0.804,119,1.609,120,0.967,121,1.521,122,0.866,123,0.932,124,0.898,125,0.967,126,0.882,127,0.967,128,0.898,129,0.932,130,0.967,131,0.898,132,0.967,133,0.898,134,0.967,135,0.882,136,0.932,137,0.967,138,0.898,139,0.967,140,0.932,141,0.882,142,1.266,143,0.951,144,1.33,145,0.882,146,1.33,147,0.866,148,1.904,149,0.882,150,0.789,151,0.967,152,0.882,153,1.388,154,0.882,155,0.882,156,0.898,157,0.967,158,0.882,159,0.967,160,0.915,161,0.835,162,1.414,163,0.898,164,0.967,165,0.898,166,1.597,167,0.967,168,0.898,169,0.967,170,0.898,171,0.898,172,0.967,173,0.898,174,0.967,175,0.898,176,0.967,177,0.882,178,0.932,179,0.898,180,0.951,181,0.967,182,0.882,183,0.967,184,0.882,185,0.898,186,0.967,187,0.898,188,1.521,189,0.835,190,0.967,191,0.898,192,1.33,193,0.967,194,0.898,195,0.967,196,1.523,197,0.967,198,0.882,199,0.915,200,0.882,201,0.967,202,0.882,203,0.949,204,1.192,205,0.882,206,0.898,207,0.898,208,0.967,209,0.882,210,1.657,211,0.866,212,0.967,213,0.882,214,0.915,215,0.882,216,0.882,217,0.967,218,0.898,219,0.967,220,1.33,221,0.898,222,0.967,223,0.898,224,0.967,225,0.967,226,0.898,227,0.967,228,0.866,229,1.027,230,0.882,231,0.898,232,0.967,233,0.898,234,0.967,235,1.192,236,1.33,237,1.33,238,0.882,239,0.932,240,0.819,241,0.882,242,0.882,243,0.949,244,0.915,245,0.967,246,0.882,247,0.967,248,0.866,249,0.932,250,0.967,251,0.005,252,0.005,305,1.174,372,1.518,592,1.977,593,1.684,594,1.93,595,1.977,698,3.55,765,2.477,835,5.885,848,4.483,1069,3.295,1578,4.297,1882,7.487,2478,4.075,2479,7.214,2480,6.309,2481,6.413,2482,4.584,2483,4.584,2484,6.309,2485,4.584,2486,4.584,2487,4.584,2488,4.584,2489,4.584,2490,4.584]],["title/classes/PersistentMap.html",[90,0.216,580,3.357]],["body/classes/PersistentMap.html",[3,0.14,4,0.121,9,0.084,25,0.325,26,0.824,32,0.956,37,1.12,44,0.957,46,1.092,47,0.007,48,0.646,49,0.396,50,0.924,52,0.944,53,1.569,60,1.05,61,1.358,85,0.165,86,0.993,90,0.271,91,1.836,93,1.99,106,1.54,150,1.28,251,0.005,252,0.005,275,2.23,281,3.372,305,1.21,343,3.818,580,5.333,581,7.366,768,3.129,960,3.557,1081,3.272,1106,3.902,1353,5.063,1455,6.991,1489,7.481,1494,6.991,1578,4.001,1617,5.3,1907,5.657,2491,7.481,2492,4.792,2493,7.248,2494,7.618,2495,7.618,2496,5.874,2497,6.522,2498,7.433,2499,5.874,2500,6.607,2501,5.874,2502,5.874,2503,6.607,2504,5.874,2505,5.222,2506,5.222,2507,7.618,2508,5.222,2509,6.607,2510,5.222,2511,5.222,2512,5.222,2513,5.222,2514,5.222,2515,5.222,2516,5.222,2517,4.001,2518,5.222]],["title/interfaces/PersistentMapOptions.html",[86,0.791,2497,3.561]],["body/interfaces/PersistentMapOptions.html",[3,0.156,4,0.135,9,0.094,25,0.363,26,0.881,37,0.987,47,0.007,49,0.302,53,1.26,61,1.222,85,0.177,86,1.107,90,0.302,91,1.617,93,2.129,106,1.618,251,0.006,252,0.006,253,2.169,275,1.965,305,1.393,580,4.699,581,7.782,768,2.757,960,3.135,1106,3.135,1455,6.487,1489,6.985,1494,6.487,1578,4.461,1617,5.566,1907,6.052,2491,5.343,2492,5.343,2493,5.822,2494,5.822,2495,5.822,2497,6.517,2500,5.822,2503,5.822,2505,5.822,2506,5.822,2507,7.915,2508,5.822,2509,7.068,2510,5.822,2511,5.822,2512,5.822,2513,5.822,2514,5.822,2515,5.822,2516,5.822,2517,4.461,2518,5.822]],["title/interfaces/Project.html",[86,0.791,143,0.705]],["body/interfaces/Project.html",[3,0.16,4,0.138,9,0.096,25,0.371,26,0.893,47,0.007,48,0.753,49,0.414,50,0.913,71,0.396,85,0.149,86,1.131,88,1.633,109,4.342,143,1.303,161,1.467,180,1.215,199,1.609,251,0.006,252,0.006,253,2.217,305,1.517,586,4.997,588,4.17,660,5.781,744,2.852,829,2.818,2519,5.951,2520,8.971,2521,8.971,2522,8.058,2523,8.971]],["title/interfaces/ProjectMember.html",[86,0.791,586,2.606]],["body/interfaces/ProjectMember.html",[3,0.171,4,0.148,9,0.103,25,0.397,26,0.929,47,0.007,48,0.567,49,0.423,64,2.749,85,0.159,86,1.21,88,1.732,251,0.006,252,0.006,253,2.371,305,1.521,499,5.02,511,4.286,512,3.859,586,4.671,647,3.444,744,2.19,1989,4.654,2376,6.246,2524,6.365,2525,6.365]],["title/injectables/ProjectService.html",[319,1.648,547,2.303]],["body/injectables/ProjectService.html",[3,0.112,4,0.097,9,0.067,18,1.23,25,0.259,27,1.576,32,0.822,37,0.704,44,0.92,46,1.134,47,0.007,48,0.687,49,0.408,50,0.96,52,1.059,62,1.373,68,2.616,71,0.501,73,0.39,77,1.571,78,2.603,83,1.251,85,0.104,87,2.066,88,1.754,89,3.403,90,0.216,106,1.639,142,1.121,143,1.471,150,1.349,180,1.277,199,1.455,251,0.005,252,0.005,255,1.861,272,3.338,305,0.76,311,3.326,319,2.251,320,4.292,321,2.367,323,2.075,325,4.292,330,5.152,346,6.896,347,6.896,370,2.367,371,2.236,372,1.547,491,2.797,499,3.827,509,3.352,510,3.182,514,3.146,547,3.146,649,4.865,744,2.396,768,1.967,1008,3.561,1012,3.554,1154,3.981,1315,4.586,1368,6.391,1380,4.155,1544,5.336,2526,4.153,2527,6.392,2528,4.672,2529,6.392,2530,4.672,2531,6.392,2532,6.392,2533,4.672,2534,5.215,2535,4.672,2536,4.586,2537,5.682,2538,4.672,2539,5.682,2540,4.672,2541,6.392,2542,4.672,2543,4.153,2544,4.672,2545,4.672,2546,4.672,2547,4.672,2548,4.672,2549,4.672,2550,4.153,2551,4.672,2552,4.672,2553,4.672]],["title/components/ProjectsListPage.html",[0,0.159,198,0.9]],["body/components/ProjectsListPage.html",[0,0.219,1,0.724,2,1.075,3,0.09,4,0.078,5,0.794,6,0.808,7,0.794,8,0.794,9,0.054,15,0.673,16,1.759,17,1.756,18,0.724,19,1.116,21,1.075,23,1.075,25,0.208,26,0.608,27,1.309,32,0.705,37,0.827,44,0.886,46,0.953,47,0.007,48,0.686,49,0.376,50,0.806,52,0.749,53,1.246,60,0.673,61,0.578,62,1.178,68,2.184,71,0.504,73,0.314,77,1.466,81,0.624,83,1.008,85,0.084,87,3.345,88,1.037,90,0.174,91,1.699,93,1.008,110,1.129,115,0.794,116,1.157,117,1.269,118,0.66,119,1.473,120,0.794,121,1.365,122,0.711,123,0.765,124,0.738,125,0.794,126,0.724,127,0.794,128,0.738,129,0.765,130,0.794,131,0.738,132,0.794,133,0.738,134,0.794,135,0.724,136,0.765,137,0.794,138,0.738,139,0.794,140,0.765,141,0.724,142,1.136,143,1.411,144,1.157,145,0.724,146,1.157,147,0.711,148,1.825,149,0.724,150,1.115,151,0.794,152,0.724,153,1.519,154,0.724,155,0.724,156,0.738,157,0.794,158,0.724,159,0.794,160,0.751,161,0.685,162,1.269,163,0.738,164,0.794,165,0.738,166,1.075,167,0.794,168,0.738,169,0.794,170,0.738,171,0.738,172,0.794,173,0.738,174,0.794,175,0.738,176,0.794,177,0.724,178,0.765,179,0.738,180,1.072,181,0.794,182,0.724,183,0.794,184,0.724,185,0.738,186,0.794,187,0.738,188,1.365,189,0.685,190,0.794,191,0.738,192,1.157,193,0.794,194,0.738,195,0.794,196,0.738,197,0.794,198,1.369,199,1.751,200,0.724,201,0.794,202,0.724,203,0.779,204,1.037,205,0.724,206,0.738,207,0.738,208,0.794,209,0.724,210,1.538,211,0.711,212,0.794,213,0.724,214,0.751,215,0.724,216,0.724,217,0.794,218,0.738,219,0.794,220,1.157,221,0.738,222,0.794,223,0.738,224,0.794,225,0.794,226,0.738,227,0.794,228,0.711,229,0.893,230,0.724,231,0.738,232,0.794,233,0.738,234,0.794,235,1.037,236,1.157,237,1.157,238,0.724,239,0.765,240,0.673,241,0.724,242,0.724,243,0.779,244,0.751,245,0.794,246,0.724,247,0.794,248,0.711,249,0.765,250,0.794,251,0.004,252,0.004,279,1.298,386,3.432,428,1.129,533,5.132,542,2.447,543,3.778,546,3.698,547,4.012,592,1.624,593,1.383,594,1.585,595,1.624,606,2.097,682,0.919,689,1.966,745,1.354,768,1.585,983,2.957,1012,2.489,1151,3.901,1174,2.564,1175,2.344,1176,4.208,1177,2.865,1178,3.071,1189,2.447,1203,4.476,1243,6.484,1360,4.176,1408,3.284,2414,4.877,2429,4.877,2432,4.877,2461,4.877,2462,3.346,2463,3.346,2543,3.346,2554,7.573,2555,2.865,2556,5.281,2557,4.476,2558,5.487,2559,5.487,2560,3.764,2561,3.764,2562,5.487,2563,3.346,2564,3.346,2565,3.764,2566,3.764,2567,3.071,2568,3.346,2569,3.764,2570,3.764,2571,3.764,2572,3.071,2573,3.071,2574,4.877,2575,4.877]],["title/classes/Random.html",[90,0.216,2576,3.561]],["body/classes/Random.html",[3,0.142,4,0.123,9,0.085,25,0.329,26,0.829,27,1.358,32,0.961,37,0.894,44,0.94,46,0.794,47,0.007,48,0.47,49,0.397,50,0.928,52,0.866,60,1.464,61,1.259,62,1.274,85,0.132,88,1.805,90,0.378,91,1.907,106,1.121,251,0.005,252,0.005,255,1.346,311,2.329,360,3.789,664,5.101,690,2.288,720,3.005,1081,3.304,2576,7.192,2577,5.273,2578,8.191,2579,8.191,2580,8.191,2581,7.479,2582,7.479,2583,8.6,2584,8.264,2585,8.191,2586,5.932,2587,8.191,2588,5.932,2589,7.479,2590,5.932,2591,5.932,2592,8.6,2593,8.6,2594,8.866,2595,5.932,2596,5.932,2597,5.932,2598,5.932,2599,5.932,2600,7.479,2601,6.648,2602,5.932,2603,5.932]],["title/components/RegisterPage.html",[0,0.159,200,0.9]],["body/components/RegisterPage.html",[0,0.185,1,0.548,2,0.871,3,0.068,4,0.059,5,0.6,6,0.611,7,0.6,8,0.6,9,0.041,15,0.509,16,1.735,17,1.733,18,0.548,19,0.903,21,0.871,23,0.871,25,0.158,26,0.492,27,1.307,29,2.774,32,0.571,37,0.429,44,0.854,46,0.595,47,0.007,48,0.608,49,0.309,50,0.869,52,0.715,53,1.188,60,0.977,61,0.84,62,1.873,63,2.357,64,2.37,65,3.472,66,3.823,71,0.466,73,0.238,74,0.924,77,0.779,81,0.472,83,0.762,85,0.063,90,0.131,91,1.255,103,1.401,104,1.401,106,0.839,110,0.854,111,0.982,113,2.575,114,2.41,115,0.6,116,0.937,117,1.071,118,0.499,119,1.632,120,0.6,121,1.152,122,0.538,123,0.579,124,0.558,125,0.6,126,0.548,127,0.6,128,0.558,129,0.579,130,0.6,131,0.558,132,0.6,133,0.558,134,0.6,135,0.548,136,0.579,137,0.6,138,0.558,139,0.6,140,0.579,141,0.548,142,0.959,143,0.67,144,0.937,145,0.548,146,0.937,147,0.538,148,1.699,149,0.548,150,0.49,151,0.6,152,0.548,153,1.051,154,0.548,155,0.548,156,0.558,157,0.6,158,0.548,159,0.6,160,0.568,161,0.518,162,1.071,163,0.558,164,0.6,165,0.558,166,1.071,167,0.6,168,0.558,169,0.6,170,0.558,171,0.558,172,0.6,173,0.558,174,0.6,175,0.558,176,0.6,177,0.548,178,0.579,179,0.558,180,0.67,181,0.6,182,0.548,183,0.6,184,0.548,185,1.391,186,0.6,187,0.558,188,1.152,189,0.518,190,0.6,191,0.558,192,0.937,193,0.6,194,0.558,195,0.6,196,0.558,197,0.6,198,0.548,199,0.568,200,1.188,201,0.6,202,0.548,203,0.589,204,1.166,205,0.548,206,0.558,207,0.558,208,0.6,209,0.548,210,1.361,211,0.538,212,0.6,213,0.548,214,0.568,215,0.548,216,0.548,217,0.6,218,0.558,219,0.6,220,0.937,221,0.558,222,0.6,223,0.558,224,0.6,225,0.6,226,0.558,227,0.6,228,0.538,229,0.723,230,0.548,231,0.558,232,0.6,233,0.558,234,0.6,235,0.839,236,0.937,237,0.937,238,0.548,239,0.579,240,0.509,241,0.548,242,0.548,243,1.131,244,0.568,245,0.6,246,0.548,247,0.6,248,0.538,249,0.579,250,0.6,251,0.003,252,0.003,260,1.85,275,0.854,284,1.069,290,0.888,301,1.772,305,0.889,307,1.291,372,0.942,386,3.12,394,2.447,395,2.326,397,1.486,428,0.854,478,2.887,480,6.511,481,2.853,483,3.824,511,2.659,512,2.944,579,3.044,647,1.668,682,1.732,683,2.371,684,3.025,685,1.964,686,1.87,688,1.738,690,1.671,703,1.325,706,1.325,709,1.772,710,1.401,714,2.221,715,2.008,716,2.268,717,2.221,718,1.964,719,2.32,720,2.251,721,1.705,724,1.964,725,1.916,726,2.562,749,1.442,750,2.015,801,1.198,803,4.008,809,1.362,825,2.689,838,2.766,865,1.703,899,1.938,903,5.096,904,4.857,905,3.949,906,3.949,907,3.949,908,3.949,910,2.394,913,2.53,915,2.166,916,2.53,917,2.53,918,2.042,923,2.166,924,2.321,927,1.772,929,3.381,930,1.85,931,1.642,932,1.772,933,1.486,934,3.824,935,1.938,936,2.887,937,1.938,938,1.642,939,5.488,940,2.659,941,1.85,942,1.642,943,1.772,944,1.85,945,1.85,946,2.042,947,4.205,948,1.938,949,4.56,950,4.205,951,1.938,952,1.938,953,1.938,954,1.938,955,1.938,956,1.938,957,1.938,958,1.938,979,1.585,1000,1.024,1044,3.595,1112,3.624,1132,3.624,1173,1.772,1283,3.381,1284,2.186,1408,1.703,1517,2.321,1518,3.187,1521,2.321,1649,3.624,1875,3.152,2155,3.949,2158,3.949,2171,2.53,2175,2.766,2176,2.53,2178,3.949,2180,6.307,2185,3.949,2186,3.949,2187,3.949,2604,2.321,2605,5.464,2606,4.442,2607,6.816,2608,5.464,2609,4.857,2610,6.173,2611,6.173,2612,2.846,2613,2.846,2614,2.846,2615,2.846,2616,2.846,2617,2.846,2618,4.457,2619,6.173,2620,2.846,2621,2.846,2622,2.846,2623,5.464,2624,2.846,2625,2.846,2626,2.53,2627,2.53,2628,4.442,2629,5.464,2630,2.846,2631,2.846,2632,2.846,2633,4.442,2634,2.846,2635,4.442,2636,2.846,2637,2.846,2638,2.846,2639,2.846,2640,6.173,2641,2.846,2642,2.846,2643,4.442,2644,3.624,2645,4.442,2646,4.442,2647,4.442]],["title/interfaces/RequestOptions.html",[86,0.791,337,3.561]],["body/interfaces/RequestOptions.html",[3,0.118,4,0.102,9,0.107,18,1.275,25,0.273,26,0.734,47,0.007,49,0.432,50,1.075,60,1.184,71,0.291,85,0.11,86,1.412,88,0.93,106,1.626,150,1.141,251,0.005,252,0.005,253,1.631,255,1.117,272,4.181,275,2.638,290,2.066,298,3.805,305,1.431,308,3.435,311,1.933,325,3.356,327,5.888,328,5.888,330,5.012,332,5.888,336,4.315,337,5.042,340,5.888,342,7.649,345,5.888,360,3.356,365,3.748,375,6.531,376,8.05,377,7.649,435,4.125,496,5.042,499,4.792,514,4.457,713,3.354,829,2.789,877,5.404,1045,5.042,1071,5.042,1373,4.753,1548,6.531,1649,5.404,1790,7.292,2008,4.306,2371,5.744,2517,4.512,2648,4.377,2649,4.377,2650,8.939,2651,7.019,2652,8.604,2653,8.006,2654,6.624,2655,4.753,2656,8.006,2657,8.006,2658,5.888,2659,8.006,2660,6.624,2661,6.624,2662,6.624,2663,6.624,2664,7.486,2665,8.792,2666,6.624,2667,5.404,2668,6.624,2669,6.624,2670,6.624,2671,6.624,2672,6.624,2673,8.006,2674,4.924]],["title/components/RestoreAccountPage.html",[0,0.159,202,0.9]],["body/components/RestoreAccountPage.html",[0,0.215,1,0.701,2,1.05,3,0.087,4,0.075,5,0.768,6,0.782,7,0.768,8,0.768,9,0.052,15,0.651,16,1.757,17,1.753,18,0.701,19,1.089,21,1.05,23,1.05,25,0.202,29,2.637,32,0.689,37,0.549,44,0.674,46,0.488,47,0.007,48,0.591,49,0.168,50,0.413,52,0.62,53,1.031,71,0.376,73,0.304,77,0.94,81,0.604,85,0.081,90,0.168,91,0.741,110,1.093,111,1.256,113,2.658,114,2.532,115,0.768,116,1.129,117,1.245,118,0.639,119,1.671,120,0.768,121,1.34,122,0.688,123,0.741,124,0.714,125,0.768,126,0.701,127,0.768,128,0.714,129,0.741,130,0.768,131,0.714,132,0.768,133,0.714,134,0.768,135,0.701,136,0.741,137,0.768,138,0.714,139,0.768,140,0.741,141,0.701,142,1.114,143,0.807,144,1.129,145,0.701,146,1.129,147,0.688,148,1.811,149,0.701,150,0.627,151,0.768,152,0.701,153,1.222,154,0.701,155,0.701,156,0.714,157,0.768,158,0.701,159,0.768,160,0.727,161,0.663,162,1.245,163,0.714,164,0.768,165,0.714,166,1.05,167,0.768,168,0.714,169,0.768,170,0.714,171,0.714,172,0.768,173,0.714,174,0.768,175,0.714,176,0.768,177,0.701,178,0.741,179,0.714,180,0.807,181,0.768,182,0.701,183,0.768,184,0.701,185,1.53,186,0.768,187,0.714,188,1.34,189,0.663,190,0.768,191,0.714,192,1.129,193,0.768,194,0.714,195,0.768,196,0.714,197,0.768,198,0.701,199,0.727,200,0.701,201,0.768,202,1.348,203,1.906,204,1.623,205,0.701,206,0.714,207,0.714,208,0.768,209,0.701,210,1.517,211,0.688,212,0.768,213,0.701,214,0.727,215,0.701,216,0.701,217,0.768,218,0.714,219,0.768,220,1.129,221,0.714,222,0.768,223,0.714,224,0.768,225,0.768,226,0.714,227,0.768,228,0.688,229,0.872,230,0.701,231,0.714,232,0.768,233,0.714,234,0.768,235,1.012,236,1.129,237,1.129,238,0.701,239,0.741,240,1.135,241,0.701,242,0.701,243,0.754,244,0.727,245,0.768,246,0.701,247,0.768,248,0.688,249,0.741,250,0.768,251,0.004,252,0.004,372,1.206,386,3.396,394,2.692,395,2.211,397,1.902,410,2.43,428,1.093,476,5.331,479,5.331,483,4.206,682,1.822,683,2.486,684,3.243,685,2.369,686,2.255,688,2.374,690,1.943,695,2.255,709,2.268,710,1.793,712,2.613,714,2.285,715,2.334,716,2.574,717,2.519,718,2.228,719,1.902,720,1.845,721,2.439,724,1.611,725,1.571,726,3.09,746,1.611,801,1.533,803,4.468,809,1.743,825,1.793,827,2.368,865,2.18,899,2.481,930,2.368,931,2.101,932,2.268,933,1.902,934,4.206,935,2.481,936,3.482,937,2.481,938,2.101,939,5.851,940,3.206,941,2.368,942,2.101,943,2.268,944,2.368,945,2.368,947,4.771,948,2.481,949,5.083,950,4.771,951,2.481,952,2.481,953,2.481,954,2.481,955,2.481,956,2.481,957,2.481,958,2.481,1270,2.772,1271,5.182,1272,4.369,1273,3.238,1276,3.238,1279,3.648,1282,3.648,2149,2.772,2675,6.226,2676,3.642,2677,2.971,2678,3.642,2679,5.356,2680,4.761,2681,4.761,2682,4.369,2683,3.238]],["title/injectables/RouterExtensionsService.html",[43,3.041,319,1.648]],["body/injectables/RouterExtensionsService.html",[3,0.165,4,0.143,9,0.099,25,0.384,27,1.148,37,1.044,43,5.344,44,0.872,46,0.927,47,0.007,48,0.549,49,0.32,50,0.784,71,0.487,73,0.578,85,0.154,90,0.32,106,1.308,251,0.006,252,0.006,319,2.896,321,3.508,370,3.508,371,3.314,372,2.293,386,3.955,428,2.078,1069,4.293,1790,5.649,1959,6.258,2146,6.156,2684,7.795,2685,6.156,2686,8.769,2687,6.925,2688,6.925,2689,6.925,2690,6.925,2691,6.925,2692,8.222,2693,6.925]],["title/components/SchedulePage.html",[0,0.159,205,0.9]],["body/components/SchedulePage.html",[0,0.205,1,0.644,2,0.985,3,0.08,4,0.069,5,0.705,6,0.718,7,0.705,8,0.705,9,0.048,13,1.398,14,2.22,15,0.598,16,1.75,17,1.746,18,0.644,19,1.022,21,0.985,23,0.985,25,0.185,26,0.557,27,1.489,32,0.646,36,2.22,37,0.504,44,0.856,46,0.448,47,0.007,48,0.571,49,0.332,50,0.379,52,0.387,53,0.644,60,1.08,61,0.928,68,2.079,71,0.489,73,0.279,77,0.882,81,0.555,83,0.896,85,0.074,88,1.141,90,0.154,93,1.346,110,1.812,111,1.734,112,2.547,113,2.331,114,2.526,115,0.705,116,1.06,117,1.184,118,0.587,119,1.872,120,0.705,121,1.274,122,0.632,123,0.68,124,0.656,125,0.705,126,0.644,127,0.705,128,0.656,129,0.68,130,0.705,131,0.656,132,0.705,133,0.656,134,0.705,135,0.644,136,0.68,137,0.705,138,0.656,139,0.705,140,0.68,141,0.644,142,1.06,143,1.14,144,1.06,145,0.644,146,1.06,147,0.632,148,1.774,149,0.644,150,0.576,151,0.705,152,0.644,153,1.162,154,0.644,155,0.644,156,0.656,157,0.705,158,0.644,159,0.705,160,0.668,161,0.609,162,1.184,163,0.656,164,0.705,165,0.656,166,0.985,167,0.705,168,0.656,169,0.705,170,0.656,171,1.411,172,0.705,173,0.656,174,0.705,175,0.656,176,0.705,177,0.644,178,0.68,179,0.656,180,0.758,181,0.705,182,0.644,183,0.705,184,0.644,185,0.656,186,0.705,187,0.656,188,1.274,189,0.609,190,0.705,191,0.656,192,1.06,193,0.705,194,0.656,195,0.705,196,0.656,197,0.705,198,0.644,199,0.668,200,0.644,201,0.705,202,0.644,203,0.693,204,0.95,205,1.293,206,1.582,207,0.656,208,0.705,209,0.644,210,1.464,211,0.632,212,0.705,213,0.644,214,0.668,215,0.644,216,0.644,217,0.705,218,0.656,219,0.705,220,1.06,221,0.656,222,0.705,223,0.656,224,0.705,225,0.705,226,0.656,227,0.705,228,0.632,229,0.983,230,0.644,231,0.656,232,0.705,233,0.656,234,0.705,235,0.95,236,1.06,237,1.06,238,0.644,239,0.68,240,1.08,241,0.644,242,0.644,243,0.693,244,0.668,245,0.705,246,0.644,247,0.705,248,0.632,249,0.68,250,0.705,251,0.004,252,0.004,257,2.019,279,1.154,308,2.762,394,2.317,395,2.561,396,3.185,428,1.004,514,1.646,543,3.446,544,3.742,547,3.544,553,5.113,589,1.803,591,2.546,593,2.22,680,3.827,682,1.971,683,2.515,684,3.099,685,1.479,686,1.408,687,2.4,688,1.064,689,1.747,690,2.203,693,2.174,694,1.443,695,1.408,699,1.408,713,4.115,714,1.809,715,1.848,716,2.468,717,1.809,718,1.6,724,3.345,726,2.9,727,3.629,728,3.47,739,2.372,743,3.131,745,1.203,746,2.223,755,3.616,756,2.9,757,6.145,781,2.279,782,3.131,800,1.864,809,1.601,814,3.742,815,3.742,816,2.974,817,2.974,843,3.268,865,2.002,910,3.256,932,2.083,1069,2.626,1979,3.927,1989,2.174,2029,2.546,2297,2.974,2327,2.974,2476,2.974,2694,2.974,2695,6.041,2696,5.028,2697,6.717,2698,6.717,2699,6.717,2700,3.345,2701,3.345,2702,3.345,2703,5.028,2704,3.345,2705,5.028,2706,3.345,2707,3.345,2708,3.345,2709,3.345,2710,3.345,2711,3.345,2712,2.974,2713,3.345,2714,5.028,2715,3.345,2716,3.345,2717,3.345,2718,3.827,2719,3.345,2720,5.971,2721,3.345,2722,5.37,2723,6.041,2724,2.974,2725,3.345,2726,3.345,2727,3.345,2728,2.974,2729,3.345,2730,3.345,2731,3.345]],["title/components/SelectComponent.html",[0,0.159,207,0.917]],["body/components/SelectComponent.html",[0,0.198,1,0.607,2,0.943,3,0.075,4,0.065,5,0.665,6,0.678,7,0.665,8,0.665,9,0.045,13,1.337,14,2.142,15,0.564,16,1.745,17,1.741,18,0.607,19,0.978,21,0.943,23,0.943,25,0.175,26,0.533,27,0.798,29,1.97,32,0.618,36,2.396,44,0.975,46,0.873,47,0.007,48,0.628,49,0.399,50,0.939,52,0.959,53,1.644,57,1.51,60,1.417,61,1.366,62,1.703,64,1.211,68,1.683,71,0.386,73,0.263,77,0.844,81,0.523,83,0.845,85,0.07,90,0.146,91,1.713,93,1.288,106,0.909,115,0.665,116,1.014,117,1.376,118,0.844,119,1.35,120,0.665,121,1.229,122,0.596,123,0.642,124,0.618,125,0.665,126,0.607,127,0.665,128,0.618,129,0.642,130,0.665,131,0.618,132,0.665,133,0.618,134,0.665,135,0.607,136,0.642,137,0.665,138,0.618,139,0.665,140,1.808,141,0.607,142,1.023,143,0.725,144,1.014,145,0.607,146,1.014,147,0.596,148,1.748,149,0.607,150,0.543,151,0.665,152,0.607,153,1.122,154,0.607,155,0.607,156,0.618,157,0.665,158,0.607,159,0.665,160,0.63,161,0.575,162,1.143,163,0.618,164,0.665,165,0.618,166,1.278,167,0.665,168,0.618,169,0.665,170,0.618,171,0.618,172,0.665,173,0.618,174,0.665,175,0.618,176,0.665,177,0.607,178,0.642,179,0.618,180,0.725,181,0.665,182,0.607,183,0.665,184,0.607,185,0.618,186,0.665,187,0.618,188,1.229,189,0.575,190,0.665,191,0.618,192,1.014,193,0.665,194,0.618,195,0.665,196,0.943,197,0.665,198,0.607,199,0.63,200,0.607,201,0.665,202,0.607,203,0.653,204,0.909,205,0.607,206,0.618,207,1.278,208,0.665,209,0.607,210,1.427,211,0.596,212,0.665,213,0.607,214,0.63,215,0.607,216,0.607,217,0.665,218,0.618,219,0.665,220,1.014,221,0.618,222,0.665,223,0.618,224,0.665,225,0.665,226,0.618,227,0.665,228,0.596,229,0.783,230,0.607,231,0.618,232,0.665,233,0.618,234,0.665,235,0.909,236,1.48,237,1.014,238,0.607,239,0.642,240,0.564,241,0.607,242,0.607,243,0.653,244,0.63,245,0.665,246,0.607,247,0.665,248,0.596,249,0.642,250,0.665,251,0.004,252,0.004,255,1.479,274,1.701,275,2.106,281,2.958,284,2.449,290,1.501,298,2.127,305,0.783,323,1.024,325,2.954,336,3.514,358,3.142,362,1.648,540,3.142,647,1.806,651,2.368,698,1.553,748,2.68,751,1.553,765,1.889,768,2.745,829,1.328,853,2.051,873,1.51,960,2.302,964,2.88,965,2.88,966,3.761,967,4.202,968,3.49,969,3.49,970,2.88,971,2.88,972,2.88,973,2.88,974,2.88,976,5.322,977,1.965,978,1.889,979,2.68,980,1.889,981,1.889,982,1.82,983,1.701,984,1.701,985,1.965,986,4.467,987,2.68,988,1.758,989,1.965,990,1.82,991,1.758,992,1.965,993,4.202,994,1.889,995,1.758,996,1.82,997,1.82,998,1.889,999,1.889,1000,1.135,1001,2.88,1002,1.889,1003,1.965,1004,2.88,1005,2.302,1006,4.428,1007,1.889,1008,3.248,1009,1.82,1010,3.248,1011,2.88,1012,2.182,1013,3.903,1014,1.758,1015,1.889,1016,2.88,1017,1.889,1018,1.965,1019,1.889,1020,1.889,1021,1.965,1022,2.88,1023,1.889,1024,1.889,1025,2.051,1026,1.965,1027,1.965,1028,1.965,1029,1.965,1030,1.965,1031,1.889,1032,4.285,1033,1.965,1034,2.88,1035,2.574,1036,2.402,1037,1.965,1038,2.051,1039,1.965,1069,2.512,1353,3.277,1578,3.971,1634,4.437,1636,4.963,1910,3.924,1998,5.343,2481,2.805,2732,2.805,2733,5.83,2734,4.811,2735,5.83,2736,5.83,2737,8.125,2738,6.521,2739,3.156,2740,3.156,2741,3.156,2742,3.156,2743,3.156,2744,3.156,2745,5.83,2746,4.811,2747,3.156,2748,3.156,2749,3.156,2750,3.156,2751,3.156,2752,3.156,2753,3.156,2754,3.156,2755,3.156,2756,3.156,2757,3.156,2758,3.156,2759,3.156,2760,3.156,2761,3.156,2762,3.156,2763,3.156,2764,3.156,2765,4.811,2766,3.156,2767,4.811,2768,3.156,2769,3.156,2770,3.156,2771,3.156,2772,3.156,2773,3.156,2774,3.156,2775,4.811,2776,4.811]],["title/injectables/SessionsService.html",[319,1.648,2777,3.561]],["body/injectables/SessionsService.html",[3,0.16,4,0.138,9,0.096,25,0.371,27,1.546,32,1.036,37,1.009,44,0.917,46,1.079,47,0.007,48,0.638,49,0.372,50,0.913,52,0.933,68,2.496,71,0.531,73,0.559,83,1.793,85,0.149,88,1.633,90,0.309,106,1.522,150,1.387,180,1.352,251,0.006,252,0.006,319,2.838,320,4.723,321,3.392,370,3.392,371,3.204,372,2.217,491,4.008,510,4.56,744,2.048,2777,6.133,2778,5.951,2779,6.695,2780,7.163,2781,6.695,2782,6.695,2783,4.803,2784,6.695,2785,6.695,2786,6.695]],["title/components/SettingsAccountPage.html",[0,0.159,209,0.9]],["body/components/SettingsAccountPage.html",[0,0.218,1,0.717,2,1.068,3,0.089,4,0.077,5,0.786,6,0.8,7,0.786,8,0.786,9,0.053,13,1.514,14,2.365,15,0.666,16,1.759,17,1.755,18,0.717,19,1.107,21,1.068,23,1.068,25,0.206,26,0.604,27,1.068,29,2.175,32,0.7,36,2.602,37,0.562,44,0.834,46,0.499,47,0.007,48,0.644,49,0.172,50,0.422,52,0.82,53,1.363,60,0.666,61,0.573,62,1.855,63,2.777,64,2.091,65,3.413,66,3.758,71,0.446,73,0.311,74,1.209,77,0.956,81,0.618,85,0.083,90,0.172,91,0.758,103,1.834,104,1.834,105,2.076,106,0.704,113,1.573,114,1.666,115,0.786,116,1.149,117,1.262,118,0.654,119,1.466,120,0.786,121,1.357,122,0.704,123,0.758,124,0.73,125,0.786,126,0.717,127,0.786,128,0.73,129,0.758,130,0.786,131,0.73,132,0.786,133,0.73,134,0.786,135,0.717,136,1.652,137,0.786,138,0.73,139,0.786,140,0.758,141,0.717,142,1.129,143,0.821,144,1.149,145,0.717,146,1.149,147,0.704,148,1.821,149,0.717,150,1.399,151,0.786,152,0.717,153,1.239,154,0.717,155,0.717,156,0.73,157,0.786,158,0.717,159,0.786,160,0.744,161,0.678,162,1.262,163,0.73,164,0.786,165,0.73,166,1.068,167,0.786,168,0.73,169,0.786,170,0.73,171,0.73,172,0.786,173,0.73,174,0.786,175,0.73,176,0.786,177,0.717,178,0.758,179,0.73,180,0.821,181,0.786,182,0.717,183,0.786,184,0.717,185,0.73,186,0.786,187,0.73,188,1.357,189,0.678,190,0.786,191,0.73,192,1.149,193,0.786,194,0.73,195,0.786,196,0.73,197,0.786,198,0.717,199,1.285,200,0.717,201,0.786,202,0.717,203,0.772,204,1.745,205,0.717,206,0.73,207,0.73,208,0.786,209,1.363,210,1.8,211,0.704,212,0.786,213,0.717,214,0.744,215,0.717,216,0.717,217,0.786,218,0.73,219,0.786,220,1.149,221,0.73,222,0.786,223,0.73,224,0.786,225,0.786,226,0.73,227,0.786,228,0.704,229,0.886,230,0.717,231,0.73,232,0.786,233,0.73,234,0.786,235,1.029,236,1.149,237,1.149,238,0.717,239,0.758,240,1.151,241,0.717,242,0.717,243,0.772,244,0.744,245,0.786,246,0.717,247,0.786,248,0.704,249,0.758,250,0.786,251,0.004,252,0.004,279,1.285,372,1.234,481,4.109,483,4.379,489,5.776,511,3.26,512,2.935,682,1.329,683,1.603,688,1.186,689,1.946,717,1.34,718,1.186,721,1.431,745,1.34,825,1.834,827,2.422,841,5.389,914,2.674,1012,2.471,1270,2.836,1271,5.251,1272,4.443,1275,3.312,1279,3.71,1282,3.71,1284,1.834,1672,5.535,1758,2.836,1761,4.842,2045,4.842,2149,2.836,2156,5.359,2165,3.04,2517,3.71,2677,4.443,2680,5.722,2681,6.294,2682,4.443,2787,6.185,2788,7.081,2789,3.726,2790,3.726,2791,3.726,2792,3.726,2793,3.726,2794,3.726,2795,3.726,2796,3.726,2797,3.726,2798,3.726,2799,3.726,2800,3.726,2801,3.726,2802,3.726,2803,6.437,2804,3.726,2805,3.726,2806,3.726,2807,3.726,2808,3.726,2809,3.726,2810,3.726,2811,3.726,2812,5.447,2813,3.726,2814,3.726,2815,3.726,2816,3.726,2817,3.726,2818,3.726,2819,3.726,2820,3.726,2821,3.726,2822,3.726,2823,4.842,2824,4.842,2825,4.842,2826,4.842,2827,5.447,2828,5.447,2829,5.447,2830,4.842,2831,4.443,2832,5.447,2833,5.447,2834,5.447,2835,3.726]],["title/components/SettingsIntegrationsPage.html",[0,0.159,211,0.884]],["body/components/SettingsIntegrationsPage.html",[0,0.23,1,0.785,2,1.139,3,0.097,4,0.084,5,0.86,6,0.876,7,0.86,8,0.86,9,0.058,13,1.616,14,2.489,15,0.729,16,1.765,17,1.762,18,0.785,19,1.182,21,1.139,23,1.139,25,0.226,26,0.644,27,1.493,32,0.747,36,2.713,37,0.615,44,0.86,46,0.907,47,0.007,48,0.662,49,0.341,50,0.767,52,0.855,53,1.502,68,2.343,71,0.437,73,0.34,77,1.02,81,0.676,83,1.092,85,0.091,86,0.689,90,0.188,106,1.28,111,1.407,115,0.86,116,1.226,117,1.328,118,0.715,119,1.529,120,0.86,121,1.428,122,0.77,123,0.829,124,0.799,125,0.86,126,0.785,127,0.86,128,0.799,129,0.829,130,0.86,131,0.799,132,0.86,133,0.799,134,0.86,135,0.785,136,0.829,137,0.86,138,0.799,139,0.86,140,0.829,141,0.785,142,1.188,143,0.876,144,1.226,145,0.785,146,1.226,147,0.77,148,1.858,149,0.785,150,0.702,151,0.86,152,0.785,153,1.303,154,0.785,155,0.785,156,0.799,157,0.86,158,0.785,159,0.86,160,0.814,161,0.743,162,1.328,163,0.799,164,0.86,165,0.799,166,1.139,167,0.86,168,0.799,169,0.86,170,0.799,171,0.799,172,0.86,173,0.799,174,0.86,175,0.799,176,0.86,177,0.785,178,0.829,179,0.799,180,1.021,181,0.86,182,0.785,183,0.86,184,0.785,185,0.799,186,0.86,187,0.799,188,1.428,189,0.743,190,0.86,191,0.799,192,1.226,193,0.86,194,0.799,195,0.86,196,0.799,197,0.86,198,0.785,199,0.814,200,0.785,201,0.86,202,0.785,203,0.844,204,1.533,205,0.785,206,0.799,207,0.799,208,0.86,209,0.785,210,1.831,211,1.395,212,0.86,213,0.785,214,0.814,215,0.785,216,0.785,217,0.86,218,0.799,219,0.86,220,1.226,221,0.799,222,0.86,223,0.799,224,0.86,225,0.86,226,0.799,227,0.86,228,0.77,229,0.946,230,0.785,231,0.799,232,0.86,233,0.799,234,0.86,235,1.098,236,1.226,237,1.226,238,0.785,239,0.829,240,0.729,241,0.785,242,0.785,243,0.844,244,0.814,245,0.86,246,0.785,247,0.86,248,0.77,249,0.829,250,0.86,251,0.004,252,0.004,372,1.35,682,0.995,688,1.297,695,1.717,745,1.467,768,1.717,1221,4.373,1248,2.54,1284,2.007,1659,4.924,1671,3.104,1672,5.688,1673,5.991,1674,3.327,1675,5.167,1676,2.54,1677,2.54,1678,2.651,1679,2.651,1680,5.619,1681,5.167,1682,6.021,1683,6.021,1684,3.625,1685,6.563,1686,3.625,1687,3.625,1688,3.327,1689,3.327,1690,3.625,1691,5.167,1692,3.625,1693,3.625,1694,3.104,1695,5.167,1696,3.327,1697,3.327,1698,3.625,1699,3.625,1700,3.625,2074,5.167,2093,3.625,2836,5.813,2837,5.813,2838,4.078,2839,4.078,2840,4.078,2841,4.078]],["title/components/SettingsLocalizationPage.html",[0,0.159,213,0.9]],["body/components/SettingsLocalizationPage.html",[0,0.22,1,0.731,2,1.082,3,0.091,4,0.078,5,0.801,6,0.815,7,0.801,8,0.801,9,0.054,15,0.679,16,1.76,17,1.757,18,0.731,19,1.123,21,1.082,23,1.082,25,0.21,26,0.612,27,1.079,29,2.199,32,0.71,37,0.981,44,0.84,47,0.007,48,0.734,49,0.175,52,0.639,53,1.062,60,1.163,61,1,62,1.701,63,2.806,65,3.048,66,2.877,71,0.423,73,0.317,74,1.232,77,0.969,81,0.63,85,0.085,90,0.175,113,1.594,114,1.689,115,0.801,116,1.164,117,1.275,118,0.666,119,1.479,120,0.801,121,1.372,122,0.717,123,0.772,124,0.744,125,0.801,126,0.731,127,0.801,128,0.744,129,0.772,130,0.801,131,0.744,132,0.801,133,0.744,134,0.801,135,0.731,136,0.772,137,0.801,138,0.744,139,0.801,140,0.772,141,0.731,142,1.141,143,0.832,144,1.164,145,0.731,146,1.164,147,0.717,148,1.829,149,0.731,150,0.654,151,0.801,152,0.731,153,1.252,154,0.731,155,0.731,156,0.744,157,0.801,158,0.731,159,0.801,160,0.758,161,0.691,162,1.275,163,0.744,164,0.801,165,0.744,166,1.082,167,0.801,168,0.744,169,0.801,170,0.744,171,0.744,172,0.801,173,0.744,174,0.801,175,0.744,176,0.801,177,0.731,178,0.772,179,0.744,180,0.832,181,0.801,182,0.731,183,0.801,184,0.731,185,0.744,186,0.801,187,0.744,188,1.372,189,0.691,190,0.801,191,0.744,192,1.164,193,0.801,194,0.744,195,0.801,196,0.744,197,0.801,198,0.731,199,0.758,200,0.731,201,0.801,202,0.731,203,0.786,204,1.043,205,0.731,206,0.744,207,0.744,208,0.801,209,0.731,210,1.838,211,0.717,212,0.801,213,1.375,214,1.515,215,0.731,216,0.731,217,0.801,218,0.744,219,0.801,220,1.164,221,0.744,222,0.801,223,0.744,224,0.801,225,0.801,226,0.744,227,0.801,228,0.717,229,0.898,230,0.731,231,0.744,232,0.801,233,0.744,234,0.801,235,1.043,236,1.164,237,1.164,238,0.731,239,0.772,240,1.163,241,0.731,242,0.731,243,0.786,244,0.758,245,0.801,246,0.731,247,0.801,248,0.717,249,0.772,250,0.801,251,0.004,252,0.004,279,1.31,682,1.348,683,1.625,688,1.208,695,1.598,717,1.366,718,1.208,721,1.457,745,1.366,782,3.439,794,5.125,795,3.961,825,1.868,827,2.468,829,2.324,841,5.437,914,2.724,1204,3.589,1672,5.567,2474,6.487,2842,6.22,2843,3.375,2844,6.506,2845,5.521,2846,6.506,2847,5.784,2848,7.144,2849,3.797,2850,3.797,2851,3.797,2852,5.521,2853,5.521,2854,5.521,2855,5.521,2856,5.521,2857,5.521,2858,5.521,2859,5.521,2860,3.797,2861,4.908,2862,5.521,2863,3.797,2864,6.35,2865,5.521,2866,6.35,2867,4.908,2868,6.35,2869,5.521,2870,6.35,2871,5.521,2872,5.521,2873,6.35,2874,5.521,2875,5.521,2876,4.908,2877,4.202,2878,3.797,2879,3.797,2880,3.797,2881,3.797,2882,5.521,2883,5.521]],["title/modules/SettingsModule.html",[398,1.837,2884,3.561]],["body/modules/SettingsModule.html",[3,0.144,4,0.125,9,0.086,47,0.007,71,0.567,73,0.503,74,1.956,85,0.134,90,0.278,173,1.781,179,1.781,209,1.749,211,1.717,213,1.749,215,1.749,216,1.749,251,0.006,252,0.006,400,2.478,401,4.071,407,5.441,408,4.522,409,3.148,410,2.735,412,4.522,413,3.615,415,3.718,461,4.705,462,3.754,463,5.146,470,4.325,1223,5.358,1673,4.325,2069,4.917,2133,4.917,2787,4.588,2842,4.588,2884,7.469,2885,5.358,2886,5.358,2887,5.358,2888,6.521,2889,6.028,2890,6.028,2891,6.028,2892,6.028,2893,6.028,2894,6.028,2895,7.689,2896,5.358,2897,5.358,2898,4.588,2899,5.358,2900,6.028]],["title/components/SettingsPage.html",[0,0.159,215,0.9]],["body/components/SettingsPage.html",[0,0.23,1,0.789,2,1.143,3,0.098,4,0.085,5,0.864,6,0.88,7,0.864,8,0.864,9,0.059,13,1.622,14,2.496,15,0.733,16,1.766,17,1.764,18,0.789,19,1.186,21,1.143,23,1.143,25,0.227,26,0.647,32,0.75,36,2.719,37,1.024,44,0.862,47,0.007,48,0.586,52,0.474,53,0.789,60,1.323,61,1.137,71,0.402,73,0.342,77,1.023,81,0.68,85,0.091,90,0.189,110,2.038,111,1.414,112,2.956,113,2.137,114,1.785,115,0.864,116,1.23,117,1.331,118,0.719,119,1.827,120,0.864,121,1.432,122,0.774,123,0.833,124,0.803,125,0.864,126,0.789,127,0.864,128,0.803,129,0.833,130,0.864,131,0.803,132,0.864,133,0.803,134,0.864,135,0.789,136,0.833,137,0.864,138,0.803,139,0.864,140,0.833,141,0.789,142,1.192,143,0.879,144,1.23,145,0.789,146,1.23,147,0.774,148,1.86,149,0.789,150,0.706,151,0.864,152,0.789,153,1.307,154,0.789,155,0.789,156,0.803,157,0.864,158,0.789,159,0.864,160,0.818,161,0.746,162,1.331,163,0.803,164,0.864,165,0.803,166,1.143,167,0.864,168,0.803,169,0.864,170,0.803,171,0.803,172,0.864,173,0.803,174,0.864,175,0.803,176,0.864,177,0.789,178,0.833,179,0.803,180,0.879,181,0.864,182,0.789,183,0.864,184,0.789,185,0.803,186,0.864,187,0.803,188,1.432,189,0.746,190,0.864,191,0.803,192,1.23,193,0.864,194,0.803,195,0.864,196,0.803,197,0.864,198,0.789,199,0.818,200,0.789,201,0.864,202,0.789,203,0.849,204,1.398,205,0.789,206,0.803,207,0.803,208,0.864,209,0.789,210,1.7,211,0.774,212,0.864,213,0.789,214,1.356,215,1.424,216,0.789,217,0.864,218,0.803,219,1.23,220,1.23,221,0.803,222,0.864,223,0.803,224,0.864,225,0.864,226,0.803,227,0.864,228,0.774,229,0.949,230,0.789,231,0.803,232,0.864,233,0.803,234,0.864,235,1.102,236,1.23,237,1.23,238,0.789,239,0.833,240,1.214,241,0.789,242,0.789,243,0.849,244,0.818,245,0.864,246,0.789,247,0.864,248,0.774,249,0.833,250,0.864,251,0.004,252,0.004,308,1.685,394,2.553,395,2.464,396,2.58,397,2.14,410,1.859,514,2.017,592,1.768,593,1.506,594,1.726,595,1.768,682,1.424,683,1.717,684,2.24,688,1.856,694,1.768,695,1.726,698,2.017,703,1.909,704,2.941,706,1.909,714,1.474,715,1.506,716,2.144,717,1.474,718,2.161,721,1.573,727,3.192,728,3.273,743,3.633,746,1.813,749,2.077,750,1.859,756,3.365,800,2.283,801,2.456,802,2.14,807,3.12,808,2.553,814,2.283,815,2.283,822,2.14,843,2.664,869,3.12,873,1.961,880,2.553,1680,4.44,1986,3.344,2901,3.643,2902,6.792,2903,5.834,2904,8.128,2905,8.128,2906,8.128,2907,7.225,2908,5.834,2909,4.099,2910,4.099,2911,4.099,2912,4.099,2913,4.759,2914,4.099,2915,4.099,2916,4.099,2917,4.099]],["title/modules/SettingsRoutingModule.html",[398,1.837,2888,3.357]],["body/modules/SettingsRoutingModule.html",[0,0.309,3,0.156,4,0.135,9,0.094,47,0.007,71,0.556,73,0.547,85,0.146,90,0.302,93,1.754,180,0.987,204,1.237,209,1.53,211,1.502,213,1.53,214,1.308,215,1.53,216,1.53,251,0.006,252,0.006,398,2.571,400,2.693,413,3.135,415,3.913,426,4.76,427,4.917,428,1.965,435,5.682,441,5.343,444,5.705,454,4.079,470,4.699,482,4.461,1673,4.699,1680,4.985,2787,4.985,2842,4.985,2888,5.705,2895,7.915,2896,5.822,2897,5.822,2898,4.985,2899,5.822,2913,5.343,2918,6.55,2919,6.55]],["title/components/SettingsSessionsPage.html",[0,0.159,216,0.9]],["body/components/SettingsSessionsPage.html",[0,0.214,1,0.694,2,1.042,3,0.086,4,0.074,5,0.761,6,0.775,7,0.761,8,0.761,9,0.052,13,1.478,14,2.321,15,0.645,16,1.756,17,1.753,18,0.694,19,1.081,21,1.042,23,1.042,25,0.2,26,0.589,27,1.048,32,0.684,36,2.562,37,0.544,44,0.825,46,0.933,47,0.007,48,0.654,49,0.381,50,0.79,52,0.807,53,1.023,62,0.775,68,1.824,71,0.46,73,0.301,77,0.933,81,0.598,83,0.966,85,0.08,88,1.469,90,0.167,106,1.469,110,1.595,111,1.244,113,1.041,114,1.103,115,0.761,116,1.121,117,1.238,118,0.633,119,1.665,120,0.761,121,1.332,122,0.681,123,0.733,124,0.707,125,0.761,126,0.694,127,0.761,128,0.707,129,0.733,130,0.761,131,0.707,132,0.761,133,0.707,134,0.761,135,0.694,136,0.733,137,0.761,138,0.707,139,0.761,140,0.733,141,0.694,142,1.108,143,0.802,144,1.121,145,0.694,146,1.121,147,0.681,148,1.807,149,0.694,150,0.621,151,0.761,152,0.694,153,1.216,154,0.694,155,0.694,156,0.707,157,0.761,158,0.694,159,0.761,160,0.72,161,0.657,162,1.238,163,0.707,164,0.761,165,0.707,166,1.042,167,0.761,168,0.707,169,0.761,170,0.707,171,1.042,172,0.761,173,0.707,174,0.761,175,0.707,176,0.761,177,0.694,178,0.733,179,0.707,180,0.952,181,0.761,182,0.694,183,0.761,184,0.694,185,0.707,186,0.761,187,0.707,188,1.332,189,0.657,190,0.761,191,0.707,192,1.121,193,0.761,194,0.707,195,0.761,196,0.707,197,0.761,198,0.694,199,0.72,200,0.694,201,0.761,202,0.694,203,0.747,204,1.005,205,0.694,206,0.707,207,0.707,208,0.761,209,0.694,210,1.788,211,0.681,212,0.761,213,0.694,214,0.72,215,0.694,216,1.342,217,0.761,218,0.707,219,0.761,220,1.121,221,0.707,222,0.761,223,0.707,224,0.761,225,0.761,226,0.707,227,0.761,228,0.681,229,0.865,230,0.694,231,0.707,232,0.761,233,0.707,234,0.761,235,1.005,236,1.121,237,1.121,238,0.694,239,0.733,240,0.645,241,0.694,242,0.694,243,0.747,244,0.72,245,0.761,246,0.694,247,0.761,248,0.681,249,0.733,250,0.761,251,0.004,252,0.004,255,0.818,305,1.266,372,1.194,394,1.244,395,1.975,396,1.595,410,2.413,593,1.325,682,1.898,683,2.289,685,1.595,686,1.519,688,2.01,690,1.932,694,2.294,695,1.519,710,2.617,714,1.297,715,1.325,716,1.325,717,1.297,718,1.148,719,1.884,720,1.827,721,1.385,727,2.725,728,2.352,733,2.009,739,1.416,744,1.103,745,2.272,747,2.457,755,2.159,763,4.047,772,4.047,782,3.934,791,2.745,792,2.745,827,2.345,880,3.312,892,2.745,1282,3.622,1628,4.047,1672,5.478,1707,5.658,1825,4.727,1978,3.183,1987,2.942,2029,2.745,2031,3.206,2065,3.206,2083,2.745,2184,3.206,2191,2.942,2276,2.942,2718,2.745,2777,5.306,2783,2.588,2877,2.745,2898,6.121,2913,6.064,2920,3.206,2921,6.317,2922,5.318,2923,6.317,2924,5.318,2925,5.318,2926,3.607,2927,5.318,2928,5.318,2929,5.318,2930,6.971,2931,3.607,2932,3.607,2933,5.318,2934,3.607,2935,3.607,2936,5.318,2937,3.206,2938,3.607,2939,3.607,2940,3.607,2941,3.607,2942,3.607,2943,3.607,2944,3.607,2945,3.607,2946,3.607,2947,3.607,2948,3.607,2949,3.607,2950,3.607,2951,3.607,2952,3.607,2953,6.317,2954,3.607,2955,3.607,2956,3.607,2957,3.607,2958,5.318,2959,6.971,2960,5.318,2961,5.318,2962,5.318,2963,5.318,2964,2.942]],["title/components/SidebarNavigationComponent.html",[0,0.159,218,0.917]],["body/components/SidebarNavigationComponent.html",[0,0.232,1,0.802,2,1.157,3,0.1,4,0.086,5,0.879,6,0.895,7,0.879,8,0.879,9,0.06,15,0.745,16,1.767,17,1.764,18,0.802,19,1.201,21,1.157,23,1.157,25,0.231,26,0.655,27,1.237,31,4.457,32,0.759,37,0.628,44,0.791,46,0.558,47,0.007,48,0.624,49,0.317,50,0.777,52,0.483,53,0.802,68,1.98,71,0.466,73,0.348,77,1.381,81,0.691,85,0.093,90,0.192,91,0.848,112,2.112,113,1.705,114,1.275,115,0.879,116,1.245,117,1.344,118,0.731,119,1.63,120,0.879,121,1.446,122,0.788,123,0.848,124,0.817,125,0.879,126,0.802,127,0.879,128,0.817,129,0.848,130,0.879,131,0.817,132,0.879,133,0.817,134,0.879,135,0.802,136,0.848,137,0.879,138,0.817,139,0.879,140,0.848,141,0.802,142,1.434,143,0.89,144,1.245,145,0.802,146,1.245,147,0.788,148,1.867,149,0.802,150,0.718,151,0.879,152,0.802,153,1.319,154,0.802,155,0.802,156,0.817,157,0.879,158,0.802,159,0.879,160,0.832,161,0.759,162,1.344,163,0.817,164,0.879,165,0.817,166,1.462,167,0.879,168,0.817,169,0.879,170,0.817,171,0.817,172,0.879,173,0.817,174,0.879,175,0.817,176,0.879,177,0.802,178,0.848,179,0.817,180,0.89,181,0.879,182,0.802,183,0.879,184,0.802,185,0.817,186,0.879,187,0.817,188,1.446,189,0.759,190,0.879,191,0.817,192,1.245,193,0.879,194,0.817,195,0.879,196,0.817,197,0.879,198,0.802,199,0.832,200,0.802,201,0.879,202,0.802,203,0.863,204,1.116,205,0.802,206,0.817,207,0.817,208,0.879,209,0.802,210,1.6,211,0.788,212,0.879,213,0.802,214,0.832,215,0.802,216,0.802,217,0.879,218,1.462,219,1.811,220,1.245,221,0.817,222,0.879,223,0.817,224,0.879,225,0.879,226,0.817,227,0.879,228,0.788,229,0.961,230,0.802,231,0.817,232,0.879,233,0.817,234,0.879,235,1.116,236,1.245,237,1.245,238,0.802,239,1.6,240,0.745,241,0.802,242,0.802,243,0.863,244,0.832,245,0.879,246,0.802,247,0.879,248,0.788,249,0.848,250,0.879,251,0.004,252,0.004,279,1.438,305,0.961,372,1.381,386,3.538,394,2.572,395,1.673,396,1.844,428,1.251,444,2.991,682,1.018,683,2.018,684,2.267,685,1.844,686,1.755,688,1.326,690,2.097,698,3.374,699,2.886,703,1.942,706,1.942,724,1.844,725,1.798,726,2.405,749,2.112,750,1.891,765,2.318,801,1.755,809,2.826,865,2.496,870,3.706,930,2.71,931,2.405,932,2.597,933,2.177,934,2.247,936,3.838,984,2.247,1150,2.496,1151,3.911,1254,5.249,1286,4.817,1346,4.494,1390,2.84,1408,2.496,2254,6.421,2451,3.706,2453,3.706,2718,3.173,2965,6.997,2966,3.401,2967,5.249,2968,6.095,2969,5.249,2970,7.457,2971,4.169,2972,4.169,2973,4.169,2974,3.706,2975,4.169,2976,3.401,2977,3.401,2978,4.169,2979,4.169,2980,4.169,2981,4.169]],["title/interfaces/SinglePersonSchedule.html",[86,0.791,2982,3.561]],["body/interfaces/SinglePersonSchedule.html",[3,0.173,4,0.149,9,0.104,25,0.4,26,0.934,47,0.007,49,0.412,71,0.428,85,0.188,86,1.221,206,1.416,251,0.006,252,0.006,253,2.392,647,3.453,681,5.305,768,3.758,2377,5.978,2982,6.793,2983,5.893,2984,6.422]],["title/components/SnackbarComponent.html",[0,0.159,221,0.917]],["body/components/SnackbarComponent.html",[0,0.214,1,0.696,2,1.044,3,0.086,4,0.075,5,0.762,6,0.776,7,0.762,8,0.762,9,0.052,13,1.481,14,2.324,15,0.646,16,1.756,17,1.753,18,0.696,19,1.083,21,1.044,23,1.044,25,0.2,26,0.59,27,1.37,32,0.685,36,2.564,37,0.545,44,0.933,46,0.713,47,0.007,48,0.697,49,0.343,50,0.603,52,0.732,53,1.217,57,1.73,60,1.33,61,1.143,71,0.413,73,0.302,77,0.935,81,0.6,85,0.08,90,0.167,106,1.006,110,1.085,111,1.837,113,1.538,115,0.762,116,1.123,117,1.24,118,0.634,119,1.746,120,0.762,121,1.334,122,0.683,123,0.735,124,0.709,125,0.762,126,0.696,127,0.762,128,0.709,129,0.735,130,0.762,131,0.709,132,0.762,133,0.709,134,0.762,135,0.696,136,0.735,137,0.762,138,0.709,139,0.762,140,0.735,141,0.696,142,1.11,143,0.803,144,1.123,145,0.696,146,1.123,147,0.683,148,1.808,149,0.696,150,0.622,151,0.762,152,0.696,153,1.217,154,0.696,155,0.696,156,0.709,157,0.762,158,0.696,159,0.762,160,0.722,161,0.658,162,1.24,163,0.709,164,0.762,165,0.709,166,1.578,167,0.762,168,0.709,169,0.762,170,0.709,171,0.709,172,0.762,173,0.709,174,0.762,175,0.709,176,0.762,177,0.696,178,0.735,179,0.709,180,0.803,181,0.762,182,0.696,183,0.762,184,0.696,185,0.709,186,0.762,187,0.709,188,1.334,189,0.658,190,0.762,191,0.709,192,1.123,193,0.762,194,0.709,195,0.762,196,0.709,197,0.762,198,0.696,199,0.722,200,0.696,201,0.762,202,0.696,203,0.749,204,1.006,205,0.696,206,0.709,207,0.709,208,0.762,209,0.696,210,1.513,211,0.683,212,0.762,213,0.696,214,0.722,215,0.696,216,0.696,217,0.762,218,0.709,219,0.762,220,1.123,221,1.368,222,0.762,223,0.709,224,1.334,225,0.762,226,0.709,227,0.762,228,0.683,229,0.867,230,0.696,231,0.709,232,0.762,233,0.709,234,0.762,235,1.006,236,1.123,237,1.123,238,0.696,239,0.735,240,0.646,241,0.696,242,0.696,243,0.749,244,0.722,245,0.762,246,0.696,247,0.762,248,0.683,249,0.735,250,0.762,251,0.004,252,0.004,258,3.442,266,4.054,279,1.247,297,2.594,305,1.372,307,1.64,308,2.6,372,1.197,394,1.837,395,2.463,410,1.64,592,1.559,593,1.328,594,1.522,595,1.559,682,1.544,683,1.064,684,2.045,688,1.695,690,1.935,693,2.35,694,1.559,695,2.242,699,3.277,703,1.684,706,2.481,718,1.695,724,1.599,725,1.559,727,2.728,728,2.797,733,3.888,739,2.091,745,1.916,746,1.599,755,2.164,756,2.085,765,2.091,801,2.242,802,1.888,809,2.549,822,1.888,853,3.462,862,4.345,872,2.751,873,2.549,940,4.178,1069,2.782,1292,4.454,1332,4.814,1826,5.584,1875,3.073,1960,2.949,1975,2.751,2175,2.251,2985,3.214,2986,6.325,2987,5.327,2988,6.325,2989,7.784,2990,5.327,2991,5.16,2992,5.327,2993,6.325,2994,3.214,2995,5.302,2996,3.615,2997,3.615,2998,4.735,2999,3.615,3000,3.615,3001,3.615,3002,5.327,3003,3.615,3004,3.615,3005,5.327,3006,3.615,3007,5.327,3008,3.615,3009,3.615,3010,3.615,3011,2.949,3012,2.462,3013,3.615,3014,3.615,3015,3.615,3016,3.615,3017,3.615,3018,2.949,3019,3.615,3020,3.615,3021,3.615,3022,3.615,3023,3.615,3024,3.615,3025,3.615,3026,3.615,3027,3.615,3028,3.615,3029,3.214,3030,3.615,3031,3.615,3032,3.615,3033,5.327,3034,5.327,3035,5.327]],["title/interfaces/SnackbarData.html",[86,0.791,3012,3.187]],["body/interfaces/SnackbarData.html",[3,0.171,4,0.148,9,0.103,25,0.397,26,0.93,47,0.007,49,0.411,85,0.16,86,1.212,88,1.681,251,0.006,252,0.006,253,2.375,258,4.057,305,1.448,395,2.599,940,5.327,2991,7.484,3012,5.717,3018,7.259,3036,6.374]],["title/components/SnackbarOutletComponent.html",[0,0.159,223,0.917]],["body/components/SnackbarOutletComponent.html",[0,0.239,1,0.846,2,1.201,3,0.105,4,0.091,5,0.927,6,0.944,7,0.927,8,0.927,9,0.063,15,0.786,16,1.77,17,1.769,18,0.846,19,1.246,21,1.201,23,1.201,25,0.339,26,0.679,27,1.17,32,0.788,37,0.663,44,0.748,46,0.821,47,0.007,48,0.659,49,0.283,50,0.694,52,0.509,60,0.786,61,0.676,71,0.418,73,0.367,77,1.075,81,0.729,85,0.098,88,1.333,90,0.203,106,0.831,110,1.319,111,1.517,112,2.227,115,0.927,116,1.293,117,1.383,118,0.771,119,1.581,120,0.927,121,1.488,122,0.831,123,0.894,124,0.862,125,0.927,126,0.846,127,0.927,128,0.862,129,0.894,130,0.927,131,0.862,132,0.927,133,0.862,134,0.927,135,0.846,136,0.894,137,0.927,138,0.862,139,0.927,140,0.894,141,0.846,142,1.238,143,0.924,144,1.293,145,0.846,146,1.293,147,0.831,148,1.888,149,0.846,150,0.757,151,0.927,152,0.846,153,1.358,154,0.846,155,0.846,156,0.862,157,0.927,158,0.846,159,0.927,160,0.878,161,0.801,162,1.383,163,0.862,164,0.927,165,0.862,166,1.201,167,0.927,168,0.862,169,0.927,170,0.862,171,0.862,172,0.927,173,0.862,174,0.927,175,0.862,176,0.927,177,0.846,178,0.894,179,0.862,180,0.924,181,0.927,182,0.846,183,0.927,184,0.846,185,0.862,186,0.927,187,0.862,188,1.488,189,0.801,190,0.927,191,0.862,192,1.293,193,0.927,194,0.862,195,0.927,196,0.862,197,0.927,198,0.846,199,0.878,200,0.846,201,0.927,202,0.846,203,0.91,204,1.158,205,0.846,206,0.862,207,0.862,208,0.927,209,0.846,210,1.632,211,0.831,212,0.927,213,0.846,214,0.878,215,0.846,216,0.846,217,0.927,218,0.862,219,0.927,220,1.293,221,0.862,222,0.927,223,1.496,224,1.835,225,0.927,226,0.862,227,0.927,228,0.831,229,0.997,230,0.846,231,0.862,232,0.927,233,0.862,234,0.927,235,1.158,236,1.293,237,1.293,238,0.846,239,0.894,240,0.786,241,0.846,242,0.846,243,0.91,244,0.878,245,0.927,246,0.846,247,0.927,248,0.831,249,0.894,250,0.927,251,0.004,252,0.004,279,1.517,305,1.242,372,1.456,387,5.448,682,1.073,683,2.077,685,1.944,686,1.851,688,1.399,690,1.345,693,2.858,702,2.995,710,2.164,712,3.154,714,1.581,715,1.616,721,1.688,746,2.711,801,1.851,809,2.104,822,2.296,825,2.164,1332,4.665,1888,3.154,1945,3.346,2257,6.227,2994,3.908,2995,5.663,3011,3.586,3012,5.2,3037,6.786,3038,3.908,3039,7.056,3040,6.129,3041,6.273,3042,6.129,3043,6.129,3044,6.129,3045,4.397,3046,4.397,3047,6.129,3048,4.397,3049,3.908,3050,4.397,3051,4.397]],["title/injectables/SnackbarService.html",[319,1.648,2995,3.187]],["body/injectables/SnackbarService.html",[3,0.143,4,0.123,9,0.086,25,0.331,26,0.832,27,1.586,28,3.086,32,0.965,37,1.238,44,0.942,46,1.005,47,0.007,48,0.595,49,0.347,50,0.851,52,0.951,53,1.581,60,1.342,61,1.154,62,1.612,71,0.526,73,0.498,83,1.598,85,0.133,88,1.552,90,0.276,93,2.308,251,0.005,252,0.005,258,3.32,305,1.475,319,2.644,321,3.024,323,2.437,370,3.024,371,2.856,395,2.442,509,4.282,768,3.739,940,5.317,1289,7.662,1324,3.717,1326,5.306,1327,6.7,1332,5.714,1826,5.386,2991,7.031,2995,5.114,2998,6.674,3012,4.065,3018,6.7,3041,7.301,3052,5.306,3053,7.508,3054,5.969,3055,7.508,3056,5.969,3057,5.969,3058,7.508,3059,5.969,3060,7.508,3061,5.969,3062,5.969,3063,7.508,3064,5.969,3065,5.969,3066,5.969,3067,5.969]],["title/interfaces/Status.html",[81,0.776,86,0.791]],["body/interfaces/Status.html",[3,0.143,4,0.123,9,0.086,25,0.331,26,0.832,47,0.007,48,0.718,49,0.41,71,0.444,81,1.603,85,0.167,86,1.501,88,1.552,111,2.59,229,1.548,251,0.005,252,0.005,253,1.976,255,1.354,275,2.72,290,2.342,298,4.009,304,5.714,305,1.337,394,2.59,395,2.68,576,4.065,681,4.331,682,1.832,686,2.513,701,6.124,713,5.114,744,2.773,960,2.856,2083,6.56,2370,4.88,2371,5.386,3068,4.869,3069,6.674,3070,8.274,3071,8.059,3072,6.56,3073,5.386,3074,6.124,3075,5.714,3076,5.714,3077,5.714,3078,5.306,3079,5.306]],["title/pipes/StatusColorPipe.html",[1000,1.683,3080,3.357]],["body/pipes/StatusColorPipe.html",[3,0.164,4,0.141,9,0.098,13,1.903,15,1.224,32,0.88,44,0.726,46,0.917,47,0.007,48,0.692,49,0.316,50,0.776,52,0.793,60,1.224,61,1.255,71,0.483,73,0.572,81,1.135,82,4.45,85,0.152,90,0.316,106,1.707,251,0.006,252,0.006,699,2.882,753,5.211,1000,2.937,1875,5.405,1945,6.642,2175,4.264,2368,6.086,2371,5.859,3074,6.662,3080,5.859,3081,4.264,3082,7.259,3083,6.086,3084,8.166,3085,5.562,3086,6.847,3087,5.562,3088,6.847,3089,8.166]],["title/components/StatusLabelComponent.html",[0,0.159,226,0.917]],["body/components/StatusLabelComponent.html",[0,0.177,1,0.512,2,0.825,3,0.063,4,0.055,5,0.561,6,0.571,7,0.561,8,0.561,9,0.038,15,0.475,16,1.729,17,1.723,18,0.512,19,0.856,21,0.825,23,0.825,25,0.147,26,0.467,27,1.488,29,1.767,32,0.541,37,0.401,44,0.978,46,1.003,47,0.007,48,0.65,49,0.401,50,0.848,52,0.963,53,1.601,57,1.272,60,1.466,61,1.279,62,1.731,64,1.02,68,1.509,71,0.443,73,0.222,74,0.863,77,0.739,81,1.471,82,1.728,83,0.712,85,0.059,88,1.302,89,2.1,90,0.123,91,1.667,106,1.123,110,1.944,113,1.717,114,1.599,115,0.561,116,0.888,117,1.27,118,0.739,119,1.669,120,0.561,121,1.102,122,0.502,123,0.54,124,0.521,125,0.561,126,0.512,127,0.561,128,0.521,129,0.54,130,0.561,131,0.521,132,0.561,133,0.521,134,0.561,135,0.512,136,0.54,137,0.561,138,0.521,139,0.561,140,1.75,141,0.512,142,0.917,143,0.635,144,0.888,145,0.512,146,0.888,147,0.502,148,1.666,149,0.512,150,0.458,151,0.561,152,0.512,153,1.006,154,0.512,155,0.512,156,0.521,157,0.561,158,0.512,159,0.561,160,0.531,161,0.484,162,1.025,163,0.521,164,0.561,165,0.521,166,1.468,167,0.561,168,0.521,169,0.561,170,0.521,171,0.521,172,0.561,173,0.521,174,0.561,175,0.521,176,0.561,177,0.512,178,0.54,179,0.521,180,0.635,181,0.561,182,0.512,183,0.561,184,0.512,185,0.521,186,0.561,187,0.521,188,1.102,189,0.484,190,0.561,191,0.521,192,0.888,193,0.561,194,0.521,195,0.561,196,0.521,197,0.561,198,0.512,199,0.531,200,0.512,201,0.561,202,0.512,203,0.55,204,0.795,205,0.512,206,0.521,207,0.521,208,0.561,209,0.512,210,1.318,211,0.502,212,0.561,213,0.512,214,0.531,215,0.512,216,0.512,217,0.561,218,0.521,219,0.561,220,0.888,221,0.521,222,0.561,223,0.521,224,0.561,225,0.561,226,1.165,227,0.561,228,0.502,229,0.685,230,0.512,231,0.521,232,0.561,233,0.521,234,0.561,235,0.795,236,1.367,237,0.888,238,0.512,239,0.54,240,0.475,241,0.512,242,0.512,243,0.872,244,0.531,245,0.561,246,0.512,247,0.561,248,0.502,249,0.54,250,0.561,251,0.003,252,0.003,255,1.349,257,1.068,274,1.433,275,2.068,279,0.917,281,3.127,284,0.998,290,0.829,293,2.649,298,1.176,308,1.731,323,0.863,325,2.649,358,2.817,362,1.388,394,2.235,395,2.283,396,2.629,424,2.737,540,2.817,544,4.023,560,3.129,607,1.533,647,1.581,651,2.072,673,1.591,678,3.434,682,1.276,683,1.239,684,2.007,687,3.021,688,0.846,690,1.599,691,2.429,695,2.503,699,1.119,703,1.238,704,1.907,706,1.238,710,2.072,714,1.514,715,1.547,716,1.921,717,0.956,718,0.846,724,1.176,725,1.147,727,2.565,728,2.629,743,1.656,745,0.956,748,2.345,750,1.206,751,1.308,756,2.429,765,1.653,768,2.201,781,1.811,800,1.481,814,1.481,815,1.481,829,1.119,848,3.015,852,1.656,853,1.728,872,2.023,873,1.272,927,1.656,960,2.015,964,2.52,965,2.52,966,4.73,967,3.879,968,3.129,969,3.129,970,2.52,971,2.52,972,2.52,973,2.52,974,2.52,976,5.107,977,1.656,978,1.591,979,2.345,980,1.591,981,1.591,982,1.533,983,1.433,984,1.433,985,1.656,986,4.258,987,2.345,988,1.481,989,1.656,990,1.533,991,1.481,992,1.656,993,3.879,994,1.591,995,1.481,996,1.533,997,1.533,998,1.591,999,1.591,1000,1.514,1001,2.52,1002,1.591,1003,1.656,1004,2.52,1005,2.015,1006,4.126,1007,1.591,1008,2.912,1009,1.533,1010,2.912,1011,2.52,1012,1.91,1013,3.559,1014,1.481,1015,1.591,1016,2.52,1017,1.591,1018,1.656,1019,1.591,1020,1.591,1021,1.656,1022,2.52,1023,1.591,1024,1.591,1025,1.728,1026,1.656,1027,1.656,1028,1.656,1029,1.656,1030,1.656,1031,1.591,1032,2.345,1033,1.656,1034,2.52,1037,1.656,1038,1.728,1039,1.656,1069,2.199,1073,2.737,1074,3.021,1075,3.561,1077,1.811,1107,2.168,1108,1.811,1109,2.168,1292,3.559,1324,3.256,1325,1.481,1350,4.525,1497,2.168,1616,1.907,1617,1.728,1618,1.907,1679,1.728,1728,3.751,1788,2.023,1826,4.266,1907,3.979,1908,6.127,1909,4.85,1910,3.434,1923,3.204,1927,3.743,1933,2.363,1935,2.363,1937,2.168,1940,2.168,1954,2.363,1955,2.363,1956,2.363,1957,2.168,1958,2.363,1959,2.023,1960,4.264,1961,2.363,1962,2.363,1963,2.363,1964,2.363,1965,3.743,1974,3.021,1975,2.023,1983,2.168,2349,2.168,2728,2.363,2977,2.168,3029,2.363,3090,7.78,3091,7.14,3092,2.363,3093,5.228,3094,4.21,3095,6.856,3096,5.228,3097,4.21,3098,2.658,3099,4.21,3100,2.658,3101,2.658,3102,4.647,3103,2.658,3104,2.658,3105,2.658,3106,4.21,3107,2.658,3108,2.658,3109,2.658,3110,2.658,3111,2.658,3112,2.658,3113,2.658,3114,2.658,3115,2.658,3116,2.658,3117,2.658,3118,2.658,3119,2.658,3120,2.658,3121,2.658,3122,2.658,3123,4.21]],["title/injectables/StatusService.html",[319,1.648,545,3.041]],["body/injectables/StatusService.html",[3,0.097,4,0.084,9,0.058,25,0.225,27,1.566,32,0.744,37,0.611,44,0.904,46,1.141,47,0.007,48,0.675,49,0.393,50,0.966,52,1.041,62,1.243,68,2.756,71,0.479,73,0.338,81,1.638,83,1.085,85,0.09,88,1.799,89,3.613,90,0.187,91,0.824,93,1.972,106,1.639,129,1.497,142,1.578,143,1.327,150,1.268,180,1.221,229,1.099,251,0.004,252,0.004,255,1.767,305,0.942,311,3.406,319,2.039,320,4.103,321,2.054,330,4.743,370,2.054,371,1.94,372,1.342,491,2.427,510,2.761,514,2.849,544,4.644,545,3.763,560,4.408,576,5.016,602,3.604,619,5.507,638,5.146,681,4.492,744,2.796,768,1.707,838,4.586,1012,3.341,1154,3.605,1380,3.763,1588,3.307,1592,3.604,2330,4.722,2534,4.722,2536,4.153,2537,5.146,3095,6.922,3124,3.604,3125,5.789,3126,4.054,3127,5.789,3128,4.054,3129,5.146,3130,4.054,3131,7.996,3132,4.722,3133,4.054,3134,4.054,3135,4.054,3136,5.789,3137,4.054,3138,5.146,3139,4.054,3140,5.146,3141,3.604,3142,4.054,3143,4.054,3144,4.054,3145,4.054,3146,4.054,3147,4.054,3148,5.789,3149,5.789,3150,5.789,3151,4.054,3152,4.054,3153,4.054,3154,4.054,3155,4.054,3156,5.789,3157,4.054,3158,4.054,3159,4.054,3160,4.054,3161,4.054,3162,5.789,3163,4.054,3164,4.054]],["title/interfaces/StatusWithTasks.html",[86,0.791,576,3.187]],["body/interfaces/StatusWithTasks.html",[3,0.154,4,0.133,9,0.092,25,0.356,26,0.871,47,0.007,48,0.623,49,0.297,71,0.465,81,1.601,85,0.175,86,1.534,88,1.214,111,2.217,229,1.557,251,0.006,252,0.006,253,2.129,255,1.458,275,2.359,290,2.005,298,3.756,304,4.893,305,1.046,394,2.217,395,2.506,576,5.355,681,5.326,682,1.569,686,3.31,701,5.244,713,4.378,744,2.405,960,3.762,2083,5.983,2370,4.178,2371,4.612,3068,5.244,3069,5.714,3070,7.549,3071,6.988,3072,5.983,3073,4.612,3074,5.244,3075,4.893,3076,4.893,3077,4.893,3078,5.714,3079,5.714]],["title/interfaces/Task.html",[86,0.791,229,0.761]],["body/interfaces/Task.html",[3,0.114,4,0.099,9,0.068,25,0.264,26,0.719,47,0.007,48,0.676,49,0.441,50,1.091,62,1.025,71,0.283,77,0.837,81,1.076,85,0.144,86,1.397,87,2.111,88,1.76,89,1.917,143,1.285,161,1.638,171,1.74,180,1.192,229,1.585,251,0.005,252,0.005,253,1.581,255,1.979,275,2.558,305,1.555,330,3.971,560,4.732,646,6.254,647,2.436,658,3.633,659,5.291,744,2.831,787,5.138,821,5.807,960,2.284,1068,3.894,1080,3.894,1284,3.89,1461,3.425,1544,4.418,1590,6.016,1668,3.496,1669,3.496,1676,2.973,1677,2.973,1729,5.666,1759,4.937,2370,4.216,2655,4.654,3072,5.608,3075,6.016,3076,6.016,3077,4.937,3165,3.894,3166,6.016,3167,7.027,3168,6.955,3169,5.766,3170,5.766,3171,5.766,3172,5.291,3173,4.654,3174,4.654,3175,3.425,3176,4.243,3177,7.027,3178,3.633,3179,4.243,3180,3.894,3181,3.633,3182,3.633]],["title/components/TaskDialog.html",[0,0.159,228,0.884]],["body/components/TaskDialog.html",[0,0.18,1,0.522,2,0.839,3,0.065,4,0.056,5,0.572,6,0.583,7,0.572,8,0.572,9,0.039,13,1.189,14,1.947,15,0.485,16,1.731,17,1.726,18,0.522,19,0.87,20,2.306,21,0.839,23,0.839,25,0.15,26,0.474,27,1.55,28,2.472,29,2.032,30,3.609,31,3.444,32,0.55,34,4.011,35,4.577,36,2.21,37,0.645,38,2.213,40,3.609,41,3.746,42,4.032,43,3.909,44,0.944,46,0.709,47,0.007,48,0.615,49,0.381,50,0.6,52,0.843,53,1.401,57,1.298,58,2.915,60,1.301,61,1.159,62,2.04,63,2.285,65,2.629,66,3.698,68,2.34,71,0.516,72,1.848,73,0.227,74,0.881,75,1.764,76,1.69,77,0.929,78,1.511,79,2.065,80,2.065,81,0.71,82,1.764,83,0.726,84,2.065,85,0.118,86,0.459,87,3.336,88,1.425,89,3.03,90,0.125,91,1.331,92,2.065,93,1.61,94,2.065,95,3.801,96,2.065,97,3.257,98,1.947,99,3.257,100,1.947,101,2.065,102,2.065,103,1.335,104,1.335,105,1.511,106,0.808,108,1.848,113,0.783,114,0.83,115,0.572,116,0.902,117,1.038,118,0.476,119,1.245,120,0.572,121,1.117,122,0.513,123,0.552,124,0.532,125,0.572,126,0.522,127,0.572,128,0.532,129,0.552,130,0.572,131,0.532,132,0.572,133,0.532,134,0.572,135,0.522,136,0.552,137,0.572,138,0.532,139,0.572,140,0.552,141,0.522,142,1.485,143,0.799,144,0.902,145,0.522,146,0.902,147,0.513,148,1.676,149,0.522,150,0.467,151,0.572,152,0.522,153,1.401,154,0.522,155,0.522,156,0.532,157,0.572,158,0.522,159,0.572,160,0.542,161,1.414,162,1.427,163,0.532,164,0.572,165,0.532,166,0.839,167,0.572,168,0.532,169,0.572,170,0.532,171,0.532,172,0.572,173,0.532,174,0.572,175,0.532,176,0.572,177,0.522,178,0.552,179,0.532,180,0.645,181,0.572,182,0.522,183,0.572,184,0.522,185,0.532,186,0.572,187,0.532,188,1.117,189,0.494,190,0.572,191,0.532,192,0.902,193,0.572,194,0.532,195,0.572,196,0.532,197,0.572,198,0.522,199,0.542,200,0.522,201,0.572,202,0.522,203,0.562,204,0.808,205,0.522,206,0.532,207,0.532,208,0.572,209,0.522,210,1.331,211,0.513,212,0.572,213,0.522,214,0.542,215,0.522,216,0.522,217,0.572,218,0.532,219,0.572,220,0.902,221,0.532,222,0.572,223,0.532,224,0.572,225,0.572,226,0.532,227,0.572,228,1.136,229,1.319,230,0.522,231,0.532,232,0.572,233,0.532,234,0.572,235,0.808,236,0.902,237,0.902,238,0.522,239,0.552,240,0.485,241,0.522,242,0.522,243,0.562,244,0.542,245,0.572,246,0.522,247,0.572,248,0.513,249,0.552,250,0.572,251,0.003,252,0.003,255,0.971,265,3.909,275,1.59,284,2.458,290,0.846,293,1.375,301,2.665,330,2.306,545,4.732,560,3.918,589,1.462,599,4.254,600,4.533,603,1.947,612,2.065,646,4.737,678,3.491,744,1.309,768,1.142,786,3.3,787,2.781,821,2.915,991,3.35,1008,2.384,1106,1.298,1151,3.484,1204,2.781,1221,3.923,1248,1.69,1324,4.076,1345,3.257,1346,3.257,1373,4.315,1382,5.984,1390,1.848,1668,1.462,1669,1.462,1676,1.69,1677,1.69,1678,1.764,1729,4.331,2110,3.804,2342,4.322,2572,2.213,2573,2.213,2655,3.07,2976,2.213,3166,3.257,3178,4.032,3181,4.032,3182,3.257,3183,2.065,3184,4.71,3185,3.804,3186,4.71,3187,4.71,3188,4.71,3189,4.71,3190,4.71,3191,4.71,3192,5.346,3193,4.279,3194,4.279,3195,2.713,3196,2.713,3197,2.713,3198,2.713,3199,2.713,3200,2.713,3201,3.804,3202,2.713,3203,3.804,3204,2.713,3205,2.713,3206,3.804,3207,4.315,3208,3.804,3209,6.182,3210,2.713,3211,2.713,3212,2.713,3213,2.713,3214,2.713,3215,2.713,3216,3.804,3217,2.713,3218,2.713,3219,3.804,3220,2.713,3221,3.804,3222,2.713,3223,2.713,3224,2.213,3225,2.412,3226,4.032,3227,3.491,3228,2.412,3229,2.213,3230,4.032,3231,2.213,3232,2.213,3233,2.412,3234,2.412,3235,2.412,3236,2.412,3237,2.412,3238,2.412,3239,3.804,3240,2.412,3241,2.412,3242,2.412,3243,2.213,3244,2.412,3245,2.412,3246,2.412,3247,2.412,3248,2.412,3249,3.804,3250,3.804,3251,2.412,3252,3.804,3253,2.412,3254,2.412,3255,2.412,3256,2.412,3257,3.804,3258,2.412,3259,2.412,3260,4.279,3261,4.279,3262,4.279,3263,4.279,3264,4.279,3265,2.713]],["title/interfaces/TaskDialogData.html",[86,0.791,599,3.041]],["body/interfaces/TaskDialogData.html",[0,0.207,3,0.105,4,0.09,9,0.063,13,1.217,14,2.245,16,0.782,17,0.782,20,2.359,21,0.858,23,0.858,25,0.242,26,0.677,27,1.499,28,1.799,29,1.479,30,2.981,31,2.845,34,2.525,35,3.331,36,1.608,37,0.66,40,2.981,41,3.805,42,3.331,43,3.972,47,0.007,48,0.347,49,0.383,50,0.94,58,2.981,61,0.673,62,2.039,63,2.636,65,2.827,66,3.768,68,2.397,71,0.556,72,2.981,73,0.365,74,1.42,75,2.845,76,2.726,77,0.768,78,2.438,79,3.331,80,3.331,81,0.726,82,2.845,83,1.172,84,3.331,85,0.157,86,0.74,87,3.905,88,1.642,89,3.546,90,0.202,91,1.629,92,3.331,93,2.04,94,3.331,95,5.05,96,3.331,97,4.65,98,3.14,99,4.65,100,3.14,101,3.331,102,3.331,103,2.154,104,2.154,105,2.438,106,1.154,108,2.981,142,1.072,143,0.66,153,1.176,161,1.112,162,1.198,228,0.827,229,1.414,251,0.004,252,0.004,253,1.449,255,0.993,265,2.845,275,2.286,284,2.861,290,1.365,293,3.86,301,3.805,545,4.576,560,4.561,589,2.359,599,4.576,600,5.17,603,3.14,612,3.331,646,4.162,744,1.339,768,1.843,786,4.745,787,2.845,821,2.981,991,3.404,1106,2.094,1151,3.369,1221,3.794,1248,2.726,1324,4.745,1382,6.014,1390,2.981,1668,2.359,1669,2.359,1676,2.726,1677,2.726,1678,2.845,1729,3.805,2342,3.57,2572,3.57,2573,3.57,2655,3.14,2976,3.57,3166,3.331,3178,4.65,3181,4.65,3182,3.331,3183,3.331,3184,3.89,3185,3.89,3186,3.89,3187,3.89,3188,3.89,3189,3.89,3190,3.89,3191,3.89,3192,3.89,3201,3.89,3203,3.89,3206,3.89,3207,3.14,3208,3.89,3209,6.257,3216,3.89,3219,3.89,3221,3.89,3224,3.57,3225,3.89,3226,3.331,3227,4.984,3228,3.89,3229,3.57,3230,3.331,3231,3.57,3232,3.57,3233,6.257,3234,3.89,3235,3.89,3236,3.89,3237,3.89,3238,3.89,3239,5.431,3240,3.89,3241,3.89,3242,3.89,3243,3.57,3244,3.89,3245,3.89,3246,3.89,3247,3.89,3248,3.89,3249,5.431,3250,5.431,3251,3.89,3252,5.431,3253,3.89,3254,3.89,3255,3.89,3256,3.89,3257,5.431,3258,3.89,3259,3.89]],["title/components/TaskListPage.html",[0,0.159,230,0.9]],["body/components/TaskListPage.html",[0,0.162,1,0.45,2,0.744,3,0.056,4,0.048,5,0.493,6,0.502,7,0.493,8,0.493,9,0.033,15,0.418,16,1.715,17,1.71,18,0.45,19,1.122,21,0.744,23,0.744,25,0.129,26,0.421,27,1.51,30,4.431,32,0.488,37,0.572,44,0.947,46,0.956,47,0.007,48,0.627,49,0.387,50,0.809,52,0.827,53,1.062,60,1.388,61,1.193,62,1.472,65,1.926,68,2.132,71,0.517,73,0.195,74,0.758,77,0.666,81,1.137,82,1.519,83,0.625,85,0.052,87,1.033,88,1.395,89,2.613,90,0.108,91,1.394,93,1.478,106,1.295,109,2.584,110,1.822,111,1.309,112,1.184,113,2.132,114,1.857,115,0.493,116,0.8,117,1.275,118,0.41,119,1.479,120,0.493,121,1.011,122,0.441,123,0.475,124,0.458,125,0.493,126,0.45,127,0.493,128,0.458,129,0.475,130,0.493,131,0.458,132,0.493,133,0.458,134,0.493,135,0.45,136,0.475,137,0.493,138,0.458,139,0.493,140,0.475,141,0.45,142,1.203,143,0.981,144,0.8,145,0.45,146,0.8,147,0.441,148,1.6,149,0.45,150,1.046,151,0.493,152,0.45,153,1.319,154,0.45,155,0.45,156,0.458,157,0.493,158,0.45,159,0.493,160,0.466,161,0.425,162,0.94,163,0.458,164,0.493,165,0.458,166,0.744,167,0.493,168,0.458,169,0.493,170,0.458,171,1.275,172,0.493,173,0.458,174,0.493,175,0.458,176,0.493,177,0.45,178,0.475,179,0.458,180,0.915,181,0.493,182,0.45,183,0.493,184,0.45,185,0.458,186,0.493,187,0.458,188,1.011,189,0.425,190,0.493,191,0.458,192,0.8,193,0.493,194,0.458,195,0.493,196,0.458,197,0.493,198,0.45,199,0.466,200,0.45,201,0.493,202,0.45,203,0.484,204,0.717,205,0.45,206,0.458,207,0.458,208,0.493,209,0.45,210,1.235,211,0.441,212,0.493,213,0.45,214,0.466,215,0.45,216,0.45,217,0.493,218,0.458,219,0.493,220,0.8,221,0.458,222,0.493,223,0.458,224,0.493,225,0.493,226,0.458,227,0.493,228,0.717,229,1.525,230,1.062,231,0.458,232,0.493,233,0.458,234,0.493,235,0.717,236,0.8,237,0.8,238,0.45,239,0.475,240,0.418,241,0.45,242,0.45,243,0.484,244,0.466,245,0.493,246,0.45,247,0.493,248,0.441,249,0.475,250,0.493,251,0.003,252,0.003,257,2.613,272,1.22,279,0.806,290,1.184,293,1.184,305,0.38,323,1.556,343,1.519,358,2.584,360,1.184,394,1.309,395,1.843,396,2.12,428,0.701,529,5.307,530,5.783,531,5.307,532,5.307,533,4.229,542,1.519,543,3.113,544,3.819,545,4.456,546,3.11,547,3.374,548,3.954,555,4.262,560,1.398,586,2.115,587,1.519,588,1.455,589,1.259,590,1.519,591,1.778,592,1.008,593,1.395,594,0.984,595,1.008,600,1.455,606,1.301,607,2.19,608,1.778,609,2.077,612,2.889,616,2.077,618,2.077,619,1.906,649,2.889,654,1.455,668,1.676,669,1.676,670,1.398,671,1.906,673,2.87,679,3.911,680,2.889,681,2.19,682,1.743,683,1.625,684,2.742,688,2.273,689,1.22,690,1.99,693,1.519,694,2.957,695,3.109,697,2.077,698,1.868,699,1.598,700,1.906,702,1.591,703,2.233,704,3.44,705,2.077,706,2.233,710,1.15,712,1.676,714,1.365,715,1.395,716,1.762,717,0.84,718,1.208,721,1.457,724,1.679,725,1.637,727,2.957,728,2.441,733,3.624,739,0.917,743,1.455,744,1.161,745,1.986,746,2.685,747,3.76,748,1.301,749,1.184,750,1.06,751,1.15,752,1.348,753,1.778,757,4.202,763,2.889,764,3.374,768,2.018,772,2.889,779,1.398,780,1.778,781,1.591,782,2.364,783,2.077,785,2.077,786,4.449,787,1.519,789,2.077,790,4.262,791,1.778,792,1.778,793,1.906,794,1.676,795,1.676,796,2.077,798,3.374,800,1.301,801,2.018,802,1.982,809,1.118,811,3.096,814,1.301,815,1.301,821,2.585,822,1.22,869,1.778,873,1.118,881,2.723,931,1.348,942,1.348,983,1.259,1325,2.671,1347,3.649,1382,2.585,1581,3.782,1587,1.676,1588,1.906,1728,1.676,1974,3.44,1975,1.778,2156,4.669,2165,1.906,2346,2.077,2347,2.077,2348,2.077,2349,1.906,2555,1.778,2556,3.911,2557,3.096,2563,2.077,2683,2.077,2720,2.077,2977,1.906,3168,1.906,3232,1.906,3243,1.906,3266,7.972,3267,6.825,3268,4.794,3269,4.794,3270,4.262,3271,4.794,3272,5.52,3273,3.796,3274,3.796,3275,3.796,3276,3.796,3277,5.52,3278,3.796,3279,3.374,3280,2.336,3281,3.796,3282,2.336,3283,4.794,3284,3.796,3285,2.336,3286,3.796,3287,2.336,3288,3.796,3289,2.336,3290,3.796,3291,2.336,3292,2.336,3293,3.796,3294,2.336,3295,2.336,3296,2.336,3297,2.336,3298,2.336,3299,2.077,3300,2.336,3301,2.336,3302,2.336,3303,2.336,3304,2.336,3305,2.336,3306,2.336,3307,2.336,3308,2.077,3309,2.336,3310,2.336,3311,2.336,3312,2.336,3313,2.336,3314,3.796,3315,3.796,3316,2.336,3317,2.336,3318,2.336,3319,2.336,3320,2.336,3321,3.796,3322,2.336,3323,2.336,3324,2.336,3325,2.336,3326,2.336,3327,2.336,3328,2.336,3329,2.336,3330,2.336,3331,2.336,3332,3.796,3333,3.796,3334,3.796,3335,3.374,3336,2.336,3337,2.336,3338,3.796,3339,2.336,3340,3.796]],["title/pipes/TaskPriorityIconPipe.html",[1000,1.683,3341,3.357]],["body/pipes/TaskPriorityIconPipe.html",[3,0.166,4,0.143,9,0.099,13,1.928,15,1.239,32,0.891,44,0.735,46,0.928,47,0.007,48,0.695,49,0.32,50,0.786,52,0.803,61,1.265,71,0.41,73,0.579,85,0.154,90,0.32,106,1.751,251,0.006,252,0.006,699,2.919,1000,2.96,1875,5.345,2175,4.319,3081,4.319,3085,5.605,3087,5.605,3207,5.904,3341,5.904,3342,5.904,3343,5.657,3344,8.229,3345,6.935,3346,5.657,3347,6.935,3348,5.657,3349,6.935,3350,5.657,3351,6.935,3352,5.657,3353,6.935,3354,5.657,3355,6.935]],["title/pipes/TaskPriorityPipe.html",[1000,1.683,3356,3.357]],["body/pipes/TaskPriorityPipe.html",[3,0.166,4,0.144,9,0.1,13,1.933,15,1.243,32,0.894,44,0.737,46,0.931,47,0.007,48,0.696,49,0.321,50,0.788,52,0.805,61,1.267,71,0.412,73,0.581,85,0.155,90,0.321,106,1.752,251,0.006,252,0.006,699,2.928,1000,2.965,1875,5.349,2175,4.331,3081,4.331,3085,5.614,3087,5.614,3226,6.274,3342,5.914,3346,5.673,3348,5.673,3350,5.673,3352,5.673,3354,5.673,3356,5.914,3357,6.182,3358,6.955,3359,6.955,3360,6.955,3361,6.955,3362,6.955,3363,6.955]],["title/injectables/TaskService.html",[319,1.648,544,2.606]],["body/injectables/TaskService.html",[3,0.06,4,0.052,9,0.036,20,4.578,25,0.138,26,0.444,27,1.536,32,0.515,37,0.865,44,0.869,46,1.06,47,0.007,48,0.627,49,0.366,50,0.897,52,1.028,60,0.896,61,0.383,62,1.664,68,2.673,71,0.508,73,0.208,81,1.214,83,0.668,85,0.056,88,1.79,89,3.65,90,0.115,91,1.536,93,1.536,106,1.723,109,2.702,136,1.489,142,1.36,143,1.346,150,1.411,153,0.77,180,1.104,206,1.552,228,0.471,229,1.598,251,0.003,252,0.003,255,1.796,257,1.002,258,1.103,263,1.79,265,1.622,272,3.823,277,1.899,290,1.564,293,2.906,309,1.79,310,1.7,311,3.467,319,1.41,320,3.827,321,1.264,330,3.946,334,2.727,343,1.622,370,1.264,371,1.194,491,1.494,514,2.823,544,2.23,546,3.195,547,3.466,548,4.063,560,3.001,586,2.23,587,1.622,588,1.554,589,1.345,590,1.622,591,1.899,599,2.602,600,1.554,603,1.79,647,3.119,652,3.558,654,3.573,655,2.035,656,2.035,662,2.035,668,3.596,669,2.872,670,3.001,680,3.047,681,4.567,744,2.745,768,2.415,779,1.494,780,1.899,782,2.493,786,4.704,787,1.622,794,1.79,795,1.79,1000,2.533,1012,3.658,1032,3.195,1045,1.899,1106,3.005,1154,2.493,1158,4.383,1221,3.796,1248,1.554,1279,2.727,1300,5.972,1325,3.195,1344,3.558,1373,2.872,1380,2.602,1518,5.877,1581,3.122,1587,1.79,1590,1.899,1593,2.218,1678,1.622,1679,1.622,1728,5.786,2330,3.265,2332,4.089,2534,3.265,2536,2.872,2712,2.218,2995,4.797,3011,2.035,3129,3.558,3131,7.688,3132,5.746,3138,3.558,3140,6.508,3141,3.558,3172,3.265,3175,5.253,3364,2.218,3365,7.75,3366,4.003,3367,4.003,3368,5.736,3369,4.003,3370,4.003,3371,4.003,3372,3.558,3373,4.003,3374,2.495,3375,6.889,3376,5.013,3377,4.003,3378,4.003,3379,2.495,3380,2.495,3381,2.495,3382,4.003,3383,2.495,3384,7.321,3385,2.495,3386,2.495,3387,4.003,3388,5.736,3389,2.495,3390,4.003,3391,2.495,3392,4.003,3393,2.495,3394,4.003,3395,4.003,3396,2.495,3397,2.495,3398,2.035,3399,2.495,3400,2.495,3401,5.013,3402,2.495,3403,4.003,3404,2.495,3405,2.495,3406,2.495,3407,2.495,3408,2.495,3409,2.495,3410,2.495,3411,2.495,3412,6.28,3413,4.003,3414,4.003,3415,5.736,3416,5.736,3417,4.003,3418,5.013,3419,4.003,3420,2.495,3421,2.495,3422,2.495,3423,2.495,3424,2.495,3425,2.218,3426,2.495,3427,2.495,3428,2.495,3429,2.495,3430,2.495,3431,2.495,3432,2.495,3433,4.003,3434,2.495,3435,2.495,3436,2.495,3437,2.495,3438,4.003,3439,2.495,3440,2.495,3441,2.495,3442,2.495,3443,4.003,3444,2.495,3445,2.495,3446,2.495,3447,2.495,3448,2.495,3449,2.495,3450,2.495,3451,2.495,3452,2.495,3453,4.003]],["title/pipes/TaskTypeIconPipe.html",[1000,1.683,3454,3.357]],["body/pipes/TaskTypeIconPipe.html",[3,0.165,4,0.142,9,0.099,13,1.917,15,1.232,32,0.886,44,0.731,46,0.923,47,0.007,48,0.694,49,0.404,50,0.781,52,0.798,61,1.26,71,0.408,73,0.576,85,0.154,90,0.318,106,1.748,229,1.122,251,0.006,252,0.006,699,2.903,786,4.294,1000,2.95,1729,4.294,1875,5.337,2175,4.294,3081,4.294,3085,5.586,3087,5.586,3173,4.947,3174,4.947,3342,5.884,3343,5.625,3454,5.884,3455,8.201,3456,6.895,3457,6.895,3458,6.129,3459,6.129,3460,6.129,3461,6.129,3462,6.129]],["title/pipes/TaskTypePipe.html",[1000,1.683,3463,3.357]],["body/pipes/TaskTypePipe.html",[3,0.135,4,0.117,9,0.081,13,1.57,15,1.01,32,0.726,44,0.849,46,1.072,47,0.007,48,0.768,49,0.447,50,0.907,52,0.927,60,1.296,61,1.429,71,0.474,73,0.472,85,0.126,88,1.067,90,0.261,106,1.689,229,1.303,251,0.005,252,0.005,305,1.374,343,3.671,395,2.722,647,2.121,698,4.645,699,3.37,786,4.515,1000,2.607,1628,4.299,1729,4.515,1875,5.038,1885,5.021,2175,3.518,2179,5.021,3081,3.518,3085,6.088,3087,4.938,3173,5.201,3174,4.052,3227,4.608,3230,6.093,3231,4.608,3342,6.06,3458,5.021,3459,5.021,3460,5.021,3461,5.021,3462,5.021,3463,5.201,3464,5.021,3465,5.648,3466,5.648,3467,5.648,3468,5.648,3469,5.648,3470,5.648,3471,5.648,3472,5.648,3473,7.249,3474,5.648,3475,5.648,3476,5.648,3477,5.648,3478,5.648,3479,5.648,3480,5.648,3481,5.648,3482,5.648,3483,5.648,3484,5.648,3485,5.648,3486,5.648,3487,5.648,3488,5.648,3489,5.648]],["title/interfaces/TaskWithAdditionalData.html",[86,0.791,3175,3.357]],["body/interfaces/TaskWithAdditionalData.html",[3,0.122,4,0.106,9,0.073,25,0.283,26,0.753,47,0.007,48,0.538,49,0.421,50,0.921,62,1.459,71,0.303,77,1.191,81,0.848,85,0.151,86,1.43,87,3.594,88,1.677,89,3.264,143,1.311,161,1.703,171,1.495,180,1.024,229,1.579,251,0.005,252,0.005,253,1.693,255,1.73,275,2.849,305,1.485,330,4.11,560,3.06,646,6.327,647,1.919,658,5.169,659,4.17,744,2.588,787,3.322,821,4.626,960,3.25,1068,5.54,1080,5.54,1284,3.342,1461,4.873,1544,5.536,1590,3.89,1668,4.38,1669,4.38,1676,3.183,1677,3.183,1729,5.825,1759,3.89,2370,3.322,2655,3.667,3072,6.619,3075,5.169,3076,5.169,3077,3.89,3165,4.17,3166,3.89,3167,4.544,3168,5.54,3169,4.544,3170,4.544,3171,4.544,3172,4.17,3173,3.667,3174,3.667,3175,4.873,3176,6.037,3177,8.012,3178,6.185,3179,6.037,3180,5.54,3181,6.185,3182,6.185]],["title/modules/TasksModule.html",[398,1.837,3490,3.561]],["body/modules/TasksModule.html",[3,0.132,4,0.114,9,0.079,47,0.007,49,0.254,71,0.572,73,0.46,74,1.787,85,0.123,90,0.254,126,1.708,128,1.74,165,1.74,205,1.708,226,1.74,228,1.677,230,1.708,235,1.347,251,0.005,252,0.005,400,2.264,401,3.843,407,5.314,408,4.269,409,2.876,410,2.498,412,4.269,413,3.413,415,3.51,423,4.191,461,4.442,462,3.43,463,4.858,601,4.895,759,4.492,1229,4.895,1230,3.951,1231,4.895,1244,4.191,1901,4.492,2242,4.895,3080,6.37,3091,4.492,3207,3.951,3267,4.191,3341,6.37,3356,6.37,3454,6.37,3463,6.37,3490,7.503,3491,4.895,3492,4.895,3493,4.895,3494,6.37,3495,5.507,3496,5.507,3497,5.507,3498,5.507,3499,5.507,3500,5.507,3501,4.895,3502,4.895,3503,4.895,3504,5.507,3505,5.507,3506,8.366,3507,7.132,3508,5.507,3509,5.507,3510,5.507]],["title/modules/TasksRoutingModule.html",[398,1.837,3494,3.357]],["body/modules/TasksRoutingModule.html",[0,0.303,3,0.158,4,0.137,9,0.095,28,2.718,47,0.007,71,0.55,73,0.552,85,0.147,90,0.305,93,1.77,126,1.539,129,1.626,180,1.206,189,1.456,205,1.539,206,1.296,230,1.539,251,0.006,252,0.006,398,2.596,400,2.718,413,3.164,415,3.936,426,4.787,427,4.93,428,1.984,435,5.697,454,4.118,482,4.504,681,4.613,934,3.564,1244,5.033,1250,5.033,1255,5.033,1256,5.033,1261,5.878,3267,5.033,3494,5.738,3501,5.878,3502,5.878,3503,5.878,3511,6.613,3512,5.878,3513,6.613]],["title/classes/TestNgControl.html",[90,0.216,1075,3.187]],["body/classes/TestNgControl.html",[3,0.161,4,0.139,9,0.096,25,0.373,26,0.896,32,1.039,44,0.919,46,0.901,47,0.007,48,0.533,49,0.311,50,0.763,52,0.779,53,1.556,60,1.203,61,1.035,62,1.736,65,3.48,71,0.398,74,2.185,85,0.15,90,0.311,91,1.762,106,1.272,251,0.006,252,0.006,960,3.869,966,4.998,986,5.087,1069,4.222,1075,5.507,1081,3.75,1099,5.492,1106,3.222,1108,6.121,3514,7.989,3515,5.492,3516,8.665,3517,8.085,3518,6.732,3519,8.085,3520,6.732,3521,8.085,3522,6.732,3523,8.085,3524,8.085]],["title/components/TextareaComponent.html",[0,0.159,231,0.917]],["body/components/TextareaComponent.html",[0,0.205,1,0.644,2,0.986,3,0.08,4,0.069,5,0.706,6,0.719,7,0.706,8,0.706,9,0.048,15,0.598,16,1.75,17,1.746,18,0.644,19,1.023,21,0.986,23,0.986,25,0.185,26,0.558,27,0.834,29,2.042,32,0.647,44,0.964,46,0.9,47,0.007,48,0.64,49,0.404,50,0.761,52,0.909,53,1.51,60,1.403,61,1.33,62,1.443,64,1.285,68,1.745,71,0.298,73,0.279,77,0.883,81,0.555,85,0.075,88,1.27,90,0.155,91,1.737,115,0.706,116,1.061,117,1.412,118,0.883,119,1.391,120,0.706,121,1.274,122,0.632,123,0.681,124,0.656,125,0.706,126,0.644,127,0.706,128,0.656,129,0.681,130,0.706,131,0.656,132,0.706,133,0.656,134,0.706,135,0.644,136,0.681,137,0.706,138,0.656,139,0.706,140,1.826,141,0.644,142,1.06,143,0.758,144,1.061,145,0.644,146,1.061,147,0.632,148,1.775,149,0.644,150,0.576,151,0.706,152,0.644,153,1.163,154,0.644,155,0.644,156,0.656,157,0.706,158,0.644,159,0.706,160,0.668,161,0.61,162,1.184,163,0.656,164,0.706,165,0.656,166,1.747,167,0.706,168,0.656,169,0.706,170,0.656,171,0.656,172,0.706,173,0.656,174,0.706,175,0.656,176,0.706,177,0.644,178,0.681,179,0.656,180,0.758,181,0.706,182,0.644,183,0.706,184,0.644,185,0.656,186,0.706,187,0.656,188,1.274,189,0.61,190,0.706,191,0.656,192,1.061,193,0.706,194,0.656,195,0.706,196,0.656,197,0.706,198,0.644,199,0.668,200,0.644,201,0.706,202,0.644,203,0.693,204,0.95,205,0.644,206,0.656,207,0.656,208,0.706,209,0.644,210,1.465,211,0.632,212,0.706,213,0.644,214,0.668,215,0.644,216,0.644,217,0.706,218,0.656,219,0.706,220,1.061,221,0.656,222,0.706,223,0.656,224,0.706,225,0.706,226,0.656,227,0.706,228,0.632,229,0.819,230,0.644,231,1.317,232,0.706,233,0.656,234,0.706,235,0.95,236,1.519,237,1.061,238,0.644,239,0.681,240,0.598,241,0.644,242,0.644,243,0.693,244,0.668,245,0.706,246,0.644,247,0.706,248,0.632,249,0.681,250,0.706,251,0.004,252,0.004,255,1.524,274,1.804,275,1.813,281,3.049,284,1.257,290,1.044,298,2.225,305,1.314,308,3.111,323,1.086,325,3.062,358,3.257,360,2.549,362,1.748,540,3.257,647,1.889,651,2.476,682,1.847,691,3.876,732,5.483,748,2.802,751,1.648,765,1.975,809,2.407,829,1.409,838,3.133,873,1.602,960,2.407,964,3.011,965,3.011,966,3.876,967,4.312,968,3.618,969,3.618,970,3.011,971,3.011,972,3.011,973,3.011,974,3.011,976,5.392,977,2.085,978,2.004,979,2.802,980,2.004,981,2.004,982,1.931,983,1.804,984,1.804,985,2.085,986,4.535,987,2.802,988,1.865,989,2.085,990,1.931,991,1.865,992,2.085,993,4.312,994,2.004,995,1.865,996,1.931,997,1.931,998,2.004,999,2.004,1000,1.204,1001,3.011,1002,2.004,1003,2.085,1004,3.011,1005,2.407,1006,4.529,1007,2.004,1008,3.366,1009,1.931,1010,3.366,1011,3.011,1012,2.282,1013,4.022,1014,1.865,1015,2.004,1016,3.011,1017,2.004,1018,2.085,1019,2.004,1020,2.004,1021,2.085,1022,3.011,1023,2.004,1024,2.004,1025,2.176,1026,2.085,1027,2.085,1028,2.085,1029,2.085,1030,2.085,1031,2.004,1032,2.802,1033,2.085,1034,3.011,1035,2.731,1036,2.548,1037,2.085,1038,2.176,1039,2.085,1041,3.27,1073,3.27,1454,3.27,1998,5.483,1999,6.977,2000,6.403,2005,4.472,2007,4.472,2008,3.27,2724,5.372,3525,2.976,3526,5.031,3527,6.043,3528,5.031,3529,6.043,3530,3.348,3531,3.348,3532,3.348,3533,3.348,3534,4.472,3535,3.348,3536,3.348,3537,5.031]],["title/components/UpperNavigationComponent.html",[0,0.159,233,0.917]],["body/components/UpperNavigationComponent.html",[0,0.195,1,0.594,2,0.927,3,0.074,4,0.064,5,0.651,6,0.663,7,0.651,8,0.651,9,0.044,13,1.314,14,2.113,15,0.551,16,1.743,17,1.742,18,0.594,19,0.961,21,0.927,23,0.927,25,0.262,26,0.524,27,1.489,32,0.608,36,2.368,37,0.713,44,0.931,46,0.413,47,0.007,48,0.551,49,0.265,50,0.35,52,0.883,53,1.411,57,1.476,60,1.31,61,1.127,62,1.015,71,0.478,73,0.258,77,0.83,81,0.512,83,0.826,85,0.069,90,0.142,91,1.413,106,0.583,110,1.725,111,1.064,112,2.913,113,1.66,114,1.446,115,0.651,116,0.997,117,1.127,118,0.541,119,1.735,120,0.651,121,1.212,122,0.583,123,0.627,124,0.605,125,0.651,126,0.594,127,0.651,128,0.605,129,0.627,130,0.651,131,0.605,132,0.651,133,0.605,134,0.651,135,0.594,136,0.627,137,0.651,138,0.605,139,0.651,140,0.627,141,0.594,142,1.009,143,0.713,144,0.997,145,0.594,146,0.997,147,0.583,148,1.737,149,0.594,150,0.531,151,0.651,152,0.594,153,1.106,154,0.594,155,0.594,156,0.605,157,0.651,158,0.594,159,0.651,160,0.616,161,0.562,162,1.127,163,0.605,164,0.651,165,0.605,166,0.927,167,0.651,168,0.605,169,0.651,170,0.605,171,0.605,172,0.651,173,0.605,174,0.651,175,0.605,176,0.651,177,0.594,178,0.627,179,0.605,180,0.713,181,0.651,182,0.594,183,0.651,184,0.594,185,0.605,186,0.651,187,0.605,188,1.212,189,0.562,190,0.651,191,0.605,192,0.997,193,0.651,194,0.605,195,0.651,196,0.605,197,0.651,198,0.594,199,0.616,200,0.594,201,0.651,202,0.594,203,0.639,204,0.893,205,0.594,206,0.605,207,0.605,208,0.651,209,0.594,210,1.552,211,0.583,212,0.651,213,0.594,214,0.616,215,0.594,216,0.594,217,0.651,218,0.605,219,0.651,220,0.997,221,0.605,222,0.651,223,0.605,224,0.651,225,0.651,226,0.605,227,0.651,228,0.893,229,1.049,230,0.594,231,0.605,232,0.651,233,1.263,234,1.66,235,0.893,236,0.997,237,0.997,238,0.594,239,0.627,240,0.551,241,0.594,242,0.594,243,0.979,244,0.616,245,0.651,246,0.594,247,0.651,248,0.583,249,0.627,250,0.651,251,0.003,252,0.003,275,1.725,279,1.064,284,2.609,290,2.01,293,1.563,306,2.213,307,1.4,308,2.363,336,1.663,386,3.213,394,2.223,395,2.438,396,2.542,410,2.608,428,0.926,436,2.517,478,2.005,479,4.905,483,4.113,544,4.251,546,3.326,592,1.331,593,1.134,594,1.299,595,1.331,599,3.073,600,1.921,654,1.921,663,2.213,664,1.921,668,2.213,669,2.213,670,1.847,672,2.742,673,1.847,682,1.863,683,2.246,684,2.207,688,1.829,689,1.611,690,2.335,694,1.331,695,1.299,698,2.327,699,1.299,703,1.437,706,1.437,714,2.5,715,2.554,716,2.694,717,1.11,718,0.982,724,2.091,725,2.04,726,1.78,727,2.04,728,2.091,739,1.211,745,1.11,746,2.85,749,1.563,750,1.4,756,1.78,766,2.517,768,1.299,779,1.847,780,2.348,781,2.101,801,2.925,802,1.611,820,2.101,822,3.002,825,1.518,848,3.316,852,1.921,878,2.101,880,4.328,927,1.921,933,1.611,1049,2.517,1151,3.652,1282,3.221,1292,1.847,1408,1.847,1643,5.58,1679,2.005,1788,2.348,1888,2.213,1940,2.517,1957,2.517,1979,2.005,2149,2.348,2262,7.224,2400,5.11,2406,2.517,2550,2.742,2677,2.517,2718,2.348,2823,5.11,2907,6.517,2966,2.517,2967,4.203,2968,5.11,2969,4.203,2974,2.742,3224,2.517,3538,7.872,3539,5.749,3540,7.332,3541,7.332,3542,5.749,3543,6.445,3544,6.445,3545,6.445,3546,6.445,3547,6.445,3548,3.085,3549,3.085,3550,3.085,3551,3.085,3552,3.085,3553,3.085,3554,3.085,3555,3.085,3556,3.085,3557,3.085,3558,3.085,3559,3.085,3560,3.085,3561,4.728,3562,3.085,3563,3.085,3564,3.085,3565,3.085,3566,6.445,3567,3.085,3568,3.085,3569,3.085,3570,3.085,3571,4.728,3572,3.085,3573,5.749,3574,4.203]],["title/interfaces/User.html",[86,0.791,647,1.757]],["body/interfaces/User.html",[3,0.156,4,0.135,9,0.093,25,0.361,26,0.879,47,0.007,48,0.734,49,0.433,64,3.414,85,0.198,86,1.503,88,1.722,251,0.006,252,0.006,253,2.16,305,1.612,481,4.759,511,5.547,512,4.911,647,3.339,744,2.788,1989,6.023,2373,4.24,2374,4.68,2375,4.443,2376,4.443,2377,4.24]],["title/interfaces/UserData.html",[86,0.791,2377,3.041]],["body/interfaces/UserData.html",[3,0.159,4,0.137,9,0.095,25,0.368,26,0.889,47,0.007,48,0.738,49,0.423,64,2.552,85,0.199,86,1.512,88,1.731,251,0.006,252,0.006,253,2.202,305,1.608,481,4.19,511,5.572,512,4.937,647,3.236,744,2.802,1989,6.05,2373,4.322,2374,4.77,2375,4.529,2376,4.529,2377,5.216]],["title/injectables/UserService.html",[319,1.648,2156,3.187]],["body/injectables/UserService.html",[3,0.159,4,0.138,9,0.095,25,0.369,27,1.544,32,1.032,37,1.004,44,0.914,46,1.075,47,0.007,48,0.636,49,0.371,50,0.91,52,0.93,68,2.49,71,0.53,73,0.556,83,1.783,85,0.148,90,0.307,106,1.517,251,0.006,252,0.006,319,2.828,320,4.717,321,3.373,370,3.373,371,3.186,372,2.205,491,3.986,514,3.277,1012,3.643,1771,5.919,2156,5.47,2373,5.82,2984,5.919,3575,5.919,3576,8.954,3577,6.658,3578,6.658,3579,8.031,3580,6.658,3581,8.031,3582,6.658,3583,6.658]],["title/interfaces/UserSession.html",[86,0.791,2783,3.357]],["body/interfaces/UserSession.html",[3,0.162,4,0.14,9,0.097,25,0.377,26,0.901,47,0.007,49,0.443,85,0.151,86,1.149,88,1.768,251,0.006,252,0.006,253,2.251,275,2.807,305,1.552,499,4.868,744,2.758,2783,5.834,3584,6.043,3585,8.015,3586,9.016,3587,9.016,3588,9.016,3589,9.016,3590,9.016,3591,6.798,3592,6.798]],["title/classes/UserUtils.html",[90,0.216,1938,3.561]],["body/classes/UserUtils.html",[3,0.15,4,0.129,9,0.09,25,0.347,27,1.284,32,0.995,44,0.821,46,1.037,47,0.007,48,0.613,49,0.357,50,0.877,52,0.896,62,1.663,71,0.458,85,0.14,88,1.657,90,0.289,93,2.457,106,1.463,251,0.006,252,0.006,305,1.367,395,2.6,512,4.172,690,1.918,744,1.918,807,4.772,1081,3.493,1454,5.966,1938,5.892,2576,6.392,3593,5.574,3594,7.742,3595,7.742,3596,7.742,3597,6.27,3598,7.742,3599,6.27,3600,6.27,3601,6.27,3602,8.771,3603,7.742,3604,7.742,3605,7.742,3606,7.742,3607,7.742,3608,7.742,3609,6.27,3610,8.399,3611,5.574,3612,6.27,3613,6.27,3614,6.27,3615,7.742,3616,6.27,3617,5.574,3618,5.574,3619,6.27,3620,5.574,3621,6.27,3622,6.27,3623,6.27]],["title/interfaces/UserWithPrivileges.html",[86,0.791,2375,3.187]],["body/interfaces/UserWithPrivileges.html",[3,0.164,4,0.141,9,0.098,25,0.379,26,0.905,47,0.007,48,0.692,49,0.377,64,2.628,85,0.201,86,1.527,88,1.745,251,0.006,252,0.006,253,2.267,305,1.592,481,4.264,511,5.224,512,4.401,647,3.585,744,2.498,1989,5.673,2373,4.45,2374,4.912,2375,5.562,2376,6.156,2377,4.45]],["title/classes/Utils.html",[90,0.216,1880,3.561]],["body/classes/Utils.html",[3,0.119,4,0.103,9,0.072,25,0.465,26,0.893,27,1.336,32,0.97,44,0.854,46,1.079,47,0.007,48,0.638,49,0.372,50,0.979,52,1.038,60,0.894,61,0.768,85,0.111,88,1.425,90,0.309,93,1.339,106,1.716,119,1.035,251,0.005,252,0.005,255,1.905,272,4.684,275,2.008,284,3.025,290,2.353,303,5.094,305,1.584,311,3.465,690,2.464,711,5.78,739,1.963,751,4.254,801,2.818,1005,3.203,1081,2.786,1158,4.006,1353,3.406,1454,6.059,1457,7.846,1470,5.949,1547,5.949,1756,5.46,1811,6.706,1842,7.05,1880,5.094,3049,4.445,3611,4.445,3624,4.445,3625,5.001,3626,5.001,3627,4.079,3628,5.001,3629,6.693,3630,6.693,3631,6.693,3632,6.693,3633,5.001,3634,6.693,3635,6.693,3636,5.001,3637,8.643,3638,6.693,3639,8.398,3640,6.693,3641,8.97,3642,8.398,3643,5.001,3644,6.693,3645,6.693,3646,6.693,3647,6.693,3648,5.001,3649,6.693,3650,6.693,3651,6.693,3652,8.056,3653,7.544,3654,6.693,3655,8.056,3656,5.001,3657,5.001,3658,5.001,3659,5.001,3660,6.693,3661,5.001,3662,5.001,3663,5.001]],["title/interfaces/ValidationError.html",[86,0.791,1041,3.041]],["body/interfaces/ValidationError.html",[3,0.164,4,0.142,9,0.099,25,0.381,26,0.907,29,2.323,47,0.007,49,0.441,64,3.143,85,0.153,86,1.384,251,0.006,252,0.006,253,2.277,255,1.56,258,4.148,298,3.041,299,5.233,305,1.526,829,3.447,987,4.561,988,3.83,1041,5.322,1044,4.684,1071,6.231,1076,5.609,3664,6.112,3665,6.112,3666,6.112,3667,6.876,3668,6.876,3669,6.679,3670,6.679,3671,8.187,3672,8.187,3673,8.187]],["title/pipes/ValidationErrorPipe.html",[1000,1.683,2270,3.357]],["body/pipes/ValidationErrorPipe.html",[3,0.162,4,0.14,9,0.097,13,1.887,15,1.213,32,0.873,44,0.72,46,0.909,47,0.007,48,0.689,49,0.313,50,0.769,52,0.941,61,1.385,71,0.402,73,0.567,85,0.151,90,0.313,106,1.283,251,0.006,252,0.006,255,1.843,258,3.593,305,1.322,311,2.665,699,3.661,1000,3.242,1041,5.281,1044,4.117,1076,6.628,1106,3.249,2270,5.829,3081,4.228,3085,5.534,3087,5.534,3666,8.011,3669,6.628,3670,6.628,3674,7.223,3675,6.035,3676,6.789,3677,8.125,3678,6.789]],["title/components/ViewOptionsComponent.html",[0,0.159,235,0.884]],["body/components/ViewOptionsComponent.html",[0,0.225,1,0.754,2,1.107,3,0.094,4,0.081,5,0.827,6,0.842,7,0.827,8,0.827,9,0.056,15,0.701,16,1.762,17,1.759,18,0.754,19,1.149,21,1.107,23,1.107,25,0.217,26,0.626,27,1.328,37,0.591,44,0.875,46,0.525,47,0.007,48,0.634,49,0.355,50,0.444,60,1.01,61,0.868,71,0.429,73,0.327,77,0.991,81,0.65,85,0.087,87,3.399,88,1.37,89,3.087,90,0.181,93,1.049,109,3.908,110,1.695,112,4.057,113,1.631,114,1.199,115,0.827,116,1.191,117,1.299,118,0.688,119,1.809,120,0.827,121,1.397,122,0.741,123,0.797,124,0.768,125,0.827,126,0.754,127,0.827,128,0.768,129,0.797,130,0.827,131,0.768,132,0.827,133,0.768,134,0.827,135,0.754,136,0.797,137,0.827,138,0.768,139,0.827,140,0.797,141,0.754,142,1.162,143,1.297,144,1.191,145,0.754,146,1.191,147,0.741,148,1.842,149,0.754,150,0.675,151,0.827,152,0.754,153,1.275,154,0.754,155,0.754,156,0.768,157,0.827,158,0.754,159,0.827,160,0.782,161,0.714,162,1.299,163,0.768,164,0.827,165,0.768,166,1.506,167,0.827,168,0.768,169,0.827,170,0.768,171,0.768,172,0.827,173,0.768,174,0.827,175,0.768,176,0.827,177,0.754,178,0.797,179,0.768,180,0.852,181,0.827,182,0.754,183,0.827,184,0.754,185,0.768,186,0.827,187,0.768,188,1.397,189,0.714,190,0.827,191,0.768,192,1.191,193,0.827,194,0.768,195,0.827,196,0.768,197,0.827,198,0.754,199,0.782,200,0.754,201,0.827,202,0.754,203,0.812,204,1.067,205,0.754,206,0.768,207,0.768,208,0.827,209,0.754,210,1.563,211,0.741,212,0.827,213,0.754,214,0.782,215,0.754,216,0.754,217,0.827,218,0.768,219,0.827,220,1.191,221,0.768,222,0.827,223,0.768,224,0.827,225,0.827,226,0.768,227,0.827,228,0.741,229,0.919,230,0.754,231,0.768,232,0.827,233,0.768,234,0.827,235,1.452,236,1.815,237,1.191,238,0.754,239,0.797,240,0.701,241,0.754,242,0.754,243,0.812,244,0.782,245,0.827,246,0.754,247,0.827,248,0.741,249,0.797,250,0.827,251,0.004,252,0.004,257,3.315,279,1.352,305,0.919,308,2.724,336,3.045,372,1.298,394,1.352,395,2.475,397,2.047,428,1.176,542,2.548,543,3.832,589,2.112,592,1.691,593,1.44,594,1.65,595,1.691,606,2.183,607,2.261,682,1.77,683,1.95,684,1.505,688,2.108,694,1.691,695,1.65,714,2.032,715,2.076,716,2.076,718,1.247,721,2.169,724,1.733,725,1.691,727,2.437,728,2.499,745,1.41,746,2.499,750,1.778,752,2.261,765,2.218,801,2.789,802,2.95,808,2.441,822,2.047,843,2.548,873,1.876,880,2.441,881,2.812,931,2.261,938,2.261,1176,2.548,1230,6.06,1325,3.691,1345,4.3,1978,2.346,3679,7.509,3680,3.197,3681,5.889,3682,5.022,3683,5.889,3684,5.65,3685,3.484,3686,5.889,3687,3.92,3688,5.889,3689,3.92,3690,3.484,3691,3.484,3692,7.251,3693,3.484]],["title/components/ViewOptionsComponent-1.html",[0,0.132,235,0.737,739,1.532]],["body/components/ViewOptionsComponent-1.html",[0,0.209,1,0.664,2,1.009,3,0.082,4,0.071,5,0.728,6,0.741,7,0.728,8,0.728,9,0.049,15,0.617,16,1.753,17,1.75,18,0.664,19,1.047,21,1.009,23,1.009,25,0.285,26,0.571,27,1.406,37,0.52,44,0.899,46,0.462,47,0.007,48,0.607,49,0.353,50,0.391,60,1.368,61,1.176,62,1.106,65,2.473,71,0.469,73,0.288,74,1.121,77,0.903,81,0.573,85,0.077,87,3.228,88,1.289,89,2.932,90,0.159,93,0.924,110,2.296,112,4.296,113,1.777,114,1.575,115,0.728,116,1.086,117,1.337,118,0.606,119,1.841,120,0.728,121,1.298,122,0.652,123,0.702,124,0.677,125,0.728,126,0.664,127,0.728,128,0.677,129,1.252,130,0.728,131,0.677,132,0.728,133,0.677,134,0.728,135,0.664,136,0.702,137,0.728,138,0.677,139,0.728,140,0.702,141,0.664,142,1.08,143,1.256,144,1.086,145,0.664,146,1.086,147,0.652,148,1.788,149,0.664,150,0.595,151,0.728,152,0.664,153,1.405,154,0.664,155,0.664,156,0.677,157,0.728,158,0.664,159,0.728,160,0.689,161,0.629,162,1.207,163,0.677,164,0.728,165,0.677,166,1.5,167,0.728,168,0.677,169,0.728,170,0.677,171,0.677,172,0.728,173,0.677,174,0.728,175,0.677,176,0.728,177,0.664,178,0.702,179,0.677,180,1.029,181,0.728,182,0.664,183,0.728,184,0.664,185,0.677,186,0.728,187,0.677,188,1.298,189,0.629,190,0.728,191,0.677,192,1.086,193,0.728,194,0.677,195,0.728,196,0.677,197,0.728,198,0.664,199,0.689,200,0.664,201,0.728,202,0.664,203,0.715,204,0.973,205,0.664,206,1.207,207,0.677,208,0.728,209,0.664,210,1.484,211,0.652,212,0.728,213,0.664,214,0.689,215,0.664,216,0.664,217,0.728,218,0.677,219,0.728,220,1.086,221,0.677,222,0.728,223,0.677,224,0.728,225,0.728,226,0.677,227,0.728,228,0.652,229,0.838,230,0.664,231,0.677,232,0.728,233,0.677,234,0.728,235,1.379,236,1.757,237,1.086,238,0.664,239,0.702,240,0.617,241,0.664,242,0.664,243,0.715,244,0.689,245,0.728,246,0.664,247,0.728,248,0.652,249,0.702,250,0.728,251,0.004,252,0.004,279,1.191,284,1.933,308,2.805,336,3.678,372,1.143,394,1.776,395,2.557,396,1.527,397,1.803,428,1.036,542,2.244,543,3.663,589,1.861,592,2.221,593,1.269,594,2.167,595,2.221,606,1.923,607,1.992,682,1.936,683,2.253,684,1.976,688,2.171,690,1.883,694,2.221,695,2.592,698,1.699,699,1.454,714,2.625,715,2.682,716,2.682,717,1.242,718,1.638,719,1.803,720,1.749,721,2.363,724,2.277,725,2.221,727,2.943,728,3.018,739,1.355,745,1.242,746,3.018,750,2.336,752,1.992,765,2.021,801,3.073,802,3.215,808,2.15,822,2.688,843,2.244,873,1.652,880,2.15,881,2.477,892,2.628,931,1.992,938,2.97,1176,2.244,1230,6.175,1325,4.264,1345,3.918,1581,4.546,1587,2.477,1888,2.477,1909,2.816,1978,3.082,1979,2.244,3270,5.472,3512,4.576,3574,3.069,3680,2.816,3681,5.472,3682,4.576,3683,5.472,3685,3.069,3686,5.472,3688,5.472,3690,3.069,3691,3.069,3693,3.069,3694,7.65,3695,7.654,3696,6.156,3697,5.148,3698,3.453,3699,3.453,3700,3.453,3701,3.453,3702,3.453,3703,3.069,3704,5.148,3705,3.453,3706,3.453]],["title/interfaces/Workspace.html",[77,0.821,86,0.791]],["body/interfaces/Workspace.html",[3,0.163,4,0.141,9,0.098,25,0.377,26,0.902,47,0.007,48,0.742,49,0.426,71,0.403,77,1.673,85,0.152,86,1.471,88,1.704,143,1.312,185,1.595,251,0.006,252,0.006,253,2.254,255,1.544,305,1.417,499,4.872,744,2.863,2376,4.637,3707,6.052,3708,8.139,3709,8.139,3710,8.139,3711,9.021,3712,6.808]],["title/injectables/WorkspaceService.html",[319,1.648,1151,2.239]],["body/injectables/WorkspaceService.html",[3,0.11,4,0.095,9,0.066,25,0.256,26,0.703,27,1.554,32,0.815,37,1.092,44,0.934,46,1.13,47,0.007,48,0.669,49,0.39,50,0.956,52,1.057,57,2.21,60,1.295,61,0.71,62,1.674,68,2.764,71,0.484,73,0.386,77,1.705,83,1.237,85,0.103,88,1.595,90,0.213,91,1.473,106,1.544,142,1.113,150,1.407,180,1.303,239,1.661,251,0.005,252,0.005,255,1.915,272,3.312,305,1.179,311,3.208,319,2.234,320,4.527,321,2.34,323,2.53,325,4.462,330,5.146,334,4.32,346,6.881,347,6.881,370,2.34,371,2.21,372,1.529,491,2.765,510,3.146,514,3.121,744,2.733,1012,3.537,1032,4.035,1151,3.035,1154,3.95,1279,3.146,1380,4.122,1518,4.55,1544,5.566,1945,4.827,1974,3.314,2182,4.106,2332,5.174,2536,4.55,2539,5.638,2567,3.768,2780,5.638,3627,5.174,3713,4.106,3714,5.638,3715,5.638,3716,6.342,3717,6.342,3718,4.619,3719,6.342,3720,4.619,3721,6.342,3722,4.619,3723,4.619,3724,6.342,3725,4.619,3726,6.342,3727,4.619,3728,4.619,3729,5.174,3730,4.619,3731,4.619,3732,4.619,3733,4.619,3734,4.619,3735,4.619,3736,4.619,3737,6.342,3738,4.619]],["title/components/WorkspacesListPage.html",[0,0.159,238,0.9]],["body/components/WorkspacesListPage.html",[0,0.247,1,0.661,2,1.005,3,0.082,4,0.071,5,1.294,6,0.738,7,0.724,8,0.724,9,0.049,13,1.426,14,2.255,15,0.614,16,1.752,17,1.749,18,1.181,19,1.043,20,3.669,21,1.005,23,1.005,25,0.19,26,0.569,27,1.267,32,0.659,36,2.501,37,1.026,44,0.863,46,0.911,47,0.007,48,0.671,49,0.336,50,0.866,52,0.843,53,1.402,60,1.097,61,0.528,62,1.102,68,2.103,71,0.492,73,0.287,77,1.686,81,0.57,83,0.92,85,0.076,90,0.159,91,1.384,110,1.031,115,0.724,116,1.082,117,1.203,118,0.603,119,1.409,120,0.724,121,1.294,122,0.649,123,1.248,124,0.673,125,0.724,126,0.661,127,0.724,128,0.673,129,0.698,130,0.724,131,0.673,132,0.724,133,0.673,134,0.724,135,0.661,136,0.698,137,0.724,138,0.673,139,0.724,140,0.698,141,0.661,142,1.077,143,0.773,144,1.082,145,0.661,146,1.082,147,0.649,148,1.786,149,0.661,150,1.254,151,0.724,152,0.661,153,1.63,154,0.661,155,0.661,156,0.673,157,0.724,158,0.661,159,0.724,160,0.686,161,0.626,162,1.203,163,0.673,164,0.724,165,0.673,166,1.005,167,0.724,168,0.673,169,0.724,170,0.673,171,0.673,172,0.724,173,0.673,174,0.724,175,0.673,176,0.724,177,0.661,178,0.698,179,0.673,180,1.277,181,0.724,182,0.661,183,0.724,184,0.661,185,0.673,186,0.724,187,0.673,188,1.294,189,0.626,190,0.724,191,0.673,192,1.082,193,0.724,194,0.673,195,0.724,196,0.673,197,0.724,198,0.661,199,0.686,200,0.661,201,0.724,202,0.661,203,0.711,204,0.969,205,0.661,206,0.673,207,0.673,208,0.724,209,0.661,210,1.481,211,0.649,212,0.724,213,0.661,214,0.686,215,0.661,216,0.661,217,0.724,218,0.673,219,0.724,220,1.082,221,0.673,222,0.724,223,0.673,224,0.724,225,0.724,226,0.673,227,0.724,228,0.649,229,0.835,230,0.661,231,0.673,232,0.724,233,0.673,234,0.724,235,0.969,236,1.082,237,1.082,238,1.31,239,1.882,240,1.537,241,0.661,242,0.661,243,0.711,244,0.686,245,0.724,246,0.661,247,0.724,248,0.649,249,0.698,250,0.724,251,0.004,252,0.004,255,1.544,265,3.334,279,1.185,307,2.327,311,2.859,323,2.641,334,3.494,360,2.599,386,3.566,428,1.031,533,4.966,546,3.692,547,3.896,592,1.482,593,1.262,594,1.446,595,1.482,682,1.498,689,1.794,698,2.524,745,1.236,941,3.334,983,2.764,1012,2.327,1150,2.057,1151,3.789,1156,3.334,1174,2.34,1175,2.14,1189,2.233,1212,3.054,1246,6.332,1316,4.559,1371,3.904,1374,3.904,1375,3.904,1390,2.34,1408,3.07,1429,4.559,2415,4.559,2416,4.559,2420,4.559,2536,3.68,2555,2.615,2556,5.007,2557,4.184,2564,3.054,2567,2.803,2568,3.054,2574,4.559,2575,4.559,2682,4.184,3279,3.054,3299,3.054,3308,3.054,3372,4.559,3425,4.559,3739,7.395,3740,6.807,3741,5.129,3742,3.436,3743,5.129,3744,5.129,3745,3.436,3746,3.436,3747,5.129,3748,3.436,3749,5.129,3750,5.129,3751,3.436,3752,3.436,3753,3.436]],["title/coverage.html",[3754,5.688]],["body/coverage.html",[0,0.329,1,0.575,9,0.043,10,3.763,11,2.999,12,3.763,20,1.61,39,2.144,43,1.942,47,0.007,49,0.213,62,0.642,63,1.289,66,1.321,77,0.524,81,0.496,86,1.584,90,0.36,114,2.886,117,0.904,118,0.989,122,0.565,124,0.586,126,0.575,128,0.586,131,0.586,133,0.586,135,0.575,138,0.586,140,0.608,141,0.575,143,1.032,145,0.575,147,0.565,149,0.575,152,0.575,154,0.575,155,0.575,156,0.586,158,0.575,160,0.596,163,0.586,165,0.586,168,0.586,170,0.586,171,0.904,173,0.586,175,0.586,177,0.575,179,0.586,182,0.575,184,0.575,187,0.586,189,0.544,191,0.586,194,0.586,196,0.586,198,0.575,200,0.575,202,0.575,205,0.575,207,0.586,209,0.575,211,0.565,213,0.575,215,0.575,216,0.575,218,0.586,221,0.586,223,0.586,226,0.586,228,0.565,229,0.486,230,0.575,231,0.586,233,0.586,235,0.872,238,0.575,240,0.534,242,0.575,244,0.596,246,0.575,248,0.565,251,0.003,252,0.003,254,3.511,268,2.144,301,1.861,319,3.011,320,1.514,322,2.656,323,0.97,337,2.274,363,3.511,383,2.656,421,3.511,429,2.274,433,2.274,466,2.274,469,2.274,472,2.274,476,2.274,483,1.61,484,2.656,525,2.656,544,1.665,545,1.942,546,1.356,547,1.471,548,1.724,576,2.035,580,2.144,586,1.665,599,1.942,647,1.122,690,3.003,758,2.656,759,2.437,760,2.656,809,2.697,828,2.656,882,2.656,894,2.656,895,3.763,903,2.274,915,2.274,959,2.656,986,1.61,1000,2.604,1005,4.245,1041,1.942,1050,2.656,1051,2.656,1065,2.656,1066,2.656,1075,2.035,1108,3.142,1141,4.289,1142,2.274,1143,3.763,1151,1.43,1170,1.861,1191,2.274,1192,3.763,1205,2.274,1206,3.763,1221,1.61,1224,2.437,1227,2.437,1230,3.31,1239,2.274,1240,2.274,1241,2.274,1243,2.274,1246,2.274,1252,2.437,1269,2.656,1270,4.289,1285,2.656,1347,2.274,1348,2.656,1349,2.656,1357,4.289,1450,2.656,1464,2.274,1502,2.656,1503,2.144,1505,2.656,1533,2.274,1534,3.763,1535,3.763,1544,2.035,1554,2.274,1575,2.144,1576,2.437,1581,1.861,1582,2.656,1595,2.656,1632,2.656,1633,2.656,1642,2.656,1653,2.656,1659,1.724,1660,4.665,1661,4.665,1664,1.861,1666,1.861,1668,1.61,1669,1.61,1671,2.274,1672,4.665,1673,3.31,1674,3.763,1701,2.656,1702,2.656,1815,2.656,1816,2.656,1828,2.656,1853,6.357,1880,2.274,1900,2.656,1901,2.437,1902,2.656,1938,2.274,1986,2.437,1992,2.656,2042,2.656,2043,2.437,2044,2.656,2068,2.656,2069,2.437,2070,2.656,2084,2.656,2085,2.656,2112,2.656,2113,2.656,2117,2.274,2118,3.763,2132,2.656,2133,2.437,2134,2.656,2142,2.274,2144,2.656,2145,2.656,2151,2.656,2156,2.035,2188,2.437,2247,2.437,2249,2.437,2254,2.437,2257,2.437,2262,2.437,2270,2.144,2275,2.437,2291,2.656,2292,2.656,2299,2.656,2300,2.656,2321,2.656,2358,2.656,2373,1.942,2374,4.547,2375,2.035,2377,1.942,2378,3.763,2379,2.656,2408,2.656,2478,2.656,2491,3.763,2492,3.763,2497,2.274,2519,2.656,2524,2.656,2525,2.656,2526,2.656,2554,2.656,2555,4.289,2576,2.274,2577,2.656,2601,4.101,2604,2.437,2618,2.437,2648,2.656,2649,2.656,2651,2.437,2675,2.656,2684,2.656,2685,2.656,2694,2.656,2732,2.656,2777,2.274,2778,2.656,2783,2.144,2787,2.274,2842,2.274,2843,2.656,2898,2.274,2901,2.656,2920,2.656,2965,2.656,2966,3.763,2982,2.274,2983,2.437,2985,2.656,2995,2.035,3012,2.035,3036,2.656,3037,2.656,3038,2.656,3052,2.656,3068,3.763,3080,2.144,3082,2.656,3083,2.656,3090,2.656,3091,2.437,3092,2.656,3124,2.656,3165,3.763,3175,2.144,3183,3.511,3207,2.144,3266,2.656,3267,2.274,3335,2.656,3341,2.144,3342,4.547,3343,3.763,3356,2.144,3357,2.656,3364,2.656,3398,2.437,3454,2.144,3463,2.144,3464,2.656,3514,2.656,3515,3.763,3525,2.656,3538,2.656,3575,2.656,3584,2.656,3593,2.656,3624,2.656,3664,2.656,3665,2.656,3674,2.656,3675,2.656,3679,2.656,3680,3.763,3694,2.656,3707,2.656,3713,2.656,3729,2.437,3739,2.656,3754,2.656,3755,2.144,3756,2.988,3757,8.988,3758,4.613,3759,7.545,3760,5.635,3761,7.545,3762,4.613,3763,5.635,3764,2.988,3765,8.548,3766,4.613,3767,2.988,3768,2.988,3769,5.635,3770,2.988,3771,2.988,3772,2.988,3773,4.613,3774,5.635,3775,5.635,3776,2.988,3777,2.988,3778,8.439,3779,2.656,3780,2.988,3781,2.988,3782,2.656,3783,2.656,3784,8.548,3785,2.656,3786,2.656,3787,4.613,3788,4.613,3789,6.337,3790,4.613,3791,2.656,3792,2.656,3793,2.656,3794,2.656,3795,2.656,3796,2.988,3797,2.988,3798,2.656,3799,2.656,3800,2.656,3801,2.656,3802,2.656,3803,2.656,3804,2.656,3805,2.988,3806,2.988,3807,7.239,3808,2.988,3809,2.988,3810,2.988,3811,2.988,3812,2.988,3813,2.988,3814,4.613,3815,4.613,3816,4.613,3817,2.988,3818,4.613,3819,2.988,3820,6.337,3821,4.613,3822,2.988,3823,2.988,3824,2.988,3825,2.988,3826,2.988,3827,2.988,3828,2.988,3829,2.988,3830,2.988,3831,2.988,3832,2.988,3833,2.988,3834,2.988,3835,2.988,3836,4.613,3837,2.988,3838,2.988,3839,2.988,3840,2.988,3841,2.988,3842,2.656,3843,2.656,3844,2.656,3845,4.101,3846,2.656,3847,4.101,3848,2.656,3849,4.101,3850,2.656,3851,2.656,3852,2.656,3853,2.656,3854,4.101,3855,4.101,3856,2.656,3857,2.656,3858,4.101,3859,2.656,3860,2.988]],["title/dependencies.html",[401,3.035,3861,3.468]],["body/dependencies.html",[47,0.007,73,0.557,74,2.164,83,1.785,251,0.006,252,0.006,395,1.889,401,3.593,417,7.145,428,2,462,4.152,592,3.722,593,2.45,594,3.771,595,3.722,782,5.006,1327,5.439,1707,6.117,1878,5.927,1879,5.927,2191,5.439,2235,5.927,2236,5.927,2877,5.074,2937,5.927,3703,5.927,3862,6.667,3863,9.502,3864,6.667,3865,8.038,3866,6.667,3867,6.667,3868,6.667,3869,6.667,3870,6.667,3871,6.667,3872,8.958,3873,6.667,3874,6.667,3875,6.667,3876,6.667,3877,6.667,3878,6.667,3879,6.667,3880,6.667,3881,5.927,3882,6.667,3883,6.667,3884,6.667,3885,6.667,3886,6.667,3887,6.667,3888,6.667,3889,6.667]],["title/miscellaneous/enumerations.html",[3890,2.43,3891,5.005]],["body/miscellaneous/enumerations.html",[20,4.332,25,0.369,47,0.007,49,0.308,60,1.437,61,1.499,142,1.41,153,1.547,229,1.085,251,0.006,252,0.006,254,5.074,263,5.767,264,5.224,293,3.378,298,3.554,299,5.074,300,5.439,600,5.006,739,2.617,786,4.152,820,5.475,1464,5.074,1729,5.006,2604,5.439,2607,7.145,2626,5.927,2627,5.927,3173,4.784,3174,4.784,3183,5.074,3226,6.117,3229,6.557,3230,6.117,3346,6.557,3348,6.557,3350,6.557,3352,6.557,3354,6.557,3534,5.927,3890,4.152,3891,5.927,3892,6.667,3893,6.667,3894,8.629,3895,8.629,3896,6.667,3897,8.038,3898,8.038]],["title/miscellaneous/functions.html",[1452,4.286,3890,2.43]],["body/miscellaneous/functions.html",[0,0.238,9,0.1,16,0.959,17,0.959,21,1.052,23,1.052,25,0.297,28,2.206,46,1.233,47,0.007,48,0.73,49,0.421,50,1.043,52,0.995,61,0.825,64,2.06,66,3.455,85,0.119,88,1.476,90,0.324,118,0.941,142,0.941,147,1.014,239,1.091,240,1.576,251,0.005,252,0.005,255,1.591,258,3.455,305,1.435,323,2.688,343,3.488,362,2.802,427,3.779,481,3.662,751,4.23,829,2.259,903,5.945,915,5.337,1005,3.738,1079,4.378,1128,7.011,1157,5.078,1170,4.368,1452,4.084,1533,5.945,1534,4.378,1535,5.721,1538,4.77,1581,3.342,1656,4.378,1853,4.378,1937,5.721,2517,3.655,2584,4.77,2618,6.372,2667,7.582,2831,5.721,2964,5.721,3398,5.721,3729,5.721,3782,4.77,3783,6.944,3785,4.77,3786,4.77,3791,4.77,3792,6.234,3793,4.77,3794,6.234,3795,6.234,3798,4.77,3799,4.77,3800,6.234,3801,4.77,3802,4.77,3803,4.77,3804,6.234,3844,6.234,3845,7.837,3846,6.234,3849,4.77,3850,6.234,3851,6.234,3854,4.77,3855,6.944,3856,6.234,3857,6.234,3881,6.234,3890,3.342,3899,5.366,3900,5.366,3901,5.366,3902,5.366,3903,7.013,3904,5.366,3905,5.366,3906,5.366,3907,5.366,3908,5.366,3909,5.366,3910,5.366,3911,5.366,3912,5.366,3913,7.013,3914,5.366,3915,5.366,3916,8.595,3917,5.366,3918,5.366,3919,4.378,3920,4.77,3921,8.284,3922,5.366,3923,5.366,3924,4.77,3925,4.77,3926,5.366,3927,7.013,3928,5.366,3929,5.366,3930,6.234,3931,5.366,3932,5.366,3933,5.366,3934,5.366,3935,5.366,3936,5.366,3937,5.366,3938,5.366,3939,5.366]],["title/index.html",[25,0.216,1386,2.657,3073,2.799]],["body/index.html",[4,0.132,17,1.513,47,0.006,136,1.297,143,0.961,161,1.161,204,1.205,229,1.038,251,0.006,252,0.006,360,3.231,391,6.954,400,2.622,444,4.576,451,5.669,660,5.613,681,3.679,711,4.576,825,4.342,996,3.679,997,3.679,1114,4.854,1283,5.954,1386,4.344,1473,6.715,1704,7.014,1758,4.854,1959,4.854,2370,5.085,2667,6.903,2824,5.669,2825,6.954,2830,5.669,3073,4.576,3180,5.202,3714,6.954,3755,6.33,3940,6.377,3941,6.377,3942,6.377,3943,6.377,3944,6.377,3945,6.954,3946,8.463,3947,6.377,3948,8.823,3949,6.377,3950,6.377,3951,6.377,3952,5.669,3953,6.377,3954,6.377,3955,6.377,3956,8.443,3957,6.377,3958,6.377,3959,6.377,3960,6.377,3961,6.377,3962,5.202,3963,6.715,3964,6.377,3965,6.377,3966,6.377,3967,6.377,3968,5.202,3969,6.954,3970,7.823,3971,7.823,3972,8.463,3973,5.669,3974,6.377,3975,6.377,3976,6.377,3977,5.669,3978,6.377,3979,6.377,3980,6.377,3981,4.854,3982,6.377,3983,6.377,3984,6.377,3985,6.377,3986,6.377,3987,6.377,3988,6.377]],["title/license.html",[1386,2.657,2644,3.182,3073,2.799]],["body/license.html",[4,0.163,28,2.671,29,2.196,47,0.006,180,1.193,251,0.006,252,0.006,287,5.3,360,4.323,362,4.455,410,2.948,553,4.945,820,4.425,1010,3.619,1158,3.889,1478,5.3,2474,4.662,2644,5.3,3755,4.662,3989,6.497,3990,6.497,3991,9.103,3992,6.497,3993,6.497,3994,6.497,3995,6.497,3996,6.497,3997,6.497,3998,6.497,3999,6.497,4000,6.497,4001,6.497,4002,6.497,4003,7.913,4004,6.497,4005,6.497,4006,8.532,4007,8.532,4008,6.497,4009,7.913,4010,6.497,4011,7.913,4012,7.913,4013,7.913,4014,6.497,4015,6.497,4016,6.497,4017,6.497,4018,7.913,4019,6.497,4020,7.913,4021,6.497,4022,7.913,4023,7.913,4024,8.532,4025,7.913,4026,6.497,4027,6.497,4028,6.497,4029,6.497,4030,6.497,4031,6.497,4032,6.497,4033,6.497,4034,6.497,4035,6.497,4036,6.497,4037,6.497,4038,6.497,4039,6.497,4040,6.497,4041,6.497,4042,6.497,4043,6.497,4044,5.776,4045,6.497,4046,6.497,4047,6.497,4048,6.497,4049,6.497,4050,6.497,4051,7.913,4052,6.497,4053,6.497,4054,6.497,4055,6.497,4056,6.497,4057,5.776,4058,6.497,4059,6.497,4060,6.497,4061,6.497,4062,6.497]],["title/modules.html",[400,2.63]],["body/modules.html",[47,0.006,251,0.006,252,0.006,399,5.286,400,2.855,406,4.983,407,4.157,455,5.286,459,4.983,594,4.029,1215,5.286,1220,4.983,1442,5.286,1445,4.983,1707,7.284,1783,8.507,2350,5.286,2353,4.983,2884,5.286,2888,4.983,3490,5.286,3494,4.983,3627,7.747,4063,9.818,4064,9.497]],["title/overview.html",[4065,5.688]],["body/overview.html",[1,1.429,2,0.951,47,0.007,124,1.717,126,1.429,128,1.456,135,1.429,141,1.429,145,1.429,147,1.403,149,1.429,152,1.429,154,1.429,155,1.429,158,1.429,165,1.456,173,1.456,175,1.456,177,1.429,179,1.456,182,1.429,187,1.456,198,1.429,200,1.429,202,1.429,205,1.429,209,1.429,211,1.403,213,1.429,215,1.429,216,1.429,226,1.456,228,1.403,230,1.429,235,1.403,238,1.429,241,0.933,251,0.005,252,0.005,253,1.606,321,2.457,399,7.008,400,1.994,401,3.534,402,4.311,403,4.311,404,4.311,405,4.311,406,5.329,407,5.243,408,3.925,409,2.533,410,2.2,427,2.614,455,7.262,456,4.311,457,4.311,458,4.311,459,5.329,739,1.904,1081,2.702,1215,7.447,1216,4.311,1217,4.311,1218,4.311,1219,4.311,1220,5.329,1221,4.003,1442,6.056,1443,4.311,1444,4.311,1445,5.329,1464,3.692,2142,3.692,2350,6.056,2351,4.311,2352,4.311,2353,5.329,2826,4.311,2884,7.303,2885,4.311,2886,4.311,2887,4.311,2888,5.329,3080,5.329,3081,3.021,3341,5.329,3356,5.329,3454,5.329,3463,5.329,3490,7.431,3491,4.311,3492,4.311,3493,4.311,3494,5.329,3617,4.311,3779,4.311,4065,4.311,4066,4.85,4067,4.85,4068,4.85,4069,4.85]],["title/properties.html",[26,0.624,3861,3.468]],["body/properties.html",[26,0.849,47,0.007,251,0.006,252,0.006,3920,6.808,4070,7.659]],["title/routes.html",[427,3.448]],["body/routes.html",[47,0.006,251,0.006,252,0.006,427,4.147]],["title/miscellaneous/typealiases.html",[3890,2.43,4071,5.631]],["body/miscellaneous/typealiases.html",[25,0.412,47,0.006,49,0.344,88,1.407,206,1.681,251,0.006,252,0.006,395,2.43,1325,4.779,1575,5.343,1576,6.075,1580,7.626,2982,5.668,2983,6.075,3890,4.638,4072,7.447,4073,7.447,4074,8.579,4075,7.447,4076,7.447]],["title/miscellaneous/variables.html",[3890,2.43,4077,5.005]],["body/miscellaneous/variables.html",[2,1.33,9,0.073,17,0.913,20,3.658,25,0.283,28,3.134,29,1.725,41,3.18,47,0.007,49,0.416,60,1.586,61,1.364,75,3.319,81,1.126,122,0.965,131,1.001,133,1.001,138,1.001,156,1.001,163,1.001,168,1.001,170,1.001,184,0.983,185,1.001,189,0.93,191,1.001,194,1.001,196,1.001,207,1.001,218,1.001,221,1.001,223,1.001,231,1.001,233,1.001,242,0.983,246,0.983,248,0.965,251,0.005,252,0.005,258,3.001,272,4.763,284,2.549,290,2.534,293,2.587,298,3.001,320,2.587,325,3.862,326,6.033,330,3.658,341,3.319,362,3.981,363,6.617,364,5.536,398,2.005,400,2.79,401,3.658,412,3.057,413,2.443,424,3.319,426,3.057,461,3.18,463,3.478,499,3.057,514,3.752,546,2.316,718,1.624,855,4.539,995,3.781,1073,4.955,1074,3.663,1108,4.623,1111,4.539,1473,5.165,1478,5.536,1503,3.663,1548,5.536,1554,6.183,1656,5.536,1737,3.663,1756,4.165,1830,4.165,1974,3.663,2188,4.165,2194,4.539,2195,4.539,2197,4.539,2199,4.539,2201,4.539,2202,4.539,2204,4.539,2205,4.539,2207,4.539,2209,6.033,2211,4.539,2213,6.033,2215,6.033,2216,4.539,2218,4.539,2220,4.539,2222,4.539,2224,4.539,2226,4.539,2228,4.539,2230,4.539,2232,4.539,2234,4.539,2270,3.663,2275,5.536,2276,5.536,2277,4.539,2278,4.165,2279,4.539,2280,4.539,2281,4.539,2359,6.033,2651,6.627,3375,4.539,3515,5.536,3842,4.539,3843,4.539,3847,4.539,3848,6.033,3852,4.539,3853,6.033,3858,4.539,3859,6.033,3890,3.18,3919,6.627,3945,4.539,3963,3.886,3969,4.539,3973,4.539,4077,4.539,4078,6.787,4079,5.106,4080,5.106,4081,5.106,4082,5.106,4083,6.787,4084,5.106,4085,5.106,4086,5.106,4087,5.106,4088,6.787,4089,5.106,4090,5.106,4091,5.106,4092,5.106,4093,5.106,4094,5.106,4095,5.106,4096,6.787,4097,4.539,4098,5.106,4099,5.106,4100,5.106]],["title/additional-documentation/architecture.html",[240,0.697,2008,2.536,4101,3.468]],["body/additional-documentation/architecture.html",[0,0.295,2,1.705,9,0.137,17,0.914,18,1.307,28,3.136,47,0.006,48,0.405,49,0.236,57,3.889,61,0.785,90,0.236,118,1.426,142,0.897,143,0.77,185,1.002,241,1.564,251,0.005,252,0.005,253,2.526,264,3.322,272,2.669,294,4.17,298,4.136,323,1.659,324,4.17,398,3.191,400,3.341,427,2.755,647,1.919,682,1.248,699,2.152,719,4.542,720,2.59,829,3.211,838,3.183,986,2.755,988,4.249,1000,2.743,1010,2.847,1014,2.847,1046,8.012,1067,4.544,1081,4.527,1096,4.544,1114,6.944,1128,4.17,1287,7.52,1451,4.544,1452,3.89,1461,5.831,1737,4.873,1758,7.228,1759,5.805,1875,2.948,2008,4.958,2142,5.169,2143,7.224,2474,3.667,2658,4.544,2722,6.037,2964,5.54,3081,5.061,3715,4.544,3755,6.368,3925,4.544,3930,7.224,3968,7.578,3977,4.544,3981,5.169,4044,6.78,4097,4.544,4101,6.78,4102,5.111,4103,6.792,4104,8.012,4105,9.013,4106,5.111,4107,5.111,4108,8.503,4109,4.17,4110,5.111,4111,5.111,4112,5.111,4113,5.111,4114,5.111,4115,5.111,4116,4.544,4117,5.111,4118,8.127,4119,6.792,4120,5.111,4121,5.111,4122,5.111,4123,5.111,4124,5.111,4125,4.544,4126,7.52,4127,5.111,4128,8.875,4129,5.111,4130,5.111,4131,5.111,4132,5.111,4133,5.111,4134,5.111,4135,5.111,4136,5.111,4137,5.111,4138,6.792,4139,5.111,4140,6.222,4141,5.111,4142,7.627,4143,5.111,4144,5.111,4145,5.111,4146,5.111,4147,5.111,4148,5.111,4149,5.111,4150,5.111,4151,5.111,4152,5.111,4153,5.111,4154,5.111]],["title/additional-documentation/localization.html",[214,0.779,240,0.697,2008,2.536]],["body/additional-documentation/localization.html",[9,0.119,17,1.557,47,0.007,60,1.099,62,1.643,86,1.039,117,1.206,143,0.927,153,1.184,180,0.927,214,1.228,251,0.006,252,0.006,298,2.72,308,2.528,360,3.116,711,4.413,808,3.831,829,3.505,873,3.661,1009,3.548,1114,5.822,1292,4.579,1704,4.681,1842,5.017,2278,5.017,2370,3.998,2472,5.467,2473,5.467,2474,4.413,2517,5.211,2609,5.467,2847,5.467,2861,8.12,2864,6.8,2866,6.8,2867,5.467,2868,6.8,2870,6.8,2873,7.744,2876,5.467,2877,4.681,3132,5.017,3585,5.467,3618,5.467,3620,5.467,3669,5.017,3670,5.017,3924,5.467,3952,6.8,3956,5.467,3962,5.017,3963,4.681,3981,5.822,4057,5.467,4104,7.402,4108,5.467,4109,5.017,4116,7.402,4125,5.467,4126,6.8,4140,5.017,4155,6.151,4156,6.151,4157,6.151,4158,6.151,4159,6.151,4160,7.65,4161,6.151,4162,6.151,4163,6.151,4164,6.151,4165,6.151,4166,6.151,4167,7.65,4168,6.151,4169,6.151,4170,6.151,4171,6.151,4172,8.712,4173,6.151,4174,6.151,4175,7.65,4176,7.65,4177,7.65,4178,6.151,4179,7.65,4180,6.151,4181,6.151,4182,8.712,4183,6.151,4184,7.65,4185,6.151,4186,6.151,4187,6.151,4188,6.151,4189,8.327,4190,6.151,4191,6.151,4192,6.151,4193,6.151,4194,6.151]],["title/additional-documentation/continuos-integration.html",[162,0.656,240,0.598,2008,2.174,4195,2.974]],["body/additional-documentation/continuos-integration.html",[9,0.101,47,0.006,142,1.242,161,1.289,162,1.387,240,1.265,251,0.006,252,0.006,360,3.585,363,5.386,371,3.387,827,5.413,1461,5.077,1473,5.386,1670,4.82,1737,5.975,2831,6.793,3102,6.291,3755,5.975,3919,5.773,3962,5.773,3963,5.386,3968,6.793,3981,6.338,4109,7.219,4140,6.793,4195,6.291,4196,7.077,4197,8.328,4198,7.077,4199,7.077,4200,7.077,4201,7.077,4202,8.328,4203,7.077,4204,7.077,4205,7.077,4206,7.077,4207,7.077,4208,7.077,4209,7.077,4210,7.077,4211,7.077,4212,7.077,4213,7.077,4214,7.077,4215,7.077,4216,7.077]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["0",{"_index":690,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["0.0.1",{"_index":4070,"title":{},"body":{"properties.html":{}}}],["0.01rem",{"_index":805,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0.1",{"_index":1982,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["0.1.43",{"_index":3882,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":3871,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":3889,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":879,"title":{},"body":{"components/ButtonComponent.html":{}}}],["0.2",{"_index":738,"title":{},"body":{"components/BoardPage.html":{}}}],["0.25rem",{"_index":3029,"title":{},"body":{"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["0.2rem",{"_index":2024,"title":{},"body":{"components/InputComponent.html":{}}}],["0.2s",{"_index":749,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["0.35rem",{"_index":2916,"title":{},"body":{"components/SettingsPage.html":{}}}],["0.4rem",{"_index":2022,"title":{},"body":{"components/InputComponent.html":{}}}],["0.4s",{"_index":1975,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["0.5",{"_index":747,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["0.5rem",{"_index":710,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["0.5s",{"_index":826,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0.7",{"_index":893,"title":{},"body":{"components/CardComponent.html":{}}}],["0.75",{"_index":1827,"title":{},"body":{"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{}}}],["0.75em",{"_index":2033,"title":{},"body":{"components/InputComponent.html":{}}}],["0.75rem",{"_index":872,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["0.8125rem",{"_index":867,"title":{},"body":{"components/ButtonComponent.html":{}}}],["0.8rem",{"_index":2041,"title":{},"body":{"components/InputComponent.html":{}}}],["0/1",{"_index":3784,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3815,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3814,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3774,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3781,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3759,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":3837,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3773,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3765,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3778,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3775,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3789,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3761,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3807,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3816,"title":{},"body":{"coverage.html":{}}}],["00b300",{"_index":3019,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["0a95d0",{"_index":818,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0xffffffff",{"_index":2589,"title":{},"body":{"classes/Random.html":{}}}],["1",{"_index":739,"title":{"components/ViewOptionsComponent-1.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":2596,"title":{},"body":{"classes/Random.html":{}}}],["1.0.2",{"_index":3886,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":3876,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":3870,"title":{},"body":{"dependencies.html":{}}}],["1.11.2",{"_index":3880,"title":{},"body":{"dependencies.html":{}}}],["1.22.17",{"_index":3986,"title":{},"body":{"index.html":{}}}],["1.25rem",{"_index":868,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1.5",{"_index":876,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1.5em",{"_index":1845,"title":{},"body":{"components/IconComponent.html":{}}}],["1.5rem",{"_index":945,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["1/1",{"_index":3757,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":3813,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3838,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":3839,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3762,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":3809,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":3811,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":807,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SettingsPage.html":{},"classes/UserUtils.html":{}}}],["10/20",{"_index":3770,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":114,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["1000",{"_index":3023,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["10000000",{"_index":3622,"title":{},"body":{"classes/UserUtils.html":{}}}],["100px",{"_index":2725,"title":{},"body":{"components/SchedulePage.html":{}}}],["100vh",{"_index":937,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["10px",{"_index":112,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["11/19",{"_index":3768,"title":{},"body":{"coverage.html":{}}}],["11/27",{"_index":3836,"title":{},"body":{"coverage.html":{}}}],["113",{"_index":3476,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["12",{"_index":3810,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":3766,"title":{},"body":{"coverage.html":{}}}],["12/22",{"_index":3777,"title":{},"body":{"coverage.html":{}}}],["123456789",{"_index":2585,"title":{},"body":{"classes/Random.html":{}}}],["1240px",{"_index":956,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["12px",{"_index":1049,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["13",{"_index":4068,"title":{},"body":{"overview.html":{}}}],["13.2.0",{"_index":3863,"title":{},"body":{"dependencies.html":{}}}],["13.2.5",{"_index":3988,"title":{},"body":{"index.html":{}}}],["13.3.0",{"_index":3865,"title":{},"body":{"dependencies.html":{}}}],["130px",{"_index":2721,"title":{},"body":{"components/SchedulePage.html":{}}}],["14",{"_index":3808,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":3758,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":4066,"title":{},"body":{"overview.html":{}}}],["150",{"_index":3705,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["152",{"_index":3471,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["15px",{"_index":892,"title":{},"body":{"components/CardComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{}}}],["16",{"_index":2601,"title":{},"body":{"classes/Random.html":{},"coverage.html":{}}}],["16.13.0",{"_index":3985,"title":{},"body":{"index.html":{}}}],["16/19",{"_index":3780,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":3340,"title":{},"body":{"components/TaskListPage.html":{}}}],["16}px",{"_index":677,"title":{},"body":{"components/BoardPage.html":{}}}],["17/24",{"_index":3772,"title":{},"body":{"coverage.html":{}}}],["18000",{"_index":2602,"title":{},"body":{"classes/Random.html":{}}}],["182",{"_index":3484,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["183",{"_index":3487,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["189",{"_index":3488,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["1em",{"_index":722,"title":{},"body":{"components/BoardPage.html":{}}}],["1px",{"_index":755,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{}}}],["1rem",{"_index":695,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/MockPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["1s",{"_index":3027,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["2",{"_index":820,"title":{},"body":{"components/BoardTaskComponent.html":{},"classes/Enum.html":{},"components/InputComponent.html":{},"components/UpperNavigationComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["2.3.0",{"_index":3885,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":3336,"title":{},"body":{"components/TaskListPage.html":{}}}],["2/3",{"_index":3806,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2705,"title":{},"body":{"components/SchedulePage.html":{}}}],["200",{"_index":855,"title":{},"body":{"components/ButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["200px",{"_index":3574,"title":{},"body":{"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["2022",{"_index":3993,"title":{},"body":{"license.html":{}}}],["204",{"_index":3475,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["20px",{"_index":933,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["219",{"_index":3472,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["22",{"_index":3829,"title":{},"body":{"coverage.html":{}}}],["222",{"_index":2369,"title":{},"body":{"components/MockPage.html":{}}}],["24px",{"_index":862,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{},"components/SnackbarComponent.html":{}}}],["25",{"_index":870,"title":{},"body":{"components/ButtonComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["250ms",{"_index":735,"title":{},"body":{"components/BoardPage.html":{}}}],["250px",{"_index":2977,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["255",{"_index":3605,"title":{},"body":{"classes/UserUtils.html":{}}}],["25px",{"_index":890,"title":{},"body":{"components/CardComponent.html":{}}}],["28px",{"_index":1047,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["29px",{"_index":3338,"title":{},"body":{"components/TaskListPage.html":{}}}],["2ecc71",{"_index":753,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"pipes/StatusColorPipe.html":{},"components/TaskListPage.html":{}}}],["2px",{"_index":881,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["2rem",{"_index":689,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["2s",{"_index":705,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["3",{"_index":1464,"title":{},"body":{"classes/Enum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3/3",{"_index":3788,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":3819,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2826,"title":{},"body":{"components/SettingsAccountPage.html":{},"overview.html":{}}}],["300",{"_index":1978,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["300px",{"_index":708,"title":{},"body":{"components/BoardPage.html":{}}}],["30px",{"_index":2476,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{}}}],["315px",{"_index":2914,"title":{},"body":{"components/SettingsPage.html":{}}}],["32px",{"_index":813,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["36969",{"_index":2599,"title":{},"body":{"classes/Random.html":{}}}],["36px",{"_index":1990,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["39;one&#39",{"_index":1467,"title":{},"body":{"classes/Enum.html":{}}}],["39;three&#39",{"_index":1469,"title":{},"body":{"classes/Enum.html":{}}}],["39;two&#39",{"_index":1468,"title":{},"body":{"classes/Enum.html":{}}}],["3px",{"_index":1980,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["4",{"_index":3534,"title":{},"body":{"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4.2.3",{"_index":3877,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":3821,"title":{},"body":{"coverage.html":{}}}],["4/18",{"_index":3830,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":3817,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":3820,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1974,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{}}}],["4000",{"_index":2998,"title":{},"body":{"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{}}}],["400px",{"_index":1331,"title":{},"body":{"injectables/DialogService.html":{},"components/InputComponent.html":{}}}],["401",{"_index":1524,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":2177,"title":{},"body":{"components/LoginPage.html":{}}}],["404",{"_index":2182,"title":{},"body":{"components/LoginPage.html":{},"injectables/WorkspaceService.html":{}}}],["40px",{"_index":743,"title":{},"body":{"components/BoardPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["41",{"_index":3608,"title":{},"body":{"classes/UserUtils.html":{}}}],["422",{"_index":2638,"title":{},"body":{"components/RegisterPage.html":{}}}],["4294967296",{"_index":2603,"title":{},"body":{"classes/Random.html":{}}}],["42px",{"_index":866,"title":{},"body":{"components/ButtonComponent.html":{}}}],["43",{"_index":3822,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":3796,"title":{},"body":{"coverage.html":{}}}],["450px",{"_index":954,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["45deg",{"_index":3032,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["46px",{"_index":2405,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["4a5465",{"_index":3089,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["4px",{"_index":869,"title":{},"body":{"components/ButtonComponent.html":{},"components/MockPage.html":{},"components/SettingsPage.html":{},"components/TaskListPage.html":{}}}],["4rem",{"_index":942,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/TaskListPage.html":{}}}],["5",{"_index":817,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/SchedulePage.html":{}}}],["5/11",{"_index":3797,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":3760,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":3832,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":3841,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":809,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["500",{"_index":756,"title":{},"body":{"components/BoardPage.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["500px",{"_index":949,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["520px",{"_index":957,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["54",{"_index":3776,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":3840,"title":{},"body":{"coverage.html":{}}}],["55px",{"_index":2025,"title":{},"body":{"components/InputComponent.html":{}}}],["56",{"_index":4067,"title":{},"body":{"overview.html":{}}}],["57",{"_index":3767,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":752,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/ForgotPasswordPage.html":{},"components/ListGroupComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["6",{"_index":3617,"title":{},"body":{"classes/UserUtils.html":{},"overview.html":{}}}],["6.1.0",{"_index":3872,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":3787,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":3764,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":3833,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":3480,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["600",{"_index":1979,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["60px",{"_index":1190,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["62px",{"_index":3573,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["64px",{"_index":932,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{}}}],["65535",{"_index":2600,"title":{},"body":{"classes/Random.html":{}}}],["66",{"_index":3805,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2680,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["7.1.0",{"_index":3879,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":3883,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":3824,"title":{},"body":{"coverage.html":{}}}],["7/16",{"_index":3823,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":3826,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":3835,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":3771,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["71",{"_index":3831,"title":{},"body":{"coverage.html":{}}}],["720px",{"_index":958,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["74px",{"_index":3050,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["75",{"_index":3818,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":3479,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["77",{"_index":3834,"title":{},"body":{"coverage.html":{}}}],["770px",{"_index":950,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["7px",{"_index":891,"title":{},"body":{"components/CardComponent.html":{}}}],["8",{"_index":4069,"title":{},"body":{"overview.html":{}}}],["8.3.2",{"_index":3887,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":3769,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":3828,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1986,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SettingsPage.html":{},"coverage.html":{}}}],["800",{"_index":726,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["800px",{"_index":2917,"title":{},"body":{"components/SettingsPage.html":{}}}],["80px",{"_index":865,"title":{},"body":{"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{}}}],["84",{"_index":3779,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["85",{"_index":3763,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":3825,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":3827,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":3483,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["8px",{"_index":2915,"title":{},"body":{"components/SettingsPage.html":{}}}],["9",{"_index":3812,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":3790,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":3607,"title":{},"body":{"classes/UserUtils.html":{}}}],["950px",{"_index":953,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["987654321",{"_index":2587,"title":{},"body":{"classes/Random.html":{}}}],["_",{"_index":3049,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"classes/Utils.html":{}}}],["_assignee",{"_index":1905,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["_blank",{"_index":1694,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["_context",{"_index":2121,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["_control",{"_index":3516,"title":{},"body":{"classes/TestNgControl.html":{}}}],["_filters",{"_index":1598,"title":{},"body":{"components/FiltersComponent.html":{}}}],["_icon",{"_index":1834,"title":{},"body":{"components/IconComponent.html":{}}}],["_index",{"_index":3046,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["_isbuttondisabled",{"_index":3539,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["_main/_main.module",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["_main/components/main",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["_main/interfaces/color.interface",{"_index":3078,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["_main/services/api.service",{"_index":3404,"title":{},"body":{"injectables/TaskService.html":{}}}],["_main/services/dialog.service",{"_index":598,"title":{},"body":{"components/BoardPage.html":{}}}],["_main/validators/required.validator",{"_index":84,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["_persistentkey",{"_index":2493,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["_required",{"_index":964,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["_templateref",{"_index":2123,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["_viewcontainer",{"_index":2129,"title":{},"body":{"directives/LetDirective.html":{}}}],["_viewcontainer.createembeddedview(_templateref",{"_index":2124,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["ability",{"_index":1766,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["above",{"_index":4011,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":822,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/MockPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["abstract",{"_index":4134,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["abstractcontrol",{"_index":3523,"title":{},"body":{"classes/TestNgControl.html":{}}}],["acc",{"_index":2349,"title":{},"body":{"injectables/MemberService.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["acc.set(member.user.id",{"_index":2348,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["acc.set(status.id",{"_index":3120,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["access",{"_index":324,"title":{},"body":{"injectables/ApiService.html":{},"injectables/GitIntegrationService.html":{},"additional-documentation/architecture.html":{}}}],["accessor",{"_index":1036,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["accessor.class",{"_index":1039,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["accessor.class.ts",{"_index":1066,"title":{},"body":{"components/ControlAccessor.html":{},"coverage.html":{}}}],["accessor.class.ts:102",{"_index":1084,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:118",{"_index":1089,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:126",{"_index":1086,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:133",{"_index":1087,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:139",{"_index":1088,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:150",{"_index":1085,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:19",{"_index":1082,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:25",{"_index":1095,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:29",{"_index":1098,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:36",{"_index":1090,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:41",{"_index":1100,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:48",{"_index":1091,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:53",{"_index":1093,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:58",{"_index":1102,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:65",{"_index":1104,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:67",{"_index":1078,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:77",{"_index":1092,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:88",{"_index":1083,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessors",{"_index":1069,"title":{},"body":{"components/ControlAccessor.html":{},"injectables/DialogService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"directives/LetDirective.html":{},"components/OptionComponent.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{}}}],["account",{"_index":204,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{}}}],["account.githubusername",{"_index":1795,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["account.githubusername.replace",{"_index":1809,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["account.page",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DeleteAccountPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["account.page'},{'name",{"_index":151,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["account.page.html",{"_index":1272,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.scss",{"_index":1271,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.ts",{"_index":1270,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"coverage.html":{}}}],["account.page.ts:10",{"_index":1273,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{}}}],["account.page.ts:12",{"_index":2790,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:13",{"_index":2676,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["account.page.ts:15",{"_index":2794,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:17",{"_index":1276,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{}}}],["account.page.ts:22",{"_index":1275,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.ts:28",{"_index":2793,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:36",{"_index":2792,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:42",{"_index":2791,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account/delete",{"_index":469,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DeleteAccountPage.html":{},"coverage.html":{}}}],["account/restore",{"_index":476,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/RestoreAccountPage.html":{},"coverage.html":{}}}],["account/settings",{"_index":2787,"title":{},"body":{"components/SettingsAccountPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{}}}],["accounts.map((account",{"_index":1689,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["action",{"_index":2831,"title":{},"body":{"components/SettingsAccountPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/continuos-integration.html":{}}}],["actions",{"_index":827,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"additional-documentation/continuos-integration.html":{}}}],["activatedroute",{"_index":543,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/GithubIntegrationPage.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["active",{"_index":880,"title":{},"body":{"components/ButtonComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["activeworkspace",{"_index":2411,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["actual_component",{"_index":250,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["adapter",{"_index":3875,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":18,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{}}}],["add(emails",{"_index":2324,"title":{},"body":{"injectables/MemberService.html":{}}}],["added",{"_index":2343,"title":{},"body":{"injectables/MemberService.html":{}}}],["addedmembers",{"_index":2304,"title":{},"body":{"components/MemberListComponent.html":{}}}],["adding",{"_index":4179,"title":{},"body":{"additional-documentation/localization.html":{}}}],["additional",{"_index":2008,"title":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}},"body":{"components/InputComponent.html":{},"interfaces/RequestOptions.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["addmemberdialog",{"_index":1,"title":{"components/AddMemberDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["addmemberdialogdata",{"_index":39,"title":{"interfaces/AddMemberDialogData.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectMembersPage.html":{},"coverage.html":{}}}],["addmembers",{"_index":33,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["addrepository",{"_index":2090,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["address",{"_index":1650,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["adds",{"_index":2326,"title":{},"body":{"injectables/MemberService.html":{}}}],["adrian",{"_index":4000,"title":{},"body":{"license.html":{}}}],["advanced",{"_index":344,"title":{},"body":{"injectables/ApiService.html":{}}}],["advised",{"_index":4059,"title":{},"body":{"license.html":{}}}],["afterclosed",{"_index":670,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["afterviewinit",{"_index":1634,"title":{},"body":{"directives/FocusInitialDirective.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{}}}],["agent",{"_index":2930,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype",{"_index":2924,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(\"browser",{"_index":2960,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(\"os",{"_index":2958,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(type",{"_index":2929,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agree",{"_index":2643,"title":{},"body":{"components/RegisterPage.html":{}}}],["agreement",{"_index":2645,"title":{},"body":{"components/RegisterPage.html":{}}}],["agreements",{"_index":2619,"title":{},"body":{"components/RegisterPage.html":{}}}],["aleksandra",{"_index":3994,"title":{},"body":{"license.html":{}}}],["alert",{"_index":123,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["alert(data",{"_index":1298,"title":{},"body":{"injectables/DialogService.html":{}}}],["alert.dialog.html",{"_index":262,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alert.dialog.scss",{"_index":261,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alert/information",{"_index":1301,"title":{},"body":{"injectables/DialogService.html":{}}}],["alertdialog",{"_index":122,"title":{"components/AlertDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alertdialogdata",{"_index":268,"title":{"interfaces/AlertDialogData.html":{}},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"coverage.html":{}}}],["alertdialogvariant",{"_index":263,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{},"miscellaneous/enumerations.html":{}}}],["alertdialogvariant.default",{"_index":313,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alertdialogvariant.important",{"_index":277,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["aliases",{"_index":4072,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":714,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["already",{"_index":2180,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["always",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["american",{"_index":2875,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["and/or",{"_index":4015,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1114,"title":{},"body":{"components/ControlAccessor.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["angular.json",{"_index":3924,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/localization.html":{}}}],["angular/animations",{"_index":3862,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3864,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":851,"title":{},"body":{"components/ButtonComponent.html":{}}}],["angular/cdk/drag",{"_index":585,"title":{},"body":{"components/BoardPage.html":{},"modules/MainModule.html":{}}}],["angular/cdk/observers",{"_index":2196,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/overlay",{"_index":2198,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/platform",{"_index":2200,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/text",{"_index":2018,"title":{},"body":{"components/InputComponent.html":{}}}],["angular/common",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":365,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"modules/MainModule.html":{},"interfaces/RequestOptions.html":{}}}],["angular/compiler",{"_index":3866,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":74,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AuthModule.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"classes/TestNgControl.html":{},"components/ViewOptionsComponent-1.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":4156,"title":{},"body":{"additional-documentation/localization.html":{}}}],["angular/material",{"_index":3867,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":2206,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/badge",{"_index":2208,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/checkbox",{"_index":2210,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/core",{"_index":2212,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/datepicker",{"_index":2214,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/dialog",{"_index":76,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"modules/MainModule.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["angular/material/form",{"_index":2217,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/icon",{"_index":2219,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/input",{"_index":2221,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/menu",{"_index":2223,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/progress",{"_index":2225,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/select",{"_index":2227,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/table",{"_index":2229,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tabs",{"_index":2231,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tooltip",{"_index":2233,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/platform",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"modules/SettingsRoutingModule.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["animating",{"_index":734,"title":{},"body":{"components/BoardPage.html":{}}}],["animation",{"_index":3026,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["animationname",{"_index":2988,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["antkowiak",{"_index":4001,"title":{},"body":{"license.html":{}}}],["any)._markastouched",{"_index":1133,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any)._rawvalidators",{"_index":1127,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any)._root",{"_index":2691,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["any).color",{"_index":1948,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["any).control._rawvalidators",{"_index":1130,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any).id",{"_index":674,"title":{},"body":{"components/BoardPage.html":{}}}],["any).injector",{"_index":2290,"title":{},"body":{"modules/MainModule.html":{}}}],["any).injector.get(dialogservice",{"_index":1556,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["any).prototype.submit",{"_index":1657,"title":{},"body":{"interfaces/FormGroup.html":{}}}],["any).subscribe",{"_index":641,"title":{},"body":{"components/BoardPage.html":{}}}],["api",{"_index":325,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{}}}],["apiservice",{"_index":320,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":326,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["app.component",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["app/main/main.module",{"_index":2282,"title":{},"body":{"modules/MainModule.html":{}}}],["app/main/main.module';(@)ngmodule",{"_index":2192,"title":{},"body":{"modules/MainModule.html":{}}}],["appcomponent",{"_index":124,"title":{"components/AppComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["appfocusinitial",{"_index":1635,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["appfocusinitial]'},{'name",{"_index":247,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["application",{"_index":1737,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["apply",{"_index":990,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["apply(input",{"_index":1577,"title":{},"body":{"interfaces/FilterCheckbox.html":{}}}],["apply(tasks",{"_index":1591,"title":{},"body":{"classes/Filters.html":{}}}],["applyfilters",{"_index":3398,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["applyfilters(filters",{"_index":3914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appmodule",{"_index":399,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":406,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":4101,"title":{"additional-documentation/architecture.html":{}},"body":{"additional-documentation/architecture.html":{}}}],["arguments",{"_index":1055,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["arising",{"_index":4056,"title":{},"body":{"license.html":{}}}],["array",{"_index":1470,"title":{},"body":{"classes/Enum.html":{},"classes/Utils.html":{}}}],["array.isarray(members",{"_index":1947,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["arraybuffer",{"_index":2664,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["artifacts",{"_index":3965,"title":{},"body":{"index.html":{}}}],["as.validator",{"_index":917,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["as.validator.ts",{"_index":3804,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["assets/mocks/calendar.svg",{"_index":3513,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["assets/mocks/dashboard.svg",{"_index":1260,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["assets/mocks/inbox.svg",{"_index":1449,"title":{},"body":{"modules/EmailsRoutingModule.html":{}}}],["assets/mocks/messages.svg",{"_index":2357,"title":{},"body":{"modules/MessagesRoutingModule.html":{}}}],["assign",{"_index":3365,"title":{},"body":{"injectables/TaskService.html":{}}}],["assign(member?.user.id",{"_index":1967,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assign(userid",{"_index":3373,"title":{},"body":{"injectables/TaskService.html":{}}}],["assigned",{"_index":3169,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["assignee",{"_index":811,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/TaskListPage.html":{}}}],["assignee'},{'name",{"_index":167,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["assignee(assignee",{"_index":1941,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component",{"_index":3498,"title":{},"body":{"modules/TasksModule.html":{}}}],["assignee.component.html",{"_index":1904,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.scss",{"_index":1903,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts",{"_index":1902,"title":{},"body":{"components/InputAssigneeComponent.html":{},"coverage.html":{}}}],["assignee.component.ts:18",{"_index":1912,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:27",{"_index":1930,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:31",{"_index":1913,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:45",{"_index":1915,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:46",{"_index":1914,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:48",{"_index":1928,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:50",{"_index":1921,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:52",{"_index":1925,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:53",{"_index":1924,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:54",{"_index":1922,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:56",{"_index":1936,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:60",{"_index":1934,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:62",{"_index":1911,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:68",{"_index":1917,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:80",{"_index":1916,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:84",{"_index":1920,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:91",{"_index":1919,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.user.name[0",{"_index":1968,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee/input",{"_index":1901,"title":{},"body":{"components/InputAssigneeComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["assigneecolor",{"_index":1906,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assigneecontrol",{"_index":3268,"title":{},"body":{"components/TaskListPage.html":{}}}],["assigneeid",{"_index":1590,"title":{},"body":{"classes/Filters.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["assignees",{"_index":810,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["async)?.name",{"_index":1203,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{}}}],["attach",{"_index":1373,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"interfaces/RequestOptions.html":{},"components/TaskDialog.html":{},"injectables/TaskService.html":{}}}],["attached",{"_index":658,"title":{},"body":{"components/BoardPage.html":{},"directives/FocusInitialDirective.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["attachgithubintegration",{"_index":1708,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["attachgithubintegration(projectid",{"_index":1724,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["attachgithubintegration(this.projectid",{"_index":2108,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["attribute",{"_index":1850,"title":{},"body":{"components/IconComponent.html":{}}}],["auth",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/UpperNavigationComponent.html":{}}}],["auth.routing",{"_index":464,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/guard/logged",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/interfaces/user.interface",{"_index":2984,"title":{},"body":{"interfaces/SinglePersonSchedule.html":{},"injectables/UserService.html":{}}}],["auth/services/auth.service",{"_index":2149,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["auth/services/user.service",{"_index":2165,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{}}}],["authentication",{"_index":2670,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["authmodule",{"_index":455,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":459,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":483,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["auto",{"_index":687,"title":{},"body":{"components/BoardPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{}}}],["autocomplete",{"_index":974,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["autofillmonitor",{"_index":2002,"title":{},"body":{"components/InputComponent.html":{}}}],["automatically",{"_index":3961,"title":{},"body":{"index.html":{}}}],["available",{"_index":3627,"title":{},"body":{"classes/Utils.html":{},"injectables/WorkspaceService.html":{},"modules.html":{}}}],["avatar",{"_index":1989,"title":{},"body":{"components/InputAssigneeComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/SchedulePage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["awesome",{"_index":1831,"title":{},"body":{"components/IconComponent.html":{}}}],["back",{"_index":1649,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{}}}],["backend",{"_index":4090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["backlog",{"_index":3704,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["badge",{"_index":4215,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["badges",{"_index":4213,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["banner",{"_index":754,"title":{},"body":{"components/BoardPage.html":{}}}],["bartosz",{"_index":3998,"title":{},"body":{"license.html":{}}}],["base",{"_index":1067,"title":{},"body":{"components/ControlAccessor.html":{},"additional-documentation/architecture.html":{}}}],["based",{"_index":1477,"title":{},"body":{"classes/Enum.html":{}}}],["basic",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["before",{"_index":873,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/localization.html":{}}}],["begin",{"_index":3070,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["behaviorsubject",{"_index":1324,"title":{},"body":{"injectables/DialogService.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["behaviorsubject(false",{"_index":1923,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{}}}],["behaviorsubject>(new",{"_index":3060,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["behaviorsubject>>(this.dialogsmap",{"_index":1319,"title":{},"body":{"injectables/DialogService.html":{}}}],["below",{"_index":306,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["beneath",{"_index":2007,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["between",{"_index":720,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["bezier(0",{"_index":737,"title":{},"body":{"components/BoardPage.html":{}}}],["binary",{"_index":4003,"title":{},"body":{"license.html":{}}}],["binding",{"_index":280,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/IconComponent.html":{}}}],["blob",{"_index":2665,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["block",{"_index":745,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["blocks",{"_index":4136,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["blur",{"_index":1019,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["board",{"_index":129,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["board'},{'name",{"_index":127,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["board(projectid",{"_index":3127,"title":{},"body":{"injectables/StatusService.html":{}}}],["board.page.html",{"_index":528,"title":{},"body":{"components/BoardPage.html":{}}}],["board.page.scss",{"_index":527,"title":{},"body":{"components/BoardPage.html":{}}}],["board.push([task",{"_index":3160,"title":{},"body":{"injectables/StatusService.html":{}}}],["board.push(other",{"_index":3164,"title":{},"body":{"injectables/StatusService.html":{}}}],["boardpage",{"_index":126,"title":{"components/BoardPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["boards",{"_index":692,"title":{},"body":{"components/BoardPage.html":{}}}],["boardtaskcomponent",{"_index":128,"title":{"components/BoardTaskComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{}}}],["bold",{"_index":2141,"title":{},"body":{"components/ListGroupComponent.html":{},"components/MockPage.html":{}}}],["boolean",{"_index":275,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/UserSession.html":{},"classes/Utils.html":{}}}],["boolean(repositoryname.match(new",{"_index":1810,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["bootstrap",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":727,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["bottom",{"_index":721,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["box",{"_index":803,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["branch",{"_index":1670,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"additional-documentation/continuos-integration.html":{}}}],["brands",{"_index":3703,"title":{},"body":{"components/ViewOptionsComponent-1.html":{},"dependencies.html":{}}}],["break",{"_index":1132,"title":{},"body":{"components/ControlAccessor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["british",{"_index":2869,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["browse",{"_index":4063,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1707,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["bsd",{"_index":3989,"title":{},"body":{"license.html":{}}}],["bubbles",{"_index":1063,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["build",{"_index":3963,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["builder",{"_index":4087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":3977,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{}}}],["buildthe",{"_index":3964,"title":{},"body":{"index.html":{}}}],["business",{"_index":4047,"title":{},"body":{"license.html":{}}}],["button",{"_index":307,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["button'},{'name",{"_index":132,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["button.component.html",{"_index":832,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":831,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button:not(.button",{"_index":863,"title":{},"body":{"components/ButtonComponent.html":{}}}],["buttoncomponent",{"_index":131,"title":{"components/ButtonComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buttons",{"_index":260,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/RegisterPage.html":{}}}],["c",{"_index":3992,"title":{},"body":{"license.html":{}}}],["c.charcodeat(0",{"_index":3613,"title":{},"body":{"classes/UserUtils.html":{}}}],["calc($padding",{"_index":2030,"title":{},"body":{"components/InputComponent.html":{}}}],["calc($size",{"_index":819,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["calc(100",{"_index":931,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["calc(50",{"_index":1985,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["calc(var",{"_index":875,"title":{},"body":{"components/ButtonComponent.html":{}}}],["calendar",{"_index":3512,"title":{},"body":{"modules/TasksRoutingModule.html":{},"components/ViewOptionsComponent-1.html":{}}}],["call",{"_index":2673,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["callback",{"_index":993,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["called",{"_index":1006,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["camelcase",{"_index":3650,"title":{},"body":{"classes/Utils.html":{}}}],["canactivate",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoggedInUsersGuard.html":{}}}],["cancel",{"_index":34,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["cancelable",{"_index":1064,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["cancels",{"_index":3384,"title":{},"body":{"injectables/TaskService.html":{}}}],["canceltext",{"_index":310,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"injectables/DialogService.html":{},"interfaces/ErrorValidationTree.html":{},"injectables/TaskService.html":{}}}],["card",{"_index":883,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":134,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["card.component.html",{"_index":885,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":884,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":133,"title":{"components/CardComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":1875,"title":{},"body":{"components/IconComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"additional-documentation/architecture.html":{}}}],["catch",{"_index":645,"title":{},"body":{"components/BoardPage.html":{}}}],["catcherror",{"_index":1517,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["catcherror((e",{"_index":1521,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["catchresponse",{"_index":3795,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["catchresponse(message",{"_index":3915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["caused",{"_index":4049,"title":{},"body":{"license.html":{}}}],["cdk",{"_index":730,"title":{},"body":{"components/BoardPage.html":{}}}],["cdkdragdrop",{"_index":551,"title":{},"body":{"components/BoardPage.html":{}}}],["cell",{"_index":2720,"title":{},"body":{"components/SchedulePage.html":{},"components/TaskListPage.html":{}}}],["center",{"_index":716,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["change",{"_index":136,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{}}}],["changed",{"_index":2757,"title":{},"body":{"components/SelectComponent.html":{}}}],["changedate",{"_index":763,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["changedate(date",{"_index":772,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["changedate(session.lastused",{"_index":2963,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["changedate(subtask.deadline",{"_index":3334,"title":{},"body":{"components/TaskListPage.html":{}}}],["changedate(task.deadline",{"_index":798,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["changeddate",{"_index":2048,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["changelanguage",{"_index":2848,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["changepasswordpage",{"_index":135,"title":{"components/ChangePasswordPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["changes",{"_index":1008,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/ProjectService.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TextareaComponent.html":{}}}],["changestatus",{"_index":3366,"title":{},"body":{"injectables/TaskService.html":{}}}],["changestatus(statusid",{"_index":3378,"title":{},"body":{"injectables/TaskService.html":{}}}],["changeworkspace",{"_index":2527,"title":{},"body":{"injectables/ProjectService.html":{}}}],["changeworkspace(projectid",{"_index":2529,"title":{},"body":{"injectables/ProjectService.html":{}}}],["changeworkspace(this.projectid",{"_index":1406,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["char",{"_index":3639,"title":{},"body":{"classes/Utils.html":{}}}],["char.length",{"_index":3663,"title":{},"body":{"classes/Utils.html":{}}}],["character",{"_index":3637,"title":{},"body":{"classes/Utils.html":{}}}],["character.tolowercase",{"_index":3660,"title":{},"body":{"classes/Utils.html":{}}}],["character.touppercase",{"_index":3659,"title":{},"body":{"classes/Utils.html":{}}}],["check",{"_index":751,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{},"miscellaneous/functions.html":{}}}],["checkbox",{"_index":961,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{}}}],["checkbox'},{'name",{"_index":139,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["checkbox.component.html",{"_index":963,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":962,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.ng",{"_index":1042,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":138,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkboxes",{"_index":1070,"title":{},"body":{"components/ControlAccessor.html":{}}}],["checkifisrequired",{"_index":968,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["checks",{"_index":1756,"title":{},"body":{"injectables/GitIntegrationService.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":712,"title":{},"body":{"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/RestoreAccountPage.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{}}}],["child)::before",{"_index":3337,"title":{},"body":{"components/TaskListPage.html":{}}}],["children",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["choose",{"_index":1767,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["ci/cd",{"_index":4196,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["city",{"_index":3591,"title":{},"body":{"interfaces/UserSession.html":{}}}],["class",{"_index":90,"title":{"classes/ESet.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"classes/PersistentMap.html":{},"classes/Random.html":{},"classes/TestNgControl.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["class.focused",{"_index":2001,"title":{},"body":{"components/InputComponent.html":{}}}],["class.important",{"_index":267,"title":{},"body":{"components/AlertDialog.html":{}}}],["classes",{"_index":1081,"title":{},"body":{"components/ControlAccessor.html":{},"classes/ESet.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"classes/PersistentMap.html":{},"classes/Random.html":{},"classes/TestNgControl.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["classes/control",{"_index":2019,"title":{},"body":{"components/InputComponent.html":{}}}],["classes/utils.class",{"_index":1881,"title":{},"body":{"components/IconComponent.html":{}}}],["clause",{"_index":3990,"title":{},"body":{"license.html":{}}}],["clean",{"_index":996,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["clear",{"_index":2494,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["cleargithubintegrationfields",{"_index":3192,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["cli",{"_index":3987,"title":{},"body":{"index.html":{}}}],["click",{"_index":243,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["clickstoppropagationdirective",{"_index":242,"title":{"directives/ClickStopPropagationDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["close",{"_index":1826,"title":{},"body":{"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{}}}],["close(uid",{"_index":3055,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["closeall",{"_index":1289,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{}}}],["closed",{"_index":286,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/GitIntegrationService.html":{}}}],["closenavelement",{"_index":2384,"title":{},"body":{"components/NavElementComponent.html":{}}}],["closeprofile",{"_index":3543,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["closes",{"_index":283,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["closeworkspace",{"_index":2412,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["cluster_appmodule",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":456,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":457,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":1216,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":1217,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":1218,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_providers",{"_index":1219,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_emailsmodule",{"_index":1443,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_emailsmodule_imports",{"_index":1444,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_messagesmodule",{"_index":2351,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_messagesmodule_imports",{"_index":2352,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":2885,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2886,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2887,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":3491,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declarations",{"_index":3492,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":3493,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["code",{"_index":2474,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SettingsLocalizationPage.html":{},"license.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["collapsed",{"_index":707,"title":{},"body":{"components/BoardPage.html":{}}}],["color",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"pipes/TaskTypePipe.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["color.hsl(hue",{"_index":3606,"title":{},"body":{"classes/UserUtils.html":{}}}],["color.pipe",{"_index":3505,"title":{},"body":{"modules/TasksModule.html":{}}}],["color.pipe.ts",{"_index":3083,"title":{},"body":{"pipes/StatusColorPipe.html":{},"coverage.html":{}}}],["color.pipe.ts:8",{"_index":3086,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["color.rgb(155",{"_index":3482,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["color.rgb(231",{"_index":3478,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["color.rgb(46",{"_index":3474,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["color.rgb(52",{"_index":3470,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["color.rgb(88",{"_index":3486,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["colorstyle",{"_index":2993,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["cols",{"_index":3529,"title":{},"body":{"components/TextareaComponent.html":{}}}],["column",{"_index":686,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["columns",{"_index":701,"title":{},"body":{"components/BoardPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["combinelatest",{"_index":3141,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["combinelatest([this.list(projectid",{"_index":3148,"title":{},"body":{"injectables/StatusService.html":{}}}],["command",{"_index":3952,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{}}}],["commit",{"_index":824,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["commonmodule",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["comparewith",{"_index":3934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complete",{"_index":1573,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["completed",{"_index":3170,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["completes",{"_index":346,"title":{},"body":{"injectables/ApiService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["compodoc",{"_index":3978,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":3869,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["component.ts",{"_index":4137,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["component_template",{"_index":120,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["components/board",{"_index":3496,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/button/button.component",{"_index":2237,"title":{},"body":{"modules/MainModule.html":{}}}],["components/card/card.component",{"_index":2238,"title":{},"body":{"modules/MainModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":2239,"title":{},"body":{"modules/MainModule.html":{}}}],["components/filters/filters.component",{"_index":2240,"title":{},"body":{"modules/MainModule.html":{}}}],["components/icon/icon.component",{"_index":2241,"title":{},"body":{"modules/MainModule.html":{}}}],["components/input",{"_index":2242,"title":{},"body":{"modules/MainModule.html":{},"modules/TasksModule.html":{}}}],["components/input/input.component",{"_index":2244,"title":{},"body":{"modules/MainModule.html":{}}}],["components/integration",{"_index":1223,"title":{},"body":{"modules/DashboardModule.html":{},"modules/SettingsModule.html":{}}}],["components/list",{"_index":2893,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/main",{"_index":2245,"title":{},"body":{"modules/MainModule.html":{}}}],["components/member",{"_index":1226,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/nav",{"_index":2246,"title":{},"body":{"modules/MainModule.html":{}}}],["components/option/option.component",{"_index":2251,"title":{},"body":{"modules/MainModule.html":{}}}],["components/select/select.component",{"_index":2252,"title":{},"body":{"modules/MainModule.html":{}}}],["components/sidebar",{"_index":2253,"title":{},"body":{"modules/MainModule.html":{}}}],["components/snackbar",{"_index":2256,"title":{},"body":{"modules/MainModule.html":{}}}],["components/snackbar/snackbar.component",{"_index":2259,"title":{},"body":{"modules/MainModule.html":{}}}],["components/status",{"_index":3499,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/textarea/textarea.component",{"_index":2260,"title":{},"body":{"modules/MainModule.html":{}}}],["components/upper",{"_index":2261,"title":{},"body":{"modules/MainModule.html":{}}}],["components/view",{"_index":1229,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["concurrently",{"_index":3878,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":4007,"title":{},"body":{"license.html":{}}}],["configurable",{"_index":259,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["configuration",{"_index":364,"title":{},"body":{"injectables/ApiService.html":{},"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":4094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configure",{"_index":345,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["confirm",{"_index":265,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["confirm(data",{"_index":1305,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmation",{"_index":288,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["confirmed",{"_index":3425,"title":{},"body":{"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["confirmprojectdelete",{"_index":1290,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmprojectdelete(project",{"_index":1307,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmtext",{"_index":309,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["confirmworkspacedelete",{"_index":1291,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmworkspacedelete(workspace",{"_index":1309,"title":{},"body":{"injectables/DialogService.html":{}}}],["connect",{"_index":2110,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"components/TaskDialog.html":{}}}],["connected",{"_index":3177,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["connectgithubissue",{"_index":1709,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connectgithubissue(projectid",{"_index":1727,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connectgithubpull",{"_index":1710,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connectgithubpull(projectid",{"_index":1731,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connection",{"_index":1735,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{}}}],["connecttogithub",{"_index":2091,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["connectwithissueongithub",{"_index":3178,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["connectwithpullrequestongithub",{"_index":3182,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["consequential",{"_index":4039,"title":{},"body":{"license.html":{}}}],["console",{"_index":4091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error('persistentmap",{"_index":2516,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["console.log",{"_index":633,"title":{},"body":{"components/BoardPage.html":{}}}],["console.log('submit",{"_index":1658,"title":{},"body":{"interfaces/FormGroup.html":{}}}],["console.log('updated",{"_index":2764,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.log('value",{"_index":2756,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.log(data",{"_index":3431,"title":{},"body":{"injectables/TaskService.html":{}}}],["console.log(formvalues",{"_index":3258,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["console.log(installation_id",{"_index":1823,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["console.log(this.control.value",{"_index":2766,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.log(val",{"_index":2762,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.warn('unknown",{"_index":3489,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["const",{"_index":93,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["constructor(_viewcontainer",{"_index":2122,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["constructor(activatedroute",{"_index":542,"title":{},"body":{"components/BoardPage.html":{},"components/GithubIntegrationPage.html":{},"components/MockPage.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["constructor(apiservice",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["constructor(authservice",{"_index":899,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["constructor(data",{"_index":38,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/TaskDialog.html":{}}}],["constructor(dialogservice",{"_index":766,"title":{},"body":{"components/BoardTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/UpperNavigationComponent.html":{}}}],["constructor(el",{"_index":1637,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["constructor(gitintegrationservice",{"_index":2093,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["constructor(httpclient",{"_index":331,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(injector",{"_index":2288,"title":{},"body":{"modules/MainModule.html":{}}}],["constructor(matdialog",{"_index":1295,"title":{},"body":{"injectables/DialogService.html":{}}}],["constructor(memberservice",{"_index":2305,"title":{},"body":{"components/MemberListComponent.html":{}}}],["constructor(ngcontrol",{"_index":1077,"title":{},"body":{"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["constructor(private",{"_index":372,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"interceptors/ErrorInterceptor.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{}}}],["constructor(public",{"_index":1616,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["constructor(ref",{"_index":2482,"title":{},"body":{"components/OptionComponent.html":{}}}],["constructor(router",{"_index":2146,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"injectables/RouterExtensionsService.html":{}}}],["constructor(seed",{"_index":2581,"title":{},"body":{"classes/Random.html":{}}}],["constructor(sessionservice",{"_index":2926,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["constructor(snackbarservice",{"_index":2994,"title":{},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["constructor(taskservice",{"_index":2700,"title":{},"body":{"components/SchedulePage.html":{}}}],["constructor(undefined",{"_index":2496,"title":{},"body":{"classes/PersistentMap.html":{}}}],["constructor(userservice",{"_index":2789,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["constructor(workspaceservice",{"_index":1150,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["containing",{"_index":1314,"title":{},"body":{"injectables/DialogService.html":{}}}],["contains",{"_index":1122,"title":{},"body":{"components/ControlAccessor.html":{},"classes/Enum.html":{}}}],["content",{"_index":718,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/variables.html":{}}}],["content.cdk",{"_index":740,"title":{},"body":{"components/BoardPage.html":{}}}],["contentchildren",{"_index":2752,"title":{},"body":{"components/SelectComponent.html":{}}}],["contentchildren(optioncomponent",{"_index":2746,"title":{},"body":{"components/SelectComponent.html":{}}}],["context",{"_index":2651,"title":{},"body":{"interfaces/RequestOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":3447,"title":{},"body":{"injectables/TaskService.html":{}}}],["continuos",{"_index":4195,"title":{"additional-documentation/continuos-integration.html":{}},"body":{"additional-documentation/continuos-integration.html":{}}}],["contract",{"_index":4052,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":4020,"title":{},"body":{"license.html":{}}}],["control",{"_index":986,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"additional-documentation/architecture.html":{}}}],["control's",{"_index":1007,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["control.errors",{"_index":1040,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["control?.errors",{"_index":2021,"title":{},"body":{"components/InputComponent.html":{}}}],["controlaccessor",{"_index":140,"title":{"components/ControlAccessor.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["controlaccessor:102",{"_index":989,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:118",{"_index":1025,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:126",{"_index":1003,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:133",{"_index":1018,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:139",{"_index":1021,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:150",{"_index":992,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:19",{"_index":977,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:22",{"_index":2057,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["controlaccessor:28",{"_index":1607,"title":{},"body":{"components/FiltersComponent.html":{}}}],["controlaccessor:30",{"_index":3110,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["controlaccessor:32",{"_index":2055,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["controlaccessor:36",{"_index":1030,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:44",{"_index":2017,"title":{},"body":{"components/InputComponent.html":{}}}],["controlaccessor:48",{"_index":1033,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:53",{"_index":1037,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:64",{"_index":1926,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["controlaccessor:77",{"_index":1035,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:88",{"_index":985,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controls",{"_index":3667,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["controlvalueaccessor",{"_index":1072,"title":{},"body":{"components/ControlAccessor.html":{}}}],["convenient",{"_index":4190,"title":{},"body":{"additional-documentation/localization.html":{}}}],["conventions",{"_index":4107,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["convert",{"_index":3654,"title":{},"body":{"classes/Utils.html":{}}}],["converts",{"_index":3649,"title":{},"body":{"classes/Utils.html":{}}}],["cookie",{"_index":2669,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["copyright",{"_index":3991,"title":{},"body":{"license.html":{}}}],["core",{"_index":1879,"title":{},"body":{"components/IconComponent.html":{},"dependencies.html":{}}}],["correctdata",{"_index":2629,"title":{},"body":{"components/RegisterPage.html":{}}}],["country",{"_index":3592,"title":{},"body":{"interfaces/UserSession.html":{}}}],["coverage",{"_index":3754,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":142,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["create(project",{"_index":2532,"title":{},"body":{"injectables/ProjectService.html":{}}}],["create(projectid",{"_index":3129,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["create(workspace",{"_index":3717,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["create/general",{"_index":1262,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["create/members",{"_index":1263,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["created",{"_index":3132,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{},"additional-documentation/localization.html":{}}}],["createnewtask",{"_index":3544,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["createproject",{"_index":2413,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["createprojectmemberspage",{"_index":141,"title":{"components/CreateProjectMembersPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["createprojectpage",{"_index":145,"title":{"components/CreateProjectPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":1154,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["createsubscription",{"_index":1146,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["createsubtask",{"_index":764,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["createsubtask(task",{"_index":3281,"title":{},"body":{"components/TaskListPage.html":{}}}],["createworkspace",{"_index":2970,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["createworkspacepage",{"_index":147,"title":{"components/CreateWorkspacePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["creating",{"_index":1068,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["creation",{"_index":1162,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["credentials",{"_index":2668,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["css",{"_index":1846,"title":{},"body":{"components/IconComponent.html":{}}}],["cubic",{"_index":736,"title":{},"body":{"components/BoardPage.html":{}}}],["cuepic",{"_index":3460,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cuissue",{"_index":3459,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cupriorityhigh",{"_index":3353,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cupriorityhighest",{"_index":3355,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritylow",{"_index":3349,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritylowest",{"_index":3347,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritymedium",{"_index":3351,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["current",{"_index":3585,"title":{},"body":{"interfaces/UserSession.html":{},"additional-documentation/localization.html":{}}}],["currentdate",{"_index":2942,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentdate.diff(sessiondate",{"_index":2945,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentdate.year",{"_index":2943,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentuserid",{"_index":1586,"title":{},"body":{"classes/Filters.html":{}}}],["cursor",{"_index":724,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["custom",{"_index":995,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["cusubtask",{"_index":3462,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cutask",{"_index":3458,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cuuserstory",{"_index":3461,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["cypress",{"_index":3975,"title":{},"body":{"index.html":{}}}],["czemar/cli",{"_index":1806,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["czerniak",{"_index":3997,"title":{},"body":{"license.html":{}}}],["czy",{"_index":2802,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["d",{"_index":2950,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["damage",{"_index":4062,"title":{},"body":{"license.html":{}}}],["damages",{"_index":4040,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":1254,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/SidebarNavigationComponent.html":{}}}],["dashboard.routing",{"_index":1232,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard/classes/user.class",{"_index":1939,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["dashboard/dialogs/add",{"_index":1168,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["dashboard/interfaces/git",{"_index":1676,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["dashboard/interfaces/project",{"_index":587,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/interfaces/project.interface",{"_index":589,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/SchedulePage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["dashboard/interfaces/workspace.interface",{"_index":78,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/ProjectService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["dashboard/services/git",{"_index":1678,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/member.service",{"_index":590,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/MemberListComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/project.service",{"_index":591,"title":{},"body":{"components/BoardPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/workspace.service",{"_index":3224,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{}}}],["dashboardmodule",{"_index":1215,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardroutingmodule",{"_index":1220,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["data",{"_index":28,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"injectables/SnackbarService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["data.canceltext",{"_index":317,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.confirmtext",{"_index":318,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.message",{"_index":316,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.task?.name",{"_index":3260,"title":{},"body":{"components/TaskDialog.html":{}}}],["data.title",{"_index":315,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.variant",{"_index":312,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["database",{"_index":3077,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["date",{"_index":171,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["date().gettime",{"_index":2591,"title":{},"body":{"classes/Random.html":{}}}],["date:'d",{"_index":2715,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:'eee",{"_index":2716,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:'mmmm",{"_index":2713,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'d",{"_index":2730,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'eee",{"_index":2731,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'mmmm",{"_index":2729,"title":{},"body":{"components/SchedulePage.html":{}}}],["dateformat",{"_index":2862,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dateformat.example",{"_index":2883,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dateformats",{"_index":2846,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["datepicker",{"_index":2067,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["dates",{"_index":2699,"title":{},"body":{"components/SchedulePage.html":{}}}],["day",{"_index":2726,"title":{},"body":{"components/SchedulePage.html":{}}}],["dayjs",{"_index":782,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SchedulePage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["dayjs().format(format",{"_index":2859,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dayjs().todate",{"_index":2703,"title":{},"body":{"components/SchedulePage.html":{}}}],["dayjs(date",{"_index":792,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["days",{"_index":2681,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["dd",{"_index":795,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["de",{"_index":2864,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["deadline",{"_index":821,"title":{},"body":{"components/BoardTaskComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["debug",{"_index":3783,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["declarations",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["declare",{"_index":1655,"title":{},"body":{"interfaces/FormGroup.html":{}}}],["decorator",{"_index":3930,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["decorator.ts",{"_index":4139,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["decorators",{"_index":57,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/ButtonComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"additional-documentation/architecture.html":{}}}],["decorators/service.decorator",{"_index":367,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DialogService.html":{}}}],["dedicated",{"_index":4128,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["deep",{"_index":1631,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["deep.mat",{"_index":2063,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["default",{"_index":60,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/localization.html":{}}}],["defaults",{"_index":1844,"title":{},"body":{"components/IconComponent.html":{}}}],["define",{"_index":4143,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["defines",{"_index":978,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["definition",{"_index":1839,"title":{},"body":{"components/IconComponent.html":{}}}],["delete",{"_index":150,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["delete(id",{"_index":2780,"title":{},"body":{"injectables/SessionsService.html":{},"injectables/WorkspaceService.html":{}}}],["delete(key",{"_index":2500,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["delete(projectid",{"_index":2534,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["delete(url",{"_index":335,"title":{},"body":{"injectables/ApiService.html":{}}}],["deleteaccount",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"components/DeleteAccountPage.html":{}}}],["deleteaccount(token",{"_index":1274,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["deleteaccountconfirmation",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteaccountconfirmation(token",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteaccountmailcheck",{"_index":2788,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["deleteaccountpage",{"_index":149,"title":{"components/DeleteAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["deleteconnectedgithubaccount",{"_index":1711,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deleteconnectedgithubaccount(githubaccountid",{"_index":1733,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deleted",{"_index":1279,"title":{},"body":{"components/DeleteAccountPage.html":{},"interceptors/ErrorInterceptor.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["deletegithubintegration",{"_index":1712,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deletegithubintegration(projectid",{"_index":1739,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deletemember",{"_index":2303,"title":{},"body":{"components/MemberListComponent.html":{}}}],["deletemember(id",{"_index":2309,"title":{},"body":{"components/MemberListComponent.html":{}}}],["deleteproject",{"_index":2414,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["deleteproject(project",{"_index":2429,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["deletes",{"_index":2536,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["deletesession",{"_index":2925,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["deletesession(id",{"_index":2933,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["deletetask",{"_index":3273,"title":{},"body":{"components/TaskListPage.html":{}}}],["deletetask(task",{"_index":3284,"title":{},"body":{"components/TaskListPage.html":{}}}],["deletewithconfirmation",{"_index":3367,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletewithconfirmation(projectid",{"_index":3382,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleteworkspace",{"_index":2415,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["deleteworkspace(workspace",{"_index":3741,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["deletion",{"_index":2682,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/WorkspacesListPage.html":{}}}],["dependencies",{"_index":401,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dependency",{"_index":334,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DialogService.html":{},"modules/MainModule.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["deploy",{"_index":4202,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["deploy.yml",{"_index":4203,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["deprecated",{"_index":3457,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["describe",{"_index":1096,"title":{},"body":{"components/ControlAccessor.html":{},"additional-documentation/architecture.html":{}}}],["description",{"_index":255,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"modules/MainModule.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["descriptor",{"_index":1541,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["descriptor.value",{"_index":1543,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["destroy",{"_index":965,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["destroyed",{"_index":1001,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["detached",{"_index":666,"title":{},"body":{"components/BoardPage.html":{}}}],["details",{"_index":1991,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["determine",{"_index":3072,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["deutsch",{"_index":2865,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dev",{"_index":3958,"title":{},"body":{"index.html":{}}}],["development",{"_index":3945,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dezaktywujacy",{"_index":2816,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["dialog",{"_index":20,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dialog's",{"_index":292,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["dialog'},{'name",{"_index":121,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["dialog.afterclosed().subscribe",{"_index":1334,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialog.close",{"_index":1338,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogref",{"_index":40,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["dialogs",{"_index":1287,"title":{},"body":{"injectables/DialogService.html":{},"additional-documentation/architecture.html":{}}}],["dialogs/add",{"_index":1233,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dialogs/alert/alert.dialog",{"_index":1328,"title":{},"body":{"injectables/DialogService.html":{},"modules/MainModule.html":{}}}],["dialogs/task/task.dialog",{"_index":601,"title":{},"body":{"components/BoardPage.html":{},"modules/TasksModule.html":{}}}],["dialogservice",{"_index":546,"title":{"injectables/DialogService.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dialogservice.alert",{"_index":1557,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["dialogsmap",{"_index":1288,"title":{},"body":{"injectables/DialogService.html":{}}}],["direct",{"_index":4034,"title":{},"body":{"license.html":{}}}],["direction",{"_index":685,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["directive",{"_index":118,"title":{"directives/ClickStopPropagationDirective.html":{},"directives/FocusInitialDirective.html":{},"directives/LetDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["directive.ts",{"_index":4141,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["directives",{"_index":241,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["directives/click",{"_index":2263,"title":{},"body":{"modules/MainModule.html":{}}}],["directives/focus",{"_index":2265,"title":{},"body":{"modules/MainModule.html":{}}}],["directives/let.directive",{"_index":2267,"title":{},"body":{"modules/MainModule.html":{}}}],["directory",{"_index":3968,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["disable",{"_index":1111,"title":{},"body":{"components/ControlAccessor.html":{},"miscellaneous/variables.html":{}}}],["disableconsolelog",{"_index":4088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disabled",{"_index":1022,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["disclaimed",{"_index":4030,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4013,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2074,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["disconnect(account",{"_index":1691,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["disconnectgithubissue",{"_index":1713,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["disconnectgithubissue(projectid",{"_index":1741,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["disconnectgithubpull",{"_index":1714,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["disconnectgithubpull(projectid",{"_index":1743,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["display",{"_index":682,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{}}}],["displayed",{"_index":304,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["displays",{"_index":1159,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["dist",{"_index":3967,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":4017,"title":{},"body":{"license.html":{}}}],["dni",{"_index":2822,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["document.addeventlistener('domcontentloaded",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["document.body.classlist.remove('preload",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":3755,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["dodac",{"_index":2800,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["done",{"_index":3074,"title":{},"body":{"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"interfaces/StatusWithTasks.html":{}}}],["download",{"_index":2662,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["drag",{"_index":731,"title":{},"body":{"components/BoardPage.html":{}}}],["dragdropmodule",{"_index":2194,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["dragging",{"_index":741,"title":{},"body":{"components/BoardPage.html":{}}}],["drop",{"_index":536,"title":{},"body":{"components/BoardPage.html":{},"modules/MainModule.html":{}}}],["drop(event",{"_index":550,"title":{},"body":{"components/BoardPage.html":{}}}],["due",{"_index":797,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["duration",{"_index":2991,"title":{},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["dynamic",{"_index":3868,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1532,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e.error.message",{"_index":1527,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e.status",{"_index":1523,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e2e",{"_index":3976,"title":{},"body":{"index.html":{}}}],["e[0",{"_index":1501,"title":{},"body":{"classes/Enum.html":{}}}],["e[1",{"_index":1499,"title":{},"body":{"classes/Enum.html":{}}}],["each",{"_index":4108,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["ease",{"_index":706,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["edit",{"_index":153,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/localization.html":{}}}],["edited",{"_index":4188,"title":{},"body":{"additional-documentation/localization.html":{}}}],["editing",{"_index":1384,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["editor",{"_index":4189,"title":{},"body":{"additional-documentation/localization.html":{}}}],["editproject",{"_index":1360,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["editproject(project",{"_index":2432,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["editprojectmemberspage",{"_index":152,"title":{"components/EditProjectMembersPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["editprojectpage",{"_index":154,"title":{"components/EditProjectPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["editprojectwithworkspace",{"_index":1361,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["editprojectwithworkspace(newworkspaceid",{"_index":1366,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["edittask",{"_index":3274,"title":{},"body":{"components/TaskListPage.html":{}}}],["edittask(task",{"_index":3286,"title":{},"body":{"components/TaskListPage.html":{}}}],["editworkspace",{"_index":2416,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["editworkspace(workspace",{"_index":3744,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["editworkspacepage",{"_index":155,"title":{"components/EditWorkspacePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["el",{"_index":1639,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["element",{"_index":117,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"additional-documentation/localization.html":{}}}],["element'},{'name",{"_index":193,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["element.component",{"_index":2250,"title":{},"body":{"modules/MainModule.html":{}}}],["element.component.html",{"_index":2381,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.scss",{"_index":2380,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts",{"_index":2379,"title":{},"body":{"components/NavElementComponent.html":{},"coverage.html":{}}}],["element.component.ts:12",{"_index":2390,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:15",{"_index":2391,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:17",{"_index":2396,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:19",{"_index":2399,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:22",{"_index":2398,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:24",{"_index":2389,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:28",{"_index":2394,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:31",{"_index":2392,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:34",{"_index":2395,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:42",{"_index":2393,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.scrollheight",{"_index":676,"title":{},"body":{"components/BoardPage.html":{}}}],["element.scrollheight}px",{"_index":3331,"title":{},"body":{"components/TaskListPage.html":{}}}],["element/nav",{"_index":2249,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementComponent.html":{},"coverage.html":{}}}],["elementref",{"_index":848,"title":{},"body":{"components/ButtonComponent.html":{},"directives/FocusInitialDirective.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["email",{"_index":64,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["emails",{"_index":984,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/MemberService.html":{},"components/SelectComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["emails.routing",{"_index":1447,"title":{},"body":{"modules/EmailsModule.html":{}}}],["emailsmessages",{"_index":2981,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["emailsmodule",{"_index":1442,"title":{"modules/EmailsModule.html":{}},"body":{"modules/EmailsModule.html":{},"modules.html":{},"overview.html":{}}}],["emailsroutingmodule",{"_index":1445,"title":{"modules/EmailsRoutingModule.html":{}},"body":{"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["emailvalidator",{"_index":2618,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emitevent",{"_index":2060,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["emits",{"_index":1034,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["empty",{"_index":1518,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["en",{"_index":2866,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["end",{"_index":825,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SnackbarOutletComponent.html":{},"components/UpperNavigationComponent.html":{},"index.html":{}}}],["endpoints",{"_index":3980,"title":{},"body":{"index.html":{}}}],["english",{"_index":2868,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["enter",{"_index":929,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["entity",{"_index":3710,"title":{},"body":{"interfaces/Workspace.html":{}}}],["entries",{"_index":1455,"title":{},"body":{"classes/Enum.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["entries(enumtype",{"_index":1458,"title":{},"body":{"classes/Enum.html":{}}}],["entry",{"_index":1987,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["entry'},{'name",{"_index":174,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["entry.component",{"_index":2892,"title":{},"body":{"modules/SettingsModule.html":{}}}],["entry.component.html",{"_index":2072,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.scss",{"_index":2071,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts",{"_index":2070,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"coverage.html":{}}}],["entry.component.ts:10",{"_index":2078,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:11",{"_index":2076,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:12",{"_index":2079,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:14",{"_index":2075,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:18",{"_index":2081,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:9",{"_index":2077,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry/integration",{"_index":2069,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["enum",{"_index":301,"title":{"classes/Enum.html":{}},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"classes/Enum.html":{},"components/RegisterPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{}}}],["enum.entries(subtasktype",{"_index":3216,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["enum.entries(tasktype",{"_index":3221,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["enum.entries(testenum",{"_index":1465,"title":{},"body":{"classes/Enum.html":{}}}],["enum.isnumeric(enumtype",{"_index":1490,"title":{},"body":{"classes/Enum.html":{}}}],["enum.keys(testenum",{"_index":1481,"title":{},"body":{"classes/Enum.html":{}}}],["enum.ts",{"_index":4145,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enum.values(testenum",{"_index":1484,"title":{},"body":{"classes/Enum.html":{}}}],["enumerable",{"_index":294,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"additional-documentation/architecture.html":{}}}],["enumeration",{"_index":4144,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enumerations",{"_index":3891,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":4142,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enumtype",{"_index":1466,"title":{},"body":{"classes/Enum.html":{}}}],["environment",{"_index":363,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/continuos-integration.html":{}}}],["environment.apiurl",{"_index":361,"title":{},"body":{"injectables/ApiService.html":{}}}],["epic",{"_index":3173,"title":{},"body":{"interfaces/Task.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"miscellaneous/enumerations.html":{}}}],["error",{"_index":1044,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["error('this",{"_index":1782,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["error(error",{"_index":1570,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["error.error.message",{"_index":2639,"title":{},"body":{"components/RegisterPage.html":{}}}],["error.interface.ts",{"_index":3665,"title":{},"body":{"interfaces/ValidationError.html":{},"coverage.html":{}}}],["error.pipe",{"_index":2272,"title":{},"body":{"modules/MainModule.html":{}}}],["error.pipe.ts",{"_index":3675,"title":{},"body":{"pipes/ValidationErrorPipe.html":{},"coverage.html":{}}}],["error.pipe.ts:15",{"_index":3676,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["error.status",{"_index":2176,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["errorinterceptor",{"_index":1503,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":1076,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["errorvalidationtree",{"_index":1533,"title":{"interfaces/ErrorValidationTree.html":{}},"body":{"interfaces/ErrorValidationTree.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["errorvalidationtree[identifier",{"_index":1549,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["errorvalidationtree[identifier][status",{"_index":1552,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["es",{"_index":2870,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["eset",{"_index":1347,"title":{"classes/ESet.html":{}},"body":{"classes/ESet.html":{},"components/TaskListPage.html":{},"coverage.html":{}}}],["eslint",{"_index":1110,"title":{},"body":{"components/ControlAccessor.html":{}}}],["eslint/component",{"_index":1115,"title":{},"body":{"components/ControlAccessor.html":{}}}],["español",{"_index":2871,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["estimated",{"_index":3171,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["estimateddate",{"_index":3166,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["etc",{"_index":1071,"title":{},"body":{"components/ControlAccessor.html":{},"components/IconComponent.html":{},"interfaces/RequestOptions.html":{},"interfaces/ValidationError.html":{}}}],["even",{"_index":4058,"title":{},"body":{"license.html":{}}}],["event",{"_index":553,"title":{},"body":{"components/BoardPage.html":{},"directives/ClickStopPropagationDirective.html":{},"components/SchedulePage.html":{},"license.html":{}}}],["event('click",{"_index":1062,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["event.container",{"_index":643,"title":{},"body":{"components/BoardPage.html":{}}}],["event.container.data",{"_index":635,"title":{},"body":{"components/BoardPage.html":{}}}],["event.currentindex",{"_index":636,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer",{"_index":642,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.data",{"_index":634,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.data[previoustaskindex",{"_index":632,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.element.nativeelement.dataset['index",{"_index":623,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previousindex",{"_index":631,"title":{},"body":{"components/BoardPage.html":{}}}],["event.stoppropagation",{"_index":1060,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["eventemitter",{"_index":2080,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["events",{"_index":877,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{},"interfaces/RequestOptions.html":{}}}],["ex",{"_index":1759,"title":{},"body":{"injectables/GitIntegrationService.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"additional-documentation/architecture.html":{}}}],["example",{"_index":829,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"interfaces/Project.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["example.page.html",{"_index":3931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["example.page.scss",{"_index":3932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["examplemodule",{"_index":2193,"title":{},"body":{"modules/MainModule.html":{}}}],["exclusive",{"_index":2597,"title":{},"body":{"classes/Random.html":{}}}],["execute",{"_index":3971,"title":{},"body":{"index.html":{}}}],["exemplary",{"_index":4038,"title":{},"body":{"license.html":{}}}],["exist",{"_index":3738,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["existing",{"_index":3179,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["expanded",{"_index":3339,"title":{},"body":{"components/TaskListPage.html":{}}}],["expandedsubtasks",{"_index":3269,"title":{},"body":{"components/TaskListPage.html":{}}}],["expect",{"_index":2666,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["expecttofail",{"_index":3856,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["expecttofail(val",{"_index":3917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expecttopass",{"_index":3857,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["expecttopass(val",{"_index":3918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expired",{"_index":1531,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["exportdeclarations",{"_index":2279,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["exported",{"_index":2280,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["express",{"_index":4021,"title":{},"body":{"license.html":{}}}],["extended",{"_index":1080,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["extends",{"_index":960,"title":{},"body":{"components/CheckboxComponent.html":{},"classes/ESet.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{}}}],["extension",{"_index":4116,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["extensions.service",{"_index":80,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["extensions.service.ts",{"_index":2685,"title":{},"body":{"injectables/RouterExtensionsService.html":{},"coverage.html":{}}}],["extensions.service.ts:7",{"_index":2687,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["extensions.service.ts:9",{"_index":2689,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["external",{"_index":2278,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/localization.html":{}}}],["extract",{"_index":4185,"title":{},"body":{"additional-documentation/localization.html":{}}}],["extract:i18neach",{"_index":4187,"title":{},"body":{"additional-documentation/localization.html":{}}}],["f1",{"_index":4194,"title":{},"body":{"additional-documentation/localization.html":{}}}],["f39c12",{"_index":2368,"title":{},"body":{"components/MockPage.html":{},"pipes/StatusColorPipe.html":{}}}],["fa",{"_index":1840,"title":{},"body":{"components/IconComponent.html":{}}}],["faaddresscard",{"_index":2904,"title":{},"body":{"components/SettingsPage.html":{}}}],["faangledown",{"_index":1643,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["facheck",{"_index":529,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["fachevronright",{"_index":530,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["facirclenodes",{"_index":2905,"title":{},"body":{"components/SettingsPage.html":{}}}],["faclose",{"_index":2989,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["facodecommit",{"_index":531,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["facodepullrequest",{"_index":532,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["facog",{"_index":3540,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["fafilter",{"_index":3686,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["fagithub",{"_index":3695,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["faglobe",{"_index":2906,"title":{},"body":{"components/SettingsPage.html":{}}}],["false",{"_index":284,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/variables.html":{}}}],["fapentosquare",{"_index":3688,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["faplus",{"_index":533,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["faquestion",{"_index":1882,"title":{},"body":{"components/IconComponent.html":{},"components/OptionComponent.html":{}}}],["fas",{"_index":1860,"title":{},"body":{"components/IconComponent.html":{}}}],["fasignout",{"_index":3541,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["fauser",{"_index":2907,"title":{},"body":{"components/SettingsPage.html":{},"components/UpperNavigationComponent.html":{}}}],["fff",{"_index":823,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["field",{"_index":979,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["fields",{"_index":991,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["filed",{"_index":1031,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["filename",{"_index":4113,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["files",{"_index":3962,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["fill",{"_index":981,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["filter",{"_index":1325,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["filter((closed",{"_index":1787,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["filter((e",{"_index":1497,"title":{},"body":{"classes/Enum.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["filter((v",{"_index":1492,"title":{},"body":{"classes/Enum.html":{}}}],["filter.label",{"_index":1627,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filter.type",{"_index":1629,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filter.value",{"_index":1624,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtercheckbox",{"_index":1575,"title":{"interfaces/FilterCheckbox.html":{}},"body":{"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["filters",{"_index":1581,"title":{"classes/Filters.html":{}},"body":{"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filters'},{'name",{"_index":157,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["filters(filters",{"_index":1611,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.html",{"_index":1597,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.scss",{"_index":1596,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.map((filter",{"_index":1613,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.operator",{"_index":3400,"title":{},"body":{"injectables/TaskService.html":{}}}],["filters.operator.ts",{"_index":3792,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filterscomponent",{"_index":156,"title":{"components/FiltersComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filterscontrol",{"_index":3270,"title":{},"body":{"components/TaskListPage.html":{},"components/ViewOptionsComponent-1.html":{}}}],["filtertype",{"_index":1580,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"miscellaneous/typealiases.html":{}}}],["filtervalue",{"_index":1622,"title":{},"body":{"components/FiltersComponent.html":{}}}],["final",{"_index":3071,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["find",{"_index":3644,"title":{},"body":{"classes/Utils.html":{}}}],["finished",{"_index":347,"title":{},"body":{"injectables/ApiService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["finishing",{"_index":650,"title":{},"body":{"components/BoardPage.html":{}}}],["first",{"_index":711,"title":{},"body":{"components/BoardPage.html":{},"directives/FocusInitialDirective.html":{},"classes/Utils.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["fitness",{"_index":4027,"title":{},"body":{"license.html":{}}}],["flex",{"_index":683,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["floating",{"_index":2005,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["floatinglabel",{"_index":1998,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["fn",{"_index":1016,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["focus",{"_index":833,"title":{},"body":{"components/ButtonComponent.html":{},"directives/FocusInitialDirective.html":{}}}],["focusableoption",{"_index":830,"title":{},"body":{"components/ButtonComponent.html":{}}}],["focused",{"_index":1995,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["focusinitialdirective",{"_index":246,"title":{"directives/FocusInitialDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["folder",{"_index":4126,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["following",{"_index":4006,"title":{},"body":{"license.html":{}}}],["font",{"_index":1048,"title":{},"body":{"components/CheckboxComponent.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{}}}],["fontawesome",{"_index":2236,"title":{},"body":{"modules/MainModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":2234,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["forgot",{"_index":159,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["forgotpasswordpage",{"_index":158,"title":{"components/ForgotPasswordPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":29,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["formarray",{"_index":1606,"title":{},"body":{"components/FiltersComponent.html":{}}}],["format",{"_index":2858,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["formcontrol",{"_index":65,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"classes/TestNgControl.html":{},"components/ViewOptionsComponent-1.html":{}}}],["formcontrol(false",{"_index":3209,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(filter.value",{"_index":1614,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formcontrol(null",{"_index":1382,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/IntegrationGithubComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["formcontrol(projectid",{"_index":1394,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["formcontrol(tasktype.task",{"_index":3206,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(this.taskpriorities[2",{"_index":3208,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(workspaceid",{"_index":1180,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["formfields",{"_index":2628,"title":{},"body":{"components/RegisterPage.html":{}}}],["formgroup",{"_index":63,"title":{"interfaces/FormGroup.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{}}}],["forms",{"_index":1010,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"license.html":{},"additional-documentation/architecture.html":{}}}],["formsmodule",{"_index":2204,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["formvalue",{"_index":1620,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formvalue.push(filter",{"_index":1625,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formvalues",{"_index":101,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formvalues.connectwithissueongithub",{"_index":3255,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formvalues.createissue",{"_index":3257,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formvalues.issueattachgithub",{"_index":3256,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["fortawesome/angular",{"_index":2235,"title":{},"body":{"modules/MainModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":1878,"title":{},"body":{"components/IconComponent.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":592,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["forwards",{"_index":3028,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["found",{"_index":1869,"title":{},"body":{"components/IconComponent.html":{}}}],["fragment",{"_index":2027,"title":{},"body":{"components/InputComponent.html":{}}}],["fragments",{"_index":2026,"title":{},"body":{"components/InputComponent.html":{}}}],["fromevent",{"_index":1940,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["fromevent(document",{"_index":1957,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["full",{"_index":1256,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["fullname",{"_index":1665,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["function",{"_index":1005,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"interfaces/FormGroup.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":4138,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["functions",{"_index":1452,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Enum.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["future",{"_index":4178,"title":{},"body":{"additional-documentation/localization.html":{}}}],["g",{"_index":3957,"title":{},"body":{"index.html":{}}}],["gb",{"_index":2867,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["general",{"_index":3692,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["generate",{"_index":3395,"title":{},"body":{"injectables/TaskService.html":{}}}],["generates",{"_index":3394,"title":{},"body":{"injectables/TaskService.html":{}}}],["generation",{"_index":2583,"title":{},"body":{"classes/Random.html":{}}}],["generator.js",{"_index":4216,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["geoip",{"_index":3586,"title":{},"body":{"interfaces/UserSession.html":{}}}],["german",{"_index":4158,"title":{},"body":{"additional-documentation/localization.html":{}}}],["germany",{"_index":4159,"title":{},"body":{"additional-documentation/localization.html":{}}}],["get('/user/integration/github",{"_index":1794,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["get(id",{"_index":3721,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["get(projectid",{"_index":2537,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{}}}],["get(url",{"_index":348,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(workspaceid",{"_index":3241,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["getassignee",{"_index":1929,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["getcolorbyid",{"_index":3594,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyid(id",{"_index":3596,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyusername",{"_index":3595,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyusername(username",{"_index":3598,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorstyle",{"_index":3009,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["getcolumnscontainerheight",{"_index":537,"title":{},"body":{"components/BoardPage.html":{}}}],["getcolumnscontainerheight(mapkey",{"_index":554,"title":{},"body":{"components/BoardPage.html":{}}}],["getconnectedgithubaccounts",{"_index":1715,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getconnectedprojects",{"_index":2836,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["getconnectedprojects(account",{"_index":1695,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["getcontrol",{"_index":1099,"title":{},"body":{"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"classes/TestNgControl.html":{}}}],["getcontrol(index",{"_index":1602,"title":{},"body":{"components/FiltersComponent.html":{}}}],["getdates",{"_index":2710,"title":{},"body":{"components/SchedulePage.html":{}}}],["geterrors",{"_index":1103,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getfilters",{"_index":1608,"title":{},"body":{"components/FiltersComponent.html":{}}}],["getgithubaccountconnectedprojects",{"_index":1716,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getgithubaccountconnectedprojects(account",{"_index":1697,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["getgithubintegration",{"_index":1717,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getheight",{"_index":1866,"title":{},"body":{"components/IconComponent.html":{}}}],["geticon",{"_index":1862,"title":{},"body":{"components/IconComponent.html":{}}}],["geticondefinition",{"_index":1867,"title":{},"body":{"components/IconComponent.html":{}}}],["getisanydialogopen",{"_index":1322,"title":{},"body":{"injectables/DialogService.html":{}}}],["getisopen",{"_index":1933,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["getmyself",{"_index":3576,"title":{},"body":{"injectables/UserService.html":{}}}],["getname",{"_index":1097,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getrequired",{"_index":1094,"title":{},"body":{"components/ControlAccessor.html":{}}}],["gets",{"_index":2539,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["getselected",{"_index":2750,"title":{},"body":{"components/SelectComponent.html":{}}}],["getsnakecasename",{"_index":1872,"title":{},"body":{"components/IconComponent.html":{}}}],["getsnapshot",{"_index":2688,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["getstatus",{"_index":3275,"title":{},"body":{"components/TaskListPage.html":{}}}],["getstatus(statusid",{"_index":3288,"title":{},"body":{"components/TaskListPage.html":{}}}],["getstyle",{"_index":1870,"title":{},"body":{"components/IconComponent.html":{}}}],["getsubscription",{"_index":1358,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["getsubtaskscontainerheight",{"_index":3276,"title":{},"body":{"components/TaskListPage.html":{}}}],["getsubtaskscontainerheight(taskid",{"_index":3290,"title":{},"body":{"components/TaskListPage.html":{}}}],["gettasksfromstatus",{"_index":538,"title":{},"body":{"components/BoardPage.html":{}}}],["gettasksfromstatus(statusid",{"_index":558,"title":{},"body":{"components/BoardPage.html":{}}}],["getter",{"_index":1854,"title":{},"body":{"components/IconComponent.html":{}}}],["getting",{"_index":1386,"title":{"index.html":{},"license.html":{}},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"index.html":{}}}],["getvalue",{"_index":1101,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getviewvalue",{"_index":2488,"title":{},"body":{"components/OptionComponent.html":{}}}],["getwidth",{"_index":1865,"title":{},"body":{"components/IconComponent.html":{}}}],["git",{"_index":1703,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["gitaccount",{"_index":1659,"title":{"interfaces/GitAccount.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/SettingsIntegrationsPage.html":{},"coverage.html":{}}}],["gitaccountwithusage",{"_index":1671,"title":{"interfaces/GitAccountWithUsage.html":{}},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"coverage.html":{}}}],["github",{"_index":161,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"additional-documentation/continuos-integration.html":{}}}],["github'},{'name",{"_index":176,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["github.component",{"_index":1225,"title":{},"body":{"modules/DashboardModule.html":{}}}],["github.component.html",{"_index":2087,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.scss",{"_index":2086,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts",{"_index":2085,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"coverage.html":{}}}],["github.component.ts:14",{"_index":2095,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:16",{"_index":2101,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:17",{"_index":2094,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:21",{"_index":2100,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:25",{"_index":2097,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:31",{"_index":2098,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:39",{"_index":2096,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:45",{"_index":2099,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.dev",{"_index":2471,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["github/integration",{"_index":1224,"title":{},"body":{"modules/DashboardModule.html":{},"components/IntegrationGithubComponent.html":{},"coverage.html":{}}}],["github/workflows",{"_index":4200,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["githubaccountid",{"_index":1736,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubaccounts",{"_index":1683,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["githubintegration",{"_index":2520,"title":{},"body":{"interfaces/Project.html":{}}}],["githubintegrationpage",{"_index":160,"title":{"components/GithubIntegrationPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["githubissuelist",{"_index":1718,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubissuelist(projectid",{"_index":1748,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubpulllist",{"_index":1719,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubpulllist(projectid",{"_index":1750,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubusername",{"_index":1662,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["gitintegration",{"_index":1666,"title":{"interfaces/GitIntegration.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"coverage.html":{}}}],["gitintegrationservice",{"_index":1221,"title":{"injectables/GitIntegrationService.html":{}},"body":{"modules/DashboardModule.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["gitissue",{"_index":1668,"title":{"interfaces/GitIssue.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"coverage.html":{}}}],["gitpull",{"_index":1669,"title":{"interfaces/GitPull.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"coverage.html":{}}}],["gitrepositories",{"_index":1667,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["gitrepository",{"_index":1664,"title":{"interfaces/GitRepository.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IntegrationGithubComponent.html":{},"coverage.html":{}}}],["give",{"_index":982,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["given",{"_index":1315,"title":{},"body":{"injectables/DialogService.html":{},"classes/Enum.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{}}}],["global",{"_index":1656,"title":{},"body":{"interfaces/FormGroup.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":3955,"title":{},"body":{"index.html":{}}}],["going",{"_index":1280,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["goods",{"_index":4043,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4064,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":940,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["greater",{"_index":3928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["green",{"_index":3018,"title":{},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["group",{"_index":910,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{}}}],["group'},{'name",{"_index":181,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["group.component",{"_index":2894,"title":{},"body":{"modules/SettingsModule.html":{}}}],["group.component.html",{"_index":2136,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.scss",{"_index":2135,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.ts",{"_index":2134,"title":{},"body":{"components/ListGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:13",{"_index":2138,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.ts:9",{"_index":2137,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group/list",{"_index":2133,"title":{},"body":{"components/ListGroupComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["grouped",{"_index":4133,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["grouping",{"_index":3709,"title":{},"body":{"interfaces/Workspace.html":{}}}],["grow",{"_index":2029,"title":{},"body":{"components/InputComponent.html":{},"components/MainViewComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{}}}],["guard",{"_index":2142,"title":{"guards/LoggedInUsersGuard.html":{}},"body":{"coverage.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["guard.ts",{"_index":4148,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["guards",{"_index":2143,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"additional-documentation/architecture.html":{}}}],["h2",{"_index":943,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["h3",{"_index":723,"title":{},"body":{"components/BoardPage.html":{}}}],["h4",{"_index":2139,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["h:mm",{"_index":2951,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["handleerror",{"_index":2155,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["handleerror(error",{"_index":2158,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["has(object",{"_index":3632,"title":{},"body":{"classes/Utils.html":{}}}],["hasgithubintegration",{"_index":1720,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["hasgithubintegration(projectid",{"_index":1752,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["header",{"_index":713,"title":{},"body":{"components/BoardPage.html":{},"components/CardComponent.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["headers",{"_index":2650,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["heading",{"_index":816,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/SchedulePage.html":{}}}],["height",{"_index":684,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["hello",{"_index":4114,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["here",{"_index":1283,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"index.html":{}}}],["hh:mm",{"_index":796,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["hidden",{"_index":702,"title":{},"body":{"components/BoardPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{}}}],["hidenavigation",{"_index":1259,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["high",{"_index":3352,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["highest",{"_index":3354,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["highly",{"_index":2824,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["hint",{"_index":1999,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["holder",{"_index":4032,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4019,"title":{},"body":{"license.html":{}}}],["hook",{"_index":1375,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"directives/FocusInitialDirective.html":{},"components/WorkspacesListPage.html":{}}}],["host",{"_index":279,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["host.focused",{"_index":2032,"title":{},"body":{"components/InputComponent.html":{}}}],["host.ng",{"_index":2037,"title":{},"body":{"components/InputComponent.html":{}}}],["host:not(.focused",{"_index":2035,"title":{},"body":{"components/InputComponent.html":{}}}],["hostbinding",{"_index":297,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/SnackbarComponent.html":{}}}],["hostbinding('class.focused",{"_index":2015,"title":{},"body":{"components/InputComponent.html":{}}}],["hostbinding('class.important",{"_index":296,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["hostbinding('style.animation",{"_index":3007,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["hostbinding('style.height",{"_index":1897,"title":{},"body":{"components/IconComponent.html":{}}}],["hostbinding('style.width",{"_index":1895,"title":{},"body":{"components/IconComponent.html":{}}}],["hostbindings",{"_index":266,"title":{},"body":{"components/AlertDialog.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/SnackbarComponent.html":{}}}],["hostlistener",{"_index":1059,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hostlistener('click",{"_index":1058,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hostlisteners",{"_index":1054,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hosts",{"_index":1849,"title":{},"body":{"components/IconComponent.html":{}}}],["hover",{"_index":750,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["html",{"_index":116,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["htmlelement",{"_index":555,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["http",{"_index":359,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://localhost:4200",{"_index":3960,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":2202,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":332,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["httpclientmodule",{"_index":2201,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["httpcontext",{"_index":2656,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httpevent",{"_index":1515,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":1511,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpheaders",{"_index":2657,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httpinterceptor",{"_index":1516,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpparams",{"_index":2659,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httprequest",{"_index":1510,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["https://nodejs.org/en",{"_index":3949,"title":{},"body":{"index.html":{}}}],["https://workflow.adiantek.ovh/${this.form.value.language}/settings/localization",{"_index":2880,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["hue",{"_index":3604,"title":{},"body":{"classes/UserUtils.html":{}}}],["human",{"_index":3669,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"additional-documentation/localization.html":{}}}],["i18n",{"_index":4172,"title":{},"body":{"additional-documentation/localization.html":{}}}],["icon",{"_index":698,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"pipes/TaskTypePipe.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["icon'},{'name",{"_index":164,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["icon(value",{"_index":1883,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.html",{"_index":1833,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":1832,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.hide",{"_index":860,"title":{},"body":{"components/ButtonComponent.html":{}}}],["icon.pipe",{"_index":3507,"title":{},"body":{"modules/TasksModule.html":{}}}],["icon.pipe.ts",{"_index":3343,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"coverage.html":{}}}],["icon.pipe.ts:10",{"_index":3456,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["icon.pipe.ts:7",{"_index":3345,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["iconcomponent",{"_index":163,"title":{"components/IconComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icondefinition",{"_index":835,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{},"components/OptionComponent.html":{}}}],["iconname",{"_index":1857,"title":{},"body":{"components/IconComponent.html":{}}}],["iconprefix",{"_index":1859,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":595,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["id",{"_index":744,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"components/NavElementWorkspaceComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{}}}],["id).subscribe",{"_index":2316,"title":{},"body":{"components/MemberListComponent.html":{}}}],["identifier",{"_index":1544,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"injectables/ProjectService.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"injectables/WorkspaceService.html":{},"coverage.html":{}}}],["idof",{"_index":539,"title":{},"body":{"components/BoardPage.html":{}}}],["idof(o",{"_index":561,"title":{},"body":{"components/BoardPage.html":{}}}],["ids",{"_index":2338,"title":{},"body":{"injectables/MemberService.html":{}}}],["image",{"_index":934,"title":{},"body":{"components/ChangePasswordPage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"modules/EmailsRoutingModule.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"modules/TasksRoutingModule.html":{}}}],["img",{"_index":2367,"title":{},"body":{"components/MockPage.html":{}}}],["immediately",{"_index":999,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectPage.html":{},"interceptors/ErrorInterceptor.html":{},"directives/FocusInitialDirective.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/WorkspacesListPage.html":{}}}],["implied",{"_index":4022,"title":{},"body":{"license.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["import('../settings/settings.module').then((m",{"_index":1257,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["import('../tasks/tasks.module').then((m",{"_index":1267,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["import('./auth/auth.module').then((m",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./dashboard/dashboard.module').then((m",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./emails/emails.module').then((m",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./messages/messages.module').then((m",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":264,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputDateTimeComponent.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/architecture.html":{}}}],["important_data",{"_index":2626,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["importexports",{"_index":2277,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["incidental",{"_index":4036,"title":{},"body":{"license.html":{}}}],["include",{"_index":814,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["included",{"_index":4211,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["including",{"_index":4024,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":2595,"title":{},"body":{"classes/Random.html":{}}}],["increase",{"_index":2827,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["independent",{"_index":3942,"title":{},"body":{"index.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1536,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["indexof",{"_index":3655,"title":{},"body":{"classes/Utils.html":{}}}],["indicate",{"_index":285,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["indicates",{"_index":302,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["indirect",{"_index":4035,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["infomracja",{"_index":2811,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["information",{"_index":838,"title":{},"body":{"components/ButtonComponent.html":{},"components/ControlAccessor.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/StatusService.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["information's",{"_index":4105,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["inherited",{"_index":976,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["initassigneechanging",{"_index":3277,"title":{},"body":{"components/TaskListPage.html":{}}}],["initcheckfortouch",{"_index":969,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["initial.directive",{"_index":2266,"title":{},"body":{"modules/MainModule.html":{}}}],["initial.directive.ts",{"_index":1633,"title":{},"body":{"directives/FocusInitialDirective.html":{},"coverage.html":{}}}],["initial.directive.ts:19",{"_index":1640,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["initial.directive.ts:9",{"_index":1638,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["initialization",{"_index":1011,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["initialize",{"_index":1079,"title":{},"body":{"components/ControlAccessor.html":{},"directives/FocusInitialDirective.html":{},"miscellaneous/functions.html":{}}}],["initializer",{"_index":3922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initmocks",{"_index":3845,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject",{"_index":72,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["inject(mat_dialog_data",{"_index":58,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["injectable",{"_index":319,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"coverage.html":{}}}],["injectables",{"_index":321,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"overview.html":{}}}],["injection",{"_index":3372,"title":{},"body":{"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["injector",{"_index":2203,"title":{},"body":{"modules/MainModule.html":{}}}],["injects",{"_index":270,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["inline",{"_index":1652,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["input",{"_index":166,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["input'},{'name",{"_index":169,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["input.component.html",{"_index":1994,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.scss",{"_index":1993,"title":{},"body":{"components/InputComponent.html":{}}}],["input::placeholder",{"_index":2036,"title":{},"body":{"components/InputComponent.html":{}}}],["inputassigneecomponent",{"_index":165,"title":{"components/InputAssigneeComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["inputcomponent",{"_index":168,"title":{"components/InputComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inputdatetimecomponent",{"_index":170,"title":{"components/InputDateTimeComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inputs",{"_index":765,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["inputstring",{"_index":3653,"title":{},"body":{"classes/Utils.html":{}}}],["insiders",{"_index":2475,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["insiders://vscode.git/clone?url=https://github.com/${project.githubintegration",{"_index":2469,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["install",{"_index":3946,"title":{},"body":{"index.html":{}}}],["installand",{"_index":3953,"title":{},"body":{"index.html":{}}}],["installation_id",{"_index":1821,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["installationid",{"_index":1764,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["instance",{"_index":274,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"injectables/DialogService.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["instances",{"_index":3937,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instead",{"_index":3180,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"index.html":{}}}],["int",{"_index":2654,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["integration",{"_index":162,"title":{"additional-documentation/continuos-integration.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/continuos-integration.html":{}}}],["integration.gitrepositories",{"_index":2107,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["integration.interface",{"_index":1677,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["integration.interface.ts",{"_index":1661,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"coverage.html":{}}}],["integration.page",{"_index":1253,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["integration.page.html",{"_index":1818,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.scss",{"_index":1817,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.ts",{"_index":1816,"title":{},"body":{"components/GithubIntegrationPage.html":{},"coverage.html":{}}}],["integration.page.ts:10",{"_index":1819,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.ts:16",{"_index":1820,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.service",{"_index":1248,"title":{},"body":{"modules/DashboardModule.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["integration.service.ts",{"_index":1702,"title":{},"body":{"injectables/GitIntegrationService.html":{},"coverage.html":{}}}],["integration.service.ts:103",{"_index":1742,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:107",{"_index":1751,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:111",{"_index":1732,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:117",{"_index":1744,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:128",{"_index":1755,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:133",{"_index":1746,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:25",{"_index":1723,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:33",{"_index":1765,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:50",{"_index":1763,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:56",{"_index":1747,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:60",{"_index":1726,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:66",{"_index":1745,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:81",{"_index":1734,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:85",{"_index":1740,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:89",{"_index":1753,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:93",{"_index":1749,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:97",{"_index":1730,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration/github",{"_index":1252,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/GithubIntegrationPage.html":{},"coverage.html":{}}}],["integrationentrycomponent",{"_index":173,"title":{"components/IntegrationEntryComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["integrationgithubcomponent",{"_index":175,"title":{"components/IntegrationGithubComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["integrations",{"_index":1680,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{}}}],["integrations'},{'name",{"_index":212,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["integrations.page",{"_index":2896,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["integrations.page.html",{"_index":1681,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.scss",{"_index":1682,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts",{"_index":1674,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"coverage.html":{}}}],["integrations.page.ts:17",{"_index":2837,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:21",{"_index":2841,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:25",{"_index":2840,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:38",{"_index":2838,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:44",{"_index":2839,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations/settings",{"_index":1673,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{}}}],["intercept",{"_index":1507,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":1509,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":1502,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1504,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptors/error.interceptor",{"_index":2268,"title":{},"body":{"modules/MainModule.html":{}}}],["interface",{"_index":86,"title":{"interfaces/AddMemberDialogData.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"interfaces/ModifyUser.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"interfaces/ModifyUser.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{},"coverage.html":{},"additional-documentation/localization.html":{}}}],["interfaces",{"_index":253,"title":{},"body":{"interfaces/AddMemberDialogData.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"interfaces/ModifyUser.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["interfaces/project.interface",{"_index":2543,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{}}}],["interfaces/request",{"_index":368,"title":{},"body":{"injectables/ApiService.html":{}}}],["interfaces/session.interface",{"_index":2938,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["interfaces/status.interface",{"_index":602,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{}}}],["interfaces/task.interface",{"_index":603,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["interfaces/workspace.interface",{"_index":2567,"title":{},"body":{"components/ProjectsListPage.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["interruption",{"_index":4048,"title":{},"body":{"license.html":{}}}],["interval",{"_index":1772,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["interval(100).pipe",{"_index":1785,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["invalid",{"_index":2039,"title":{},"body":{"components/InputComponent.html":{}}}],["invalid.ng",{"_index":1043,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["invoked",{"_index":998,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["ip",{"_index":3587,"title":{},"body":{"interfaces/UserSession.html":{}}}],["isanydialogopen",{"_index":1294,"title":{},"body":{"injectables/DialogService.html":{}}}],["isbuttondisabled",{"_index":3545,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["isdisabled",{"_index":1023,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["isfiltersopen",{"_index":3696,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["isgithubintegrationavailable",{"_index":3186,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["isletter",{"_index":3629,"title":{},"body":{"classes/Utils.html":{}}}],["isletter(char",{"_index":3635,"title":{},"body":{"classes/Utils.html":{}}}],["isloggedin",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnumeric",{"_index":1456,"title":{},"body":{"classes/Enum.html":{}}}],["isnumeric(enumtype",{"_index":1471,"title":{},"body":{"classes/Enum.html":{}}}],["isopen",{"_index":1908,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["isopen(val",{"_index":1954,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["isownerofrepository",{"_index":1721,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["isownerofrepository(repositoryname",{"_index":1754,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["issubtasksrow",{"_index":3271,"title":{},"body":{"components/TaskListPage.html":{}}}],["issue",{"_index":1729,"title":{},"body":{"injectables/GitIntegrationService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"miscellaneous/enumerations.html":{}}}],["issue.title",{"_index":3263,"title":{},"body":{"components/TaskDialog.html":{}}}],["issueattachgithub",{"_index":3181,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["issuelist",{"_index":3187,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["issuenumbergithub",{"_index":3254,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["it's",{"_index":1758,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsAccountPage.html":{},"index.html":{},"additional-documentation/architecture.html":{}}}],["it\\'s",{"_index":2835,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["italian",{"_index":4165,"title":{},"body":{"additional-documentation/localization.html":{}}}],["italiano",{"_index":2872,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["italy",{"_index":4166,"title":{},"body":{"additional-documentation/localization.html":{}}}],["items",{"_index":715,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["jego",{"_index":2820,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["jesli",{"_index":2809,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["join",{"_index":3661,"title":{},"body":{"classes/Utils.html":{}}}],["js",{"_index":2191,"title":{},"body":{"modules/MainModule.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{}}}],["json",{"_index":376,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["json.parse(localstorage.getitem(persistentkey",{"_index":2515,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["json.stringify([...this.entries",{"_index":2512,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["justify",{"_index":717,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["k",{"_index":1489,"title":{},"body":{"classes/Enum.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["karma",{"_index":3973,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":1353,"title":{},"body":{"classes/ESet.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"classes/PersistentMap.html":{},"components/SelectComponent.html":{},"classes/Utils.html":{}}}],["keyframes",{"_index":3033,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["keys",{"_index":1457,"title":{},"body":{"classes/Enum.html":{},"classes/Utils.html":{}}}],["keys(enumtype",{"_index":1479,"title":{},"body":{"classes/Enum.html":{}}}],["kingdom",{"_index":4161,"title":{},"body":{"additional-documentation/localization.html":{}}}],["konta",{"_index":2808,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["konto",{"_index":2817,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["label",{"_index":691,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["label'},{'name",{"_index":227,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["label.component",{"_index":3500,"title":{},"body":{"modules/TasksModule.html":{}}}],["label.component.html",{"_index":3094,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.scss",{"_index":3093,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts",{"_index":3092,"title":{},"body":{"components/StatusLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:16",{"_index":3103,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:17",{"_index":3098,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:18",{"_index":3100,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:19",{"_index":3101,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:20",{"_index":3099,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:28",{"_index":3097,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:34",{"_index":3111,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:36",{"_index":3112,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:37",{"_index":3109,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:39",{"_index":3115,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:43",{"_index":3114,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:47",{"_index":3105,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:59",{"_index":3104,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:63",{"_index":3108,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:70",{"_index":3107,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label/status",{"_index":3091,"title":{},"body":{"components/StatusLabelComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["label::after",{"_index":2040,"title":{},"body":{"components/InputComponent.html":{}}}],["labels",{"_index":2083,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["landing",{"_index":178,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["landingpagecomponent",{"_index":177,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["language",{"_index":2861,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["language.name",{"_index":2882,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["languages",{"_index":2847,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["last",{"_index":983,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/WorkspacesListPage.html":{}}}],["lastused",{"_index":3588,"title":{},"body":{"interfaces/UserSession.html":{}}}],["layout",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["leas",{"_index":1475,"title":{},"body":{"classes/Enum.html":{}}}],["leave",{"_index":2322,"title":{},"body":{"injectables/MemberService.html":{}}}],["leave(projectid",{"_index":2328,"title":{},"body":{"injectables/MemberService.html":{}}}],["left",{"_index":694,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/MockPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["legend",{"_index":115,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["length",{"_index":3927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["length.validator",{"_index":1172,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["length.validator.ts",{"_index":3800,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["letcontext",{"_index":2117,"title":{"interfaces/LetContext.html":{}},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"coverage.html":{}}}],["letdirective",{"_index":248,"title":{"directives/LetDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["letter",{"_index":3638,"title":{},"body":{"classes/Utils.html":{}}}],["letters",{"_index":4111,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["lg",{"_index":952,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["li",{"_index":1983,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{}}}],["liability",{"_index":4051,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4033,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3628,"title":{},"body":{"classes/Utils.html":{}}}],["library",{"_index":3983,"title":{},"body":{"index.html":{}}}],["license",{"_index":2644,"title":{"license.html":{}},"body":{"components/RegisterPage.html":{},"license.html":{}}}],["lifecycle",{"_index":1374,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"directives/FocusInitialDirective.html":{},"components/WorkspacesListPage.html":{}}}],["limitafter",{"_index":2697,"title":{},"body":{"components/SchedulePage.html":{}}}],["limitbefore",{"_index":2698,"title":{},"body":{"components/SchedulePage.html":{}}}],["limited",{"_index":4025,"title":{},"body":{"license.html":{}}}],["line",{"_index":1113,"title":{},"body":{"components/ControlAccessor.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{}}}],["link",{"_index":1284,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["list",{"_index":180,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"license.html":{},"additional-documentation/localization.html":{}}}],["list'},{'name",{"_index":188,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["list(projectid",{"_index":2330,"title":{},"body":{"injectables/MemberService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["list.component",{"_index":1228,"title":{},"body":{"modules/DashboardModule.html":{}}}],["list.component.html",{"_index":2302,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.scss",{"_index":2301,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts",{"_index":2300,"title":{},"body":{"components/MemberListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":2313,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:15",{"_index":2312,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:18",{"_index":2307,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:21",{"_index":2308,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:24",{"_index":2306,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:33",{"_index":2310,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:39",{"_index":2311,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.page",{"_index":1244,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["list.page.html",{"_index":2557,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.scss",{"_index":2556,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts",{"_index":2555,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["list.page.ts:105",{"_index":3294,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:123",{"_index":3282,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:143",{"_index":3287,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:149",{"_index":3285,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:155",{"_index":3292,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:159",{"_index":3291,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:17",{"_index":2566,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:18",{"_index":2565,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:20",{"_index":2564,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:22",{"_index":2559,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:34",{"_index":3300,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:35",{"_index":3297,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:36",{"_index":3298,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:37",{"_index":3299,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:38",{"_index":3296,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:40",{"_index":3305,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:41",{"_index":2561,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:42",{"_index":3308,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:43",{"_index":3307,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:44",{"_index":3304,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:45",{"_index":2563,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{}}}],["list.page.ts:46",{"_index":3295,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:47",{"_index":3746,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:48",{"_index":3306,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:49",{"_index":2560,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:50",{"_index":3301,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:51",{"_index":3302,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:53",{"_index":3303,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:54",{"_index":3279,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:62",{"_index":3742,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:75",{"_index":3745,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:79",{"_index":3748,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:95",{"_index":3289,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:99",{"_index":3280,"title":{},"body":{"components/TaskListPage.html":{}}}],["list/member",{"_index":1227,"title":{},"body":{"modules/DashboardModule.html":{},"components/MemberListComponent.html":{},"coverage.html":{}}}],["list/projects",{"_index":1243,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ProjectsListPage.html":{},"coverage.html":{}}}],["list/task",{"_index":3267,"title":{},"body":{"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["list/workspaces",{"_index":1246,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["listed",{"_index":4171,"title":{},"body":{"additional-documentation/localization.html":{}}}],["listelement",{"_index":2382,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["listgroupcomponent",{"_index":179,"title":{"components/ListGroupComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["lists",{"_index":2332,"title":{},"body":{"injectables/MemberService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["listwithtasks",{"_index":3125,"title":{},"body":{"injectables/StatusService.html":{}}}],["listwithtasks(projectid",{"_index":3136,"title":{},"body":{"injectables/StatusService.html":{}}}],["literal",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"interfaces/UserSession.html":{},"interfaces/Workspace.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1316,"title":{},"body":{"injectables/DialogService.html":{},"components/WorkspacesListPage.html":{}}}],["loadchildren",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["loader",{"_index":839,"title":{},"body":{"components/ButtonComponent.html":{}}}],["loadgithubintegration",{"_index":1685,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["loadparamsfromurl",{"_index":35,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["loadproject",{"_index":1362,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["loadproject(id",{"_index":1369,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["loadrepositories",{"_index":2092,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["loads",{"_index":1371,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["loadworkspace",{"_index":1431,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["loadworkspace(id",{"_index":1433,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["loadworkspaces",{"_index":3740,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["local",{"_index":2276,"title":{},"body":{"modules/MainModule.html":{},"components/SettingsSessionsPage.html":{},"miscellaneous/variables.html":{}}}],["locales",{"_index":4173,"title":{},"body":{"additional-documentation/localization.html":{}}}],["localization",{"_index":214,"title":{"additional-documentation/localization.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/localization.html":{}}}],["localization.page",{"_index":2897,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["localization.page.html",{"_index":2845,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.scss",{"_index":2844,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts",{"_index":2843,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"coverage.html":{}}}],["localization.page.ts:12",{"_index":2863,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:17",{"_index":2878,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:48",{"_index":2860,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:56",{"_index":2849,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:60",{"_index":2850,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:64",{"_index":2851,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization/settings",{"_index":2842,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{}}}],["localize`are",{"_index":655,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`cancel",{"_index":662,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`close",{"_index":1341,"title":{},"body":{"injectables/DialogService.html":{}}}],["localize`dd",{"_index":2853,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localize`dd.mm.yyyy",{"_index":2856,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localize`delete",{"_index":1344,"title":{},"body":{"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`detach",{"_index":667,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`email",{"_index":2641,"title":{},"body":{"components/RegisterPage.html":{}}}],["localize`epic",{"_index":3481,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`given",{"_index":906,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["localize`high",{"_index":3362,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`highest",{"_index":3363,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`if",{"_index":657,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`issue",{"_index":3477,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`low",{"_index":3360,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`lowest",{"_index":3359,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`medium",{"_index":3361,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`merge",{"_index":661,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`mm/dd/yyyy",{"_index":2855,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localize`ok",{"_index":1562,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`only",{"_index":1589,"title":{},"body":{"classes/Filters.html":{}}}],["localize`something",{"_index":1559,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`subtask",{"_index":3485,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`success",{"_index":1558,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`task",{"_index":3469,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`user",{"_index":2179,"title":{},"body":{"components/LoginPage.html":{},"pipes/TaskTypePipe.html":{}}}],["localize`username",{"_index":2642,"title":{},"body":{"components/RegisterPage.html":{}}}],["localize`workspace",{"_index":3737,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["localize`wrong",{"_index":2183,"title":{},"body":{"components/LoginPage.html":{}}}],["localize`yyyy",{"_index":2852,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localized",{"_index":4155,"title":{},"body":{"additional-documentation/localization.html":{}}}],["localstorage.getitem('logged",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["localstorage.getitem(persistentkey",{"_index":2514,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["localstorage.removeitem('logged",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["localstorage.removeitem(this._persistentkey",{"_index":2505,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["localstorage.setitem('logged",{"_index":2167,"title":{},"body":{"components/LoginPage.html":{}}}],["localstorage.setitem(this._persistentkey",{"_index":2511,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["located",{"_index":4140,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["location.href",{"_index":2879,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["location.reload",{"_index":673,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["log",{"_index":1282,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/LoginPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/UpperNavigationComponent.html":{}}}],["logged",{"_index":2181,"title":{},"body":{"components/LoginPage.html":{}}}],["loggedinusersguard",{"_index":429,"title":{"guards/LoggedInUsersGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoggedInUsersGuard.html":{},"coverage.html":{}}}],["logging",{"_index":4092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logic",{"_index":4132,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["login",{"_index":478,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/UpperNavigationComponent.html":{}}}],["login'},{'name",{"_index":183,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["login(this.form.value",{"_index":2170,"title":{},"body":{"components/LoginPage.html":{}}}],["login(undefined",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.page.html",{"_index":2153,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":2152,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":182,"title":{"components/LoginPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginsubscription",{"_index":2154,"title":{},"body":{"components/LoginPage.html":{}}}],["logo",{"_index":930,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{}}}],["logout",{"_index":479,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/RestoreAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["loss",{"_index":4045,"title":{},"body":{"license.html":{}}}],["low",{"_index":3348,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["lower",{"_index":4110,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["lowest",{"_index":3346,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["m",{"_index":1566,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["m.authmodule",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.dashboardmodule",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.emailsmodule",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.messagesmodule",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.settingsmodule",{"_index":1258,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["m.tasksmodule",{"_index":1268,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["m_w",{"_index":2578,"title":{},"body":{"classes/Random.html":{}}}],["m_z",{"_index":2579,"title":{},"body":{"classes/Random.html":{}}}],["ma",{"_index":2818,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["mail",{"_index":3944,"title":{},"body":{"index.html":{}}}],["maila",{"_index":2815,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["main",{"_index":185,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["main/_main.module",{"_index":2890,"title":{},"body":{"modules/SettingsModule.html":{}}}],["main/classes/control",{"_index":1038,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["main/classes/e",{"_index":3309,"title":{},"body":{"components/TaskListPage.html":{}}}],["main/classes/enum.class",{"_index":3225,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["main/classes/filters.class",{"_index":3311,"title":{},"body":{"components/TaskListPage.html":{}}}],["main/classes/persistent",{"_index":596,"title":{},"body":{"components/BoardPage.html":{}}}],["main/classes/random.class",{"_index":3600,"title":{},"body":{"classes/UserUtils.html":{}}}],["main/components/snackbar/snackbar.interface",{"_index":3062,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["main/decorators/service",{"_index":3730,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["main/decorators/service.decorator",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SnackbarService.html":{}}}],["main/dialogs/alert/alert.dialog",{"_index":3397,"title":{},"body":{"injectables/TaskService.html":{}}}],["main/interfaces/filters.interface",{"_index":1587,"title":{},"body":{"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent-1.html":{}}}],["main/operators/apply",{"_index":3399,"title":{},"body":{"injectables/TaskService.html":{}}}],["main/pages/mock/mock.page",{"_index":1250,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["main/services/api.service",{"_index":1771,"title":{},"body":{"injectables/GitIntegrationService.html":{},"injectables/UserService.html":{}}}],["main/services/dialog.service",{"_index":779,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["main/services/router",{"_index":79,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["main/services/snackbar.service",{"_index":3011,"title":{},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/TaskService.html":{}}}],["main/validators/email.validator",{"_index":2625,"title":{},"body":{"components/RegisterPage.html":{}}}],["main/validators/max",{"_index":1171,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["main/validators/password.validator",{"_index":913,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["main/validators/required.validator",{"_index":914,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{}}}],["main/validators/same",{"_index":916,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["mainly",{"_index":4097,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["mainmodule",{"_index":407,"title":{"modules/MainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["mainmodule.injector",{"_index":2289,"title":{},"body":{"modules/MainModule.html":{}}}],["maintained",{"_index":4102,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["mainviewcomponent",{"_index":184,"title":{"components/MainViewComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":3620,"title":{},"body":{"classes/UserUtils.html":{},"additional-documentation/localization.html":{}}}],["making",{"_index":4181,"title":{},"body":{"additional-documentation/localization.html":{}}}],["manage",{"_index":1286,"title":{},"body":{"injectables/DialogService.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["management",{"_index":3714,"title":{},"body":{"injectables/WorkspaceService.html":{},"index.html":{}}}],["map",{"_index":768,"title":{},"body":{"components/BoardTaskComponent.html":{},"injectables/DialogService.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/SinglePersonSchedule.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["map(([statuses",{"_index":3150,"title":{},"body":{"injectables/StatusService.html":{}}}],["map(([tasks",{"_index":3442,"title":{},"body":{"injectables/TaskService.html":{}}}],["map((accounts",{"_index":1688,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["map((c",{"_index":3612,"title":{},"body":{"classes/UserUtils.html":{}}}],["map((character",{"_index":3657,"title":{},"body":{"classes/Utils.html":{}}}],["map((e",{"_index":1500,"title":{},"body":{"classes/Enum.html":{}}}],["map((format",{"_index":2857,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["map((members",{"_index":2346,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["map((projects",{"_index":1812,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["map((response",{"_index":1776,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["map((v",{"_index":1495,"title":{},"body":{"classes/Enum.html":{}}}],["map((workspace",{"_index":2571,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["map((workspaces",{"_index":2550,"title":{},"body":{"injectables/ProjectService.html":{},"components/UpperNavigationComponent.html":{}}}],["map(projectid",{"_index":2333,"title":{},"body":{"injectables/MemberService.html":{}}}],["map.class",{"_index":597,"title":{},"body":{"components/BoardPage.html":{}}}],["map.class.ts",{"_index":2492,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"coverage.html":{}}}],["map.class.ts:11",{"_index":2501,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:17",{"_index":2504,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:23",{"_index":2502,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:27",{"_index":2498,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:6",{"_index":2499,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.delete(uid",{"_index":3066,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["map.set(uid",{"_index":3064,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["mapkey",{"_index":557,"title":{},"body":{"components/BoardPage.html":{}}}],["marcin",{"_index":3996,"title":{},"body":{"license.html":{}}}],["margin",{"_index":688,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["mark",{"_index":2964,"title":{},"body":{"components/SettingsSessionsPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["mask",{"_index":2580,"title":{},"body":{"classes/Random.html":{}}}],["master",{"_index":4205,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["mat",{"_index":856,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/IconComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["mat_dialog_data",{"_index":75,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/variables.html":{}}}],["matautocompletemodule",{"_index":2205,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matbadgemodule",{"_index":2207,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1547,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"classes/Utils.html":{}}}],["match(error",{"_index":1571,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["match(value",{"_index":1567,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["matcheckboxmodule",{"_index":2209,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":252,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["matdatepickermodule",{"_index":2213,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1296,"title":{},"body":{"injectables/DialogService.html":{}}}],["matdialogmodule",{"_index":2215,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":41,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/variables.html":{}}}],["matdialogtestingprovider",{"_index":3853,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1830,"title":{},"body":{"components/IconComponent.html":{},"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":4016,"title":{},"body":{"license.html":{}}}],["matformfieldmodule",{"_index":2216,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":2598,"title":{},"body":{"classes/Random.html":{}}}],["maticonmodule",{"_index":2218,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":2220,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":2222,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matnativedatemodule",{"_index":2211,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":2224,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":2226,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodule",{"_index":2228,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodule",{"_index":2230,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":2232,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":704,"title":{},"body":{"components/BoardPage.html":{},"components/InputComponent.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["maxlength",{"_index":3672,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["maxlengthvalidator",{"_index":1170,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["maxlengthvalidator(50",{"_index":1164,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["maxlengthvalidator(length",{"_index":3926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["md",{"_index":951,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["medium",{"_index":3350,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["member",{"_index":19,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["member.dialog",{"_index":1169,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{}}}],["member.dialog.html",{"_index":24,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["member.dialog.scss",{"_index":22,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["member.dialog.ts",{"_index":12,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"coverage.html":{}}}],["member.dialog.ts:21",{"_index":69,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:22",{"_index":70,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:24",{"_index":67,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:26",{"_index":45,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:29",{"_index":59,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:34",{"_index":56,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:41",{"_index":55,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:47",{"_index":51,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:58",{"_index":54,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.interface",{"_index":588,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["member.interface.ts",{"_index":2525,"title":{},"body":{"interfaces/ProjectMember.html":{},"coverage.html":{}}}],["member.user.name",{"_index":1970,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.name[0",{"_index":1969,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.surname",{"_index":1971,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.username",{"_index":1972,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member/add",{"_index":11,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{},"coverage.html":{}}}],["memberlist",{"_index":1147,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/MemberListComponent.html":{}}}],["memberlistcomponent",{"_index":187,"title":{"components/MemberListComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["members",{"_index":109,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{}}}],["members'},{'name",{"_index":144,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["members(members",{"_index":1946,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["members.page",{"_index":1235,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["members.page.html",{"_index":1145,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.scss",{"_index":1144,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.ts",{"_index":1143,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{},"coverage.html":{}}}],["members.page.ts:106",{"_index":1367,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:116",{"_index":1365,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:122",{"_index":1378,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:140",{"_index":1372,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:21",{"_index":1163,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:25",{"_index":1381,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:26",{"_index":1165,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:30",{"_index":1383,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:33",{"_index":1161,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:35",{"_index":1166,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.ts:36",{"_index":1391,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:37",{"_index":1167,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:39",{"_index":1152,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:42",{"_index":1387,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:46",{"_index":1385,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:48",{"_index":1389,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:49",{"_index":1364,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:65",{"_index":1153,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:74",{"_index":1160,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:80",{"_index":1370,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:91",{"_index":1379,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.reduce((acc",{"_index":2347,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["members.values",{"_index":1952,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["members/create",{"_index":1142,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["members/edit",{"_index":1239,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"coverage.html":{}}}],["membersarray",{"_index":1951,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["memberservice",{"_index":548,"title":{"injectables/MemberService.html":{}},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["merchantability",{"_index":4026,"title":{},"body":{"license.html":{}}}],["merged",{"_index":659,"title":{},"body":{"components/BoardPage.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["mergedpulllist",{"_index":3167,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["mergemap",{"_index":1773,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["mergemap((url",{"_index":1778,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["message",{"_index":258,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{},"injectables/TaskService.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SidebarNavigationComponent.html":{},"index.html":{}}}],["messages.routing",{"_index":2355,"title":{},"body":{"modules/MessagesModule.html":{}}}],["messagesmodule",{"_index":2350,"title":{"modules/MessagesModule.html":{}},"body":{"modules/MessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesroutingmodule",{"_index":2353,"title":{"modules/MessagesRoutingModule.html":{}},"body":{"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["met",{"_index":4008,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["method",{"_index":358,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["methodologies",{"_index":4103,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["methods",{"_index":32,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["middle",{"_index":2028,"title":{},"body":{"components/InputComponent.html":{}}}],["min",{"_index":709,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["minlength",{"_index":3671,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["miragejs",{"_index":3881,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":3890,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":794,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["mock",{"_index":2359,"title":{},"body":{"components/MockPage.html":{},"miscellaneous/variables.html":{}}}],["mock'},{'name",{"_index":190,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["mock.page.html",{"_index":2361,"title":{},"body":{"components/MockPage.html":{}}}],["mock.page.scss",{"_index":2360,"title":{},"body":{"components/MockPage.html":{}}}],["mocking",{"_index":3921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mockpage",{"_index":189,"title":{"components/MockPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":1313,"title":{},"body":{"injectables/DialogService.html":{}}}],["mode",{"_index":4089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":1013,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["modification",{"_index":4004,"title":{},"body":{"license.html":{}}}],["modify",{"_index":3719,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["modifyuser",{"_index":2373,"title":{"interfaces/ModifyUser.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{}}}],["module",{"_index":398,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}},"body":{"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["module.ts",{"_index":4129,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["modules",{"_index":400,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectPage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["moduser",{"_index":3581,"title":{},"body":{"injectables/UserService.html":{}}}],["moment",{"_index":4201,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["month",{"_index":2946,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["more",{"_index":4104,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["more_vert",{"_index":2404,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["move",{"_index":649,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"injectables/ProjectService.html":{},"components/TaskListPage.html":{}}}],["moved",{"_index":2531,"title":{},"body":{"injectables/ProjectService.html":{}}}],["moveiteminarray",{"_index":583,"title":{},"body":{"components/BoardPage.html":{}}}],["moveiteminarray(event.container.data",{"_index":644,"title":{},"body":{"components/BoardPage.html":{}}}],["mozliwosc",{"_index":2819,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["multi",{"_index":2281,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":3941,"title":{},"body":{"index.html":{}}}],["n",{"_index":3615,"title":{},"body":{"classes/UserUtils.html":{}}}],["na",{"_index":2803,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["named",{"_index":4109,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["naming",{"_index":4106,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["native",{"_index":847,"title":{},"body":{"components/ButtonComponent.html":{}}}],["nav",{"_index":192,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navelementcomponent",{"_index":191,"title":{"components/NavElementComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navelementworkspacecomponent",{"_index":194,"title":{"components/NavElementWorkspaceComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigatebyurl",{"_index":2458,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["navigates",{"_index":1156,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["navigation",{"_index":2967,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation'},{'name",{"_index":220,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navigation.component",{"_index":2255,"title":{},"body":{"modules/MainModule.html":{}}}],["navigation.component.html",{"_index":2969,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.scss",{"_index":2968,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts",{"_index":2966,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["navigation.component.ts:14",{"_index":2972,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:16",{"_index":2974,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:18",{"_index":2973,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:20",{"_index":2971,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:25",{"_index":3552,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:41",{"_index":3562,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:43",{"_index":3557,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:44",{"_index":3560,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:45",{"_index":3558,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:46",{"_index":3559,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:48",{"_index":3556,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:49",{"_index":3555,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:51",{"_index":3549,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:66",{"_index":3551,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:72",{"_index":3550,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:75",{"_index":3553,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:84",{"_index":3548,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:87",{"_index":3554,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation/sidebar",{"_index":2254,"title":{},"body":{"modules/MainModule.html":{},"components/SidebarNavigationComponent.html":{},"coverage.html":{}}}],["navigation/upper",{"_index":2262,"title":{},"body":{"modules/MainModule.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["need",{"_index":2517,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/RequestOptions.html":{},"components/SettingsAccountPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/localization.html":{}}}],["needed",{"_index":3131,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["negligence",{"_index":4055,"title":{},"body":{"license.html":{}}}],["neutral",{"_index":938,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["new",{"_index":62,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"additional-documentation/localization.html":{}}}],["newly",{"_index":1302,"title":{},"body":{"injectables/DialogService.html":{}}}],["newstatus",{"_index":628,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatus.final",{"_index":653,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatus.id",{"_index":639,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatusindex",{"_index":624,"title":{},"body":{"components/BoardPage.html":{}}}],["newtask",{"_index":3438,"title":{},"body":{"injectables/TaskService.html":{}}}],["newtask.id",{"_index":3415,"title":{},"body":{"injectables/TaskService.html":{}}}],["newvalue",{"_index":3521,"title":{},"body":{"classes/TestNgControl.html":{}}}],["newworkspaceid",{"_index":1368,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/ProjectService.html":{}}}],["newworkspaceid]).then",{"_index":1430,"title":{},"body":{"components/EditProjectPage.html":{}}}],["next",{"_index":1112,"title":{},"body":{"components/ControlAccessor.html":{},"interceptors/ErrorInterceptor.html":{},"components/RegisterPage.html":{}}}],["next(value",{"_index":1565,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["next.handle(req).pipe",{"_index":1520,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nextstage",{"_index":2610,"title":{},"body":{"components/RegisterPage.html":{}}}],["ng",{"_index":1630,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["ngafterviewinit",{"_index":1636,"title":{},"body":{"directives/FocusInitialDirective.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{}}}],["ngcontrol",{"_index":966,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{}}}],["ngcontrol.control?.errors",{"_index":3537,"title":{},"body":{"components/TextareaComponent.html":{}}}],["nglet",{"_index":249,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["nglet(value",{"_index":2126,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["ngmodule",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["ngmoduleconfig",{"_index":2275,"title":{},"body":{"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngmoduleconfig.declarations",{"_index":2285,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.exportdeclarations",{"_index":2286,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.importexports",{"_index":2284,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.imports",{"_index":2283,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.providers",{"_index":2287,"title":{},"body":{"modules/MainModule.html":{}}}],["ngondestroy",{"_index":540,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["no_content_provided",{"_index":3848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":1959,"title":{},"body":{"components/InputAssigneeComponent.html":{},"injectables/RouterExtensionsService.html":{},"components/StatusLabelComponent.html":{},"index.html":{}}}],["node.children[0",{"_index":2692,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["node.js",{"_index":3947,"title":{},"body":{"index.html":{}}}],["node.value.params",{"_index":2693,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["none",{"_index":878,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["not(.add",{"_index":1976,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(.add):hover",{"_index":1977,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(.collapsed",{"_index":696,"title":{},"body":{"components/BoardPage.html":{}}}],["not(.line",{"_index":1984,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(:last",{"_index":2683,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/TaskListPage.html":{}}}],["nothing",{"_index":4098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notice",{"_index":4012,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["now",{"_index":1825,"title":{},"body":{"components/GithubIntegrationPage.html":{},"components/SettingsSessionsPage.html":{}}}],["npm",{"_index":3948,"title":{},"body":{"index.html":{}}}],["null",{"_index":1106,"title":{},"body":{"components/ControlAccessor.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"classes/TestNgControl.html":{},"pipes/ValidationErrorPipe.html":{}}}],["number",{"_index":88,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["number(!this.taskmap.get(mapkey",{"_index":675,"title":{},"body":{"components/BoardPage.html":{}}}],["number(e[1",{"_index":1498,"title":{},"body":{"classes/Enum.html":{}}}],["number(event.container.element.nativeelement.dataset['index",{"_index":625,"title":{},"body":{"components/BoardPage.html":{}}}],["number(k",{"_index":1488,"title":{},"body":{"classes/Enum.html":{}}}],["number(key",{"_index":1486,"title":{},"body":{"classes/Enum.html":{}}}],["number(projectid",{"_index":100,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["number(this.expandedsubtasks.has(taskid",{"_index":3330,"title":{},"body":{"components/TaskListPage.html":{}}}],["number(this.form?.controls[index].value",{"_index":1623,"title":{},"body":{"components/FiltersComponent.html":{}}}],["number(v",{"_index":1493,"title":{},"body":{"classes/Enum.html":{}}}],["number(workspaceid",{"_index":98,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["numberrepresentation",{"_index":3610,"title":{},"body":{"classes/UserUtils.html":{}}}],["numeric",{"_index":1474,"title":{},"body":{"classes/Enum.html":{}}}],["o",{"_index":563,"title":{},"body":{"components/BoardPage.html":{}}}],["object",{"_index":272,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["object.entries(enumtype",{"_index":1496,"title":{},"body":{"classes/Enum.html":{}}}],["object.hasownproperty(key",{"_index":3662,"title":{},"body":{"classes/Utils.html":{}}}],["object.keys(enumtype",{"_index":1485,"title":{},"body":{"classes/Enum.html":{}}}],["object.keys(enumtype).filter((k",{"_index":1487,"title":{},"body":{"classes/Enum.html":{}}}],["object.values(enumtype",{"_index":1491,"title":{},"body":{"classes/Enum.html":{}}}],["object.values(taskpriority",{"_index":3219,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["obs",{"_index":1522,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["observable",{"_index":68,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["observable((subscriber",{"_index":1563,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["observables",{"_index":1546,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["observe",{"_index":2652,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["observersmodule",{"_index":2195,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["occurrence",{"_index":3645,"title":{},"body":{"classes/Utils.html":{}}}],["of(newtask",{"_index":3416,"title":{},"body":{"injectables/TaskService.html":{}}}],["of(true",{"_index":3428,"title":{},"body":{"injectables/TaskService.html":{}}}],["offset",{"_index":874,"title":{},"body":{"components/ButtonComponent.html":{}}}],["omit",{"_index":3176,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["onblur",{"_index":1996,"title":{},"body":{"components/InputComponent.html":{}}}],["onclick",{"_index":1053,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["onclick(event",{"_index":1057,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["ondestroy",{"_index":526,"title":{},"body":{"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/EditProjectPage.html":{}}}],["one",{"_index":1461,"title":{},"body":{"classes/Enum.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["onfocus",{"_index":1997,"title":{},"body":{"components/InputComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["only_my_tasks",{"_index":1583,"title":{},"body":{"classes/Filters.html":{}}}],["only_my_tasks(currentuserid",{"_index":1584,"title":{},"body":{"classes/Filters.html":{}}}],["onprojectidchange",{"_index":3193,"title":{},"body":{"components/TaskDialog.html":{}}}],["onprojectidchange(projectid",{"_index":3201,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["onsameurlnavigation",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["onsuccess",{"_index":637,"title":{},"body":{"components/BoardPage.html":{}}}],["onworkspaceidchange",{"_index":3194,"title":{},"body":{"components/TaskDialog.html":{}}}],["onworkspaceidchange(workspaceid",{"_index":3203,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["opacity",{"_index":733,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{}}}],["open",{"_index":1292,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{},"additional-documentation/localization.html":{}}}],["open(addmemberdialog",{"_index":1181,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["open(component",{"_index":1311,"title":{},"body":{"injectables/DialogService.html":{}}}],["open(taskdialog",{"_index":668,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["openaddmembersdialog",{"_index":1148,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["openbelow",{"_index":3542,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["opencreatenewtaskdialog",{"_index":3368,"title":{},"body":{"injectables/TaskService.html":{}}}],["opencreatesubtaskdialog",{"_index":3369,"title":{},"body":{"injectables/TaskService.html":{}}}],["opencreatesubtaskdialog(projectid",{"_index":3387,"title":{},"body":{"injectables/TaskService.html":{}}}],["opened",{"_index":1303,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{}}}],["openedittaskdialog",{"_index":3370,"title":{},"body":{"injectables/TaskService.html":{}}}],["openedittaskdialog(projectid",{"_index":3390,"title":{},"body":{"injectables/TaskService.html":{}}}],["openerrordialog",{"_index":1293,"title":{},"body":{"injectables/DialogService.html":{}}}],["openerrordialog(error",{"_index":1317,"title":{},"body":{"injectables/DialogService.html":{}}}],["opennavelement",{"_index":2385,"title":{},"body":{"components/NavElementComponent.html":{}}}],["opennewtaskdialog",{"_index":541,"title":{},"body":{"components/BoardPage.html":{}}}],["openprofile",{"_index":3546,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["openproject",{"_index":2558,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["openproject(project",{"_index":2562,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["opens",{"_index":1300,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/TaskService.html":{}}}],["openwithlocalvscode",{"_index":2417,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscode(project",{"_index":2436,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscodeinsiders",{"_index":2418,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscodeinsiders(project",{"_index":2438,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithvscode",{"_index":2419,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithvscode(project",{"_index":2440,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openworkspace",{"_index":2420,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["openworkspace(workspace",{"_index":3747,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["option",{"_index":1578,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/SelectComponent.html":{}}}],["option'},{'name",{"_index":197,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["option.assigneeid",{"_index":1594,"title":{},"body":{"classes/Filters.html":{}}}],["option.component.html",{"_index":2480,"title":{},"body":{"components/OptionComponent.html":{}}}],["option.component.scss",{"_index":2479,"title":{},"body":{"components/OptionComponent.html":{}}}],["option.selected",{"_index":2759,"title":{},"body":{"components/SelectComponent.html":{}}}],["option.viewvalue",{"_index":2776,"title":{},"body":{"components/SelectComponent.html":{}}}],["option/option.component",{"_index":2753,"title":{},"body":{"components/SelectComponent.html":{}}}],["optional",{"_index":50,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":4130,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["optioncomponent",{"_index":196,"title":{"components/OptionComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":336,"title":{},"body":{"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options'},{'name",{"_index":237,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["options.component",{"_index":1231,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["options.component.html",{"_index":3682,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.scss",{"_index":3681,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts",{"_index":3680,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["options.component.ts:12",{"_index":3689,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:13",{"_index":3687,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:15",{"_index":3691,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:16",{"_index":3690,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:17",{"_index":3701,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:19",{"_index":3685,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:20",{"_index":3702,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:22",{"_index":3684,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:23",{"_index":3700,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:26",{"_index":3698,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:29",{"_index":3699,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:31",{"_index":3697,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.interface",{"_index":369,"title":{},"body":{"injectables/ApiService.html":{}}}],["options.interface.ts",{"_index":2649,"title":{},"body":{"interfaces/RequestOptions.html":{},"coverage.html":{}}}],["options/view",{"_index":1230,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["optionsmap",{"_index":2735,"title":{},"body":{"components/SelectComponent.html":{}}}],["origin",{"_index":2979,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["originalmethod.apply(this",{"_index":1545,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["os",{"_index":2956,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["osname",{"_index":2953,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["other[1].find((status",{"_index":3161,"title":{},"body":{"injectables/StatusService.html":{}}}],["otherwise",{"_index":1158,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"license.html":{}}}],["out",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RestoreAccountPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"modules/TasksModule.html":{},"components/UpperNavigationComponent.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet'},{'name",{"_index":225,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["outlet.component",{"_index":2258,"title":{},"body":{"modules/MainModule.html":{}}}],["outlet.component.html",{"_index":3040,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet.component.scss",{"_index":3039,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts",{"_index":3038,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"coverage.html":{}}}],["outlet.component.ts:11",{"_index":3043,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts:15",{"_index":3045,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet/snackbar",{"_index":2257,"title":{},"body":{"modules/MainModule.html":{},"components/SnackbarOutletComponent.html":{},"coverage.html":{}}}],["outline",{"_index":871,"title":{},"body":{"components/ButtonComponent.html":{}}}],["output",{"_index":2082,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["outputs",{"_index":2073,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["overflow",{"_index":693,"title":{},"body":{"components/BoardPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SchedulePage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{}}}],["overlay",{"_index":1909,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["overlaymodule",{"_index":2197,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":1617,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/StatusLabelComponent.html":{}}}],["overview",{"_index":4065,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":1761,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsAccountPage.html":{}}}],["owner",{"_index":1757,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["p",{"_index":944,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["p.project",{"_index":2553,"title":{},"body":{"injectables/ProjectService.html":{}}}],["package",{"_index":3861,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":110,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["page",{"_index":240,"title":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/continuos-integration.html":{}}}],["page'},{'name",{"_index":148,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["page.component",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":2115,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.scss",{"_index":2114,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":2113,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:8",{"_index":2116,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/landing",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["pages/board/board.page",{"_index":3501,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/change",{"_index":465,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/create",{"_index":1234,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/delete",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/edit",{"_index":1238,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/forgot",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/github",{"_index":1251,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["pages/login/login.page",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/mock/mock.page",{"_index":2269,"title":{},"body":{"modules/MainModule.html":{}}}],["pages/projects",{"_index":1242,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/register/register.page",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/restore",{"_index":475,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/schedule/schedule.page",{"_index":3502,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/settings",{"_index":2895,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["pages/settings/settings.page",{"_index":2919,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["pages/task",{"_index":3503,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/workspaces",{"_index":1245,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["param",{"_index":311,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"directives/FocusInitialDirective.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1790,"title":{},"body":{"injectables/GitIntegrationService.html":{},"interfaces/RequestOptions.html":{},"injectables/RouterExtensionsService.html":{}}}],["paramsinheritancestrategy",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["parent",{"_index":3172,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["parenttask",{"_index":3388,"title":{},"body":{"injectables/TaskService.html":{}}}],["parenttask.id",{"_index":3437,"title":{},"body":{"injectables/TaskService.html":{}}}],["parenttaskid",{"_index":787,"title":{},"body":{"components/BoardTaskComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["parser",{"_index":2937,"title":{},"body":{"components/SettingsSessionsPage.html":{},"dependencies.html":{}}}],["part",{"_index":2658,"title":{},"body":{"interfaces/RequestOptions.html":{},"additional-documentation/architecture.html":{}}}],["partial",{"_index":3233,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["particular",{"_index":4028,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":3651,"title":{},"body":{"classes/Utils.html":{}}}],["pass",{"_index":273,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{}}}],["passable",{"_index":2671,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["passed",{"_index":303,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ControlAccessor.html":{},"classes/Utils.html":{}}}],["passes",{"_index":1155,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["passthrough",{"_index":291,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["password",{"_index":481,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"interfaces/ModifyUser.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"miscellaneous/functions.html":{}}}],["password'},{'name",{"_index":137,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["password.page",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["password.page.html",{"_index":897,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.scss",{"_index":896,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.ts",{"_index":895,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"coverage.html":{}}}],["password.page.ts:14",{"_index":1644,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:16",{"_index":900,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:17",{"_index":1646,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:19",{"_index":1647,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:24",{"_index":901,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.ts:28",{"_index":1645,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:29",{"_index":912,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:34",{"_index":909,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:47",{"_index":902,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password/change",{"_index":466,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{},"coverage.html":{}}}],["password/forgot",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ForgotPasswordPage.html":{},"coverage.html":{}}}],["passwords",{"_index":907,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["passwordvalidator",{"_index":903,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["patch",{"_index":327,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["patch(url",{"_index":350,"title":{},"body":{"injectables/ApiService.html":{}}}],["path",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"interfaces/RequestOptions.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pathmatch",{"_index":1255,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pattern",{"_index":3673,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["pending",{"_index":834,"title":{},"body":{"components/ButtonComponent.html":{}}}],["pentosquare",{"_index":3683,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["people",{"_index":2327,"title":{},"body":{"injectables/MemberService.html":{},"components/SchedulePage.html":{}}}],["per",{"_index":3076,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["performs",{"_index":994,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["period",{"_index":2833,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["permanently",{"_index":2829,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["permitted",{"_index":4005,"title":{},"body":{"license.html":{}}}],["persistentkey",{"_index":581,"title":{},"body":{"components/BoardPage.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["persistentmap",{"_index":580,"title":{"classes/PersistentMap.html":{}},"body":{"components/BoardPage.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"coverage.html":{}}}],["persistentmapoptions",{"_index":2497,"title":{"interfaces/PersistentMapOptions.html":{}},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"coverage.html":{}}}],["person",{"_index":2723,"title":{},"body":{"components/SchedulePage.html":{}}}],["personal_data",{"_index":2627,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["pewno",{"_index":2804,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["picker",{"_index":2049,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["pipe",{"_index":1000,"title":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{},"pipes/ValidationErrorPipe.html":{},"coverage.html":{},"additional-documentation/architecture.html":{}}}],["pipe(filter((result",{"_index":1340,"title":{},"body":{"injectables/DialogService.html":{}}}],["pipe(map((projects",{"_index":1698,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["pipe(map((workspace",{"_index":3242,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["pipe(skip(1",{"_index":3570,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["pipe.ts",{"_index":4151,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["pipeline",{"_index":4197,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["pipes",{"_index":3081,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["pipes/status",{"_index":3504,"title":{},"body":{"modules/TasksModule.html":{}}}],["pipes/task",{"_index":3506,"title":{},"body":{"modules/TasksModule.html":{}}}],["pipes/validation",{"_index":2271,"title":{},"body":{"modules/MainModule.html":{}}}],["pipetransform",{"_index":3087,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}}}],["pl",{"_index":2873,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["pl.xlf",{"_index":4176,"title":{},"body":{"additional-documentation/localization.html":{}}}],["placed",{"_index":4135,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["placeholder",{"_index":732,"title":{},"body":{"components/BoardPage.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TextareaComponent.html":{}}}],["platformmodule",{"_index":2199,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":2187,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["plus",{"_index":3749,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["pointer",{"_index":725,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["poland",{"_index":4168,"title":{},"body":{"additional-documentation/localization.html":{}}}],["polish",{"_index":4167,"title":{},"body":{"additional-documentation/localization.html":{}}}],["polski",{"_index":2874,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["populatedtasks",{"_index":3321,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatedtasks.push",{"_index":3327,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatedtasks.push(task",{"_index":3324,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatesubtasks",{"_index":3278,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatesubtasks(tasklist",{"_index":3293,"title":{},"body":{"components/TaskListPage.html":{}}}],["popup",{"_index":2801,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["position",{"_index":801,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["possibility",{"_index":4060,"title":{},"body":{"license.html":{}}}],["post",{"_index":328,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["post(url",{"_index":352,"title":{},"body":{"injectables/ApiService.html":{}}}],["postgithubintegration",{"_index":1722,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["postgithubintegration(installationid",{"_index":1762,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["powerful",{"_index":3940,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":861,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{}}}],["prefix:not(.pending",{"_index":864,"title":{},"body":{"components/ButtonComponent.html":{}}}],["preparedusername",{"_index":1808,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["press",{"_index":4193,"title":{},"body":{"additional-documentation/localization.html":{}}}],["previousstage",{"_index":2611,"title":{},"body":{"components/RegisterPage.html":{}}}],["previousstatus",{"_index":626,"title":{},"body":{"components/BoardPage.html":{}}}],["previousstatusindex",{"_index":622,"title":{},"body":{"components/BoardPage.html":{}}}],["previoustaskindex",{"_index":630,"title":{},"body":{"components/BoardPage.html":{}}}],["primary",{"_index":843,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["principle",{"_index":4119,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["priority",{"_index":3207,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityIconPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["priority.enum",{"_index":3228,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["priority.enum.ts",{"_index":3897,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["priority.pipe",{"_index":3508,"title":{},"body":{"modules/TasksModule.html":{}}}],["priority.pipe.ts",{"_index":3357,"title":{},"body":{"pipes/TaskPriorityPipe.html":{},"coverage.html":{}}}],["priority.pipe.ts:7",{"_index":3358,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["privacy",{"_index":2646,"title":{},"body":{"components/RegisterPage.html":{}}}],["private",{"_index":91,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["privileges",{"_index":2376,"title":{},"body":{"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/Workspace.html":{}}}],["process",{"_index":1706,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["procurement",{"_index":4041,"title":{},"body":{"license.html":{}}}],["production",{"_index":3919,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/continuos-integration.html":{}}}],["profile",{"_index":2823,"title":{},"body":{"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["profits",{"_index":4046,"title":{},"body":{"license.html":{}}}],["programmatic",{"_index":1028,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["progress",{"_index":2371,"title":{},"body":{"components/MockPage.html":{},"interfaces/RequestOptions.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"interfaces/StatusWithTasks.html":{}}}],["project",{"_index":143,"title":{"interfaces/Project.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["project's",{"_index":2523,"title":{},"body":{"interfaces/Project.html":{}}}],["project'},{'name",{"_index":146,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["project.githubintegration",{"_index":1799,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["project.id",{"_index":2461,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["project.interface",{"_index":3712,"title":{},"body":{"interfaces/Workspace.html":{}}}],["project.name",{"_index":1345,"title":{},"body":{"injectables/DialogService.html":{},"components/TaskDialog.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["project.name).join",{"_index":1700,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["project.page",{"_index":1236,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["project.page.html",{"_index":1194,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.scss",{"_index":1193,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.ts",{"_index":1192,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{},"coverage.html":{}}}],["project.page.ts:104",{"_index":1415,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:116",{"_index":1414,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:125",{"_index":1417,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:21",{"_index":1419,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:24",{"_index":1200,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:26",{"_index":1421,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:27",{"_index":1424,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:28",{"_index":1199,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:32",{"_index":1198,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:33",{"_index":1422,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:34",{"_index":1201,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:36",{"_index":1202,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:37",{"_index":1420,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:38",{"_index":1195,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:39",{"_index":1423,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:40",{"_index":1413,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:59",{"_index":1196,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:69",{"_index":1416,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:72",{"_index":1197,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:89",{"_index":1418,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.project",{"_index":2573,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["project.service",{"_index":1774,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["project/create",{"_index":1191,"title":{},"body":{"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["project/edit",{"_index":1240,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectPage.html":{},"coverage.html":{}}}],["projectid",{"_index":89,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["projectid/edit",{"_index":1264,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectid/edit/general",{"_index":1265,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectid/edit/members",{"_index":1266,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectlist",{"_index":2342,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["projectmember",{"_index":586,"title":{"interfaces/ProjectMember.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["projectmembers",{"_index":2521,"title":{},"body":{"interfaces/Project.html":{}}}],["projects",{"_index":199,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["projects.filter",{"_index":1813,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["projects.map((project",{"_index":1699,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["projects.push(...workspace.projectswithprivileges.map((p",{"_index":2552,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projects/spaces",{"_index":3708,"title":{},"body":{"interfaces/Workspace.html":{}}}],["projectservice",{"_index":547,"title":{"injectables/ProjectService.html":{}},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["projectslistpage",{"_index":198,"title":{"components/ProjectsListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["projectswithprivileges",{"_index":3711,"title":{},"body":{"interfaces/Workspace.html":{}}}],["projectwithpriv.project.name",{"_index":2470,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["prompt",{"_index":980,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["propagate",{"_index":1015,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["propagation",{"_index":1052,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["propagation.directive",{"_index":2264,"title":{},"body":{"modules/MainModule.html":{}}}],["propagation.directive.ts",{"_index":1051,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{},"coverage.html":{}}}],["propagation.directive.ts:8",{"_index":1056,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["propagation]'},{'name",{"_index":245,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["properly",{"_index":2190,"title":{},"body":{"modules/MainModule.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"properties.html":{}}}],["property",{"_index":748,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["propertydescriptor",{"_index":1542,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["propertykey",{"_index":1540,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["props",{"_index":1856,"title":{},"body":{"components/IconComponent.html":{}}}],["protect",{"_index":4146,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["protocol",{"_index":4208,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["provide",{"_index":1073,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":362,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":370,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["provider.helper",{"_index":1109,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["provider.helper.ts",{"_index":3515,"title":{},"body":{"classes/TestNgControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provider.helper.ts:4",{"_index":3518,"title":{},"body":{"classes/TestNgControl.html":{}}}],["provider.helper.ts:5",{"_index":3520,"title":{},"body":{"classes/TestNgControl.html":{}}}],["provider.helper.ts:8",{"_index":3522,"title":{},"body":{"classes/TestNgControl.html":{}}}],["providers",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"components/ControlAccessor.html":{},"modules/DashboardModule.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/variables.html":{}}}],["przywrocenia",{"_index":2821,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["publishes",{"_index":4209,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["pull",{"_index":646,"title":{},"body":{"components/BoardPage.html":{},"injectables/GitIntegrationService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["pulllist",{"_index":3188,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["pullrequest.title",{"_index":3264,"title":{},"body":{"components/TaskDialog.html":{}}}],["purple",{"_index":2065,"title":{},"body":{"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["purpose",{"_index":4029,"title":{},"body":{"license.html":{}}}],["push",{"_index":4204,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["put",{"_index":329,"title":{},"body":{"injectables/ApiService.html":{}}}],["put(url",{"_index":354,"title":{},"body":{"injectables/ApiService.html":{}}}],["query",{"_index":2660,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["querylist",{"_index":2745,"title":{},"body":{"components/SelectComponent.html":{}}}],["queryoptions",{"_index":2736,"title":{},"body":{"components/SelectComponent.html":{}}}],["question",{"_index":1841,"title":{},"body":{"components/IconComponent.html":{}}}],["question_mark",{"_index":1899,"title":{},"body":{"components/IconComponent.html":{}}}],["radius",{"_index":728,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["random",{"_index":2576,"title":{"classes/Random.html":{}},"body":{"classes/Random.html":{},"classes/UserUtils.html":{},"coverage.html":{}}}],["random(id",{"_index":3601,"title":{},"body":{"classes/UserUtils.html":{}}}],["random(numberrepresentation",{"_index":3623,"title":{},"body":{"classes/UserUtils.html":{}}}],["random.random",{"_index":3603,"title":{},"body":{"classes/UserUtils.html":{}}}],["randomnumber",{"_index":3602,"title":{},"body":{"classes/UserUtils.html":{}}}],["reactiveformsmodule",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["readable",{"_index":3670,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"additional-documentation/localization.html":{}}}],["readme.md",{"_index":4214,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["readonly",{"_index":1907,"title":{},"body":{"components/InputAssigneeComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/StatusLabelComponent.html":{}}}],["readonlyarray",{"_index":2674,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["ready",{"_index":3954,"title":{},"body":{"index.html":{}}}],["rebuild",{"_index":4206,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["receive",{"_index":1651,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["recommended",{"_index":2825,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["recoveraccount",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["red",{"_index":888,"title":{},"body":{"components/CardComponent.html":{},"components/InputComponent.html":{}}}],["redirectto",{"_index":1261,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["redistribution",{"_index":4002,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":4009,"title":{},"body":{"license.html":{}}}],["reduce((sum",{"_index":3614,"title":{},"body":{"classes/UserUtils.html":{}}}],["ref",{"_index":2484,"title":{},"body":{"components/OptionComponent.html":{}}}],["reference",{"_index":271,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"injectables/DialogService.html":{},"directives/FocusInitialDirective.html":{}}}],["regex",{"_index":3641,"title":{},"body":{"classes/Utils.html":{}}}],["regexindexof",{"_index":3630,"title":{},"body":{"classes/Utils.html":{}}}],["regexindexof(string",{"_index":3640,"title":{},"body":{"classes/Utils.html":{}}}],["regexp",{"_index":1811,"title":{},"body":{"injectables/GitIntegrationService.html":{},"classes/Utils.html":{}}}],["register",{"_index":480,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["register'},{'name",{"_index":201,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["register(this.form.value",{"_index":2637,"title":{},"body":{"components/RegisterPage.html":{}}}],["register(undefined",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.page.html",{"_index":2606,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":2605,"title":{},"body":{"components/RegisterPage.html":{}}}],["registeronchange",{"_index":970,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registeronchange(fn",{"_index":1002,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched",{"_index":971,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched(fn",{"_index":1017,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerpage",{"_index":200,"title":{"components/RegisterPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["registers",{"_index":1004,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerstage",{"_index":2607,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["registerstage.important_data",{"_index":2623,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerstage.personal_data",{"_index":2634,"title":{},"body":{"components/RegisterPage.html":{}}}],["registersubscription",{"_index":2608,"title":{},"body":{"components/RegisterPage.html":{}}}],["regular",{"_index":3873,"title":{},"body":{"dependencies.html":{}}}],["relative",{"_index":802,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/MockPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["reload",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["remember",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["remembered",{"_index":3589,"title":{},"body":{"interfaces/UserSession.html":{}}}],["removal",{"_index":1738,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["remove",{"_index":1973,"title":{},"body":{"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{}}}],["remove(projectid",{"_index":2335,"title":{},"body":{"injectables/MemberService.html":{}}}],["removes",{"_index":2337,"title":{},"body":{"injectables/MemberService.html":{}}}],["repeat",{"_index":936,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{}}}],["repeatpassword",{"_index":904,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["replace",{"_index":3925,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["replaced",{"_index":4093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replacements",{"_index":3923,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":3401,"title":{},"body":{"injectables/TaskService.html":{}}}],["report",{"_index":2661,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["reportprogress",{"_index":2653,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["repositories",{"_index":1769,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["repository",{"_index":660,"title":{},"body":{"components/BoardPage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/Project.html":{},"index.html":{}}}],["repository.fullname",{"_index":2111,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositorylist",{"_index":2088,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositorylistloaded",{"_index":2089,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositoryname",{"_index":1725,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["reproduce",{"_index":4014,"title":{},"body":{"license.html":{}}}],["req",{"_index":1513,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["request",{"_index":330,"title":{},"body":{"injectables/ApiService.html":{},"components/BoardPage.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{}}}],["request(method",{"_index":356,"title":{},"body":{"injectables/ApiService.html":{}}}],["requested",{"_index":1029,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["requestoptions",{"_index":337,"title":{"interfaces/RequestOptions.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{},"coverage.html":{}}}],["requests",{"_index":2655,"title":{},"body":{"interfaces/RequestOptions.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["require",{"_index":3859,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":4084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":987,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{}}}],["required::after",{"_index":2023,"title":{},"body":{"components/InputComponent.html":{}}}],["requiredvalidator",{"_index":66,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["requires",{"_index":3618,"title":{},"body":{"classes/UserUtils.html":{},"additional-documentation/localization.html":{}}}],["reset",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"components/SettingsAccountPage.html":{}}}],["resetpassword(undefined",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetsubscription",{"_index":898,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["resolved",{"_index":4198,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["response",{"_index":1548,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"interfaces/RequestOptions.html":{},"miscellaneous/variables.html":{}}}],["response.deleted",{"_index":2173,"title":{},"body":{"components/LoginPage.html":{}}}],["response.id]).subscribe",{"_index":1187,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["response.link",{"_index":1777,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["response.operator.ts",{"_index":3794,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["response?.error?.status",{"_index":1550,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["response?.status",{"_index":1551,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["responsetype",{"_index":375,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/RequestOptions.html":{}}}],["responsibility",{"_index":4118,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["restore",{"_index":203,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["restoreaccountpage",{"_index":202,"title":{"components/RestoreAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["result",{"_index":664,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Random.html":{},"components/UpperNavigationComponent.html":{}}}],["result).subscribe",{"_index":672,"title":{},"body":{"components/BoardPage.html":{},"components/UpperNavigationComponent.html":{}}}],["results",{"_index":251,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["retain",{"_index":4010,"title":{},"body":{"license.html":{}}}],["return",{"_index":106,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"injectables/MemberService.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"injectables/RouterExtensionsService.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{}}}],["returned",{"_index":3668,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["returns",{"_index":52,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["reversible",{"_index":2832,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["revert",{"_index":2834,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["revive",{"_index":1281,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["rgb(0",{"_index":806,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{}}}],["rgba(0",{"_index":1981,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["right",{"_index":746,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["ripple",{"_index":2066,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["root",{"_index":371,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"additional-documentation/continuos-integration.html":{}}}],["root'},{'name",{"_index":125,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["rotate",{"_index":3031,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["rotate(45deg",{"_index":3030,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["rotate(90deg",{"_index":700,"title":{},"body":{"components/BoardPage.html":{},"components/ForgotPasswordPage.html":{},"components/TaskListPage.html":{}}}],["router",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["routerextensions",{"_index":42,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["routerextensionsservice",{"_index":43,"title":{"injectables/RouterExtensionsService.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/RouterExtensionsService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{}}}],["routerlink",{"_index":2387,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["routermodule",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(routes",{"_index":482,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":427,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/functions.html":{},"overview.html":{},"routes.html":{},"additional-documentation/architecture.html":{}}}],["routetoproject",{"_index":2421,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routetoproject(project",{"_index":2443,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routetoworkspace",{"_index":2422,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routing.ts",{"_index":4131,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["row",{"_index":757,"title":{},"body":{"components/BoardPage.html":{},"components/MemberListComponent.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{}}}],["row.hasownproperty('withsubtasks",{"_index":3312,"title":{},"body":{"components/TaskListPage.html":{}}}],["row.name",{"_index":2574,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["row.user.email",{"_index":2318,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.name",{"_index":2319,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.surname",{"_index":2320,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.username",{"_index":2317,"title":{},"body":{"components/MemberListComponent.html":{}}}],["rows",{"_index":2724,"title":{},"body":{"components/SchedulePage.html":{},"components/TextareaComponent.html":{}}}],["rsync",{"_index":4207,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["run",{"_index":1704,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["running",{"_index":3969,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["runs",{"_index":4210,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["rxjs",{"_index":83,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":2975,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["s",{"_index":3154,"title":{},"body":{"injectables/StatusService.html":{}}}],["s.user.id",{"_index":3446,"title":{},"body":{"injectables/TaskService.html":{}}}],["same",{"_index":908,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["sameasvalidator",{"_index":915,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sameasvalidator('password",{"_index":905,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["sameasvalidator(comparewith",{"_index":3933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sampandonte/untitled",{"_index":2522,"title":{},"body":{"interfaces/Project.html":{}}}],["save",{"_index":1204,"title":{},"body":{"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{}}}],["savefilters",{"_index":1599,"title":{},"body":{"components/FiltersComponent.html":{}}}],["savestate",{"_index":2495,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["scale(1",{"_index":858,"title":{},"body":{"components/ButtonComponent.html":{}}}],["scale(1.02",{"_index":2980,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["scaley",{"_index":2406,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["schedule",{"_index":206,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/typealiases.html":{}}}],["schedule(projectid",{"_index":3392,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.page.html",{"_index":2696,"title":{},"body":{"components/SchedulePage.html":{}}}],["schedule.page.scss",{"_index":2695,"title":{},"body":{"components/SchedulePage.html":{}}}],["schedule.tasks.get(null).push(task",{"_index":3452,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.has(null",{"_index":3450,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.set(dayjs(task.estimateddate).format('yyyy",{"_index":3449,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.set(null",{"_index":3451,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedulepage",{"_index":205,"title":{"components/SchedulePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["schedules",{"_index":3443,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedules.find((s",{"_index":3445,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedules.push",{"_index":3444,"title":{},"body":{"injectables/TaskService.html":{}}}],["screen",{"_index":947,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["script",{"_index":4212,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["search",{"_index":1842,"title":{},"body":{"components/IconComponent.html":{},"classes/Utils.html":{},"additional-documentation/localization.html":{}}}],["searching",{"_index":4086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":3950,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["section",{"_index":808,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/localization.html":{}}}],["sections",{"_index":2717,"title":{},"body":{"components/SchedulePage.html":{}}}],["secure",{"_index":2185,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["security",{"_index":2828,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["see",{"_index":1046,"title":{},"body":{"components/CheckboxComponent.html":{},"additional-documentation/architecture.html":{}}}],["seed",{"_index":2584,"title":{},"body":{"classes/Random.html":{},"miscellaneous/functions.html":{}}}],["select",{"_index":1910,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["select'},{'name",{"_index":208,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["select(member",{"_index":1918,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["select(status",{"_index":3106,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["select.component.html",{"_index":2734,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":2733,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectcomponent",{"_index":207,"title":{"components/SelectComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":2737,"title":{},"body":{"components/SelectComponent.html":{}}}],["selecteditem.viewvalue",{"_index":2775,"title":{},"body":{"components/SelectComponent.html":{}}}],["selection",{"_index":4180,"title":{},"body":{"additional-documentation/localization.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["self",{"_index":946,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["send",{"_index":342,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["sends",{"_index":340,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["separated",{"_index":4125,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["serba",{"_index":3995,"title":{},"body":{"license.html":{}}}],["server",{"_index":2667,"title":{},"body":{"interfaces/RequestOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["serves",{"_index":4192,"title":{},"body":{"additional-documentation/localization.html":{}}}],["service",{"_index":323,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/SelectComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["service.ts",{"_index":4153,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["services",{"_index":4044,"title":{},"body":{"license.html":{},"additional-documentation/architecture.html":{}}}],["services/api.service",{"_index":2273,"title":{},"body":{"modules/MainModule.html":{}}}],["services/auth.service",{"_index":918,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["services/dialog.service",{"_index":2274,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["services/git",{"_index":1247,"title":{},"body":{"modules/DashboardModule.html":{}}}],["services/project.service",{"_index":1174,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["services/sessions.service",{"_index":2939,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["services/status.service",{"_index":604,"title":{},"body":{"components/BoardPage.html":{}}}],["services/task.service",{"_index":605,"title":{},"body":{"components/BoardPage.html":{}}}],["services/workspace.service",{"_index":1175,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["servicevalidator",{"_index":3729,"title":{},"body":{"injectables/WorkspaceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["servicevalidator(errorvalidationtree",{"_index":1538,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"miscellaneous/functions.html":{}}}],["servicevalidator({delete",{"_index":3727,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["session",{"_index":1530,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["session.geoip.city",{"_index":2961,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["session.geoip.country",{"_index":2962,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["session.useragent",{"_index":2959,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate",{"_index":791,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["sessiondate.format('ll",{"_index":2947,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('lll",{"_index":2948,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('mmmm",{"_index":2949,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('yyyy",{"_index":793,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TaskListPage.html":{}}}],["sessiondate.year",{"_index":2944,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions",{"_index":2913,"title":{},"body":{"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{}}}],["sessions'},{'name",{"_index":217,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["sessions.page",{"_index":2899,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["sessions.page.html",{"_index":2922,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.scss",{"_index":2921,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts",{"_index":2920,"title":{},"body":{"components/SettingsSessionsPage.html":{},"coverage.html":{}}}],["sessions.page.ts:14",{"_index":2927,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:17",{"_index":2935,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:21",{"_index":2932,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:36",{"_index":2931,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:49",{"_index":2934,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions/settings",{"_index":2898,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"coverage.html":{}}}],["sessionservice",{"_index":2928,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessionslist",{"_index":2923,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessionsservice",{"_index":2777,"title":{"injectables/SessionsService.html":{}},"body":{"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"coverage.html":{}}}],["set",{"_index":281,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/ESet.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"classes/PersistentMap.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["set(key",{"_index":2503,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["set.class",{"_index":3310,"title":{},"body":{"components/TaskListPage.html":{}}}],["set.class.ts",{"_index":1349,"title":{},"body":{"classes/ESet.html":{},"coverage.html":{}}}],["set.class.ts:2",{"_index":1352,"title":{},"body":{"classes/ESet.html":{}}}],["setanimationname",{"_index":2990,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["setanimationname(name",{"_index":3005,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["setassignee(assignee",{"_index":1931,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["setdisabledstate",{"_index":972,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1020,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["setfilters(filters",{"_index":1610,"title":{},"body":{"components/FiltersComponent.html":{}}}],["seticon(value",{"_index":1864,"title":{},"body":{"components/IconComponent.html":{}}}],["setisopen(val",{"_index":1935,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["setmembers(members",{"_index":1932,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["setnewpassword",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{}}}],["setnewpassword(this.token",{"_index":925,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["setnewpassword(token",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["setnglet(value",{"_index":2131,"title":{},"body":{"directives/LetDirective.html":{}}}],["setstatuses(statuses",{"_index":3113,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["setter",{"_index":1855,"title":{},"body":{"components/IconComponent.html":{}}}],["settimeout",{"_index":853,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["setting",{"_index":911,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["settings",{"_index":210,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["settings.page.html",{"_index":2903,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page.scss",{"_index":2902,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.routing",{"_index":2900,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settingsaccountpage",{"_index":209,"title":{"components/SettingsAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingsintegrationspage",{"_index":211,"title":{"components/SettingsIntegrationsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingslocalizationpage",{"_index":213,"title":{"components/SettingsLocalizationPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingsmodule",{"_index":2884,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingspage",{"_index":215,"title":{"components/SettingsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingsroutingmodule",{"_index":2888,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["settingssessionspage",{"_index":216,"title":{"components/SettingsSessionsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["setup_action",{"_index":1822,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["shadow",{"_index":804,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{}}}],["shall",{"_index":4031,"title":{},"body":{"license.html":{}}}],["shape",{"_index":4150,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["share",{"_index":4152,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["shared",{"_index":2830,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["shopping_cart",{"_index":1877,"title":{},"body":{"components/IconComponent.html":{}}}],["shoppingcart",{"_index":1876,"title":{},"body":{"components/IconComponent.html":{}}}],["show",{"_index":3053,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["show(message",{"_index":3058,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["showalert",{"_index":1553,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["showalert(m",{"_index":1568,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["showarrow",{"_index":2383,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["shown",{"_index":840,"title":{},"body":{"components/ButtonComponent.html":{}}}],["showoptions",{"_index":2388,"title":{},"body":{"components/NavElementComponent.html":{}}}],["shows",{"_index":3743,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["shrink",{"_index":2718,"title":{},"body":{"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["side",{"_index":939,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["sidebar",{"_index":219,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["sidebarnavigationcomponent",{"_index":218,"title":{"components/SidebarNavigationComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sie",{"_index":2806,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["simple",{"_index":256,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["simultaneously",{"_index":3262,"title":{},"body":{"components/TaskDialog.html":{}}}],["single",{"_index":2722,"title":{},"body":{"components/SchedulePage.html":{},"additional-documentation/architecture.html":{}}}],["singlepersonschedule",{"_index":2982,"title":{"interfaces/SinglePersonSchedule.html":{}},"body":{"interfaces/SinglePersonSchedule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["singleschedule.user.name.substring(0",{"_index":2714,"title":{},"body":{"components/SchedulePage.html":{}}}],["site",{"_index":2186,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["size",{"_index":812,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{}}}],["skip",{"_index":3563,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["skiplocationchange",{"_index":2459,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["sm",{"_index":948,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["small",{"_index":3102,"title":{},"body":{"components/StatusLabelComponent.html":{},"additional-documentation/continuos-integration.html":{}}}],["smaller",{"_index":3621,"title":{},"body":{"classes/UserUtils.html":{}}}],["snackbar",{"_index":224,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbar'},{'name",{"_index":222,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbar.component.html",{"_index":2987,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar.component.scss",{"_index":2986,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar.interface",{"_index":3013,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.interface",{"_index":3048,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["snackbar:not(:last",{"_index":3051,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["snackbarcomponent",{"_index":221,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["snackbardata",{"_index":3012,"title":{"interfaces/SnackbarData.html":{}},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["snackbardata['color",{"_index":3016,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbardata['duration",{"_index":3015,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbardata['message",{"_index":3014,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbaroutletcomponent",{"_index":223,"title":{"components/SnackbarOutletComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["snackbars",{"_index":3041,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["snackbarservice",{"_index":2995,"title":{"injectables/SnackbarService.html":{}},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["snake",{"_index":1874,"title":{},"body":{"components/IconComponent.html":{}}}],["snake_case",{"_index":3652,"title":{},"body":{"classes/Utils.html":{}}}],["snakecase",{"_index":3631,"title":{},"body":{"classes/Utils.html":{}}}],["snakecase(inputstring",{"_index":3647,"title":{},"body":{"classes/Utils.html":{}}}],["snakecasename",{"_index":1837,"title":{},"body":{"components/IconComponent.html":{}}}],["snapshot",{"_index":2686,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["software",{"_index":4018,"title":{},"body":{"license.html":{}}}],["solid",{"_index":593,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"license.html":{}}}],["source.subscribe",{"_index":1564,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["space",{"_index":719,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["spaces",{"_index":4112,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["spain",{"_index":4164,"title":{},"body":{"additional-documentation/localization.html":{}}}],["span",{"_index":1988,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["spanish",{"_index":4163,"title":{},"body":{"additional-documentation/localization.html":{}}}],["spec\\.ts",{"_index":4085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":4037,"title":{},"body":{"license.html":{}}}],["specific",{"_index":3375,"title":{},"body":{"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["specified",{"_index":3634,"title":{},"body":{"classes/Utils.html":{}}}],["specify",{"_index":299,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ValidationError.html":{},"miscellaneous/enumerations.html":{}}}],["specyfic",{"_index":3929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["speed",{"_index":3943,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":857,"title":{},"body":{"components/ButtonComponent.html":{},"modules/MainModule.html":{}}}],["spinner.hide",{"_index":859,"title":{},"body":{"components/ButtonComponent.html":{}}}],["split",{"_index":3611,"title":{},"body":{"classes/UserUtils.html":{},"classes/Utils.html":{}}}],["splitindex",{"_index":1886,"title":{},"body":{"components/IconComponent.html":{}}}],["splitter",{"_index":4124,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/.../_main.mocks.prod.ts",{"_index":3904,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../_main.mocks.ts",{"_index":3905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../_main.module.ts",{"_index":4082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../alert.dialog.ts",{"_index":3892,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../apply",{"_index":3899,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../catch",{"_index":3900,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../color.interface.ts",{"_index":4073,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../debug.decorator.ts",{"_index":3901,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../email.validator.ts",{"_index":3902,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":4079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filters.interface.ts",{"_index":4074,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mat",{"_index":4081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../max",{"_index":3906,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../page.decorator.ts",{"_index":3907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../password.validator.ts",{"_index":3908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../register.page.ts",{"_index":3893,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../required.validator.ts",{"_index":3909,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../response.mock.helper.ts",{"_index":4083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../same",{"_index":3910,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../schedule.interface.ts",{"_index":4075,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../service",{"_index":3912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../service.decorator.ts",{"_index":3911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task",{"_index":3894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../task.dialog.ts",{"_index":3896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":4078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validator",{"_index":3903,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../workspaces.mocks.ts",{"_index":3913,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app",{"_index":4127,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/app/_main/_main.module.ts",{"_index":2188,"title":{},"body":{"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_main/classes/control",{"_index":1065,"title":{},"body":{"components/ControlAccessor.html":{},"coverage.html":{}}}],["src/app/_main/classes/e",{"_index":1348,"title":{},"body":{"classes/ESet.html":{},"coverage.html":{}}}],["src/app/_main/classes/enum.class.ts",{"_index":1450,"title":{},"body":{"classes/Enum.html":{},"coverage.html":{}}}],["src/app/_main/classes/enum.class.ts:10",{"_index":1472,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:32",{"_index":1480,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:48",{"_index":1483,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:70",{"_index":1459,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/filters.class.ts",{"_index":1582,"title":{},"body":{"classes/Filters.html":{},"coverage.html":{}}}],["src/app/_main/classes/filters.class.ts:5",{"_index":1585,"title":{},"body":{"classes/Filters.html":{}}}],["src/app/_main/classes/persistent",{"_index":2491,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"coverage.html":{}}}],["src/app/_main/classes/random.class.ts",{"_index":2577,"title":{},"body":{"classes/Random.html":{},"coverage.html":{}}}],["src/app/_main/classes/random.class.ts:17",{"_index":2590,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:2",{"_index":2586,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:3",{"_index":2588,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:4",{"_index":2582,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/utils.class.ts",{"_index":3624,"title":{},"body":{"classes/Utils.html":{},"coverage.html":{}}}],["src/app/_main/classes/utils.class.ts:12",{"_index":3643,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:22",{"_index":3648,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:45",{"_index":3633,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:59",{"_index":3636,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/components/button/button.component.ts",{"_index":828,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/button/button.component.ts:21",{"_index":844,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:23",{"_index":842,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:28",{"_index":837,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:33",{"_index":836,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:38",{"_index":850,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:43",{"_index":846,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/card/card.component.ts",{"_index":882,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/card/card.component.ts:11",{"_index":887,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/_main/components/card/card.component.ts:8",{"_index":886,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/_main/components/checkbox/checkbox.component.ts",{"_index":959,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/checkbox/checkbox.component.ts:10",{"_index":975,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts",{"_index":1595,"title":{},"body":{"components/FiltersComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/filters/filters.component.ts:12",{"_index":1601,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:21",{"_index":1609,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:25",{"_index":1605,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:26",{"_index":1600,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:32",{"_index":1603,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:37",{"_index":1604,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts",{"_index":1828,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/icon/icon.component.ts:100",{"_index":1861,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:105",{"_index":1858,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:113",{"_index":1873,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:19",{"_index":1843,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:35",{"_index":1838,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:52",{"_index":1863,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:59",{"_index":1851,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:66",{"_index":1848,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:73",{"_index":1868,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:83",{"_index":1871,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:95",{"_index":1852,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/input",{"_index":2042,"title":{},"body":{"components/InputDateTimeComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/input/input.component.ts",{"_index":1992,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/input/input.component.ts:18",{"_index":2011,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:23",{"_index":2004,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:28",{"_index":2010,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:33",{"_index":2009,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:38",{"_index":2006,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:40",{"_index":2012,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:42",{"_index":2003,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:48",{"_index":2014,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:52",{"_index":2013,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/main",{"_index":2291,"title":{},"body":{"components/MainViewComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/nav",{"_index":2378,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/option/option.component.ts",{"_index":2478,"title":{},"body":{"components/OptionComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/option/option.component.ts:10",{"_index":2486,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:11",{"_index":2485,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:13",{"_index":2487,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:15",{"_index":2489,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:17",{"_index":2483,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/select/select.component.ts",{"_index":2732,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/select/select.component.ts:12",{"_index":2747,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:13",{"_index":2743,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:14",{"_index":2744,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:15",{"_index":2739,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:16",{"_index":2749,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:18",{"_index":2748,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:20",{"_index":2751,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:24",{"_index":2741,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:41",{"_index":2740,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:49",{"_index":2742,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/sidebar",{"_index":2965,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/snackbar",{"_index":3037,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts",{"_index":2985,"title":{},"body":{"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:12",{"_index":3008,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:15",{"_index":3001,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:18",{"_index":3000,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:21",{"_index":2999,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:24",{"_index":2997,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:27",{"_index":3002,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:29",{"_index":3010,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:36",{"_index":2996,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:40",{"_index":3004,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:46",{"_index":3003,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:53",{"_index":3006,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.interface.ts",{"_index":3036,"title":{},"body":{"interfaces/SnackbarData.html":{},"coverage.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts",{"_index":3525,"title":{},"body":{"components/TextareaComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:13",{"_index":3531,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:18",{"_index":3536,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:23",{"_index":3533,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:28",{"_index":3532,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:30",{"_index":3535,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:32",{"_index":3530,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/upper",{"_index":3538,"title":{},"body":{"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["src/app/_main/decorators/debug.decorator.ts",{"_index":3782,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/page.decorator",{"_index":1212,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["src/app/_main/decorators/page.decorator.ts",{"_index":3785,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/service",{"_index":1534,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/service.decorator.ts",{"_index":3786,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts",{"_index":254,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:50",{"_index":269,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:58",{"_index":295,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:67",{"_index":278,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:73",{"_index":282,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:80",{"_index":289,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/directives/click",{"_index":1050,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{},"coverage.html":{}}}],["src/app/_main/directives/focus",{"_index":1632,"title":{},"body":{"directives/FocusInitialDirective.html":{},"coverage.html":{}}}],["src/app/_main/directives/let.directive.ts",{"_index":2118,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"coverage.html":{}}}],["src/app/_main/directives/let.directive.ts:11",{"_index":2128,"title":{},"body":{"directives/LetDirective.html":{}}}],["src/app/_main/directives/let.directive.ts:18",{"_index":2130,"title":{},"body":{"directives/LetDirective.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts",{"_index":1505,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:11",{"_index":1514,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:13",{"_index":1512,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:8",{"_index":1508,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interfaces/color.interface.ts",{"_index":4076,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/_main/interfaces/filters.interface.ts",{"_index":1576,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/_main/interfaces/filters.interface.ts:9",{"_index":1579,"title":{},"body":{"interfaces/FilterCheckbox.html":{}}}],["src/app/_main/interfaces/request",{"_index":2648,"title":{},"body":{"interfaces/RequestOptions.html":{},"coverage.html":{}}}],["src/app/_main/interfaces/validation",{"_index":3664,"title":{},"body":{"interfaces/ValidationError.html":{},"coverage.html":{}}}],["src/app/_main/operators/apply",{"_index":3791,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/operators/catch",{"_index":3793,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/pages/mock/mock.page.ts",{"_index":2358,"title":{},"body":{"components/MockPage.html":{},"coverage.html":{}}}],["src/app/_main/pages/mock/mock.page.ts:12",{"_index":2364,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pages/mock/mock.page.ts:14",{"_index":2363,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pages/mock/mock.page.ts:9",{"_index":2362,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pipes/validation",{"_index":3674,"title":{},"body":{"pipes/ValidationErrorPipe.html":{},"coverage.html":{}}}],["src/app/_main/services/api.service",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/WorkspaceService.html":{}}}],["src/app/_main/services/api.service.ts",{"_index":322,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/_main/services/api.service.ts:18",{"_index":333,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:30",{"_index":357,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:44",{"_index":349,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:54",{"_index":353,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:64",{"_index":338,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:74",{"_index":355,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:84",{"_index":351,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/dialog.service",{"_index":2568,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["src/app/_main/services/dialog.service.ts",{"_index":1285,"title":{},"body":{"injectables/DialogService.html":{},"coverage.html":{}}}],["src/app/_main/services/dialog.service.ts:101",{"_index":1310,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:18",{"_index":1321,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:19",{"_index":1320,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:21",{"_index":1323,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:23",{"_index":1297,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:36",{"_index":1312,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:55",{"_index":1304,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:66",{"_index":1299,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:72",{"_index":1318,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:87",{"_index":1306,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:91",{"_index":1308,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/router",{"_index":2684,"title":{},"body":{"injectables/RouterExtensionsService.html":{},"coverage.html":{}}}],["src/app/_main/services/snackbar.service.ts",{"_index":3052,"title":{},"body":{"injectables/SnackbarService.html":{},"coverage.html":{}}}],["src/app/_main/services/snackbar.service.ts:11",{"_index":3054,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:14",{"_index":3061,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:16",{"_index":3059,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:26",{"_index":3056,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:31",{"_index":3057,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/validators/email.validator.ts",{"_index":3798,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/validators/max",{"_index":3799,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/validators/password.validator.ts",{"_index":3801,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/validators/required.validator",{"_index":1173,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["src/app/_main/validators/required.validator.ts",{"_index":3802,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/validators/same",{"_index":3803,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.ts",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.routing.ts",{"_index":477,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/guard/logged",{"_index":2144,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"coverage.html":{}}}],["src/app/auth/interfaces/user.interface.ts",{"_index":2374,"title":{},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{}}}],["src/app/auth/pages/change",{"_index":894,"title":{},"body":{"components/ChangePasswordPage.html":{},"coverage.html":{}}}],["src/app/auth/pages/delete",{"_index":1269,"title":{},"body":{"components/DeleteAccountPage.html":{},"coverage.html":{}}}],["src/app/auth/pages/forgot",{"_index":1642,"title":{},"body":{"components/ForgotPasswordPage.html":{},"coverage.html":{}}}],["src/app/auth/pages/login/login.page.ts",{"_index":2151,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/auth/pages/login/login.page.ts:14",{"_index":2157,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:21",{"_index":2164,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:22",{"_index":2162,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:27",{"_index":2163,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:33",{"_index":2161,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:40",{"_index":2160,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:66",{"_index":2159,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/register/register.page.ts",{"_index":2604,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/auth/pages/register/register.page.ts:21",{"_index":2612,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:24",{"_index":2622,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:25",{"_index":2624,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:26",{"_index":2621,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:28",{"_index":2617,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:33",{"_index":2620,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:51",{"_index":2614,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:66",{"_index":2615,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:70",{"_index":2616,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:91",{"_index":2613,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/restore",{"_index":2675,"title":{},"body":{"components/RestoreAccountPage.html":{},"coverage.html":{}}}],["src/app/auth/services/auth.service.ts",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/services/auth.service.ts:12",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:30",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:42",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:47",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:51",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:55",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:59",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:63",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:67",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:9",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/user.service.ts",{"_index":3575,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/auth/services/user.service.ts:12",{"_index":3580,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/services/user.service.ts:16",{"_index":3578,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/services/user.service.ts:9",{"_index":3577,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/dashboard/classes/user.class.ts",{"_index":3593,"title":{},"body":{"classes/UserUtils.html":{},"coverage.html":{}}}],["src/app/dashboard/classes/user.class.ts:15",{"_index":3599,"title":{},"body":{"classes/UserUtils.html":{}}}],["src/app/dashboard/classes/user.class.ts:5",{"_index":3597,"title":{},"body":{"classes/UserUtils.html":{}}}],["src/app/dashboard/components/integration",{"_index":2084,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/components/member",{"_index":2299,"title":{},"body":{"components/MemberListComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/components/view",{"_index":3679,"title":{},"body":{"components/ViewOptionsComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.module.ts",{"_index":1222,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/dashboard/dashboard.routing.ts",{"_index":1249,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["src/app/dashboard/dialogs/add",{"_index":10,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"coverage.html":{}}}],["src/app/dashboard/interfaces/git",{"_index":1660,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"coverage.html":{}}}],["src/app/dashboard/interfaces/project",{"_index":2524,"title":{},"body":{"interfaces/ProjectMember.html":{},"coverage.html":{}}}],["src/app/dashboard/interfaces/project.interface",{"_index":2450,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["src/app/dashboard/interfaces/project.interface.ts",{"_index":2519,"title":{},"body":{"interfaces/Project.html":{},"coverage.html":{}}}],["src/app/dashboard/interfaces/workspace.interface",{"_index":2451,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["src/app/dashboard/interfaces/workspace.interface.ts",{"_index":3707,"title":{},"body":{"interfaces/Workspace.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/create",{"_index":1141,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/edit",{"_index":1357,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/github",{"_index":1815,"title":{},"body":{"components/GithubIntegrationPage.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/projects",{"_index":2554,"title":{},"body":{"components/ProjectsListPage.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/workspaces",{"_index":3739,"title":{},"body":{"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["src/app/dashboard/services/git",{"_index":1701,"title":{},"body":{"injectables/GitIntegrationService.html":{},"coverage.html":{}}}],["src/app/dashboard/services/member.service.ts",{"_index":2321,"title":{},"body":{"injectables/MemberService.html":{},"coverage.html":{}}}],["src/app/dashboard/services/member.service.ts:11",{"_index":2323,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:19",{"_index":2331,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:29",{"_index":2336,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:39",{"_index":2329,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:49",{"_index":2325,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:61",{"_index":2334,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/project.service",{"_index":2452,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["src/app/dashboard/services/project.service.ts",{"_index":2526,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/app/dashboard/services/project.service.ts:12",{"_index":2528,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:20",{"_index":2538,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:29",{"_index":2535,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:38",{"_index":2542,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:47",{"_index":2533,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:57",{"_index":2530,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:64",{"_index":2540,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/workspace.service",{"_index":2453,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["src/app/dashboard/services/workspace.service.ts",{"_index":3713,"title":{},"body":{"injectables/WorkspaceService.html":{},"coverage.html":{}}}],["src/app/dashboard/services/workspace.service.ts:14",{"_index":3716,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:27",{"_index":3722,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:36",{"_index":3720,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:45",{"_index":3725,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:53",{"_index":3723,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:62",{"_index":3718,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:74",{"_index":3728,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/emails/emails.module.ts",{"_index":1446,"title":{},"body":{"modules/EmailsModule.html":{}}}],["src/app/emails/emails.routing.ts",{"_index":1448,"title":{},"body":{"modules/EmailsRoutingModule.html":{}}}],["src/app/hello",{"_index":4120,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/app/landing",{"_index":2112,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/messages/messages.module.ts",{"_index":2354,"title":{},"body":{"modules/MessagesModule.html":{}}}],["src/app/messages/messages.routing.ts",{"_index":2356,"title":{},"body":{"modules/MessagesRoutingModule.html":{}}}],["src/app/settings/components/integration",{"_index":2068,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"coverage.html":{}}}],["src/app/settings/components/list",{"_index":2132,"title":{},"body":{"components/ListGroupComponent.html":{},"coverage.html":{}}}],["src/app/settings/interfaces/session.interface",{"_index":2784,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/interfaces/session.interface.ts",{"_index":3584,"title":{},"body":{"interfaces/UserSession.html":{},"coverage.html":{}}}],["src/app/settings/pages/settings",{"_index":1672,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"coverage.html":{}}}],["src/app/settings/pages/settings/settings.page",{"_index":2891,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/settings/pages/settings/settings.page.ts",{"_index":2901,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:10",{"_index":2912,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:11",{"_index":2911,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:12",{"_index":2910,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:13",{"_index":2908,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:17",{"_index":2909,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/services/sessions.service.ts",{"_index":2778,"title":{},"body":{"injectables/SessionsService.html":{},"coverage.html":{}}}],["src/app/settings/services/sessions.service.ts:12",{"_index":2782,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/services/sessions.service.ts:16",{"_index":2781,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/services/sessions.service.ts:9",{"_index":2779,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/settings.module.ts",{"_index":2889,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/settings/settings.routing.ts",{"_index":2918,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/tasks/components/board",{"_index":758,"title":{},"body":{"components/BoardTaskComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/input",{"_index":1900,"title":{},"body":{"components/InputAssigneeComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/status",{"_index":3090,"title":{},"body":{"components/StatusLabelComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/view",{"_index":3694,"title":{},"body":{"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts",{"_index":3183,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:105",{"_index":3204,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:111",{"_index":3202,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:136",{"_index":3199,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:142",{"_index":3197,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:150",{"_index":3198,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:169",{"_index":3196,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:38",{"_index":3218,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:40",{"_index":3222,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:41",{"_index":3217,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:42",{"_index":3220,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:44",{"_index":3215,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:45",{"_index":3223,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:46",{"_index":3213,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:47",{"_index":3212,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:48",{"_index":3214,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:50",{"_index":3211,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:52",{"_index":3210,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:73",{"_index":3195,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:76",{"_index":3205,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:84",{"_index":3200,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/enums/task",{"_index":3898,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/tasks/interfaces/schedule.interface.ts",{"_index":2983,"title":{},"body":{"interfaces/SinglePersonSchedule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/interfaces/status.interface.ts",{"_index":3068,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"coverage.html":{}}}],["src/app/tasks/interfaces/task.interface.ts",{"_index":3165,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"coverage.html":{}}}],["src/app/tasks/pages/board/board.page.ts",{"_index":525,"title":{},"body":{"components/BoardPage.html":{},"coverage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:148",{"_index":566,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:164",{"_index":562,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:168",{"_index":556,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:30",{"_index":572,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:31",{"_index":569,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:32",{"_index":570,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:33",{"_index":571,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:34",{"_index":568,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:36",{"_index":582,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:37",{"_index":575,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:39",{"_index":578,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:40",{"_index":567,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:41",{"_index":574,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:42",{"_index":573,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:43",{"_index":577,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:44",{"_index":549,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:66",{"_index":559,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:70",{"_index":565,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:76",{"_index":564,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:80",{"_index":552,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts",{"_index":2694,"title":{},"body":{"components/SchedulePage.html":{},"coverage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:16",{"_index":2709,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:17",{"_index":2708,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:19",{"_index":2704,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:20",{"_index":2706,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:21",{"_index":2707,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:23",{"_index":2711,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:37",{"_index":2701,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:50",{"_index":2702,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/task",{"_index":3266,"title":{},"body":{"components/TaskListPage.html":{},"coverage.html":{}}}],["src/app/tasks/pipes/status",{"_index":3082,"title":{},"body":{"pipes/StatusColorPipe.html":{},"coverage.html":{}}}],["src/app/tasks/pipes/task",{"_index":3342,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"coverage.html":{}}}],["src/app/tasks/services/status.service.ts",{"_index":3124,"title":{},"body":{"injectables/StatusService.html":{},"coverage.html":{}}}],["src/app/tasks/services/status.service.ts:11",{"_index":3126,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:19",{"_index":3135,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:29",{"_index":3134,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:39",{"_index":3130,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:49",{"_index":3139,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:59",{"_index":3133,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:63",{"_index":3137,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:74",{"_index":3128,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/task.service.ts",{"_index":3364,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/tasks/services/task.service.ts:119",{"_index":3381,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:129",{"_index":3383,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:155",{"_index":3391,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:181",{"_index":3386,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:204",{"_index":3389,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:231",{"_index":3393,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:269",{"_index":3374,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:282",{"_index":3379,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:33",{"_index":3371,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:53",{"_index":3385,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:74",{"_index":3380,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:98",{"_index":3396,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/tasks.module.ts",{"_index":3495,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/tasks/tasks.routing.ts",{"_index":3511,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/environments/environment",{"_index":366,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/environments/environment.prod.ts",{"_index":3842,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/locales",{"_index":4177,"title":{},"body":{"additional-documentation/localization.html":{}}}],["src/locales/messages.pl",{"_index":4175,"title":{},"body":{"additional-documentation/localization.html":{}}}],["src/mocks/_main.mocks.prod.ts",{"_index":3844,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mocks/_main.mocks.ts",{"_index":3846,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mocks/helpers/response.mock.helper.ts",{"_index":3847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/workspaces.mocks.ts",{"_index":3849,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tests/helpers/mat",{"_index":3852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tests/helpers/ng",{"_index":3514,"title":{},"body":{"classes/TestNgControl.html":{},"coverage.html":{}}}],["src/tests/helpers/validator",{"_index":3854,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tests/test.ts",{"_index":3858,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/typings/typings.ts",{"_index":1653,"title":{},"body":{"interfaces/FormGroup.html":{},"coverage.html":{}}}],["src/typings/typings.ts:5",{"_index":1654,"title":{},"body":{"interfaces/FormGroup.html":{}}}],["stage",{"_index":2609,"title":{},"body":{"components/RegisterPage.html":{},"additional-documentation/localization.html":{}}}],["start",{"_index":941,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/WorkspacesListPage.html":{}}}],["start:docsapi",{"_index":3979,"title":{},"body":{"index.html":{}}}],["start:test",{"_index":3974,"title":{},"body":{"index.html":{}}}],["started",{"_index":3073,"title":{"index.html":{},"license.html":{}},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"index.html":{}}}],["startgithubintegration",{"_index":1705,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["starting",{"_index":3646,"title":{},"body":{"classes/Utils.html":{}}}],["startnavigate",{"_index":3959,"title":{},"body":{"index.html":{}}}],["startpos",{"_index":3642,"title":{},"body":{"classes/Utils.html":{}}}],["state",{"_index":651,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["statement",{"_index":2647,"title":{},"body":{"components/RegisterPage.html":{}}}],["statements",{"_index":3756,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":4162,"title":{},"body":{"additional-documentation/localization.html":{}}}],["static",{"_index":1454,"title":{},"body":{"classes/Enum.html":{},"classes/Filters.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"components/TextareaComponent.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{}}}],["staticlabel",{"_index":2000,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["statistics",{"_index":2575,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["status",{"_index":81,"title":{"interfaces/Status.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["status.begin)?.id",{"_index":3247,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["status.id",{"_index":619,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{}}}],["status.name",{"_index":678,"title":{},"body":{"components/BoardPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{}}}],["status.tasks",{"_index":3162,"title":{},"body":{"injectables/StatusService.html":{}}}],["status.tasks.push(task",{"_index":3163,"title":{},"body":{"injectables/StatusService.html":{}}}],["status/column",{"_index":3069,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["status['name",{"_index":3088,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["statuscolor",{"_index":3084,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["statuscolorpipe",{"_index":3080,"title":{"pipes/StatusColorPipe.html":{}},"body":{"pipes/StatusColorPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["statuses",{"_index":3095,"title":{},"body":{"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{}}}],["statuses(statuses",{"_index":3116,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statuses.find((status",{"_index":3246,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["statuses.foreach((status",{"_index":3151,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.map((s",{"_index":3153,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.map((status",{"_index":3157,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.reduce((acc",{"_index":3119,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statuseswithsubtasks",{"_index":3156,"title":{},"body":{"injectables/StatusService.html":{}}}],["statusid",{"_index":560,"title":{},"body":{"components/BoardPage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["statusid)?.name",{"_index":3320,"title":{},"body":{"components/TaskListPage.html":{}}}],["statusid)?.tasks",{"_index":620,"title":{},"body":{"components/BoardPage.html":{}}}],["statuslabelcomponent",{"_index":226,"title":{"components/StatusLabelComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["statuslist",{"_index":30,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["statuslistsubscription",{"_index":534,"title":{},"body":{"components/BoardPage.html":{}}}],["statusmap",{"_index":3096,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statusmap.get(statusid)?.name",{"_index":3123,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statusservice",{"_index":545,"title":{"injectables/StatusService.html":{}},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"coverage.html":{}}}],["statuswithtasks",{"_index":576,"title":{"interfaces/StatusWithTasks.html":{}},"body":{"components/BoardPage.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"coverage.html":{}}}],["statuswithtasks).tasks",{"_index":3152,"title":{},"body":{"injectables/StatusService.html":{}}}],["step",{"_index":3951,"title":{},"body":{"index.html":{}}}],["stop",{"_index":244,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["store",{"_index":3935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stored",{"_index":3966,"title":{},"body":{"index.html":{}}}],["stores",{"_index":4095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["story",{"_index":3473,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["strict",{"_index":4053,"title":{},"body":{"license.html":{}}}],["string",{"_index":305,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskListPage.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{}}}],["string.substring(startpos).search(regex",{"_index":3656,"title":{},"body":{"classes/Utils.html":{}}}],["strings",{"_index":4184,"title":{},"body":{"additional-documentation/localization.html":{}}}],["structure",{"_index":4149,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["studio",{"_index":2473,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"additional-documentation/localization.html":{}}}],["style",{"_index":845,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{}}}],["style.animation",{"_index":2992,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["style.height",{"_index":1835,"title":{},"body":{"components/IconComponent.html":{}}}],["style.width",{"_index":1836,"title":{},"body":{"components/IconComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["styles/typography",{"_index":800,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["styling",{"_index":300,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"miscellaneous/enumerations.html":{}}}],["sub",{"_index":2477,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["subject",{"_index":1032,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"injectables/WorkspaceService.html":{}}}],["subject.next(tasks",{"_index":3409,"title":{},"body":{"injectables/TaskService.html":{}}}],["subject.pipe(applyfilters(filters",{"_index":3410,"title":{},"body":{"injectables/TaskService.html":{}}}],["submit",{"_index":841,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/FormGroup.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{}}}],["submitcreate",{"_index":1149,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["submitupdate",{"_index":1363,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["subscribe",{"_index":927,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/RegisterPage.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["subscribe((response",{"_index":2172,"title":{},"body":{"components/LoginPage.html":{}}}],["subscribe((result",{"_index":663,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/UpperNavigationComponent.html":{}}}],["subscribe((task",{"_index":789,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["subscriber.complete",{"_index":1574,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscriber.error(error",{"_index":1572,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscriber.next(value",{"_index":1569,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscription",{"_index":579,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["subscriptions",{"_index":1377,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["substitute",{"_index":4042,"title":{},"body":{"license.html":{}}}],["subtask",{"_index":786,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["subtask.id",{"_index":3332,"title":{},"body":{"components/TaskListPage.html":{}}}],["subtask.name",{"_index":3333,"title":{},"body":{"components/TaskListPage.html":{}}}],["subtask.statusid",{"_index":3159,"title":{},"body":{"injectables/StatusService.html":{}}}],["subtasks",{"_index":3168,"title":{},"body":{"interfaces/Task.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["subtasktype",{"_index":3229,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/enumerations.html":{}}}],["subtasktypes",{"_index":3189,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["success",{"_index":1554,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"components/GithubIntegrationPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["successful",{"_index":4100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successfully",{"_index":3421,"title":{},"body":{"injectables/TaskService.html":{}}}],["such",{"_index":4061,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":1116,"title":{},"body":{"components/ControlAccessor.html":{}}}],["sum",{"_index":3616,"title":{},"body":{"classes/UserUtils.html":{}}}],["super",{"_index":2513,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["super(ngcontrol",{"_index":1618,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["super.clear",{"_index":2506,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["super.delete(key",{"_index":2508,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["super.set(key",{"_index":2510,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["support",{"_index":1783,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules.html":{}}}],["supports",{"_index":1829,"title":{},"body":{"components/IconComponent.html":{}}}],["sure",{"_index":656,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["surname",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["suspended",{"_index":1663,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IntegrationEntryComponent.html":{}}}],["svg",{"_index":594,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{},"modules.html":{}}}],["swagger",{"_index":3982,"title":{},"body":{"index.html":{}}}],["switch",{"_index":2175,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["switchmap",{"_index":3402,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((confirmed",{"_index":3424,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((newtask",{"_index":3412,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((task",{"_index":3435,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((updatedtask",{"_index":3432,"title":{},"body":{"injectables/TaskService.html":{}}}],["system",{"_index":2184,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsSessionsPage.html":{}}}],["t",{"_index":339,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["table",{"_index":3335,"title":{},"body":{"components/TaskListPage.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3860,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":3693,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["tabuckner/material",{"_index":3874,"title":{},"body":{"dependencies.html":{}}}],["tak",{"_index":2810,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["take",{"_index":1679,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/StatusLabelComponent.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["take(1",{"_index":1788,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["taken",{"_index":2640,"title":{},"body":{"components/RegisterPage.html":{}}}],["tap",{"_index":3403,"title":{},"body":{"injectables/TaskService.html":{}}}],["tap((data",{"_index":3430,"title":{},"body":{"injectables/TaskService.html":{}}}],["target",{"_index":1539,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["task",{"_index":229,"title":{"interfaces/Task.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["task'},{'name",{"_index":130,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["task).subscribe",{"_index":790,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["task.assigneeid",{"_index":1593,"title":{},"body":{"classes/Filters.html":{},"injectables/TaskService.html":{}}}],["task.component",{"_index":3497,"title":{},"body":{"modules/TasksModule.html":{}}}],["task.component.html",{"_index":762,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.scss",{"_index":761,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts",{"_index":760,"title":{},"body":{"components/BoardTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:17",{"_index":771,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:20",{"_index":770,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:23",{"_index":769,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:25",{"_index":777,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:26",{"_index":778,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:27",{"_index":767,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:31",{"_index":775,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:37",{"_index":776,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:43",{"_index":774,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:63",{"_index":773,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.connectwithissueongithub",{"_index":3417,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.connectwithpullrequestongithub",{"_index":3413,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.dialog.html",{"_index":3185,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["task.dialog.scss",{"_index":3184,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["task.estimateddate",{"_index":3448,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.id",{"_index":679,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["task.id).pipe(switchmap",{"_index":3427,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.interface",{"_index":3079,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["task.issue",{"_index":3418,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.mergedpulllist",{"_index":665,"title":{},"body":{"components/BoardPage.html":{}}}],["task.name",{"_index":680,"title":{},"body":{"components/BoardPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["task.parenttaskid",{"_index":3323,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.pull",{"_index":652,"title":{},"body":{"components/BoardPage.html":{},"injectables/TaskService.html":{}}}],["task.service",{"_index":3142,"title":{},"body":{"injectables/StatusService.html":{}}}],["task.statusid",{"_index":638,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{}}}],["task.subtasks",{"_index":3325,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.subtasks.length",{"_index":3326,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.subtasks?.filter((subtask",{"_index":3158,"title":{},"body":{"injectables/StatusService.html":{}}}],["task.subtasks?.length",{"_index":3155,"title":{},"body":{"injectables/StatusService.html":{}}}],["task/board",{"_index":759,"title":{},"body":{"components/BoardTaskComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["task:last",{"_index":729,"title":{},"body":{"components/BoardPage.html":{}}}],["task:not(.cdk",{"_index":742,"title":{},"body":{"components/BoardPage.html":{}}}],["task?.name",{"_index":799,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["taskcreate",{"_index":3265,"title":{},"body":{"components/TaskDialog.html":{}}}],["taskdialog",{"_index":228,"title":{"components/TaskDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["taskdialogdata",{"_index":599,"title":{"interfaces/TaskDialogData.html":{}},"body":{"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["taskdialogvariant",{"_index":600,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["taskdialogvariant.create",{"_index":669,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["taskdialogvariant.edit",{"_index":3429,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskid",{"_index":1728,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["tasklist",{"_index":3272,"title":{},"body":{"components/TaskListPage.html":{}}}],["tasklist.filter((task",{"_index":3322,"title":{},"body":{"components/TaskListPage.html":{}}}],["tasklistpage",{"_index":230,"title":{"components/TaskListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["taskmap",{"_index":535,"title":{},"body":{"components/BoardPage.html":{}}}],["taskpriorities",{"_index":3190,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["taskpriority",{"_index":3226,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["taskpriorityicon",{"_index":3344,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["taskpriorityiconpipe",{"_index":3341,"title":{"pipes/TaskPriorityIconPipe.html":{}},"body":{"pipes/TaskPriorityIconPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["taskprioritypipe",{"_index":3356,"title":{"pipes/TaskPriorityPipe.html":{}},"body":{"pipes/TaskPriorityPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasks",{"_index":681,"title":{},"body":{"components/BoardPage.html":{},"classes/Filters.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"index.html":{}}}],["tasks.filter((task",{"_index":1592,"title":{},"body":{"classes/Filters.html":{},"injectables/StatusService.html":{}}}],["tasks.routing",{"_index":3510,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks/dialogs/task/task.dialog",{"_index":780,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["tasks/enums/task",{"_index":3227,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{}}}],["tasks/interfaces/schedule.interface",{"_index":2712,"title":{},"body":{"components/SchedulePage.html":{},"injectables/TaskService.html":{}}}],["tasks/interfaces/status.interface",{"_index":82,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["tasks/interfaces/task.interface",{"_index":1588,"title":{},"body":{"classes/Filters.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{}}}],["tasks/services/status.service",{"_index":3232,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["tasks/services/task.service",{"_index":781,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["taskservice",{"_index":544,"title":{"injectables/TaskService.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":3490,"title":{"modules/TasksModule.html":{}},"body":{"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksroutingmodule",{"_index":3494,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tasktype",{"_index":3230,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["tasktype[value",{"_index":3468,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["tasktypeicon",{"_index":3455,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["tasktypeiconpipe",{"_index":3454,"title":{"pipes/TaskTypeIconPipe.html":{}},"body":{"pipes/TaskTypeIconPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasktypepipe",{"_index":3463,"title":{"pipes/TaskTypePipe.html":{}},"body":{"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasktypes",{"_index":3191,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["taskwithadditionaldata",{"_index":3175,"title":{"interfaces/TaskWithAdditionalData.html":{}},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"coverage.html":{}}}],["temp",{"_index":2507,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["templateref",{"_index":2119,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["test",{"_index":1476,"title":{},"body":{"classes/Enum.html":{},"injectables/GitIntegrationService.html":{}}}],["testenum",{"_index":1460,"title":{},"body":{"classes/Enum.html":{}}}],["testing",{"_index":1108,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["testing.helper.ts",{"_index":3855,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["testngcontrol",{"_index":1075,"title":{"classes/TestNgControl.html":{}},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{},"coverage.html":{}}}],["tests",{"_index":1473,"title":{},"body":{"classes/Enum.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/continuos-integration.html":{}}}],["tests/helpers/ng",{"_index":1107,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["text",{"_index":308,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/localization.html":{}}}],["textarea",{"_index":3526,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea'},{'name",{"_index":232,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["textarea.component.html",{"_index":3528,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea.component.scss",{"_index":3527,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textareacomponent",{"_index":231,"title":{"components/TextareaComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["theirs",{"_index":3936,"title":{},"body":{"miscellaneous/functions.html":{}}}],["theory",{"_index":4050,"title":{},"body":{"license.html":{}}}],["this._assignee",{"_index":1942,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this._context",{"_index":2125,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["this._context.nglet",{"_index":2127,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["this._control",{"_index":3524,"title":{},"body":{"classes/TestNgControl.html":{}}}],["this._filters",{"_index":1615,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this._icon",{"_index":1884,"title":{},"body":{"components/IconComponent.html":{}}}],["this._isbuttondisabled",{"_index":3566,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this._persistentkey",{"_index":2518,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["this._required",{"_index":1117,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.activatedroute.data.subscribe",{"_index":2365,"title":{},"body":{"components/MockPage.html":{}}}],["this.activatedroute.snapshot.params",{"_index":606,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/MemberListComponent.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.activatedroute.snapshot.queryparams",{"_index":919,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/GithubIntegrationPage.html":{}}}],["this.active",{"_index":2400,"title":{},"body":{"components/NavElementComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["this.activeworkspace",{"_index":2454,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.add(key",{"_index":1356,"title":{},"body":{"classes/ESet.html":{}}}],["this.alert(data",{"_index":1342,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.animationname",{"_index":3024,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.apiservice",{"_index":1793,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/auth/delete",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.delete(`/auth/delete/confirm",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.delete(`/project/${projectid",{"_index":2545,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/integration/github",{"_index":1797,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/member",{"_index":2341,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/status/${status.id",{"_index":3147,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid",{"_index":3423,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid}/integration/git/issue",{"_index":1802,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid}/integration/git/pull",{"_index":1805,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/session/${id",{"_index":2786,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.apiservice.delete(`/user/integration/github/${githubaccountid",{"_index":1796,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/workspace/${id}`).pipe(this.validate('delete",{"_index":3733,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.get('/user/integration/github/repository",{"_index":1791,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get('/user/integration/github/repository').pipe",{"_index":1775,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get('/workspace').pipe",{"_index":2549,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.get(`/auth/me",{"_index":3583,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.get(`/project/${projectid",{"_index":2544,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.get(`/project/${projectid}/integration/git/issue",{"_index":1800,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get(`/project/${projectid}/integration/git/pull",{"_index":1803,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get(`/project/${projectid}/member",{"_index":2339,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.get(`/project/${projectid}/status",{"_index":3143,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.get(`/project/${projectid}/status/${statusid",{"_index":3144,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.get(`/project/${projectid}/task`).subscribe((tasks",{"_index":3408,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.get(`/session",{"_index":2785,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.apiservice.get(`/workspace",{"_index":3735,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.get(`/workspace/${id",{"_index":3732,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.post('/project",{"_index":2547,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.post(`/auth/delete/recover",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/login",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/logout",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/password/recover",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/password/reset",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/register",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/project/${projectid}/integration/github",{"_index":1792,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/${projectid}/status",{"_index":3145,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task",{"_index":3411,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task/${taskid}/integration/git/issue",{"_index":1801,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task/${taskid}/integration/git/pull",{"_index":1804,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/member",{"_index":2344,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.post(`/user/integration/github",{"_index":1789,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/workspace",{"_index":3736,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.put(`/auth/edit",{"_index":3582,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.put(`/project/${project.id",{"_index":2546,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.put(`/project/${projectid}/member",{"_index":2340,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.put(`/project/${projectid}/status/${status.id",{"_index":3146,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.put(`/project/${projectid}/task/${task.id",{"_index":3422,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.put(`/project/${projectid}/task/${taskid",{"_index":3453,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.put(`/project/${projectid}/workspace/${newworkspaceid",{"_index":2548,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.put(`/workspace/${workspace.id",{"_index":3734,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiurl",{"_index":374,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.assigneecolor",{"_index":1943,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.assigneecontrol.valuechanges.subscribe((assignee",{"_index":3329,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.authservice",{"_index":924,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.authservice.deleteaccount().subscribe",{"_index":2799,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.authservice.deleteaccountconfirmation(token).subscribe",{"_index":1278,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["this.authservice.isloggedin",{"_index":2150,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["this.authservice.logout().subscribe",{"_index":2677,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["this.authservice.recoveraccount().subscribe",{"_index":2678,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["this.authservice.resetpassword(this.form.value).subscribe",{"_index":1648,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["this.authservice.resetpassword(this.form.value.email).subscribe",{"_index":2798,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.board",{"_index":610,"title":{},"body":{"components/BoardPage.html":{}}}],["this.button.nativeelement.focus",{"_index":854,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.changeddate.setvalue(this.changedate(value",{"_index":2061,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.changeddate.valuechanges.subscribe((date",{"_index":2058,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.changelanguage",{"_index":2881,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["this.checkifisrequired",{"_index":1125,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.cleargithubintegrationfields",{"_index":3244,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.close",{"_index":1960,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.closenavelement",{"_index":2402,"title":{},"body":{"components/NavElementComponent.html":{}}}],["this.closeprofile",{"_index":3571,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.closeworkspace",{"_index":2456,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.color",{"_index":3017,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.confirm",{"_index":1343,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.control",{"_index":1126,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.disable",{"_index":1136,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.enable",{"_index":1137,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.errors",{"_index":1121,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.markastouched",{"_index":1134,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.setvalue(formvalue",{"_index":1626,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.control.setvalue(this.changedate(date",{"_index":2059,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.control.value",{"_index":1120,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.valuechanges.subscribe((value",{"_index":2755,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.create(projectid",{"_index":3439,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.create(task.projectid",{"_index":3436,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.createsubscription",{"_index":1184,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["this.createsubscription?.closed",{"_index":1183,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["this.data",{"_index":94,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.data.projectid",{"_index":99,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.data.variant",{"_index":276,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["this.data.workspaceid",{"_index":97,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.delete(key",{"_index":1355,"title":{},"body":{"classes/ESet.html":{}}}],["this.delete(projectid",{"_index":3426,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.deleteaccount(token",{"_index":1277,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["this.destroy$.complete",{"_index":1139,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.destroy$.next(null",{"_index":1138,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.dialogref.close([formvalues.email",{"_index":107,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["this.dialogref.close(false",{"_index":108,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.dialogref.close(formvalues",{"_index":3259,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.dialogref.close(true",{"_index":314,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["this.dialogs$.getvalue().size",{"_index":1329,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogs$.next(this.dialogsmap",{"_index":1336,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogservice",{"_index":654,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["this.dialogservice.closeall",{"_index":1526,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.dialogservice.confirmprojectdelete(project).subscribe",{"_index":2462,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["this.dialogservice.confirmworkspacedelete(this.workspace).subscribe",{"_index":2464,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.dialogservice.confirmworkspacedelete(workspace).subscribe",{"_index":3752,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.dialogservice.openerrordialog($localize`your",{"_index":1529,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.dialogsmap.delete(uid",{"_index":1335,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogsmap.foreach((dialog",{"_index":1337,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogsmap.set(uid",{"_index":1333,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.duration",{"_index":3020,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.editproject",{"_index":1404,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.editprojectwithworkspace(newworkspaceid",{"_index":1403,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.el.nativeelement.__ngcontext__[33].focus",{"_index":1641,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["this.error",{"_index":2178,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.filters.entries",{"_index":1621,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filters.push(filters.only_my_tasks(user.id",{"_index":3318,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.filterscontrol.valuechanges.subscribe((filters",{"_index":3319,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.focused",{"_index":2020,"title":{},"body":{"components/InputComponent.html":{}}}],["this.form",{"_index":1612,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.form.addcontrol('id",{"_index":1393,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.form.addcontrol('workspaceid",{"_index":1179,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.form.get('newworkspaceid')?.value",{"_index":1402,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.form.get('projectid')?.valuechanges.subscribe(this.onprojectidchange.bind(this",{"_index":3236,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.get('workspaceid')?.valuechanges.subscribe(this.onworkspaceidchange.bind(this",{"_index":3235,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.get(field)?.invalid",{"_index":2632,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.get(field)?.markastouched",{"_index":2630,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.get(field)?.updatevalueandvalidity",{"_index":2631,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.invalid",{"_index":105,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.markallastouched",{"_index":103,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue",{"_index":95,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue(project",{"_index":1426,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.form.patchvalue(response",{"_index":2796,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.form.patchvalue(task",{"_index":3234,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue(workspace",{"_index":1399,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.form.updatevalueandvalidity",{"_index":104,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.valid",{"_index":923,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.form.value",{"_index":102,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.value.password",{"_index":926,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["this.form.value.repository",{"_index":2109,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.form?.controls[index",{"_index":1619,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.getconnectedprojects(account).pipe(take(1",{"_index":1690,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.getsubscription",{"_index":1397,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.getsubscription.unsubscribe",{"_index":1411,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.githubaccounts",{"_index":1686,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.githubintegrationservice.isownerofrepository(&#39;@czemar/cli&#39",{"_index":1760,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.githubintegrationservice.isownerofrepository('@czemar/cli",{"_index":1807,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.githubintegrationservice.startgithubintegration",{"_index":1770,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.gitintegrationservice",{"_index":1696,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.connectgithubissue(projectid",{"_index":3419,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.gitintegrationservice.connectgithubpull(projectid",{"_index":3414,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.gitintegrationservice.deleteconnectedgithubaccount(account.id).subscribe",{"_index":1692,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.getconnectedgithubaccounts().pipe",{"_index":1687,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.getgithubintegration().subscribe((integration",{"_index":2105,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.gitintegrationservice.githubissuelist(projectid",{"_index":3251,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.githubpulllist(projectid",{"_index":3253,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.hasgithubintegration(projectid!).subscribe((value",{"_index":3248,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.postgithubintegration(installation_id).subscribe",{"_index":1824,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["this.gitintegrationservice.startgithubintegration().subscribe",{"_index":2102,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.handleerror(e",{"_index":2171,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.has(key",{"_index":1354,"title":{},"body":{"classes/ESet.html":{}}}],["this.httpclient.request(method",{"_index":373,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.image",{"_index":2366,"title":{},"body":{"components/MockPage.html":{}}}],["this.initcheckfortouch",{"_index":1124,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.isgithubintegrationavailable",{"_index":3249,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.isopen",{"_index":1963,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(false",{"_index":1962,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(true",{"_index":1961,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(val",{"_index":1955,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.value",{"_index":1956,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isownerofrepository(project.githubintegration",{"_index":1814,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.issuelist",{"_index":3250,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.list(projectid).pipe",{"_index":2345,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.list(projectid).pipe(take(1",{"_index":3440,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.get(projectid",{"_index":3406,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.has(projectid",{"_index":3405,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.set(projectid",{"_index":3407,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.loadgithubintegration",{"_index":1684,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.loadparamsfromurl",{"_index":92,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.loadproject(projectid",{"_index":1395,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.loadrepositories",{"_index":2103,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.loadworkspace(workspaceid",{"_index":1439,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.loadworkspaces",{"_index":3750,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.loginsubscription",{"_index":2168,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginsubscription.closed",{"_index":2169,"title":{},"body":{"components/LoginPage.html":{}}}],["this.m_w",{"_index":2592,"title":{},"body":{"classes/Random.html":{}}}],["this.m_z",{"_index":2594,"title":{},"body":{"classes/Random.html":{}}}],["this.mask",{"_index":2593,"title":{},"body":{"classes/Random.html":{}}}],["this.matdialog.open(component",{"_index":1330,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.memberlist",{"_index":1182,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/MemberListComponent.html":{}}}],["this.members",{"_index":616,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.members$.next(members",{"_index":1950,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.members$.next(membersarray",{"_index":1953,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.memberservice.add(result",{"_index":1409,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.memberservice.add(this.memberlist",{"_index":1186,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.memberservice.list(projectid",{"_index":2314,"title":{},"body":{"components/MemberListComponent.html":{}}}],["this.memberservice.list(projectid).pipe",{"_index":3313,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.memberservice.list(projectid).pipe(take(1",{"_index":3441,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.memberservice.map(projectid",{"_index":617,"title":{},"body":{"components/BoardPage.html":{}}}],["this.memberservice.remove(this.projectid",{"_index":2315,"title":{},"body":{"components/MemberListComponent.html":{}}}],["this.name",{"_index":1891,"title":{},"body":{"components/IconComponent.html":{}}}],["this.ngcontrol",{"_index":1129,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol.control",{"_index":1119,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol.name?.tostring",{"_index":1118,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":1123,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.onprojectidchange(projectid",{"_index":3238,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.onworkspaceidchange(workspaceid",{"_index":3237,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.open",{"_index":1964,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.open(alertdialog",{"_index":1339,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.opennavelement",{"_index":2401,"title":{},"body":{"components/NavElementComponent.html":{}}}],["this.openprofile",{"_index":3572,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.openworkspace",{"_index":2455,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.options",{"_index":2768,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.optionsmap!.set(x.value",{"_index":2773,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.optionsmap?.foreach((option",{"_index":2758,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.optionsmap?.get(this.control.value",{"_index":2754,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.overlay?.nativeelement.contains(e.target",{"_index":1958,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.prefix",{"_index":1889,"title":{},"body":{"components/IconComponent.html":{}}}],["this.project",{"_index":608,"title":{},"body":{"components/BoardPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/TaskListPage.html":{}}}],["this.project$.subscribe((project",{"_index":1425,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.project$.subscribe((workspace",{"_index":1398,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.projectid",{"_index":607,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.projectid).subscribe",{"_index":3122,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.projectid]).subscribe",{"_index":1410,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.projectlist",{"_index":3239,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.projects",{"_index":2569,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["this.projectservice",{"_index":1405,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{}}}],["this.projectservice.create(this.form.value).subscribe((response",{"_index":1185,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.projectservice.delete(project.id).subscribe",{"_index":2463,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["this.projectservice.get(id",{"_index":1396,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.projectservice.get(projectid",{"_index":609,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.projectservice.get(projectid).pipe(map((project",{"_index":1798,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.projectservice.update(this.form.value).subscribe",{"_index":1407,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.pulllist",{"_index":3252,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.queryoptions?.changes.subscribe((options",{"_index":2763,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.queryoptions?.map((x",{"_index":2769,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.ref.nativeelement.innertext",{"_index":2490,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.registersubscription",{"_index":2635,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registersubscription.closed",{"_index":2636,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.repositorylist",{"_index":2106,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.repositorylistloaded",{"_index":2104,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.request('delete",{"_index":380,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('get",{"_index":378,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('patch",{"_index":382,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('post",{"_index":379,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('put",{"_index":381,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.resetsubscription",{"_index":921,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["this.resetsubscription.closed",{"_index":922,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["this.router",{"_index":2457,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.router.navigate",{"_index":1408,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/LoginPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["this.router.navigate(['/']).then",{"_index":1214,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["this.router.navigate(['/auth/delete",{"_index":1528,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigate(['/auth/login",{"_index":928,"title":{},"body":{"components/ChangePasswordPage.html":{},"interceptors/ErrorInterceptor.html":{},"guards/LoggedInUsersGuard.html":{}}}],["this.router.navigate(['/auth/restore",{"_index":2174,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigate([this.workspaceid]).then",{"_index":1188,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.router.routerstate.snapshot",{"_index":2690,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["this.routerextensions.snapshot.params",{"_index":96,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.savestate",{"_index":2509,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["this.selected$.next(option",{"_index":2760,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selected$.next(this.optionsmap?.get(this.control.value",{"_index":2774,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selected$.subscribe((val",{"_index":2761,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.sessionservice.delete(id).subscribe",{"_index":2957,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.sessionservice.list",{"_index":2941,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.sessionslist",{"_index":2940,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.setanimationname('close",{"_index":3021,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.showarrow$.next(boolean(this.listelement?.nativeelement.children.length",{"_index":2403,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["this.size",{"_index":1896,"title":{},"body":{"components/IconComponent.html":{}}}],["this.snackbars$.next(map",{"_index":3065,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbars$.next(new",{"_index":3067,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbars$.value",{"_index":3063,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbarservice.close(this.uid",{"_index":3022,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.snackbarservice.show($localize`task",{"_index":3420,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.snackbarservice.snackbars",{"_index":3047,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["this.stage",{"_index":2633,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.statuses$.next(statuses",{"_index":3117,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.statuslist",{"_index":612,"title":{},"body":{"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["this.statuslist$.subscribe((list",{"_index":3316,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.statuslist$.subscribe((statuses",{"_index":3245,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.statuslist$.subscribe((statuslist",{"_index":615,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslist.find((status",{"_index":618,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.statuslist[newstatusindex",{"_index":629,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslist[previousstatusindex",{"_index":627,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslistsubscription",{"_index":614,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslistsubscription?.unsubscribe",{"_index":621,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statusmap",{"_index":3118,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.statusservice.board(projectid",{"_index":611,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statusservice.list(projectid",{"_index":3243,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["this.statusservice.listwithtasks(projectid",{"_index":613,"title":{},"body":{"components/BoardPage.html":{}}}],["this.task).subscribe",{"_index":784,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["this.task.id",{"_index":788,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["this.taskid",{"_index":1965,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.tasklist",{"_index":3314,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.taskservice",{"_index":1966,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.taskservice.changestatus(status.id",{"_index":3121,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.taskservice.create(result.projectid",{"_index":3569,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.taskservice.create(this.projectid",{"_index":671,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.deletewithconfirmation(this.projectid",{"_index":783,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.list(projectid",{"_index":3315,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.taskservice.list(projectid)]).pipe",{"_index":3149,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.taskservice.openedittaskdialog(this.projectid",{"_index":785,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.update(this.projectid",{"_index":640,"title":{},"body":{"components/BoardPage.html":{}}}],["this.token",{"_index":920,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["this.touched$.complete",{"_index":1140,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.touched$.next(true",{"_index":1135,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.unauthorizedinarow",{"_index":1525,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.update(projectid",{"_index":3434,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.updateoptions",{"_index":2765,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.updatesubscription",{"_index":1401,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.updatesubscription.unsubscribe",{"_index":1412,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.updatesubscription?.closed",{"_index":1400,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.userservice.getmyself().subscribe",{"_index":2166,"title":{},"body":{"components/LoginPage.html":{}}}],["this.userservice.getmyself().subscribe((response",{"_index":2795,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.userservice.getmyself().subscribe((user",{"_index":3317,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.userservice.update(this.form.value).subscribe",{"_index":2797,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.workspace",{"_index":1177,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{}}}],["this.workspace$.pipe",{"_index":2570,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["this.workspace$.subscribe((workspace",{"_index":1440,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.workspace.id",{"_index":2460,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.workspaceid",{"_index":1176,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ProjectsListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.workspacelist",{"_index":2976,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.workspacelist$.subscribe((workspaces",{"_index":1427,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.workspaces",{"_index":3751,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.workspaceservice",{"_index":3240,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.workspaceservice.create(this.form.value).subscribe",{"_index":1213,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["this.workspaceservice.delete(this.workspace.id).subscribe",{"_index":2465,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.workspaceservice.delete(workspace.id).subscribe",{"_index":3753,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.workspaceservice.get(id",{"_index":1392,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.workspaceservice.get(workspaceid",{"_index":1178,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/ProjectsListPage.html":{}}}],["this.workspaceservice.list",{"_index":1390,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/WorkspacesListPage.html":{}}}],["this.workspaceservice.list().pipe",{"_index":3564,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.workspaceservice.update(this.form.value).subscribe",{"_index":1441,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.yet",{"_index":2767,"title":{},"body":{"components/SelectComponent.html":{}}}],["three",{"_index":1463,"title":{},"body":{"classes/Enum.html":{}}}],["through",{"_index":2672,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["throw",{"_index":1781,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["throwerror",{"_index":1519,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["time",{"_index":2045,"title":{},"body":{"components/InputDateTimeComponent.html":{},"components/SettingsAccountPage.html":{}}}],["time'},{'name",{"_index":172,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["time.component",{"_index":2243,"title":{},"body":{"modules/MainModule.html":{}}}],["time.component.html",{"_index":2047,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.scss",{"_index":2046,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts",{"_index":2044,"title":{},"body":{"components/InputDateTimeComponent.html":{},"coverage.html":{}}}],["time.component.ts:13",{"_index":2052,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:16",{"_index":2051,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:18",{"_index":2056,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:20",{"_index":2050,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:26",{"_index":2054,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:36",{"_index":2053,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time/input",{"_index":2043,"title":{},"body":{"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"coverage.html":{}}}],["timeline",{"_index":2719,"title":{},"body":{"components/SchedulePage.html":{}}}],["title",{"_index":257,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"injectables/DialogService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{}}}],["title>app",{"_index":697,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["todo",{"_index":3283,"title":{},"body":{"components/TaskListPage.html":{}}}],["toggle",{"_index":1350,"title":{},"body":{"classes/ESet.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["toggle(key",{"_index":1351,"title":{},"body":{"classes/ESet.html":{}}}],["togglenavelement",{"_index":2386,"title":{},"body":{"components/NavElementComponent.html":{}}}],["toggleprofile",{"_index":3547,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["toggleworkspace",{"_index":2423,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["token",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/RequestOptions.html":{}}}],["tool",{"_index":4199,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["tools",{"_index":4191,"title":{},"body":{"additional-documentation/localization.html":{}}}],["top",{"_index":111,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["tort",{"_index":4054,"title":{},"body":{"license.html":{}}}],["touched",{"_index":967,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["touched.ng",{"_index":2038,"title":{},"body":{"components/InputComponent.html":{}}}],["tracksnackbartuple",{"_index":3042,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["tracksnackbartuple(_index",{"_index":3044,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["transferarrayitem",{"_index":584,"title":{},"body":{"components/BoardPage.html":{}}}],["transform",{"_index":699,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["transform(value",{"_index":3085,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}}}],["transformed",{"_index":3677,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["transition",{"_index":703,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["translatable",{"_index":4186,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translate",{"_index":2372,"title":{},"body":{"components/MockPage.html":{}}}],["translated",{"_index":4157,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translatex(0",{"_index":3035,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["translatex(100",{"_index":3034,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["translatey(100",{"_index":3706,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["translatey(calc($height",{"_index":2034,"title":{},"body":{"components/InputComponent.html":{}}}],["translating",{"_index":4183,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translation",{"_index":4174,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translations",{"_index":4182,"title":{},"body":{"additional-documentation/localization.html":{}}}],["transparent",{"_index":2031,"title":{},"body":{"components/InputComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["true",{"_index":290,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"modules/DashboardRoutingModule.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":648,"title":{},"body":{"components/BoardPage.html":{}}}],["ts",{"_index":4117,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["tslib",{"_index":3884,"title":{},"body":{"dependencies.html":{}}}],["tweaks",{"_index":3619,"title":{},"body":{"classes/UserUtils.html":{}}}],["two",{"_index":1462,"title":{},"body":{"classes/Enum.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["type.enum",{"_index":3231,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{}}}],["type.enum.ts",{"_index":3895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.pipe",{"_index":3509,"title":{},"body":{"modules/TasksModule.html":{}}}],["type.pipe.ts",{"_index":3464,"title":{},"body":{"pipes/TaskTypePipe.html":{},"coverage.html":{}}}],["type.pipe.ts:10",{"_index":3466,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type.pipe.ts:12",{"_index":3467,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type.pipe.ts:9",{"_index":3465,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type[0",{"_index":3261,"title":{},"body":{"components/TaskDialog.html":{}}}],["typealiases",{"_index":4071,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1885,"title":{},"body":{"components/IconComponent.html":{},"pipes/TaskTypePipe.html":{}}}],["typescript",{"_index":1453,"title":{},"body":{"classes/Enum.html":{}}}],["typo",{"_index":815,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["ua",{"_index":2877,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{},"additional-documentation/localization.html":{}}}],["uaparser",{"_index":2936,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser(agent",{"_index":2952,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser.getbrowser().name",{"_index":2955,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser.getos().name",{"_index":2954,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["ui",{"_index":1009,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"additional-documentation/localization.html":{}}}],["uid",{"_index":1332,"title":{},"body":{"injectables/DialogService.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["uk",{"_index":2876,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["ukraine)configuration",{"_index":4170,"title":{},"body":{"additional-documentation/localization.html":{}}}],["ukrainian",{"_index":4169,"title":{},"body":{"additional-documentation/localization.html":{}}}],["unassigned",{"_index":3377,"title":{},"body":{"injectables/TaskService.html":{}}}],["unauthorized",{"_index":4147,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["unauthorizedinarow",{"_index":1506,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["undefined",{"_index":1945,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"injectables/WorkspaceService.html":{}}}],["underline",{"_index":2064,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["unique",{"_index":3075,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["unit",{"_index":3970,"title":{},"body":{"index.html":{}}}],["united",{"_index":4160,"title":{},"body":{"additional-documentation/localization.html":{}}}],["units",{"_index":1847,"title":{},"body":{"components/IconComponent.html":{}}}],["universal",{"_index":2189,"title":{},"body":{"modules/MainModule.html":{}}}],["unknown",{"_index":1628,"title":{},"body":{"components/FiltersComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsSessionsPage.html":{},"pipes/TaskTypePipe.html":{}}}],["unsubscribe",{"_index":1376,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["unsupported",{"_index":3609,"title":{},"body":{"classes/UserUtils.html":{}}}],["up",{"_index":997,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["update",{"_index":1012,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["update(moduser",{"_index":3579,"title":{},"body":{"injectables/UserService.html":{}}}],["update(project",{"_index":2541,"title":{},"body":{"injectables/ProjectService.html":{}}}],["update(projectid",{"_index":3138,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["update(workspace",{"_index":3724,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["updated",{"_index":3140,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["updatedtask",{"_index":3433,"title":{},"body":{"injectables/TaskService.html":{}}}],["updateoptions",{"_index":2738,"title":{},"body":{"components/SelectComponent.html":{}}}],["updates",{"_index":1380,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["updatesubscription",{"_index":1359,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["updating",{"_index":1388,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["upload",{"_index":2663,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["upper",{"_index":234,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["uppercase",{"_index":2728,"title":{},"body":{"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{}}}],["uppernavigationcomponent",{"_index":233,"title":{"components/UpperNavigationComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":341,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"miscellaneous/variables.html":{}}}],["url('../../../../assets/metadata/logo_with_name.svg",{"_index":2978,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["url('/assets/metadata/logo_with_name.svg",{"_index":935,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["usage",{"_index":1675,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["use",{"_index":360,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/ErrorValidationTree.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"license.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["useclass",{"_index":1074,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":298,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["useful",{"_index":3626,"title":{},"body":{"classes/Utils.html":{}}}],["user",{"_index":647,"title":{"interfaces/User.html":{}},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{},"additional-documentation/architecture.html":{}}}],["user_story",{"_index":3174,"title":{},"body":{"interfaces/Task.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":3590,"title":{},"body":{"interfaces/UserSession.html":{}}}],["userdata",{"_index":2377,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{}}}],["userid",{"_index":3376,"title":{},"body":{"injectables/TaskService.html":{}}}],["username",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{}}}],["users.guard",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users.guard.ts",{"_index":2145,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"coverage.html":{}}}],["users.guard.ts:6",{"_index":2147,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["users.guard.ts:9",{"_index":2148,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["userservice",{"_index":2156,"title":{"injectables/UserService.html":{}},"body":{"components/LoginPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usersession",{"_index":2783,"title":{"interfaces/UserSession.html":{}},"body":{"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/UserSession.html":{},"coverage.html":{}}}],["userutils",{"_index":1938,"title":{"classes/UserUtils.html":{}},"body":{"components/InputAssigneeComponent.html":{},"classes/UserUtils.html":{},"coverage.html":{}}}],["userutils.getcolorbyid(assignee?.user.id",{"_index":1944,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["userutils.getcolorbyid(member.user.id",{"_index":1949,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["userwithprivileges",{"_index":2375,"title":{"interfaces/UserWithPrivileges.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{}}}],["usevalue",{"_index":4096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":3981,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["usuniecie",{"_index":2807,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["utilities",{"_index":3625,"title":{},"body":{"classes/Utils.html":{}}}],["utility",{"_index":1451,"title":{},"body":{"classes/Enum.html":{},"additional-documentation/architecture.html":{}}}],["utils",{"_index":1880,"title":{"classes/Utils.html":{}},"body":{"components/IconComponent.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["utils.isletter(character",{"_index":3658,"title":{},"body":{"classes/Utils.html":{}}}],["utils.regexindexof(value",{"_index":1887,"title":{},"body":{"components/IconComponent.html":{}}}],["utils.snakecase(this.name",{"_index":1898,"title":{},"body":{"components/IconComponent.html":{}}}],["uuid",{"_index":1327,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{},"dependencies.html":{}}}],["v",{"_index":1494,"title":{},"body":{"classes/Enum.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["v4",{"_index":1326,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{}}}],["val",{"_index":1937,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/functions.html":{}}}],["valid",{"_index":1157,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"miscellaneous/functions.html":{}}}],["validate",{"_index":3715,"title":{},"body":{"injectables/WorkspaceService.html":{},"additional-documentation/architecture.html":{}}}],["validate(identifier",{"_index":3726,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["validation",{"_index":3666,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["validationerror",{"_index":1041,"title":{"interfaces/ValidationError.html":{}},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"coverage.html":{}}}],["validationerrorpipe",{"_index":2270,"title":{"pipes/ValidationErrorPipe.html":{}},"body":{"modules/MainModule.html":{},"pipes/ValidationErrorPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":1105,"title":{},"body":{"components/ControlAccessor.html":{}}}],["validator",{"_index":1128,"title":{},"body":{"components/ControlAccessor.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["validator.decorator",{"_index":3731,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["validator.decorator.ts",{"_index":1535,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validator.decorator.ts:4",{"_index":1537,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["validator.name",{"_index":1131,"title":{},"body":{"components/ControlAccessor.html":{}}}],["validator.ts",{"_index":4154,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["validatorfn",{"_index":3916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":988,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"additional-documentation/architecture.html":{}}}],["value",{"_index":61,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["value.iconname",{"_index":1894,"title":{},"body":{"components/IconComponent.html":{}}}],["value.prefix",{"_index":1893,"title":{},"body":{"components/IconComponent.html":{}}}],["value.substring(0",{"_index":1890,"title":{},"body":{"components/IconComponent.html":{}}}],["value.substring(splitindex",{"_index":1892,"title":{},"body":{"components/IconComponent.html":{}}}],["value?.message",{"_index":3678,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["values",{"_index":1014,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["values(enumtype",{"_index":1482,"title":{},"body":{"classes/Enum.html":{}}}],["var",{"_index":119,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["variable",{"_index":1853,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["variables",{"_index":4077,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":293,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"injectables/DialogService.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":3920,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["versions",{"_index":3984,"title":{},"body":{"index.html":{}}}],["via",{"_index":3972,"title":{},"body":{"index.html":{}}}],["view",{"_index":236,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["view'},{'name",{"_index":186,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["view.component",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{}}}],["view.component.html",{"_index":2294,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.scss",{"_index":2293,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts",{"_index":2292,"title":{},"body":{"components/MainViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:11",{"_index":2296,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts:8",{"_index":2295,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view/main",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":852,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["viewchild('btn",{"_index":849,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('elementlist",{"_index":2397,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["viewchild('input",{"_index":2016,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["viewchild('openbelow",{"_index":3561,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["viewchild('overlay",{"_index":1927,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["viewcontainerref",{"_index":2120,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["viewoptionscomponent",{"_index":235,"title":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["viewtomodelupdate",{"_index":3517,"title":{},"body":{"classes/TestNgControl.html":{}}}],["viewtomodelupdate(newvalue",{"_index":3519,"title":{},"body":{"classes/TestNgControl.html":{}}}],["viewvalue",{"_index":2481,"title":{},"body":{"components/OptionComponent.html":{},"components/SelectComponent.html":{}}}],["visibility",{"_index":2407,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["visible",{"_index":3025,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["visual",{"_index":2472,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"additional-documentation/localization.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["vscode",{"_index":2468,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["vscode://vscode.git/clone?url=https://github.com/${project.githubintegration",{"_index":2467,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["want",{"_index":1045,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/DialogService.html":{},"interfaces/RequestOptions.html":{},"injectables/TaskService.html":{}}}],["warranties",{"_index":4023,"title":{},"body":{"license.html":{}}}],["wawrzyniak",{"_index":3999,"title":{},"body":{"license.html":{}}}],["way",{"_index":4057,"title":{},"body":{"license.html":{},"additional-documentation/localization.html":{}}}],["week",{"_index":2727,"title":{},"body":{"components/SchedulePage.html":{}}}],["weight",{"_index":2140,"title":{},"body":{"components/ListGroupComponent.html":{},"components/MockPage.html":{}}}],["went",{"_index":1560,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["whether",{"_index":1478,"title":{},"body":{"classes/Enum.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["white",{"_index":2062,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["width",{"_index":113,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["wikipedia",{"_index":4123,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["win",{"_index":1779,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["win.closed",{"_index":1786,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["window",{"_index":1555,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{}}}],["window.document.dispatchevent",{"_index":1061,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["window.location.reload",{"_index":1189,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["window.open",{"_index":1784,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["window.open(`https://github.dev/${project.githubintegration",{"_index":2466,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["window.open(link",{"_index":1693,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["window.open(url",{"_index":1780,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["witch",{"_index":1768,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["withcredentials",{"_index":377,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["within",{"_index":2679,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["without",{"_index":287,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"license.html":{}}}],["withsubtasks",{"_index":3328,"title":{},"body":{"components/TaskListPage.html":{}}}],["work",{"_index":2370,"title":{},"body":{"components/MockPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["workflow",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["workspace",{"_index":77,"title":{"interfaces/Workspace.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["workspace'},{'name",{"_index":195,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["workspace.component",{"_index":2248,"title":{},"body":{"modules/MainModule.html":{}}}],["workspace.component.html",{"_index":2410,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.scss",{"_index":2409,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts",{"_index":2408,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"coverage.html":{}}}],["workspace.component.ts:104",{"_index":2441,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:108",{"_index":2437,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:115",{"_index":2439,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:18",{"_index":2425,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:21",{"_index":2426,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:23",{"_index":2448,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:24",{"_index":2447,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:26",{"_index":2449,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:29",{"_index":2424,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:38",{"_index":2442,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:41",{"_index":2427,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:44",{"_index":2446,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:52",{"_index":2435,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:58",{"_index":2445,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:64",{"_index":2444,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:70",{"_index":2428,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:76",{"_index":2433,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:82",{"_index":2430,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:90",{"_index":2434,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:96",{"_index":2431,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.id",{"_index":1429,"title":{},"body":{"components/EditProjectPage.html":{},"components/WorkspacesListPage.html":{}}}],["workspace.name",{"_index":1346,"title":{},"body":{"injectables/DialogService.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{}}}],["workspace.page",{"_index":1237,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["workspace.page.html",{"_index":1208,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["workspace.page.scss",{"_index":1207,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["workspace.page.ts",{"_index":1206,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{},"coverage.html":{}}}],["workspace.page.ts:22",{"_index":1436,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:23",{"_index":1211,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:27",{"_index":1438,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:30",{"_index":1209,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:32",{"_index":1437,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:36",{"_index":1432,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:43",{"_index":1210,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:58",{"_index":1434,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:69",{"_index":1435,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.projectswithprivileges.length).length",{"_index":3568,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspace.projectswithprivileges.map((project",{"_index":2572,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["workspace/create",{"_index":1205,"title":{},"body":{"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["workspace/edit",{"_index":1241,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditWorkspacePage.html":{},"coverage.html":{}}}],["workspace/nav",{"_index":2247,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{},"coverage.html":{}}}],["workspaceid",{"_index":87,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/MemberListComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["workspacelist",{"_index":31,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["workspaces",{"_index":239,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["workspaces.filter((workspace",{"_index":3567,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspaces.find((workspace",{"_index":1428,"title":{},"body":{"components/EditProjectPage.html":{}}}],["workspaces.length",{"_index":3565,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspaces.reduce((projects",{"_index":2551,"title":{},"body":{"injectables/ProjectService.html":{}}}],["workspaceservice",{"_index":1151,"title":{"injectables/WorkspaceService.html":{}},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["workspaceslistpage",{"_index":238,"title":{"components/WorkspacesListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["workspacesmock",{"_index":3850,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["workspacesmock(server",{"_index":3938,"title":{},"body":{"miscellaneous/functions.html":{}}}],["workspacesseed",{"_index":3851,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["workspacesseed(server",{"_index":3939,"title":{},"body":{"miscellaneous/functions.html":{}}}],["world",{"_index":4115,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["world.module.ts",{"_index":4122,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["world/hello",{"_index":4121,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["wrapper",{"_index":889,"title":{},"body":{"components/CardComponent.html":{},"components/InputComponent.html":{}}}],["write",{"_index":1027,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writes",{"_index":1026,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue",{"_index":973,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue(value",{"_index":1024,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["wrong",{"_index":1561,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["wyslany",{"_index":2814,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["x",{"_index":2297,"title":{},"body":{"components/MainViewComponent.html":{},"components/SchedulePage.html":{}}}],["x.icon",{"_index":2772,"title":{},"body":{"components/SelectComponent.html":{}}}],["x.value",{"_index":2770,"title":{},"body":{"components/SelectComponent.html":{}}}],["x.viewvalue",{"_index":2771,"title":{},"body":{"components/SelectComponent.html":{}}}],["xl",{"_index":955,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["y",{"_index":2298,"title":{},"body":{"components/MainViewComponent.html":{},"components/NavElementComponent.html":{}}}],["yarn",{"_index":3956,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{}}}],["yes",{"_index":343,"title":{},"body":{"injectables/ApiService.html":{},"injectables/GitIntegrationService.html":{},"classes/PersistentMap.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/functions.html":{}}}],["yyyy",{"_index":2854,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["z",{"_index":1888,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["ze",{"_index":2812,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["zgadzamy",{"_index":2805,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["zone.js",{"_index":3888,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["zostal",{"_index":2813,"title":{},"body":{"components/SettingsAccountPage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddMemberDialog.html":{"url":"components/AddMemberDialog.html","title":"component - AddMemberDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddMemberDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-member-dialog\n            \n\n            \n                styleUrls\n                ./add-member.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-member.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMembers\n                            \n                            \n                                cancel\n                            \n                            \n                                loadParamsFromUrl\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: AddMemberDialogData, dialogRef: MatDialogRef, routerExtensions: RouterExtensionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMemberDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerExtensions\n                                                  \n                                                        \n                                                                        RouterExtensionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMembers\n                        \n                    \n                \n            \n            \n                \naddMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadParamsFromUrl\n                        \n                    \n                \n            \n            \n                \nloadParamsFromUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddMemberDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\n\nexport interface AddMemberDialogData {\n  workspaceId: number;\n  projectId?: number;\n}\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member.dialog.html',\n  styleUrls: ['./add-member.dialog.scss'],\n})\nexport class AddMemberDialog implements OnInit {\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AddMemberDialogData,\n    private dialogRef: MatDialogRef,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  addMembers() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    this.dialogRef.close([formValues.email]);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        Add members\n\n  \n\n    \n    \n    \n\n  \n\n\n  Cancel\n  Add\n\n\n    \n\n    \n                \n                    ./add-member.dialog.scss\n                \n                form {\n  padding-top: 10px;\n\n  > * {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add members                  Cancel  Add'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddMemberDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddMemberDialogData.html":{"url":"interfaces/AddMemberDialogData.html","title":"interface - AddMemberDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddMemberDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\n\nexport interface AddMemberDialogData {\n  workspaceId: number;\n  projectId?: number;\n}\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member.dialog.html',\n  styleUrls: ['./add-member.dialog.scss'],\n})\nexport class AddMemberDialog implements OnInit {\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AddMemberDialogData,\n    private dialogRef: MatDialogRef,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  addMembers() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    this.dialogRef.close([formValues.email]);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertDialog.html":{"url":"components/AlertDialog.html","title":"component - AlertDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/dialogs/alert/alert.dialog.ts\n\n\n\n    \n        Description\n    \n    \n        Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert-dialog\n            \n\n            \n                styleUrls\n                ./alert.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./alert.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                AlertDialogVariant\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                important\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                confirm\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.important-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: AlertDialogData, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:50\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the dialog reference and data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AlertDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Object to pass as data to the dialog\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to dialog instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.important-dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.data.variant === AlertDialogVariant.IMPORTANT\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:67\n                        \n                    \n\n            \n                \n                    Host binding to set if the dialog is important.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/dialogs/alert/alert.dialog.ts:73\n                \n            \n\n\n            \n                \n                    Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/dialogs/alert/alert.dialog.ts:80\n                \n            \n\n\n            \n                \n                    Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        AlertDialogVariant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AlertDialogVariant\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:50\n                        \n                    \n\n            \n                \n                    Passthrough to the dialog's variant enumerable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AlertDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:58\n                        \n                    \n\n            \n                \n                    Object to pass as data to the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        important\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.data.variant === AlertDialogVariant.IMPORTANT\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.important-dialog')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:67\n                        \n                    \n\n            \n                \n                    Host binding to set if the dialog is important.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostBinding, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Type of the dialog variant. Used to specify what dialog styling should be used.\n */\nexport enum AlertDialogVariant {\n  DEFAULT = 'default',\n  IMPORTANT = 'important',\n}\n\n/**\n * Alert dialog data interface. Indicates what data will be passed to the dialog.\n */\nexport interface AlertDialogData {\n  /**\n   * Dialog title. Displayed at the top of the dialog.\n   */\n  title?: string;\n  /**\n   * Dialog message. Displayed below the title.\n   */\n  message?: string;\n  /**\n   * Confirm button text.\n   */\n  confirmText?: string;\n  /**\n   * Cancel button text.\n   */\n  cancelText?: string;\n  /**\n   * Type of the dialog variant. Used to specify what dialog styling should be used.\n   */\n  variant?: AlertDialogVariant;\n}\n\n/**\n * Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n */\n@Component({\n  selector: 'app-alert-dialog',\n  templateUrl: './alert.dialog.html',\n  styleUrls: ['./alert.dialog.scss'],\n})\nexport class AlertDialog {\n  /**\n   * Passthrough to the dialog's variant enumerable.\n   */\n  public AlertDialogVariant = AlertDialogVariant;\n\n  /**\n   * Default constructor. Injects the dialog reference and data.\n   * @param data Object to pass as data to the dialog\n   * @param dialogRef Reference to dialog instance\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AlertDialogData,\n    private dialogRef: MatDialogRef,\n  ) {\n    data.variant ||= AlertDialogVariant.DEFAULT;\n  }\n\n  /**\n   * Host binding to set if the dialog is important.\n   */\n  @HostBinding('class.important-dialog') important: boolean =\n    this.data.variant === AlertDialogVariant.IMPORTANT;\n\n  /**\n   * Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n   */\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  /**\n   * Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n   */\n  confirm() {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n  {{ data.message }}\n\n\n  {{ data.cancelText }}\n  \n    {{ data.confirmText }}\n  \n  \n    {{ data.confirmText }}\n  \n\n\n    \n\n    \n                \n                    ./alert.dialog.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.message }}  {{ data.cancelText }}      {{ data.confirmText }}        {{ data.confirmText }}  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AlertDialogData.html":{"url":"interfaces/AlertDialogData.html","title":"interface - AlertDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AlertDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/dialogs/alert/alert.dialog.ts\n        \n\n\n            \n                Description\n            \n            \n                Alert dialog data interface. Indicates what data will be passed to the dialog.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cancelText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            confirmText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            variant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Cancel button text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Confirm button text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dialog message. Displayed below the title.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dialog title. Displayed at the top of the dialog.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:         AlertDialogVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AlertDialogVariant\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of the dialog variant. Used to specify what dialog styling should be used.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostBinding, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Type of the dialog variant. Used to specify what dialog styling should be used.\n */\nexport enum AlertDialogVariant {\n  DEFAULT = 'default',\n  IMPORTANT = 'important',\n}\n\n/**\n * Alert dialog data interface. Indicates what data will be passed to the dialog.\n */\nexport interface AlertDialogData {\n  /**\n   * Dialog title. Displayed at the top of the dialog.\n   */\n  title?: string;\n  /**\n   * Dialog message. Displayed below the title.\n   */\n  message?: string;\n  /**\n   * Confirm button text.\n   */\n  confirmText?: string;\n  /**\n   * Cancel button text.\n   */\n  cancelText?: string;\n  /**\n   * Type of the dialog variant. Used to specify what dialog styling should be used.\n   */\n  variant?: AlertDialogVariant;\n}\n\n/**\n * Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n */\n@Component({\n  selector: 'app-alert-dialog',\n  templateUrl: './alert.dialog.html',\n  styleUrls: ['./alert.dialog.scss'],\n})\nexport class AlertDialog {\n  /**\n   * Passthrough to the dialog's variant enumerable.\n   */\n  public AlertDialogVariant = AlertDialogVariant;\n\n  /**\n   * Default constructor. Injects the dialog reference and data.\n   * @param data Object to pass as data to the dialog\n   * @param dialogRef Reference to dialog instance\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AlertDialogData,\n    private dialogRef: MatDialogRef,\n  ) {\n    data.variant ||= AlertDialogVariant.DEFAULT;\n  }\n\n  /**\n   * Host binding to set if the dialog is important.\n   */\n  @HostBinding('class.important-dialog') important: boolean =\n    this.data.variant === AlertDialogVariant.IMPORTANT;\n\n  /**\n   * Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n   */\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  /**\n   * Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n   */\n  confirm() {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to access the API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/api.service.ts:18\n                            \n                        \n\n                \n                    \n                            Default service constructor with HttpClient dependency\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:64\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends DELETE request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends GET request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends PATCH request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:54\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends POST request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                    \n                    put(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:74\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends PUT request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        request\n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP method to use\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/api.service.ts:18\n                        \n                    \n\n            \n                \n                    URL of the API. Provided in the environment configuration file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Service } from '../decorators/service.decorator';\nimport { RequestOptions } from '../interfaces/request-options.interface';\n\n/**\n * Service to access the API\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  /**\n   * URL of the API. Provided in the environment configuration file.\n   */\n  private apiURL: string = environment.apiURL;\n\n  /** Default service constructor with `HttpClient` dependency */\n  constructor(private httpClient: HttpClient) {}\n\n  /**\n   * Sends request to the API.\n   * @param method HTTP method to use\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public request(method: string, url: string, options?: RequestOptions) {\n    return this.httpClient.request(method, this.apiURL + url, {\n      responseType: 'json' as any,\n      withCredentials: true,\n      ...options,\n    });\n  }\n\n  /**\n   * Sends GET request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(url: string, options?: RequestOptions) {\n    return this.request('GET', url, options);\n  }\n\n  /**\n   * Sends POST request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public post(url: string, options?: RequestOptions) {\n    return this.request('POST', url, options);\n  }\n\n  /**\n   * Sends DELETE request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(url: string, options?: RequestOptions) {\n    return this.request('DELETE', url, options);\n  }\n\n  /**\n   * Sends PUT request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public put(url: string, options?: RequestOptions) {\n    return this.request('PUT', url, options);\n  }\n\n  /**\n   * Sends PATCH request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public patch(url: string, options?: RequestOptions) {\n    return this.request('PATCH', url, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main Component with basic layout and main router outlet\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'workflow'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of the page\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Main Component with basic layout and main router outlet\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  /**\n   * Title of the page\n   */\n  public title = 'workflow';\n\n  constructor() {\n    document.addEventListener('DOMContentLoaded', () => {\n      document.body.classList.remove('preload');\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  width: 100%;\n  background-color: var(--color-secondary-700);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\nimport { LandingPageComponent } from './landing-page/landing-page/landing-page.component';\nimport { MainModule } from './_main/_main.module';\n\n@NgModule({\n  declarations: [AppComponent, LandingPageComponent],\n  imports: [AppRoutingModule, BrowserAnimationsModule, MainModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoggedInUsersGuard } from './auth/guard/logged-in-users.guard';\nimport { LandingPageComponent } from './landing-page/landing-page/landing-page.component';\nimport { MainViewComponent } from './_main/components/main-view/main-view.component';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'landing-page',\n    component: LandingPageComponent,\n  },\n  {\n    path: '',\n    component: MainViewComponent,\n    canActivate: [LoggedInUsersGuard],\n    children: [\n      {\n        path: 'email',\n        loadChildren: () => \"import('./emails/emails.module').then((m) => m.EmailsModule)\",\n      },\n      {\n        path: 'messages',\n        loadChildren: () => \"import('./messages/messages.module').then((m) => m.MessagesModule)\",\n      },\n      {\n        path: '',\n        loadChildren: () => \"import('./dashboard/dashboard.module').then((m) => m.DashboardModule)\",\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      onSameUrlNavigation: 'reload',\n      paramsInheritanceStrategy: 'always',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nChangePasswordPage->AuthModule\n\n\n\n\n\nDeleteAccountPage\n\nDeleteAccountPage\n\nAuthModule -->\n\nDeleteAccountPage->AuthModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\nAuthModule -->\n\nForgotPasswordPage->AuthModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAuthModule -->\n\nLoginPage->AuthModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nAuthModule -->\n\nRegisterPage->AuthModule\n\n\n\n\n\nRestoreAccountPage\n\nRestoreAccountPage\n\nAuthModule -->\n\nRestoreAccountPage->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAuthModule -->\n\nMainModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChangePasswordPage\n                        \n                        \n                            DeleteAccountPage\n                        \n                        \n                            ForgotPasswordPage\n                        \n                        \n                            LoginPage\n                        \n                        \n                            RegisterPage\n                        \n                        \n                            RestoreAccountPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { AuthRoutingModule } from './auth.routing';\nimport { ChangePasswordPage } from './pages/change-password/change-password.page';\nimport { DeleteAccountPage } from './pages/delete-account/delete-account.page';\nimport { ForgotPasswordPage } from './pages/forgot-password/forgot-password.page';\nimport { LoginPage } from './pages/login/login.page';\nimport { RegisterPage } from './pages/register/register.page';\nimport { RestoreAccountPage } from './pages/restore-account/restore-account.page';\n\n@NgModule({\n  imports: [CommonModule, AuthRoutingModule, MainModule, ReactiveFormsModule],\n  declarations: [\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    ChangePasswordPage,\n    RestoreAccountPage,\n    DeleteAccountPage,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ChangePasswordPage } from './pages/change-password/change-password.page';\nimport { DeleteAccountPage } from './pages/delete-account/delete-account.page';\nimport { ForgotPasswordPage } from './pages/forgot-password/forgot-password.page';\nimport { LoginPage } from './pages/login/login.page';\nimport { RegisterPage } from './pages/register/register.page';\nimport { RestoreAccountPage } from './pages/restore-account/restore-account.page';\n\n/**\n * Auth routes list\n */\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginPage,\n  },\n  {\n    path: 'logout',\n    component: LoginPage,\n  },\n  {\n    path: 'register',\n    component: RegisterPage,\n  },\n  {\n    path: 'password-reset',\n    component: ForgotPasswordPage,\n  },\n  {\n    path: 'set-new-password',\n    component: ChangePasswordPage,\n  },\n  {\n    path: 'restore-account',\n    component: RestoreAccountPage,\n  },\n  {\n    path: 'delete-account',\n    component: DeleteAccountPage,\n  },\n];\n\n/**\n * Auth routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteAccount\n                            \n                            \n                                    Public\n                                deleteAccountConfirmation\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                recoverAccount\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Public\n                                setNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAccountConfirmation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccountConfirmation(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        recoverAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setNewPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setNewPassword(token: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Service } from '@main/decorators/service.decorator';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private apiService: ApiService) {}\n\n  public register({\n    email,\n    password,\n    name,\n    surname,\n    username,\n  }: {\n    email: string;\n    password: string;\n    name: string;\n    surname: string;\n    username: string;\n  }) {\n    return this.apiService.post(`/auth/register`, {\n      body: { email, password, name, surname, username },\n    });\n  }\n\n  public login({\n    email,\n    password,\n    remember,\n  }: {\n    email: string;\n    password: string;\n    remember: boolean;\n  }) {\n    return this.apiService.post(`/auth/login`, { body: { email, password, remember } });\n  }\n\n  public logout() {\n    localStorage.removeItem('logged');\n    return this.apiService.post(`/auth/logout`, { body: {} });\n  }\n\n  public resetPassword({ email }: { email: string }) {\n    return this.apiService.post(`/auth/password/recover`, { body: { email } });\n  }\n\n  public setNewPassword(token: string, password: string) {\n    return this.apiService.post(`/auth/password/reset`, { body: { token, password } });\n  }\n\n  public deleteAccount() {\n    return this.apiService.delete(`/auth/delete`, { body: {} });\n  }\n\n  public deleteAccountConfirmation(token: string) {\n    return this.apiService.delete(`/auth/delete/confirm`, { body: { token } });\n  }\n\n  public recoverAccount() {\n    return this.apiService.post(`/auth/delete/recover`, { body: {} });\n  }\n\n  public isLoggedIn() {\n    if (localStorage.getItem('logged')) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardPage.html":{"url":"components/BoardPage.html","title":"component - BoardPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/board/board.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                ./board.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./board.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board$\n                            \n                            \n                                faCheck\n                            \n                            \n                                faChevronRight\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                statusList\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Private\n                                    Optional\n                                statusListSubscription\n                            \n                            \n                                    Public\n                                taskMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                getColumnsContainerHeight\n                            \n                            \n                                getTasksFromStatus\n                            \n                            \n                                idOf\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNewTaskDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, taskService: TaskService, statusService: StatusService, dialogService: DialogService, projectService: ProjectService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/board/board.page.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CdkDragDrop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnsContainerHeight\n                        \n                    \n                \n            \n            \n                \ngetColumnsContainerHeight(mapKey: string | number, element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapKey\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasksFromStatus\n                        \n                    \n                \n            \n            \n                \ngetTasksFromStatus(statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idOf\n                        \n                    \n                \n            \n            \n                \nidOf(o: Task | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Task | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewTaskDialog\n                        \n                    \n                \n            \n            \n                \nopenNewTaskDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        board$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faChevronRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faChevronRight\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StatusWithTasks[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        statusListSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PersistentMap({ persistentKey: 'board' })\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport {\n  faCheck,\n  faChevronRight,\n  faCodeCommit,\n  faCodePullRequest,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { PersistentMap } from '@main/classes/persistent-map.class';\nimport { Observable, Subscription } from 'rxjs';\nimport { DialogService } from '../../../_main/services/dialog.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '../../dialogs/task/task.dialog';\nimport { StatusWithTasks } from '../../interfaces/status.interface';\nimport { Task } from '../../interfaces/task.interface';\nimport { StatusService } from '../../services/status.service';\nimport { TaskService } from '../../services/task.service';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.page.html',\n  styleUrls: ['./board.page.scss'],\n})\nexport class BoardPage implements OnInit, OnDestroy {\n  faPlus = faPlus;\n  faChevronRight = faChevronRight;\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  public taskMap = new PersistentMap({ persistentKey: 'board' });\n  public projectId!: number;\n\n  public statusList$!: Observable;\n  public board$!: Observable;\n  public project$: Observable;\n  public members$: Observable>;\n  public statusList: StatusWithTasks[] = [];\n  private statusListSubscription?: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private taskService: TaskService,\n    private statusService: StatusService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.projectId = projectId;\n    this.project$ = this.projectService.get(projectId);\n    this.board$ = this.statusService.board(projectId);\n    this.statusList$ = this.statusService.listWithTasks(projectId);\n    this.statusListSubscription = this.statusList$.subscribe((statusList) => {\n      this.statusList = statusList;\n    });\n    this.members$ = this.memberService.map(projectId);\n  }\n\n  getTasksFromStatus(statusId: number) {\n    return this.statusList.find((status) => status.id === statusId)?.tasks;\n  }\n\n  ngOnInit() {\n    this.statusList$.subscribe((statusList) => {\n      this.statusList = statusList;\n    });\n  }\n\n  ngOnDestroy() {\n    this.statusListSubscription?.unsubscribe();\n  }\n\n  drop(event: CdkDragDrop) {\n    const previousStatusIndex = Number(\n      event.previousContainer.element.nativeElement.dataset['index'],\n    );\n    const newStatusIndex = Number(event.container.element.nativeElement.dataset['index']);\n    const previousStatus = this.statusList[previousStatusIndex];\n    const newStatus = this.statusList[newStatusIndex];\n    const previousTaskIndex = event.previousIndex;\n    const task = event.previousContainer.data[previousTaskIndex];\n\n    console.log({ previousStatus, task });\n\n    console.log(\n      event.previousContainer.data,\n      event.container.data,\n      event.previousIndex,\n      event.currentIndex,\n    );\n\n    const onSuccess = () => {\n      task.statusId = newStatus.id;\n      this.taskService.update(this.projectId, task as any).subscribe();\n\n      if (event.previousContainer === event.container) {\n        moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      } else {\n        transferArrayItem(\n          event.previousContainer.data,\n          event.container.data,\n          event.previousIndex,\n          event.currentIndex,\n        );\n      }\n    };\n\n    // Catch if the task has pull request and user is trying to move to finishing state\n    if (task.pull && newStatus.final) {\n      this.dialogService\n        .alert({\n          title: $localize`Are you sure?`,\n          message: $localize`If you will move this task to finishing state, the attached pull request will be merged to the repository.`,\n          confirmText: $localize`Merge`,\n          cancelText: $localize`Cancel`,\n        })\n        .subscribe((result) => {\n          if (!result) return;\n\n          onSuccess();\n        });\n      // } else if (task.mergedPullList && !newStatus.final) {\n      //   this.dialogService\n      //     .alert({\n      //       title: $localize`Are you sure?`,\n      //       message: $localize`If you will move this task to not finishing state, the pull request will be detached.`,\n      //       confirmText: $localize`Detach`,\n      //       cancelText: $localize`Cancel`,\n      //     })\n      //     .subscribe((result) => {\n      //       if (!result) return;\n\n      //       onSuccess();\n      //     });\n      // }\n    } else {\n      onSuccess();\n    }\n  }\n\n  openNewTaskDialog() {\n    this.dialogService\n      .open(TaskDialog, {\n        projectId: this.projectId,\n        variant: TaskDialogVariant.CREATE,\n      } as TaskDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.taskService.create(this.projectId, result).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n\n  idOf(o: Task | string) {\n    return (o as any).id || o;\n  }\n\n  getColumnsContainerHeight(mapKey: string | number, element: HTMLElement) {\n    return `${Number(!this.taskMap.get(mapKey)) * element.scrollHeight + 16}px`;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    {{ status.name }}\n  \n\n\n\n  \n    \n      \n        \n          \n            \n            #{{ task.id }}\n            {{ task.name }}\n            \n              \n            \n            \n              \n            \n            \n              \n              \n            \n            \n            \n          \n          \n            \n            Other tasks\n          \n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./board.page.scss\n                \n                :host {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n}\n\napp-view-options {\n  width: auto;\n  margin: 2rem 2rem 0 2rem;\n}\n\napp-status-label {\n  width: auto;\n}\n\n.boards {\n  display: flex;\n  overflow: auto;\n  flex-direction: column;\n  padding: 0 2rem 2rem 2rem;\n}\n\n.board {\n  display: flex;\n  flex-direction: column;\n  padding-left: 10px;\n  margin-left: -1rem;\n\n  &:not(.collapsed) .task-title>app-icon {\n    transform: rotate(90deg);\n  }\n\n  .columns {\n    display: flex;\n    overflow: hidden;\n    transition: max-height .2s ease;\n\n    // &.collapsed {\n    //   height: 0;\n    // }\n  }\n\n  .column {\n    display: flex;\n    width: 300px;\n    min-height: 100%;\n    flex-direction: column;\n    padding: 1rem 0.5rem 0 0.5rem;\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    .column-header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 1em;\n      color: var(--color-text);\n\n      h3 {\n        margin: 0;\n      }\n\n      app-icon {\n        cursor: pointer;\n      }\n    }\n\n    .column-content {\n      height: 100%;\n      padding: 1rem;\n      background-color: var(--color-secondary-800);\n      border-radius: var(--border-radius);\n\n      app-board-task:last-child {\n        margin-bottom: -1rem;\n      }\n    }\n  }\n}\n\n.cdk-drag-placeholder {\n  opacity: 0;\n}\n\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.column-content.cdk-drop-list-dragging app-board-task:not(.cdk-drag-placeholder) {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.task-title {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  padding-left: 0.5rem;\n\n  .task-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .task-property {\n    display: flex;\n    margin-left: 1rem;\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.2s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    .check {\n      margin-left: 5px;\n      color: #2ecc71;\n    }\n  }\n\n  &>app-icon {\n    margin-right: 1rem;\n    opacity: 0.5;\n    transition: transform .2s ease;\n  }\n}\n\n.status-list-banner {\n  display: flex;\n  padding: 1rem;\n  border-bottom: 1px solid var(--color-secondary-500);\n  margin-left: 2rem;\n\n  .status-banner {\n    width: 300px;\n    color: var(--color-text);\n  }\n}\n\n.row {\n  cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ status.name }}                                                        #{{ task.id }}            {{ task.name }}                                                                                                                                                                                                    Other tasks                                                                                      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoardPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardTaskComponent.html":{"url":"components/BoardTaskComponent.html","title":"component - BoardTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/board-task/board-task.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board-task\n            \n\n            \n                styleUrls\n                ./board-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./board-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faCheck\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                createSubtask\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                members\n                            \n                            \n                                projectId\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubtask\n                        \n                    \n                \n            \n            \n                \ncreateSubtask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { faCheck, faCodeCommit, faCodePullRequest } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskDialog, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { Task } from '../../interfaces/task.interface';\n\n@Component({\n  selector: 'app-board-task',\n  templateUrl: './board-task.component.html',\n  styleUrls: ['./board-task.component.scss'],\n})\nexport class BoardTaskComponent {\n  @Input()\n  public task!: Task;\n\n  @Input()\n  public projectId!: number;\n\n  @Input()\n  public members: Map = new Map();\n\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  constructor(private dialogService: DialogService, private taskService: TaskService) {}\n\n  delete() {\n    this.taskService.deleteWithConfirmation(this.projectId, this.task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  edit() {\n    this.taskService.openEditTaskDialog(this.projectId, this.task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  createSubtask() {\n    this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n        projectId: this.projectId,\n        subtask: true,\n        task: {\n          parentTaskId: this.task.id,\n        },\n      })\n      .afterClosed()\n      .subscribe((task) => {\n        if (!task) return;\n\n        this.taskService.create(this.projectId, task).subscribe(() => {\n          location.reload();\n        });\n      });\n  }\n\n  changeDate(date: Date) {\n    let sessionDate = dayjs(date);\n    return sessionDate.format('YYYY-MM-DD, hh:mm A');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Due date\n      {{ changeDate(task.deadline) }}\n    \n  \n  \n    #{{ task.id }}\n    {{ task?.name }}\n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      \n    \n    \n      \n        Edit task\n      \n      \n        Create subtask\n      \n      \n        Delete task\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./board-task.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  cursor: move;\n}\n\n.task {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  background-color: var(--color-board-task-background);\n  border-radius: var(--border-radius);\n  transition: background-color 0.2s ease, box-shadow 0.2s ease;\n\n  &:hover {\n    background-color: var(--color-board-task-background-hover);\n    box-shadow: 0 0 0.5rem 0.01rem rgb(0 0 0 / 10%);\n  }\n\n  .top-section {\n    display: flex;\n\n    > * {\n      width: 50%;\n    }\n\n    .assignees {\n      .assignee {\n        $size: 32px;\n\n        @include typo-heading-5;\n\n        display: flex;\n        width: #{$size};\n        height: #{$size};\n        align-items: center;\n        justify-content: center;\n        background-color: #0a95d0;\n        border-radius: calc($size / 2);\n        color: var(--color-text);\n      }\n    }\n\n    .deadline {\n      color: var(--color-text);\n\n      .title {\n        @include typo-body;\n      }\n\n      .value {\n        @include typo-title;\n      }\n    }\n  }\n\n  .name {\n    @include typo-body;\n\n    margin-top: 1rem;\n    color: var(--color-text);\n\n    .task-id {\n      margin-right: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n\n  .options {\n    position: absolute;\n    right: 5px;\n    color: #fff;\n  }\n\n  .commit {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n    padding: 0 0.5rem;\n    color: var(--color-text);\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.5s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  .actions {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n\n    > * {\n      display: flex;\n      margin-left: 1rem;\n      color: var(--color-text);\n      cursor: pointer;\n      opacity: 0.5;\n      transition: opacity 0.2s ease;\n\n      &:hover {\n        opacity: 1;\n      }\n\n      .check {\n        margin-left: 5px;\n        color: #2ecc71;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Due date      {{ changeDate(task.deadline) }}            #{{ task.id }}    {{ task?.name }}                                                                                        Edit task                    Create subtask                    Delete task            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoardTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/button/button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main button component\nExample text\n    \n\n\n    \n        Implements\n    \n    \n                FocusableOption\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                pending\n                            \n                            \n                                type\n                            \n                            \n                                variant\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:33\n                            \n                        \n                \n                    \n                        Icon to display on the button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pending\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:28\n                            \n                        \n                \n                    \n                        Information about the pending. If button is pending the loader icon will be shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"button\" | \"submit\"\n\n                    \n                \n                \n                    \n                        Default value : 'submit'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        variant\n                    \n                \n                \n                    \n                        Type :     \"primary\" | \"secondary\" | \"important\"\n\n                    \n                \n                \n                    \n                        Default value : 'secondary'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:21\n                            \n                        \n                \n                    \n                        Style variant of the button\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        focus\n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/button/button.component.ts:43\n                \n            \n\n\n            \n                \n                    Focus the native button element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('btn')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/button/button.component.ts:38\n                        \n                    \n\n            \n                \n                    Reference to native button element\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { FocusableOption } from '@angular/cdk/a11y';\nimport { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Main button component\n *\n * ```html\n * Example text\n * ```\n */\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent implements FocusableOption {\n  /**\n   * Style variant of the button\n   */\n  @Input() variant: 'primary' | 'secondary' | 'important' = 'secondary';\n\n  @Input() type: 'button' | 'submit' = 'submit';\n\n  /**\n   * Information about the pending. If button is pending the loader icon will be shown\n   */\n  @Input() pending?: boolean = false;\n\n  /**\n   * Icon to display on the button\n   */\n  @Input() icon?: string | IconDefinition;\n\n  /**\n   * Reference to native button element\n   */\n  @ViewChild('btn') button!: ElementRef;\n\n  /**\n   * Focus the native button element\n   */\n  focus() {\n    setTimeout(() => {\n      this.button.nativeElement.focus();\n    }, 200);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                @import '../../../../styles/typography';\n\nbutton mat-spinner,\nbutton app-icon {\n  opacity: 1;\n  transform: scale(1);\n  transition: opacity 0.2s;\n}\n\nbutton mat-spinner.hide,\nbutton app-icon.hide {\n  opacity: 0;\n}\n\nbutton .prefix {\n  position: relative;\n  display: flex;\n  width: 24px;\n  height: 24px;\n  align-items: center;\n  justify-content: center;\n  transition: width 0.2s, margin-right 0.2s;\n\n  > * {\n    position: absolute;\n  }\n}\n\nbutton:not(.button-with-icon) .prefix:not(.pending) {\n  width: 0;\n  margin-right: 0;\n}\n\nbutton {\n  @include typo-title;\n\n  position: relative;\n  display: flex;\n  min-width: 80px;\n  height: 42px;\n  align-items: center;\n  justify-content: center;\n  padding: 0.8125rem 1.25rem;\n  border-radius: var(--border-radius);\n  box-shadow: 0 4px 4px rgb(0 0 0 / 25%);\n  color: var(--color-text);\n  outline: 0 !important;\n  transition: background-color 0.2s ease;\n\n  > * {\n    margin-right: 0.75rem;\n  }\n\n  &::before {\n    $offset: 4px;\n\n    position: absolute;\n    top: #{-$offset};\n    right: #{-$offset};\n    bottom: #{-$offset};\n    left: #{-$offset};\n    border-radius: calc(var(--border-radius) * 1.5);\n    content: '';\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.1s ease;\n  }\n\n  &:focus {\n    &::before {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    box-shadow: 0 1px 1px rgb(0 0 0 / 25%);\n  }\n\n  &.primary {\n    background-color: var(--color-button-primary-background);\n\n    &::before {\n      border: 2px solid var(--color-button-primary-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-primary-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-primary-background-active);\n    }\n  }\n\n  &.secondary {\n    background-color: var(--color-button-secondary-background);\n\n    &::before {\n      border: 2px solid var(--color-button-secondary-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-secondary-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-secondary-background-active);\n    }\n  }\n\n  &.important {\n    background-color: var(--color-button-important-background);\n\n    &::before {\n      border: 2px solid var(--color-button-important-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-important-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-important-background-active);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/card/card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/card/card.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/card/card.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  &.important {\n    .card {\n      border: 1px solid var(--color-red-700);\n    }\n\n    .card-header-wrapper {\n      color: var(--color-red-700);\n    }\n  }\n}\n\n.card {\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  border: 1px solid var(--color-secondary-500);\n  border-radius: var(--border-radius);\n}\n\n.card-header-wrapper {\n  @include typo-title;\n\n  margin-bottom: 7px;\n  color: var(--color-text);\n}\n\n.card-content-wrapper {\n  @include typo-body;\n\n  margin-bottom: 15px;\n  color: var(--color-text);\n  opacity: 0.7;\n}\n\n.card-actions-wrapper {\n  @include typo-body;\n\n  color: var(--color-text);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordPage.html":{"url":"components/ChangePasswordPage.html","title":"component - ChangePasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/change-password/change-password.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                styleUrls\n                ./change-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                resetSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/change-password/change-password.page.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNewPassword\n                        \n                    \n                \n            \n            \n                \nsetNewPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/change-password/change-password.page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:34\n                        \n                    \n\n            \n                \n                    Form group for setting new password.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        resetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { passwordValidator } from '@main/validators/password.validator';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport { sameAsValidator } from '@main/validators/same-as.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n})\nexport class ChangePasswordPage implements OnInit {\n  private token?: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const { token } = this.activatedRoute.snapshot.queryParams;\n    this.token = token;\n  }\n\n  private resetSubscription?: Subscription;\n\n  /**\n   * Form group for setting new password.\n   */\n  public form = new FormGroup({\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n  });\n\n  setNewPassword() {\n    if (this.resetSubscription && !this.resetSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid && this.token) {\n      this.resetSubscription = this.authService\n        .setNewPassword(this.token, this.form.value.password)\n        .subscribe(() => {\n          this.router.navigate(['/auth/login']);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Reset password\n          Enter your new password.\n        \n\n        \n\n        \n\n        Set new password\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./change-password.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Reset password          Enter your new password.                                Set new password                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/checkbox/checkbox.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/checkbox/checkbox.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:77\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n})\nexport class CheckboxComponent extends ControlAccessor {\n  @Input() label: string = '';\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n\n{{ control.errors | validationError }}\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                :host {\n  position: relative;\n}\n\nmat-checkbox.ng-invalid.ng-touched ~ mat-error {\n  // Set this to 'block' if you want to see mat-error label\n  display: none;\n}\n\nmat-error {\n  position: absolute;\n  bottom: -5px;\n  left: 28px;\n  display: none;\n  font-size: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}  {{ control.errors | validationError }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClickStopPropagationDirective.html":{"url":"directives/ClickStopPropagationDirective.html","title":"directive - ClickStopPropagationDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ClickStopPropagationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/click-stop-propagation.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [click-stop-propagation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/directives/click-stop-propagation.directive.ts:8\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/_main/directives/click-stop-propagation.directive.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[click-stop-propagation]',\n})\nexport class ClickStopPropagationDirective {\n  @HostListener('click', ['$event'])\n  public onClick(event: any): void {\n    event.stopPropagation();\n\n    window.document.dispatchEvent(\n      new Event('click', {\n        bubbles: true,\n        cancelable: true,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlAccessor.html":{"url":"components/ControlAccessor.html","title":"component - ControlAccessor","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ControlAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/classes/control-accessor.class.ts\n\n\n\n    \n        Description\n    \n    \n        A base class for creating custom control accessors like inputs, checkboxes, etc.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    required\n                                \n                                \n                                    name\n                                \n                                \n                                    control\n                                \n                                \n                                    value\n                                \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/control-accessor.class.ts:67\n                            \n                        \n\n                \n                    \n                            Accessor constructor to initialize component. Extended by child classes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                control to be used by the accessor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:19\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:88\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:102\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:150\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:126\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:133\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:139\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:118\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:36\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:48\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:77\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:53\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n\n                \n                    \n                        getrequired()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:25\n                                \n                            \n                    \n                        \n                                Property to describe if the control is required.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n\n                \n                    \n                        getcontrol()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:41\n                                \n                            \n                    \n                        \n                                Control that is used by the form.\n\n\n                                \n                                    Returns :         FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:58\n                                \n                            \n                    \n                        \n                                Get the value of the control.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:65\n                                \n                            \n                    \n                        \n                                Get the errors of the control.\n\n\n                                \n                                    Returns :         ValidationErrors | null\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl, ValidationErrors } from '@angular/forms';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport { Subject } from 'rxjs';\n\n/**\n * A base class for creating custom control accessors like inputs, checkboxes, etc.\n */\n@Component({\n  template: '',\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ControlAccessor implements OnDestroy, ControlValueAccessor {\n  /**\n   * Property that defines if field should prompt user how to fill it. For example\n   * in a form, if a field is email, it will give the user last used emails\n   */\n  @Input() autocomplete: 'on' | 'off' = 'off';\n\n  /**\n   * Property to describe if the control is required.\n   * @returns true if the control is required to fill in form.\n   */\n  public get required() {\n    return this._required;\n  }\n\n  public get name() {\n    return this.ngControl.name?.toString() || '';\n  }\n\n  /**\n   * Private property to set filed as required\n   */\n  private _required: boolean = false;\n\n  /**\n   * Control that is used by the form.\n   */\n  public get control(): FormControl {\n    return (this.ngControl.control as FormControl) || new FormControl();\n  }\n\n  /**\n   * Observable that emits when the control is destroyed.\n   */\n  private destroy$ = new Subject();\n\n  /**\n   * Observable that emits when the control is touched.\n   */\n  private touched$ = new Subject();\n\n  /**\n   * Get the value of the control.\n   */\n  public get value(): any {\n    return this.control.value;\n  }\n\n  /**\n   * Get the errors of the control.\n   */\n  public get errors(): ValidationErrors | null {\n    return this.control.errors;\n  }\n\n  /**\n   * Accessor constructor to initialize component. Extended by child classes.\n   * @param ngControl control to be used by the accessor\n   */\n  constructor(\n    /**\n     * Control passed from DOM to the component, contains all the information about form control\n     */\n    public ngControl: NgControl,\n  ) {\n    this.ngControl.valueAccessor = this;\n\n    this.initCheckForTouch();\n    this.checkIfIsRequired();\n  }\n\n  /**\n   * Check if the control is required by provided validators.\n   */\n  private checkIfIsRequired(): void {\n    if (!(this.control as any)._rawValidators) return;\n\n    for (const validator of (this.ngControl as any).control._rawValidators) {\n      if (validator.name === 'required') {\n        this._required = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Apply the touched observable on ngControl and control fields\n   */\n  private initCheckForTouch(): void {\n    (this.control as any)._markAsTouched = this.control.markAsTouched;\n    this.control.markAsTouched = () => {\n      (this.control as any)._markAsTouched();\n      this.touched$.next(true);\n    };\n  }\n\n  /**\n   * Writes a new value to the element.\n   *\n   * This method is called by the forms API to write to the view when programmatic\n   * changes from model to view are requested.\n   *\n   * @param value The new value for the element\n   */\n  writeValue(value: any): void {}\n\n  /**\n   * Registers a callback function that is called when the control's value changes in the UI.\n   *\n   * This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n   * @param fn Callback to be called when the control value changes.\n   */\n  registerOnChange(fn: any): void {}\n\n  /**\n   * Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n   *\n   * @param fn Callback to be called when the control is touched.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Set disabled state on the control. If set to true, the control will be disabled.\n   * @param isDisabled State to set to the control\n   */\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.control.disable();\n    } else {\n      this.control.enable();\n    }\n  }\n\n  /**\n   * A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n    this.touched$.complete();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ControlAccessor'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectMembersPage.html":{"url":"components/CreateProjectMembersPage.html","title":"component - CreateProjectMembersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectMembersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-project-members/create-project-members.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project-members\n            \n\n            \n                styleUrls\n                ./create-project-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project-members.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                memberList\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:39\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:65\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:33\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:26\n                        \n                    \n\n            \n                \n                    Form group for the project creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        memberList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddMemberDialog } from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-create-project-members',\n  templateUrl: './create-project-members.page.html',\n  styleUrls: ['./create-project-members.page.scss'],\n})\nexport class CreateProjectMembersPage {\n  faPlus = faPlus;\n\n  /**\n   * Form group for the project creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  public workspace$!: Observable;\n\n  private workspaceId!: number;\n\n  private memberList?: string[];\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n    this.workspaceId = workspaceId;\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n  }\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {})\n      .afterClosed()\n      .subscribe((result) => {\n        this.memberList = result;\n      });\n  }\n\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.projectService.create(this.form.value).subscribe((response) => {\n      if (this.memberList) {\n        this.memberService.add(this.memberList, [response.id]).subscribe(() => {\n          this.router.navigate([this.workspaceId]).then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        this.router.navigate([this.workspaceId]).then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  Add member\n\n\n\n\n    \n\n    \n                \n                    ./create-project-members.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.button {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-top: -60px;\n  margin-bottom: 20px;\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add member'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectMembersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectPage.html":{"url":"components/CreateProjectPage.html","title":"component - CreateProjectPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-project/create-project.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project\n            \n\n            \n                styleUrls\n                ./create-project.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                memberList\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:38\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project/create-project.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project/create-project.page.ts:72\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:32\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:24\n                        \n                    \n\n            \n                \n                    Form group for the project creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        memberList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddMemberDialog } from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.page.html',\n  styleUrls: ['./create-project.page.scss'],\n})\nexport class CreateProjectPage {\n  /**\n   * Form group for the project creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  faPlus = faPlus;\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  public workspace$!: Observable;\n\n  public workspaceId!: number;\n\n  public memberList: string[] = [];\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n    this.workspaceId = workspaceId;\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n  }\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {})\n      .afterClosed()\n      .subscribe((result) => {\n        this.memberList = [...this.memberList, ...result];\n      });\n  }\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.projectService.create(this.form.value).subscribe((response) => {\n      if (this.memberList) {\n        this.memberService.add(this.memberList, [response.id]).subscribe(() => {\n          this.router.navigate([this.workspaceId]).then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        this.router.navigate([this.workspaceId]).then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Workspace: {{ (workspace$ | async)?.name }}\n    \n  \n\n  \n    Members\n    \n      Add member\n      \n    \n  \n  \n\n  \n    Save\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./create-project.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.buttons {\n  display: flex;\n  margin-top: 1rem;\n\n  &>* {\n    display: block;\n    margin-right: 1rem;\n  }\n}\n\n.members {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-top: 20px;\n\n  h2 {\n    margin: 0;\n  }\n\n  .button {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n  }\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Workspace: {{ (workspace$ | async)?.name }}            Members          Add member                    Save    Cancel  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateWorkspacePage.html":{"url":"components/CreateWorkspacePage.html","title":"component - CreateWorkspacePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateWorkspacePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-workspace/create-workspace.page.ts\n\n\n\n    \n        Description\n    \n    \n        Create workspace page component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-workspace-page\n            \n\n            \n                styleUrls\n                ./create-workspace.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-workspace.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:30\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:43\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:30\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:23\n                        \n                    \n\n            \n                \n                    Form group for the workspace creation.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Subscription } from 'rxjs';\nimport { Page } from 'src/app/_main/decorators/page.decorator';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Create workspace page component.\n */\n@Page()\n@Component({\n  selector: 'app-create-workspace-page',\n  templateUrl: './create-workspace.page.html',\n  styleUrls: ['./create-workspace.page.scss'],\n})\nexport class CreateWorkspacePage {\n  /**\n   * Form group for the workspace creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(private workspaceService: WorkspaceService, private router: Router) {}\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.workspaceService.create(this.form.value).subscribe(() => {\n      this.router.navigate(['/']).then(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  Create new workspace\n  \n\n  \n    Save\n    Cancel\n  \n\n\n\n    \n\n    \n                \n                    ./create-workspace.page.scss\n                \n                form {\n  padding: 4rem;\n}\n\n.buttons {\n  display: flex;\n  margin-top: 1rem;\n\n  &>* {\n    display: block;\n    margin-right: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create new workspace        Save    Cancel  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateWorkspacePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nAddMemberDialog\n\nAddMemberDialog\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nAddMemberDialog->DashboardModule\n\n\n\n\n\nCreateProjectMembersPage\n\nCreateProjectMembersPage\n\nDashboardModule -->\n\nCreateProjectMembersPage->DashboardModule\n\n\n\n\n\nCreateProjectPage\n\nCreateProjectPage\n\nDashboardModule -->\n\nCreateProjectPage->DashboardModule\n\n\n\n\n\nCreateWorkspacePage\n\nCreateWorkspacePage\n\nDashboardModule -->\n\nCreateWorkspacePage->DashboardModule\n\n\n\n\n\nEditProjectMembersPage\n\nEditProjectMembersPage\n\nDashboardModule -->\n\nEditProjectMembersPage->DashboardModule\n\n\n\n\n\nEditProjectPage\n\nEditProjectPage\n\nDashboardModule -->\n\nEditProjectPage->DashboardModule\n\n\n\n\n\nEditWorkspacePage\n\nEditWorkspacePage\n\nDashboardModule -->\n\nEditWorkspacePage->DashboardModule\n\n\n\n\n\nIntegrationGithubComponent\n\nIntegrationGithubComponent\n\nDashboardModule -->\n\nIntegrationGithubComponent->DashboardModule\n\n\n\n\n\nMemberListComponent\n\nMemberListComponent\n\nDashboardModule -->\n\nMemberListComponent->DashboardModule\n\n\n\n\n\nProjectsListPage\n\nProjectsListPage\n\nDashboardModule -->\n\nProjectsListPage->DashboardModule\n\n\n\n\n\nViewOptionsComponent\n\nViewOptionsComponent\n\nDashboardModule -->\n\nViewOptionsComponent->DashboardModule\n\n\n\n\n\nWorkspacesListPage\n\nWorkspacesListPage\n\nDashboardModule -->\n\nWorkspacesListPage->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nDashboardModule -->\n\nMainModule->DashboardModule\n\n\n\n\n\nGitIntegrationService\n\nGitIntegrationService\n\nDashboardModule -->\n\nGitIntegrationService->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddMemberDialog\n                        \n                        \n                            CreateProjectMembersPage\n                        \n                        \n                            CreateProjectPage\n                        \n                        \n                            CreateWorkspacePage\n                        \n                        \n                            EditProjectMembersPage\n                        \n                        \n                            EditProjectPage\n                        \n                        \n                            EditWorkspacePage\n                        \n                        \n                            IntegrationGithubComponent\n                        \n                        \n                            MemberListComponent\n                        \n                        \n                            ProjectsListPage\n                        \n                        \n                            ViewOptionsComponent\n                        \n                        \n                            WorkspacesListPage\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GitIntegrationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DashboardRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { IntegrationGithubComponent } from './components/integration-github/integration-github.component';\nimport { MemberListComponent } from './components/member-list/member-list.component';\nimport { ViewOptionsComponent } from './components/view-options/view-options.component';\nimport { DashboardRoutingModule } from './dashboard.routing';\nimport { AddMemberDialog } from './dialogs/add-member/add-member.dialog';\nimport { CreateProjectMembersPage } from './pages/create-project-members/create-project-members.page';\nimport { CreateProjectPage } from './pages/create-project/create-project.page';\nimport { CreateWorkspacePage } from './pages/create-workspace/create-workspace.page';\nimport { EditProjectMembersPage } from './pages/edit-project-members/edit-project-members.page';\nimport { EditProjectPage } from './pages/edit-project/edit-project.page';\nimport { EditWorkspacePage } from './pages/edit-workspace/edit-workspace.page';\nimport { ProjectsListPage } from './pages/projects-list/projects-list.page';\nimport { WorkspacesListPage } from './pages/workspaces-list/workspaces-list.page';\nimport { GitIntegrationService } from './services/git-integration.service';\n\n@NgModule({\n  imports: [CommonModule, MainModule, ReactiveFormsModule, DashboardRoutingModule],\n  declarations: [\n    CreateWorkspacePage,\n    WorkspacesListPage,\n    EditWorkspacePage,\n    ProjectsListPage,\n    CreateProjectPage,\n    EditProjectPage,\n    CreateProjectMembersPage,\n    EditProjectMembersPage,\n    IntegrationGithubComponent,\n    ViewOptionsComponent,\n    MemberListComponent,\n    AddMemberDialog,\n  ],\n  providers: [GitIntegrationService],\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\nimport { CreateProjectMembersPage } from './pages/create-project-members/create-project-members.page';\nimport { CreateProjectPage } from './pages/create-project/create-project.page';\nimport { CreateWorkspacePage } from './pages/create-workspace/create-workspace.page';\nimport { EditProjectMembersPage } from './pages/edit-project-members/edit-project-members.page';\nimport { EditProjectPage } from './pages/edit-project/edit-project.page';\nimport { EditWorkspacePage } from './pages/edit-workspace/edit-workspace.page';\nimport { GithubIntegrationPage } from './pages/github-integration/github-integration.page';\nimport { ProjectsListPage } from './pages/projects-list/projects-list.page';\nimport { WorkspacesListPage } from './pages/workspaces-list/workspaces-list.page';\n\n/**\n * Dashboard routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: WorkspacesListPage,\n  },\n  {\n    path: 'settings',\n    loadChildren: () => \"import('../settings/settings.module').then((m) => m.SettingsModule)\",\n  },\n  {\n    path: 'github',\n    component: GithubIntegrationPage,\n    data: {\n      hideNavigation: true,\n    },\n  },\n  {\n    path: 'dashboard',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/dashboard.svg',\n    },\n  },\n  {\n    path: 'create',\n    component: CreateWorkspacePage,\n  },\n  {\n    path: ':workspaceId',\n    children: [\n      {\n        path: 'edit',\n        component: EditWorkspacePage,\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        component: ProjectsListPage,\n      },\n      {\n        path: 'create',\n        redirectTo: 'create/general',\n      },\n      {\n        path: 'create/general',\n        component: CreateProjectPage,\n      },\n      {\n        path: 'create/members',\n        component: CreateProjectMembersPage,\n      },\n      {\n        path: ':projectId/edit',\n        redirectTo: ':projectId/edit/general',\n      },\n      {\n        path: ':projectId/edit/general',\n        component: EditProjectPage,\n      },\n      {\n        path: ':projectId/edit/members',\n        component: EditProjectMembersPage,\n      },\n      {\n        path: ':projectId',\n        loadChildren: () => \"import('../tasks/tasks.module').then((m) => m.TasksModule)\",\n      },\n    ],\n  },\n];\n\n/**\n * Dashboard routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteAccountPage.html":{"url":"components/DeleteAccountPage.html","title":"component - DeleteAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/delete-account/delete-account.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-account.page\n            \n\n            \n                styleUrls\n                ./delete-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./delete-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccount\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/delete-account/delete-account.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \ndeleteAccount(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/delete-account/delete-account.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/delete-account/delete-account.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-delete-account.page',\n  templateUrl: './delete-account.page.html',\n  styleUrls: ['./delete-account.page.scss'],\n})\nexport class DeleteAccountPage implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const { token } = this.activatedRoute.snapshot.queryParams;\n    this.deleteAccount(token);\n  }\n\n  deleteAccount(token: string) {\n    if (token) {\n      this.authService.deleteAccountConfirmation(token).subscribe(() => {});\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Your account has been deleted.\n        If you are going to revive your account, you can log in to your account click here to log in \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./delete-account.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      padding: 4rem;\n      background-color: var(--color-gray-800);\n\n      h2 {\n        margin-bottom: 0.5rem;\n      }\n\n      p {\n        margin-bottom: 1.5rem;\n      }\n\n      app-input {\n        width: 100%;\n      }\n\n      app-button {\n        align-self: flex-end;\n      }\n\n      a {\n        color: var(--color-link);\n        cursor: pointer;\n        transition: color 0.2s ease;\n\n        &:hover {\n          color: var(--color-link-hover);\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Your account has been deleted.        If you are going to revive your account, you can log in to your account click here to log in                     '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DeleteAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/dialog.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage dialogs.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dialogs$\n                            \n                            \n                                    Private\n                                dialogsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alert\n                            \n                            \n                                closeAll\n                            \n                            \n                                confirm\n                            \n                            \n                                confirmProjectDelete\n                            \n                            \n                                confirmWorkspaceDelete\n                            \n                            \n                                open\n                            \n                            \n                                openErrorDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isAnyDialogOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/dialog.service.ts:23\n                            \n                        \n\n                \n                    \n                            Default constructor with MatDialog dependency.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        alert\n                        \n                    \n                \n            \n            \n                \nalert(data: AlertDialogData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:66\n                \n            \n\n\n            \n                \n                    Opens a alert/information dialog.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AlertDialogData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeAll\n                        \n                    \n                \n            \n            \n                \ncloseAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm(data: AlertDialogData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:87\n                \n            \n\n\n            \n                \n                    Opens a confirm dialog.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AlertDialogData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmProjectDelete\n                        \n                    \n                \n            \n            \n                \nconfirmProjectDelete(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmWorkspaceDelete\n                        \n                    \n                \n            \n            \n                \nconfirmWorkspaceDelete(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(component: any, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:36\n                \n            \n\n\n            \n                \n                    Opens a modal dialog containing the given component.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Type of the component to load into the dialog.\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openErrorDialog\n                        \n                    \n                \n            \n            \n                \nopenErrorDialog(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>>(this.dialogsMap)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/dialog.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogsMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/dialog.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isAnyDialogOpen\n                    \n                \n\n                \n                    \n                        getisAnyDialogOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/services/dialog.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { BehaviorSubject, filter } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\nimport { Service } from '../decorators/service.decorator';\nimport { AlertDialog, AlertDialogData, AlertDialogVariant } from '../dialogs/alert/alert.dialog';\n\n/**\n * Service to manage dialogs.\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogService {\n  private dialogsMap = new Map();\n  private dialogs$ = new BehaviorSubject>>(this.dialogsMap);\n\n  public get isAnyDialogOpen() {\n    return this.dialogs$.getValue().size > 0;\n  }\n  /**\n   * Default constructor with `MatDialog` dependency.\n   * @param matDialog MatDialog instance\n   */\n  constructor(private matDialog: MatDialog) {}\n\n  /**\n   * Opens a modal dialog containing the given component.\n   * @param component Type of the component to load into the dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  open(component: any, data: any) {\n    const dialog = this.matDialog.open(component, {\n      data,\n      width: '400px',\n    });\n\n    const uid = uuid();\n    this.dialogsMap.set(uid, dialog);\n\n    dialog.afterClosed().subscribe(() => {\n      this.dialogsMap.delete(uid);\n      this.dialogs$.next(this.dialogsMap);\n    });\n\n    this.dialogs$.next(this.dialogsMap);\n\n    return dialog;\n  }\n\n  closeAll() {\n    this.dialogsMap.forEach((dialog) => {\n      dialog.close();\n    });\n  }\n\n  /**\n   * Opens a alert/information dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  alert(data: AlertDialogData) {\n    return this.open(AlertDialog, data)\n      .afterClosed()\n      .pipe(filter((result) => result));\n  }\n\n  openErrorDialog(error: string) {\n    const data: AlertDialogData = {\n      title: 'Error',\n      message: error,\n      variant: AlertDialogVariant.IMPORTANT,\n      cancelText: $localize`Close`,\n    };\n    return this.alert(data);\n  }\n\n  /**\n   * Opens a confirm dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  confirm(data: AlertDialogData) {\n    return this.alert(data);\n  }\n\n  confirmProjectDelete(project: Project) {\n    return this.confirm({\n      title: $localize`Delete project \"${project.name}\"`,\n      message: $localize`Are you sure you want to delete project \"${project.name}\"?`,\n      confirmText: $localize`Delete`,\n      cancelText: $localize`Cancel`,\n      variant: AlertDialogVariant.IMPORTANT,\n    });\n  }\n\n  confirmWorkspaceDelete(workspace: Workspace) {\n    return this.confirm({\n      title: $localize`Delete workspace \"${workspace.name}\"`,\n      message: $localize`Are you sure you want to delete this workspace \"${workspace.name}\"?`,\n      confirmText: $localize`Delete`,\n      cancelText: $localize`Cancel`,\n      variant: AlertDialogVariant.IMPORTANT,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ESet.html":{"url":"classes/ESet.html","title":"class - ESet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ESet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/e-set.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Set\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(key: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/e-set.class.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ESet extends Set {\n  toggle(key: any) {\n    if (this.has(key)) {\n      this.delete(key);\n    } else {\n      this.add(key);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProjectMembersPage.html":{"url":"components/EditProjectMembersPage.html","title":"component - EditProjectMembersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProjectMembersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-project-members\n            \n\n            \n                styleUrls\n                ./edit-project-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-project-members.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                editProjectWithWorkspace\n                            \n                            \n                                    Public\n                                loadProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:49\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProjectWithWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProjectWithWorkspace(newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:80\n                \n            \n\n\n            \n                \n                    Loads project data from the project service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:140\n                \n            \n\n\n            \n                \n                    Attach to lifecycle hook to unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:91\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:30\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:46\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:42\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.workspaceService.list()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  AddMemberDialog,\n  AddMemberDialogData,\n} from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-edit-project-members',\n  templateUrl: './edit-project-members.page.html',\n  styleUrls: ['./edit-project-members.page.scss'],\n})\nexport class EditProjectMembersPage {\n  faPlus = faPlus;\n\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  });\n\n  public project$!: Observable;\n  public workspaceList$: Observable = this.workspaceService.list();\n  // public workspace: Workspace = this.workspaceService.get(id);\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  private workspaceId!: number;\n  public projectId!: number;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n    this.form.addControl('id', new FormControl(projectId));\n\n    this.loadProject(projectId);\n  }\n\n  /**\n   * Loads project data from the project service.\n   * @param id project id\n   */\n  public loadProject(id: number) {\n    this.project$ = this.projectService.get(id);\n    this.getSubscription = this.project$.subscribe((workspace) => {\n      this.form.patchValue(workspace);\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    let newWorkspaceId: number = this.form.get('newWorkspaceId')?.value;\n\n    if (this.workspaceId != newWorkspaceId && newWorkspaceId != null) {\n      this.editProjectWithWorkspace(newWorkspaceId);\n    } else {\n      this.editProject();\n    }\n  }\n\n  public editProjectWithWorkspace(newWorkspaceId: number) {\n    this.updateSubscription = this.projectService\n      .changeWorkspace(this.projectId, newWorkspaceId)\n      .subscribe(() => {\n        this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n          this.router.navigate(['/', newWorkspaceId]);\n        });\n      });\n  }\n\n  public editProject() {\n    this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/', this.workspaceId]);\n    });\n  }\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {\n        projectId: this.projectId,\n      } as AddMemberDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.memberService.add(result, [this.projectId]).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n\n  /**\n   * Attach to lifecycle hook to unsubscribe from all subscriptions.\n   */\n  ngOnDestroy(): void {\n    if (this.getSubscription) this.getSubscription.unsubscribe();\n    if (this.updateSubscription) this.updateSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n  Add member\n\n\n\n\n    \n\n    \n                \n                    ./edit-project-members.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.button {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-top: -60px;\n  margin-bottom: 20px;\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add member'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditProjectMembersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProjectPage.html":{"url":"components/EditProjectPage.html","title":"component - EditProjectPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProjectPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-project/edit-project.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-project\n            \n\n            \n                styleUrls\n                ./edit-project.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-project.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                editProjectWithWorkspace\n                            \n                            \n                                    Public\n                                loadProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:40\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProjectWithWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProjectWithWorkspace(newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:69\n                \n            \n\n\n            \n                \n                    Loads project data from the project service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:125\n                \n            \n\n\n            \n                \n                    Attach to lifecycle hook to unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:89\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:21\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:37\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:33\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.workspaceService.list()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-edit-project',\n  templateUrl: './edit-project.page.html',\n  styleUrls: ['./edit-project.page.scss'],\n})\nexport class EditProjectPage implements OnDestroy {\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  });\n\n  public project$!: Observable;\n  public workspaceList$: Observable = this.workspaceService.list();\n  // public workspace: Workspace = this.workspaceService.get(id);\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  public workspaceId!: number;\n  public projectId!: number;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = Number(workspaceId);\n    this.projectId = Number(projectId);\n\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n    this.form.addControl('id', new FormControl(projectId));\n\n    this.loadProject(projectId);\n  }\n\n  /**\n   * Loads project data from the project service.\n   * @param id project id\n   */\n  public loadProject(id: number) {\n    this.project$ = this.projectService.get(id);\n    this.getSubscription = this.project$.subscribe((project) => {\n      this.form.patchValue(project);\n    });\n\n    this.workspaceList$.subscribe((workspaces) => {\n      const workspace = workspaces.find((workspace) => workspace.id === this.workspaceId);\n      if (workspace) {\n        this.form.patchValue({\n          newWorkspaceId: workspace.id,\n        });\n      }\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    let newWorkspaceId: number = this.form.get('newWorkspaceId')?.value;\n\n    if (this.workspaceId != newWorkspaceId && newWorkspaceId != null) {\n      this.editProjectWithWorkspace(newWorkspaceId);\n    } else {\n      this.editProject();\n    }\n  }\n\n  public editProjectWithWorkspace(newWorkspaceId: number) {\n    this.updateSubscription = this.projectService\n      .changeWorkspace(this.projectId, newWorkspaceId)\n      .subscribe(() => {\n        this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n          this.router.navigate(['/', newWorkspaceId]).then(() => {\n            location.reload();\n          });\n        });\n      });\n  }\n\n  public editProject() {\n    this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/', this.workspaceId]);\n    });\n  }\n\n  /**\n   * Attach to lifecycle hook to unsubscribe from all subscriptions.\n   */\n  ngOnDestroy(): void {\n    if (this.getSubscription) this.getSubscription.unsubscribe();\n    if (this.updateSubscription) this.updateSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n  \n    Workspace:\n    \n      {{ workspace.name }}\n      \n    \n  \n\n  \n    Modules\n  \n  \n  \n    Save\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./edit-project.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.buttons {\n  display: flex;\n  margin-top: 1rem;\n\n  &>* {\n    display: block;\n    margin-right: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Workspace:          {{ workspace.name }}                  Modules          Save    Cancel  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditProjectPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditWorkspacePage.html":{"url":"components/EditWorkspacePage.html","title":"component - EditWorkspacePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditWorkspacePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts\n\n\n\n    \n        Description\n    \n    \n        Edit workspace page component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-workspace-page\n            \n\n            \n                styleUrls\n                ./edit-workspace.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-workspace.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadWorkspace\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:36\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadWorkspace(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:58\n                \n            \n\n\n            \n                \n                    Loads workspace data from the workspace service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:69\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    id: new FormControl(-1),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:22\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:36\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:32\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Edit workspace page component.\n */\n@Component({\n  selector: 'app-edit-workspace-page',\n  templateUrl: './edit-workspace.page.html',\n  styleUrls: ['./edit-workspace.page.scss'],\n})\nexport class EditWorkspacePage {\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    id: new FormControl(-1),\n  });\n\n  public workspace$!: Observable;\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n\n    this.loadWorkspace(workspaceId);\n  }\n\n  /**\n   * Loads workspace data from the workspace service.\n   * @param id Workspace id\n   */\n  public loadWorkspace(id: number) {\n    this.workspace$ = this.workspaceService.get(id);\n    this.getSubscription = this.workspace$.subscribe((workspace) => {\n      this.form.patchValue(workspace);\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.updateSubscription = this.workspaceService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/']).then(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  Edit workspace: {{ (workspace$ | async)?.name }}\n  \n\n  \n    Save\n    Cancel\n  \n\n\n    \n\n    \n                \n                    ./edit-workspace.page.scss\n                \n                form {\n  padding: 4rem;\n}\n\n.buttons {\n  display: flex;\n  margin-top: 1rem;\n\n  &>* {\n    display: block;\n    margin-right: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Edit workspace: {{ (workspace$ | async)?.name }}        Save    Cancel  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditWorkspacePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailsModule.html":{"url":"modules/EmailsModule.html","title":"module - EmailsModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EmailsModule\n\n\n\ncluster_EmailsModule_imports\n\n\n\n\nEmailsRoutingModule\n\nEmailsRoutingModule\n\n\n\nEmailsModule\n\nEmailsModule\n\nEmailsModule -->\n\nEmailsRoutingModule->EmailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/emails/emails.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            EmailsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmailsRoutingModule } from './emails.routing';\n\n@NgModule({\n  imports: [CommonModule, EmailsRoutingModule],\n  declarations: [],\n})\nexport class EmailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailsRoutingModule.html":{"url":"modules/EmailsRoutingModule.html","title":"module - EmailsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/emails/emails.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\n\n/**\n * Emails routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/inbox.svg',\n    },\n  },\n];\n\n/**\n * Emails routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmailsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Enum.html":{"url":"classes/Enum.html","title":"class - Enum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Enum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/enum.class.ts\n        \n\n\n            \n                Description\n            \n            \n                Utility enum functions for typescript\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                entries\n                            \n                            \n                                    Static\n                                isNumeric\n                            \n                            \n                                    Static\n                                keys\n                            \n                            \n                                    Static\n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        entries\n                        \n                    \n                \n            \n            \n                \n                    \n                    entries(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:70\n                \n            \n\n\n            \n                \n                    Function to get enum value by key.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.entries(TestEnum) // [['One', 1], ['Two', 2], ['Three', 3]]\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get entries from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.entries(TestEnum) // [[&#39;One&#39;, 1], [&#39;Two&#39;, 2], [&#39;Three&#39;, 3]]\n                        \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        array of enum entries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isNumeric\n                        \n                    \n                \n            \n            \n                \n                    \n                    isNumeric(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:10\n                \n            \n\n\n            \n                \n                    Tests if the given enum is numeric - contains at leas one number as value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to test\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true or false based on whether enum has numeric values\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        keys\n                        \n                    \n                \n            \n            \n                \n                    \n                    keys(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:32\n                \n            \n\n\n            \n                \n                    Function to get enum keys.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.keys(TestEnum) // ['One', 'Two', 'Three']\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get keys from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.keys(TestEnum) // [&#39;One&#39;, &#39;Two&#39;, &#39;Three&#39;]\n                        \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        array of enum keys\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        values\n                        \n                    \n                \n            \n            \n                \n                    \n                    values(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:48\n                \n            \n\n\n            \n                \n                    Function to get enum values.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.values(TestEnum) // [1, 2, 3]\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get values from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.values(TestEnum) // [1, 2, 3]\n                        \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        array of enum values\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Enum {\n  /**\n   * Tests if the given enum is numeric - contains at leas one number as value.\n   * @param enumType enum to test\n   * @returns true or false based on whether enum has numeric values\n   */\n  public static isNumeric(enumType: any): boolean {\n    for (const key of Object.keys(enumType)) {\n      if (Number(key)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Function to get enum keys.\n   * @param enumType enum to get keys from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.keys(TestEnum) // ['One', 'Two', 'Three']\n   * @returns array of enum keys\n   */\n  public static keys(enumType: any): string[] {\n    return Object.keys(enumType).filter((k) => !Number(k) && k != '0');\n  }\n\n  /**\n   * Function to get enum values.\n   * @param enumType enum to get values from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.values(TestEnum) // [1, 2, 3]\n   * @returns array of enum values\n   */\n  public static values(enumType: any): any[] {\n    if (!Enum.isNumeric(enumType)) {\n      return Object.values(enumType);\n    }\n\n    return Object.values(enumType)\n      .filter((v) => Number(v) || v === '0')\n      .map((v) => Number(v));\n  }\n\n  /**\n   * Function to get enum value by key.\n   * @param enumType enum to get entries from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.entries(TestEnum) // [['One', 1], ['Two', 2], ['Three', 3]]\n   * @returns array of enum entries\n   */\n  public static entries(enumType: any): [string, any][] {\n    if (!Enum.isNumeric(enumType)) {\n      return Object.entries(enumType);\n    }\n\n    return Object.entries(enumType)\n      .filter((e) => Number(e[1]) || e[1] === '0' || e[1] === 0)\n      .map((e) => [e[0], Number(e[1])]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                unauthorizedInARow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/interceptors/error.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/interceptors/error.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unauthorizedInARow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/interceptors/error.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DialogService } from '@main/services/dialog.service';\nimport { catchError, EMPTY, Observable, throwError } from 'rxjs';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private dialogService: DialogService, private router: Router) {}\n\n  private unauthorizedInARow = 0;\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((e, obs) => {\n        if (e.status === 401) {\n          this.unauthorizedInARow++;\n\n          if (this.unauthorizedInARow > 1) return EMPTY;\n\n          this.dialogService.closeAll();\n\n          if (e.error.message == 'user deleted') {\n            localStorage.removeItem('logged');\n            this.router.navigate(['/auth/delete-account']);\n            return EMPTY;\n          }\n\n          if (localStorage.getItem('logged')) {\n            localStorage.removeItem('logged');\n            this.dialogService.openErrorDialog($localize`Your session has expired.`);\n          }\n\n          this.router.navigate(['/auth/login']);\n          return EMPTY;\n        }\n\n        return throwError(() => e);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorValidationTree.html":{"url":"interfaces/ErrorValidationTree.html","title":"interface - ErrorValidationTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorValidationTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/decorators/service-validator.decorator.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/decorators/service-validator.decorator.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { DialogService } from '@main/services/dialog.service';\nimport { Observable } from 'rxjs';\n\nexport interface ErrorValidationTree {\n  [key: string]: {\n    [key: number]: string;\n  };\n}\n\nexport function ServiceValidator(errorValidationTree: ErrorValidationTree) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    descriptor.value = function (identifier: string) {\n      // const result = originalMethod.apply(this, identifier);\n\n      // This function returns new observable to use it as a pipe in other observables\n      return (source: Observable) => {\n        // Check for match in response\n        const match = (response: any) => {\n          // identifier check\n          if (!errorValidationTree[identifier]) return;\n\n          // Status check\n          const status = response?.error?.status || response?.status;\n          if (!status) return;\n\n          return errorValidationTree[identifier][status] || null;\n        };\n\n        const showAlert = (message: string, responseType: 'SUCCESS' | 'ERROR') => {\n          const dialogService = (window as any).injector.get(DialogService);\n\n          dialogService.alert({\n            title:\n              responseType === 'SUCCESS' ? $localize`Success` : $localize`Something went wrong`,\n            message,\n            cancelText: $localize`OK`,\n          });\n        };\n\n        return new Observable((subscriber) => {\n          source.subscribe({\n            next(value) {\n              const m = match(value);\n\n              if (m) {\n                showAlert(m, 'ERROR');\n              } else {\n                subscriber.next(value);\n              }\n            },\n            error(error) {\n              const m = match(error);\n\n              if (m) {\n                showAlert(m, 'ERROR');\n              } else {\n                subscriber.error(error);\n              }\n            },\n            complete() {\n              subscriber.complete();\n            },\n          });\n        });\n      };\n    };\n\n    return descriptor;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterCheckbox.html":{"url":"interfaces/FilterCheckbox.html","title":"interface - FilterCheckbox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterCheckbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/filters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        apply\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(input: T, option: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/interfaces/filters.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    option\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     \"1\" | \"0\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"1\" | \"0\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterCheckbox {\n  type: 'checkbox';\n  options: {\n    1: T | null;\n    0: T | null;\n  };\n  value: 1 | 0;\n  label: string;\n  apply(input: T, option: any): T;\n}\n\nexport type Filter = FilterCheckbox;\n\nexport type FilterType = 'checkbox';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filters.html":{"url":"classes/Filters.html","title":"class - Filters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/filters.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ONLY_MY_TASKS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        ONLY_MY_TASKS\n                        \n                    \n                \n            \n            \n                \n                    \n                    ONLY_MY_TASKS(currentUserId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/filters.class.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterCheckbox\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterCheckbox } from '@main/interfaces/filters.interface';\nimport { Task } from '@tasks/interfaces/task.interface';\n\nexport class Filters {\n  public static ONLY_MY_TASKS(currentUserId: string): FilterCheckbox {\n    return {\n      type: 'checkbox',\n      label: $localize`Only my tasks`,\n      options: {\n        1: { assigneeId: currentUserId },\n        0: {},\n      },\n      value: 0,\n      apply(tasks: Task[], option: { assigneeId?: string }) {\n        return tasks.filter((task) => task.assigneeId === option.assigneeId);\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/filters/filters.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n            \n                styleUrls\n                ./filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filters\n                            \n                            \n                                    Public\n                                    Optional\n                                form\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getControl\n                            \n                            \n                                    Public\n                                saveFilters\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filters\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/filters/filters.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/filters/filters.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getControl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getControl(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/filters/filters.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/filters/filters.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/filters/filters.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormArray\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/filters/filters.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n\n                \n                    \n                        getfilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/filters/filters.component.ts:21\n                                \n                            \n\n                \n                    \n                        setfilters(filters: Filter[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/filters/filters.component.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            filters\n                                                    \n                                                            \n                                                                            Filter[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormArray, FormControl, NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Filter } from '@main/interfaces/filters.interface';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss'],\n})\nexport class FiltersComponent extends ControlAccessor {\n  @Input() set filters(filters: Filter[]) {\n    this.form = new FormArray(\n      filters.map((filter) => {\n        return new FormControl(filter.value);\n      }),\n    );\n    this._filters = filters;\n  }\n\n  public get filters() {\n    return this._filters;\n  }\n\n  private _filters: Filter[] = [];\n  public form?: FormArray;\n\n  constructor(public override ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  public getControl(index: number) {\n    const control = (this.form?.controls[index] || new FormControl()) as FormControl;\n    return control;\n  }\n\n  public saveFilters() {\n    if (!this.form) return;\n\n    let formValue: Filter[] = [];\n\n    for (const [index, filter] of this.filters.entries()) {\n      const filterValue = Number(this.form?.controls[index].value) as 0 | 1;\n      filter.value = filterValue;\n      formValue.push(filter);\n    }\n\n    this.control.setValue(formValue);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ filter.label }}\n      \n      Unknown filter type: {{ filter.type }}\n    \n  \n\n  Save filters\n\n    \n\n    \n                \n                    ./filters.component.scss\n                \n                .filters {\n  width: 100%;\n\n  app-button {\n    width: 100%;\n\n    ::ng-deep button {\n      width: 100%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ filter.label }}            Unknown filter type: {{ filter.type }}        Save filters'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusInitialDirective.html":{"url":"directives/FocusInitialDirective.html","title":"directive - FocusInitialDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  FocusInitialDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/focus-initial.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive to focus on the first input element on the page\n\n            \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFocusInitial]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/directives/focus-initial.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Default constructor of the directive.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to attached element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/directives/focus-initial.directive.ts:19\n                \n            \n\n\n            \n                \n                    Lifecycle hook to initialize the directive.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n/**\n * Directive to focus on the first input element on the page\n */\n@Directive({\n  selector: '[appFocusInitial]',\n})\nexport class FocusInitialDirective implements AfterViewInit {\n  /**\n   * Default constructor of the directive.\n   * @param el Reference to attached element\n   */\n  constructor(private el: ElementRef) {}\n\n  /**\n   * Lifecycle hook to initialize the directive.\n   */\n  ngAfterViewInit(): void {\n    this.el.nativeElement.__ngContext__[33].focus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordPage.html":{"url":"components/ForgotPasswordPage.html","title":"component - ForgotPasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/forgot-password/forgot-password.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-page\n            \n\n            \n                styleUrls\n                ./forgot-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAngleDown\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                resetSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:24\n                        \n                    \n\n            \n                \n                    Form group for reset password.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        resetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-forgot-page',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  faAngleDown = faAngleDown;\n\n  private resetSubscription?: Subscription;\n\n  /**\n   * Form group for reset password.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n  });\n\n  resetPassword() {\n    if (this.resetSubscription && !this.resetSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.resetSubscription = this.authService.resetPassword(this.form.value).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        Back to login page\n      \n      \n        \n          Reset password\n          When you enter your email address, you will receive an email with a link to reset your password.\n        \n\n        \n\n        Reset password\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .return-button {\n      position: relative;\n      display: flex;\n      align-items: center;\n      align-self: flex-start;\n      margin: 0 0 0 40px;\n\n      &:hover {\n        a {\n          color: var(--color-link-hover);\n        }\n\n        app-icon {\n          color: var(--color-link-hover);\n        }\n      }\n\n      app-icon {\n        display: inline-block;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: 5px;\n        color: var(--color-link);\n        transform: rotate(90deg);\n      }\n\n      a {\n        color: var(--color-link);\n        cursor: pointer;\n        transition: color 0.2s ease;\n      }\n    }\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Back to login page                              Reset password          When you enter your email address, you will receive an email with a link to reset your password.                        Reset password                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormGroup.html":{"url":"interfaces/FormGroup.html","title":"interface - FormGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typings/typings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        submit\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/typings/typings.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\n\ndeclare global {\n  interface FormGroup {\n    submit(): void;\n  }\n}\n\n(FormGroup as any).prototype.submit = function () {\n  console.log('submit');\n};\n\nexport {};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitAccount.html":{"url":"interfaces/GitAccount.html","title":"interface - GitAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitHubUsername\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            suspended\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitHubUsername\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitHubUsername:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suspended\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suspended:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitAccountWithUsage.html":{"url":"interfaces/GitAccountWithUsage.html","title":"interface - GitAccountWithUsage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitAccountWithUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                                \n                                        \n                                            usage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:         GitAccount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitAccount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usage:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GitAccount } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { map, Observable, take } from 'rxjs';\n\ninterface GitAccountWithUsage {\n  account: GitAccount;\n  usage: Observable;\n}\n\n@Component({\n  selector: 'app-settings-integrations',\n  templateUrl: './settings-integrations.page.html',\n  styleUrls: ['./settings-integrations.page.scss'],\n})\nexport class SettingsIntegrationsPage implements OnInit {\n  public gitHubAccounts$!: Observable;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  ngOnInit() {\n    this.loadGitHubIntegration();\n  }\n\n  public loadGitHubIntegration(): void {\n    this.gitHubAccounts$ = this.gitIntegrationService.getConnectedGitHubAccounts().pipe(\n      map((accounts) => {\n        return accounts.map((account) => {\n          return {\n            account,\n            usage: this.getConnectedProjects(account).pipe(take(1)),\n          };\n        });\n      }),\n    );\n  }\n\n  public disconnect(account: GitAccount): void {\n    this.gitIntegrationService.deleteConnectedGitHubAccount(account.id).subscribe(({ link }) => {\n      window.open(link, '_blank');\n    });\n  }\n\n  public getConnectedProjects(account: GitAccount): Observable {\n    return this.gitIntegrationService\n      .getGitHubAccountConnectedProjects(account)\n      .pipe(map((projects) => projects.map((project: any) => project.name).join(', ')));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitIntegration.html":{"url":"interfaces/GitIntegration.html","title":"interface - GitIntegration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitIntegration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitRepositories\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitRepositories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitRepositories:         GitRepository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitRepository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GitIntegrationService.html":{"url":"injectables/GitIntegrationService.html","title":"injectable - GitIntegrationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GitIntegrationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/git-integration.service.ts\n        \n\n\n            \n                Description\n            \n            \n                How to use Git integration service:\n\nRun method startGitHubIntegration() to start the integration process and open the browser to the GitHub login page.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attachGitHubIntegration\n                            \n                            \n                                    Public\n                                connectGitHubIssue\n                            \n                            \n                                    Public\n                                connectGitHubPull\n                            \n                            \n                                    Public\n                                deleteConnectedGitHubAccount\n                            \n                            \n                                    Public\n                                deleteGitHubIntegration\n                            \n                            \n                                    Public\n                                disconnectGitHubIssue\n                            \n                            \n                                    Public\n                                disconnectGitHubPull\n                            \n                            \n                                    Public\n                                getConnectedGitHubAccounts\n                            \n                            \n                                    Public\n                                getGitHubAccountConnectedProjects\n                            \n                            \n                                    Public\n                                getGitHubIntegration\n                            \n                            \n                                    Public\n                                gitHubIssueList\n                            \n                            \n                                    Public\n                                gitHubPullList\n                            \n                            \n                                    Public\n                                hasGitHubIntegration\n                            \n                            \n                                    Public\n                                isOwnerOfRepository\n                            \n                            \n                                    Public\n                                postGitHubIntegration\n                            \n                            \n                                    Public\n                                startGitHubIntegration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/git-integration.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attachGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    attachGitHubIntegration(projectId: number, repositoryName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repositoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectGitHubIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectGitHubIssue(projectId: number, taskId: number, issue?: GitIssue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    issue\n                                    \n                                                GitIssue\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectGitHubPull\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectGitHubPull(projectId: number, taskId: number, pull?: GitPull)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pull\n                                    \n                                                GitPull\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteConnectedGitHubAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteConnectedGitHubAccount(gitHubAccountId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:81\n                \n            \n\n\n            \n                \n                    Delete the given account connection\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gitHubAccountId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GitHub account id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with link to open the GitHub page with application removal\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGitHubIntegration(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnectGitHubIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnectGitHubIssue(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnectGitHubPull\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnectGitHubPull(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConnectedGitHubAccounts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConnectedGitHubAccounts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGitHubAccountConnectedProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGitHubAccountConnectedProjects(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gitHubIssueList\n                        \n                    \n                \n            \n            \n                \n                    \n                    gitHubIssueList(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gitHubPullList\n                        \n                    \n                \n            \n            \n                \n                    \n                    gitHubPullList(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hasGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasGitHubIntegration(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isOwnerOfRepository\n                        \n                    \n                \n            \n            \n                \n                    \n                    isOwnerOfRepository(repositoryName: string, account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:128\n                \n            \n\n\n            \n                \n                    Checks if the given account is the owner of the repository\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    repositoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Repository name with it's owner ex.\n\n                                    \n                                \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GitHub account object to test with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.gitHubIntegrationService.isOwnerOfRepository(&#39;@czemar/cli&#39;, account)\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the repository is owned by the account\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        postGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    postGitHubIntegration(installationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    installationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        startGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    startGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:33\n                \n            \n\n\n            \n                \n                    Start GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.\n\n\n                    \n                        Example :\n                        \n                            this.gitHubIntegrationService.startGitHubIntegration()\n                        \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable true if the opened window with GitHub integration was closed\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  GitAccount,\n  GitIntegration,\n  GitIssue,\n  GitPull,\n} from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { ApiService } from '@main/services/api.service';\nimport { filter, interval, map, mergeMap, Observable, take } from 'rxjs';\nimport { ProjectService } from './project.service';\n\n/**\n * How to use Git integration service:\n *\n * 1. Run method `startGitHubIntegration()` to start the integration process and open the browser to the GitHub login page.\n *\n *\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class GitIntegrationService {\n  constructor(private apiService: ApiService, private projectService: ProjectService) {}\n\n  /**\n   * Start GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.\n   * @example this.gitHubIntegrationService.startGitHubIntegration()\n   * @returns Observable true if the opened window with GitHub integration was closed\n   */\n  public startGitHubIntegration(): Observable {\n    return this.apiService.get('/user/integration/github/repository').pipe(\n      map((response: any) => response.link),\n      mergeMap((url) => {\n        const win = window.open(url, '_blank');\n\n        if (!win) throw new Error('This browser does not support window.open');\n\n        return interval(100).pipe(\n          map(() => win.closed),\n          filter((closed) => closed),\n          take(1),\n        );\n      }),\n    );\n  }\n\n  public postGitHubIntegration(installationId: string): Observable {\n    return this.apiService.post(`/user/integration/github`, {\n      params: { installationId },\n    });\n  }\n\n  public getGitHubIntegration(): Observable {\n    return this.apiService.get('/user/integration/github/repository');\n  }\n\n  public attachGitHubIntegration(projectId: number, repositoryName: string): Observable {\n    return this.apiService.post(`/project/${projectId}/integration/github`, {\n      body: repositoryName,\n    });\n  }\n\n  public getConnectedGitHubAccounts(): Observable {\n    return this.apiService\n      .get('/user/integration/github')\n      .pipe(\n        map((accounts: GitAccount[]) =>\n          accounts.map((account) => ({ ...account, gitHubUsername: `@${account.gitHubUsername}` })),\n        ),\n      );\n  }\n\n  /**\n   * Delete the given account connection\n   * @param gitHubAccountId GitHub account id\n   * @returns object with link to open the GitHub page with application removal\n   */\n  public deleteConnectedGitHubAccount(gitHubAccountId: number): Observable {\n    return this.apiService.delete(`/user/integration/github/${gitHubAccountId}`);\n  }\n\n  public deleteGitHubIntegration(projectId: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/integration/github`);\n  }\n\n  public hasGitHubIntegration(projectId: number): Observable {\n    return this.projectService.get(projectId).pipe(map((project) => !!project.gitHubIntegration));\n  }\n\n  public gitHubIssueList(projectId: number) {\n    return this.apiService.get(`/project/${projectId}/integration/git/issue`);\n  }\n\n  public connectGitHubIssue(projectId: number, taskId: number, issue?: GitIssue) {\n    return this.apiService.post(`/project/${projectId}/task/${taskId}/integration/git/issue`, {\n      body: issue,\n    });\n  }\n\n  public disconnectGitHubIssue(projectId: number, taskId: number) {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}/integration/git/issue`);\n  }\n\n  public gitHubPullList(projectId: number) {\n    return this.apiService.get(`/project/${projectId}/integration/git/pull`);\n  }\n\n  public connectGitHubPull(projectId: number, taskId: number, pull?: GitPull) {\n    return this.apiService.post(`/project/${projectId}/task/${taskId}/integration/git/pull`, {\n      body: pull,\n    });\n  }\n\n  public disconnectGitHubPull(projectId: number, taskId: number) {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}/integration/git/pull`);\n  }\n\n  /**\n   * Checks if the given account is the owner of the repository\n   * @param repositoryName Repository name with it's owner ex. @czemar/cli\n   * @param account GitHub account object to test with\n   * @example this.gitHubIntegrationService.isOwnerOfRepository('@czemar/cli', account)\n   * @returns true if the repository is owned by the account\n   */\n  public isOwnerOfRepository(repositoryName: string, account: GitAccount): boolean {\n    const preparedUsername = account.gitHubUsername.replace('@', '');\n    return Boolean(repositoryName.match(new RegExp('^' + preparedUsername + '/*')));\n  }\n\n  public getGitHubAccountConnectedProjects(account: GitAccount): Observable {\n    return this.projectService\n      .list()\n      .pipe(\n        map((projects) =>\n          projects.filter(\n            (project: Project) =>\n              project.gitHubIntegration &&\n              this.isOwnerOfRepository(project.gitHubIntegration, account),\n          ),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitIssue.html":{"url":"interfaces/GitIssue.html","title":"interface - GitIssue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitIssue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitPull.html":{"url":"interfaces/GitPull.html","title":"interface - GitPull","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitPull\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            branch\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitRepository.html":{"url":"interfaces/GitRepository.html","title":"interface - GitRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fullName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            private\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GithubIntegrationPage.html":{"url":"components/GithubIntegrationPage.html","title":"component - GithubIntegrationPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GithubIntegrationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/github-integration/github-integration.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-github-integration-page\n            \n\n            \n                styleUrls\n                ./github-integration.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./github-integration.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/github-integration/github-integration.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/github-integration/github-integration.page.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\n\n@Component({\n  selector: 'app-github-integration-page',\n  templateUrl: './github-integration.page.html',\n  styleUrls: ['./github-integration.page.scss'],\n})\nexport class GithubIntegrationPage implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private gitIntegrationService: GitIntegrationService,\n  ) {}\n\n  ngOnInit() {\n    const { installation_id, setup_action } = this.activatedRoute.snapshot.queryParams;\n\n    console.log(installation_id, setup_action, setup_action !== 'update');\n\n    if (installation_id && setup_action && setup_action !== 'update') {\n      this.gitIntegrationService.postGitHubIntegration(installation_id).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  GitHub connection success\n\n\n  Now you can close this page\n\n\n    \n\n    \n                \n                    ./github-integration.page.scss\n                \n                :host {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\nh2 {\n  color: var(--color-text);\n  font-size: 1.5rem;\n}\n\np {\n  color: var(--color-text);\n  opacity: 0.75;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  GitHub connection success  Now you can close this page'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'GithubIntegrationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/icon/icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        Icon component. Supports material icons and font-awesome icons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-icon\n            \n\n            \n                styleUrls\n                ./icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _icon\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                prefix\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.height\n                            \n                            \n                                style.width\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    iconDefinition\n                                \n                                \n                                    style\n                                \n                                \n                                    snakeCaseName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/icon/icon.component.ts:35\n                            \n                        \n                \n                    \n                        Icon to display. Can be a string or an icon definition.\nFor example:\nFor the icon \"fa fa-question\" you can use:\nFor the icon \"mat search\" you can use:\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '24px'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/icon/icon.component.ts:19\n                            \n                        \n                \n                    \n                        Icon size. Defaults to 1.5em. Supports all CSS units.\nFor example: 24px, 1.5em, etc.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:66\n                        \n                    \n\n            \n                \n                    Binding to the hosts height attribute to use the size input.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:59\n                        \n                    \n\n            \n                \n                    Binding to hosts width attribute to use the size input.\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:95\n                        \n                    \n\n            \n                \n                    Private icon variable to use getter and setter for props.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconName\n\n                    \n                \n                \n                    \n                        Default value : 'question'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:105\n                        \n                    \n\n            \n                \n                    Name getter\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconPrefix\n\n                    \n                \n                \n                    \n                        Default value : 'fas'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:100\n                        \n                    \n\n            \n                \n                    Prefix getter\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:52\n                                \n                            \n                    \n                        \n                                Icon getter\n\n\n                                \n                                    Returns :     string | IconDefinition\n\n                                \n                        \n                    \n\n                \n                    \n                        seticon(value: string | IconDefinition)\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:35\n                                \n                            \n                    \n                        \n                                Icon to display. Can be a string or an icon definition.\nFor example:\nFor the icon \"fa fa-question\" you can use:\nFor the icon \"mat search\" you can use:\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string | IconDefinition\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:59\n                                \n                            \n                    \n                        \n                                Binding to hosts width attribute to use the size input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:66\n                                \n                            \n                    \n                        \n                                Binding to the hosts height attribute to use the size input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        iconDefinition\n                    \n                \n\n                \n                    \n                        geticonDefinition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:73\n                                \n                            \n                    \n                        \n                                Getter to the icon definition. If no icon is found it returns the question icon.\n\n\n                                \n                                    Returns :     IconDefinition\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        style\n                    \n                \n\n                \n                    \n                        getstyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:83\n                                \n                            \n                    \n                        \n                                Style host binding to set the icon size.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        snakeCaseName\n                    \n                \n\n                \n                    \n                        getsnakeCaseName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:113\n                                \n                            \n                    \n                        \n                                Getter to get the icon name in snake case.\nFor example:\nfor ShoppingCart this function will return shopping_cart\n\n\n                                \n                                    Returns :     IconName\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Input } from '@angular/core';\nimport { IconName, IconPrefix } from '@fortawesome/fontawesome-svg-core';\nimport { Utils } from '../../classes/utils.class';\nimport { faQuestion, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Icon component. Supports material icons and font-awesome icons.\n */\n@Component({\n  selector: 'app-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent {\n  /**\n   * Icon size. Defaults to 1.5em. Supports all CSS units.\n   * For example: 24px, 1.5em, etc.\n   */\n  @Input() size: string = '24px';\n\n  /**\n   * Icon to display. Can be a string or an icon definition.\n   * For example:\n   *\n   * For the icon \"fa fa-question\" you can use:\n   * ```html\n   * \n   * ```\n   *\n   * For the icon \"mat search\" you can use:\n   * ```html\n   * \n   * ```\n   */\n  @Input() set icon(value: string | IconDefinition) {\n    this._icon = value;\n\n    if (typeof value === 'string') {\n      const splitIndex = Utils.regexIndexOf(value, /[A-Z]/);\n\n      this.prefix = value.substring(0, splitIndex) as IconPrefix;\n      this.name = value.substring(splitIndex) as IconName;\n    } else {\n      this.prefix = value.prefix as IconPrefix;\n      this.name = value.iconName as IconName;\n    }\n  }\n\n  /**\n   * Icon getter\n   */\n  public get icon(): string | IconDefinition {\n    return this._icon;\n  }\n\n  /**\n   * Binding to hosts width attribute to use the size input.\n   */\n  @HostBinding('style.width') get width() {\n    return this.size;\n  }\n\n  /**\n   * Binding to the hosts height attribute to use the size input.\n   */\n  @HostBinding('style.height') get height() {\n    return this.size;\n  }\n\n  /**\n   * Getter to the icon definition. If no icon is found it returns the question icon.\n   */\n  public get iconDefinition(): IconDefinition {\n    if (typeof this._icon === 'string') {\n      return faQuestion;\n    }\n    return this._icon as IconDefinition;\n  }\n\n  /**\n   * Style host binding to set the icon size.\n   */\n  public get style() {\n    return {\n      'font-size': this.size,\n      width: this.size,\n      height: this.size,\n      'line-height': this.size,\n    };\n  }\n\n  /**\n   * Private icon variable to use getter and setter for props.\n   */\n  private _icon: string | IconDefinition = '';\n\n  /**\n   * Prefix getter\n   */\n  public prefix: IconPrefix = 'fas';\n\n  /**\n   * Name getter\n   */\n  public name: IconName = 'question';\n\n  /**\n   * Getter to get the icon name in snake case.\n   * For example:\n   *\n   * for `ShoppingCart` this function will return `shopping_cart`\n   */\n  public get snakeCaseName(): IconName {\n    return Utils.snakeCase(this.name) as IconName;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    {{ snakeCaseName }}\n  \n  \n    \n  \n  \n    question_mark\n  \n\n    \n\n    \n                \n                    ./icon.component.scss\n                \n                :host {\n  display: flex;\n  width: 24px;\n  height: 24px;\n  align-items: center;\n  justify-content: center;\n  font-size: 0;\n\n  fa-icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ snakeCaseName }}                question_mark  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputAssigneeComponent.html":{"url":"components/InputAssigneeComponent.html","title":"component - InputAssigneeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputAssigneeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/input-assignee/input-assignee.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n            \n                selector\n                app-input-assignee\n            \n\n            \n                styleUrls\n                ./input-assignee.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-assignee.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _assignee\n                            \n                            \n                                    Public\n                                    Optional\n                                assigneeColor\n                            \n                            \n                                    Public\n                                    Readonly\n                                isOpen$\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                overlay\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assignee\n                            \n                            \n                                members\n                            \n                            \n                                projectId\n                            \n                            \n                                taskId\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    assignee\n                                \n                                \n                                    members\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assignee\n                    \n                \n                \n                    \n                        Type :     ProjectMember | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n                \n                    \n                        Type :     Map | []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        taskId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(member: ProjectMember | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    member\n                                    \n                                            ProjectMember | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _assignee\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectMember | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        assigneeColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as any)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('overlay')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        assignee\n                    \n                \n\n                \n                    \n                        getassignee()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:27\n                                \n                            \n\n                \n                    \n                        setassignee(assignee: ProjectMember | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            assignee\n                                                    \n                                                            \n                                                                        ProjectMember | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n\n\n                \n                    \n                        setmembers(members: Map | ProjectMember[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            members\n                                                    \n                                                            \n                                                                        Map | ProjectMember[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:60\n                                \n                            \n\n                \n                    \n                        setisOpen(val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:56\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { UserUtils } from '@dashboard/classes/user.class';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { TaskService } from '@tasks/services/task.service';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport * as Color from 'color';\nimport { BehaviorSubject, filter, fromEvent, take } from 'rxjs';\n\n@Component({\n  selector: 'app-input-assignee',\n  templateUrl: './input-assignee.component.html',\n  styleUrls: ['./input-assignee.component.scss'],\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\nexport class InputAssigneeComponent extends ControlAccessor {\n  @Input() set assignee(assignee: ProjectMember | null) {\n    this._assignee = assignee;\n\n    if (assignee) {\n      this.assigneeColor = UserUtils.getColorById(assignee?.user.id);\n    } else {\n      this.assigneeColor = undefined;\n    }\n  }\n  public get assignee(): ProjectMember | null {\n    return this._assignee;\n  }\n\n  @Input() set members(members: Map | ProjectMember[]) {\n    if (Array.isArray(members)) {\n      for (const member of members) {\n        (member as any).color = UserUtils.getColorById(member.user.id);\n      }\n      this.members$.next(members as any);\n    } else if (members) {\n      const membersArray = [...members.values()];\n      for (const member of membersArray) {\n        (member as any).color = UserUtils.getColorById(member.user.id);\n      }\n      this.members$.next(membersArray as any);\n    }\n  }\n  @Input() taskId?: number;\n  @Input() projectId?: number;\n\n  @ViewChild('overlay') overlay!: ElementRef;\n\n  private _assignee: ProjectMember | null = null;\n\n  public members$ = new BehaviorSubject([] as any);\n  public readonly isOpen$ = new BehaviorSubject(false);\n  public assigneeColor?: Color;\n\n  public set isOpen(val: boolean) {\n    this.isOpen$.next(val);\n  }\n\n  public get isOpen() {\n    return this.isOpen$.value;\n  }\n\n  constructor(public override ngControl: NgControl, private taskService: TaskService) {\n    super(ngControl);\n  }\n\n  public open() {\n    setTimeout(() => {\n      fromEvent(document, 'click')\n        .pipe(\n          take(1),\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\n        )\n        .subscribe(() => this.close());\n      this.isOpen$.next(true);\n    });\n  }\n\n  public close() {\n    this.isOpen$.next(false);\n  }\n\n  public toggle() {\n    if (this.isOpen) {\n      return this.close();\n    }\n    return this.open();\n  }\n\n  public select(member: ProjectMember | null) {\n    if (this.taskId && this.projectId)\n      this.taskService\n        .assign(member?.user.id || null, this.taskId, this.projectId)\n        .subscribe(() => {\n          this.close();\n          location.reload();\n        });\n  }\n}\n\n    \n\n    \n        \n\n  {{ assignee ? assignee.user.name[0] : '+' }}\n\n\n\n  \n    \n      {{ member.user.name[0] }}\n      \n        {{ member.user.name }} {{ member.user.surname }}\n        @{{ member.user.username }}\n      \n    \n    \n    \n      -\n      Remove assignee\n    \n  \n\n    \n\n    \n                \n                    ./input-assignee.component.scss\n                \n                @import '../../../../styles/typography';\n\n.assignee {\n  display: flex;\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-secondary-400);\n  border-radius: 50%;\n  color: var(--color-text);\n  cursor: pointer;\n  transition: background-color 0.4s ease;\n\n  &:not(.add) {\n    @include typo-title;\n\n    background-color: var(--color-primary-500);\n  }\n\n  &:not(.add):hover {\n    background-color: var(--color-secondary-300);\n  }\n}\n\n.members-overlay {\n  padding: 1rem;\n  padding: 0.5rem 0;\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.1);\n\n  li {\n    display: flex;\n    align-items: center;\n    padding: 0.75rem 2rem;\n    color: var(--color-text);\n\n    &:not(.line) {\n      cursor: pointer;\n      transition: background-color 0.4s ease;\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n\n    &.line {\n      position: relative;\n\n      &::before {\n        position: absolute;\n        top: calc(50% - 1px);\n        left: 10%;\n        width: 80%;\n        height: 1px;\n        background-color: var(--color-secondary-500);\n        content: '';\n      }\n    }\n\n    &.entry-remove {\n      span {\n        opacity: 0.75;\n      }\n    }\n\n    .avatar {\n      @include typo-title;\n\n      display: flex;\n      width: 36px;\n      height: 36px;\n      align-items: center;\n      justify-content: center;\n      margin-right: 1rem;\n      border-radius: 50%;\n      color: var(--color-text);\n    }\n\n    .avatar-remove {\n      display: flex;\n      width: 36px;\n      height: 36px;\n      align-items: center;\n      justify-content: center;\n      margin-right: 1rem;\n      background-color: var(--color-secondary-400);\n      border-radius: 50%;\n      color: var(--color-text);\n      opacity: 0.5;\n    }\n\n    .details {\n      display: flex;\n      flex-direction: column;\n\n      .username {\n        opacity: 0.5;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ assignee ? assignee.user.name[0] : \\'+\\' }}            {{ member.user.name[0] }}              {{ member.user.name }} {{ member.user.surname }}        @{{ member.user.username }}                        -      Remove assignee      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputAssigneeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/input/input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Default text input component\n\n    \n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input\n            \n\n            \n                styleUrls\n                ./input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                focused\n                            \n                            \n                                input\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlur\n                            \n                            \n                                onFocus\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                hint\n                            \n                            \n                                placeholder\n                            \n                            \n                                staticLabel\n                            \n                            \n                                type\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.focused\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, autofillMonitor: AutofillMonitor)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/input/input.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autofillMonitor\n                                                  \n                                                        \n                                                                    AutofillMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:23\n                            \n                        \n                \n                    \n                        Floating label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:38\n                            \n                        \n                \n                    \n                        Hint to display beneath the input to provide additional information of how to use the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:33\n                            \n                        \n                \n                    \n                        Input placeholder text\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        staticLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:28\n                            \n                        \n                \n                    \n                        Static label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"text\" | \"number\" | \"email\" | \"password\"\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:18\n                            \n                        \n                \n                    \n                        Type of the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.focused\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input/input.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input/input.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFocus\n                        \n                    \n                \n            \n            \n                \nonFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input/input.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        focused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.focused')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input/input.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input/input.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AutofillMonitor } from '@angular/cdk/text-field';\nimport { Component, ElementRef, HostBinding, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ControlAccessor } from '../../classes/control-accessor.class';\n\n/**\n * Default text input component\n */\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent extends ControlAccessor {\n  /**\n   * Type of the input\n   */\n  @Input() type: 'text' | 'number' | 'email' | 'password' = 'text';\n\n  /**\n   * Floating label text to display\n   */\n  @Input() floatingLabel?: string;\n\n  /**\n   * Static label text to display\n   */\n  @Input() staticLabel?: string;\n\n  /**\n   * Input placeholder text\n   */\n  @Input() placeholder: string = '';\n\n  /**\n   * Hint to display beneath the input to provide additional information of how to use the input\n   */\n  @Input() hint?: string;\n\n  @HostBinding('class.focused') focused = false;\n\n  @ViewChild('input') input!: ElementRef;\n\n  constructor(public override ngControl: NgControl, private autofillMonitor: AutofillMonitor) {\n    super(ngControl);\n  }\n\n  onFocus() {\n    this.focused = true;\n  }\n\n  onBlur() {\n    this.focused = false;\n  }\n}\n\n    \n\n    \n        \n  {{ staticLabel }}\n  \n    \n    \n      {{ floatingLabel }}\n    \n    \n    \n  \n  {{ control?.errors | validationError }}\n\n\n    \n\n    \n                \n                    ./input.component.scss\n                \n                @import '../../../../styles/typography';\n\n.form-field {\n  display: flex;\n  max-width: 400px;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  > label {\n    @include typo-title;\n\n    margin-bottom: 0.4rem;\n    color: var(--color-input-text);\n\n    &.required::after {\n      margin-left: 0.2rem;\n      color: var(--color-input-text);\n      content: '*';\n    }\n  }\n}\n\n$padding-left: 1rem;\n$height: 55px;\n\n// New input\n.input-form-field {\n  position: relative;\n  height: $height;\n  margin-bottom: 2rem;\n\n  // Static label for input\n  .static-label {\n    @include typo-title;\n\n    margin-bottom: 0.4rem;\n    color: var(--color-input-text);\n\n    &.required::after {\n      margin-left: 0.2rem;\n      color: var(--color-input-text);\n      content: '*';\n    }\n  }\n\n  // Floating label for input\n  .floating-label {\n    @include typo-body;\n\n    padding: 0 0.4rem;\n    color: var(--color-text);\n    transition: transform 0.2s ease, font-size 0.2s ease;\n  }\n\n  // Fragments\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    z-index: 1;\n    height: 100%;\n    border: 2px solid var(--color-input-border);\n    pointer-events: none;\n  }\n\n  .fragment-left {\n    width: $padding-left;\n    border-right-width: 0;\n    border-bottom-left-radius: var(--border-radius);\n    border-top-left-radius: var(--border-radius);\n  }\n\n  .fragment-middle {\n    display: flex;\n    align-items: center;\n    border-right-width: 0;\n    border-left-width: 0;\n  }\n\n  .fragment-right {\n    flex-grow: 1;\n    border-left-width: 0;\n    border-bottom-right-radius: var(--border-radius);\n    border-top-right-radius: var(--border-radius);\n  }\n\n  .input-wrapper {\n    position: relative;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    background-color: var(--color-input-background);\n    border-radius: var(--border-radius);\n    transition: background-color 0.2s ease-in-out;\n\n    &:hover {\n      background-color: var(--color-input-background-hover);\n    }\n  }\n\n  input {\n    @include typo-body;\n\n    position: absolute;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    padding-left: calc($padding-left + 0.4rem);\n    background-color: var(--color-input-background);\n    background-color: transparent;\n    border-radius: var(--border-radius);\n    color: var(--color-text);\n  }\n}\n\n.has-value,\n:host.focused {\n  .floating-label {\n    font-size: 0.75em;\n    transform: translateY(calc($height / -2));\n  }\n\n  .fragment-middle {\n    border-top-width: 0;\n  }\n}\n\n:host:not(.focused) {\n  input::placeholder {\n    opacity: 0;\n  }\n}\n\n:host.ng-touched.ng-invalid {\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    border-color: var(--color-red-500);\n  }\n}\n\n:host.focused .input-form-field {\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    border-color: var(--color-primary-500);\n  }\n}\n\n.required {\n  .static-label::after,\n  .floating-label::after {\n    margin-left: 0.2rem;\n    color: var(--color-red-500);\n    content: '*';\n  }\n}\n\n.error {\n  position: absolute;\n  margin-top: 0.2rem;\n  color: var(--color-red-500);\n  font-size: 12px;\n  line-height: 0.8rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ staticLabel }}                {{ floatingLabel }}                {{ control?.errors | validationError }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputDateTimeComponent.html":{"url":"components/InputDateTimeComponent.html","title":"component - InputDateTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputDateTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/input-date-time/input-date-time.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input-date-time\n            \n\n            \n                styleUrls\n                ./input-date-time.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-date-time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changedDate\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                picker\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                writeValue\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                placeholder\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        writeValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input-date-time')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'app-input-date-time',\n  templateUrl: './input-date-time.component.html',\n  styleUrls: ['./input-date-time.component.scss'],\n})\nexport class InputDateTimeComponent extends ControlAccessor implements OnInit {\n  @Input()\n  placeholder: string = '';\n\n  @Input()\n  floatingLabel?: string;\n\n  public changedDate: FormControl = new FormControl();\n\n  @ViewChild('input-date-time') picker!: ElementRef;\n\n  constructor(public override ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  ngOnInit(): void {\n    this.changedDate.valueChanges.subscribe((date) =>\n      this.control.setValue(this.changeDate(date), { emitEvent: false }),\n    );\n  }\n\n  override writeValue(value: any): void {\n    this.changedDate.setValue(this.changeDate(value));\n  }\n\n  changeDate(date: number) {\n    let sessionDate = dayjs(date);\n\n    return sessionDate.format('YYYY-MM-DD');\n  }\n}\n\n    \n\n    \n        \n   {{floatingLabel}}\n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./input-date-time.component.scss\n                \n                ::ng-deep .mat-focused .mat-form-field-label {\n  /* change color of label */\n  color: white !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /* change color of underline */\n  background-color: var(--color-purple-300) !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /* change color of underline when focused */\n  background-color: white !important;\n}\n\n::ng-deep .mat-form-field-label {\n  /* change color of label */\n  color: white !important;\n}\n\nmat-datepicker-toggle {\n  color: var(--color-purple-300) !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{floatingLabel}}        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputDateTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntegrationEntryComponent.html":{"url":"components/IntegrationEntryComponent.html","title":"component - IntegrationEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntegrationEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/components/integration-entry/integration-entry.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-integration-entry\n            \n\n            \n                styleUrls\n                ./integration-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./integration-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                integration\n                            \n                            \n                                label\n                            \n                            \n                                suspended\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        integration\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        suspended\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        disconnect\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-integration-entry',\n  templateUrl: './integration-entry.component.html',\n  styleUrls: ['./integration-entry.component.scss'],\n})\nexport class IntegrationEntryComponent implements OnInit {\n  @Input() integration?: any;\n  @Input() label!: string;\n  @Input() description?: string | null;\n  @Input() suspended: boolean = false;\n\n  @Output() disconnect = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      {{ label }}\n    \n    \n      {{ description }}\n    \n  \n  \n    Disconnect\n  \n\n\n    \n\n    \n                \n                    ./integration-entry.component.scss\n                \n                .integration-entry {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px;\n  border: 1px solid var(--color-secondary-300);\n  border-radius: var(--border-radius);\n\n  &.suspended {\n    opacity: 0.5;\n  }\n\n  .labels {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    margin-bottom: 0;\n\n    .description {\n      display: block;\n      padding-left: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}              {{ description }}            Disconnect  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'IntegrationEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntegrationGithubComponent.html":{"url":"components/IntegrationGithubComponent.html","title":"component - IntegrationGithubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntegrationGithubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/integration-github/integration-github.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-integration-github\n            \n\n            \n                styleUrls\n                ./integration-github.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./integration-github.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                repositoryList\n                            \n                            \n                                    Public\n                                repositoryListLoaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRepository\n                            \n                            \n                                connectToGithub\n                            \n                            \n                                loadRepositories\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRepository\n                        \n                    \n                \n            \n            \n                \naddRepository()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectToGithub\n                        \n                    \n                \n            \n            \n                \nconnectToGithub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRepositories\n                        \n                    \n                \n            \n            \n                \nloadRepositories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    repository: new FormControl(null, [requiredValidator()]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repositoryList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GitRepository[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repositoryListLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { GitRepository } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { requiredValidator } from '@main/validators/required.validator';\n\n@Component({\n  selector: 'app-integration-github',\n  templateUrl: './integration-github.component.html',\n  styleUrls: ['./integration-github.component.scss'],\n})\nexport class IntegrationGithubComponent implements OnInit {\n  @Input()\n  projectId!: number;\n\n  repositoryList: GitRepository[] = [];\n  public repositoryListLoaded = false;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  public form = new FormGroup({\n    repository: new FormControl(null, [requiredValidator()]),\n  });\n\n  connectToGithub() {\n    this.gitIntegrationService.startGitHubIntegration().subscribe(() => {\n      this.loadRepositories();\n    });\n  }\n\n  loadRepositories() {\n    this.repositoryListLoaded = false;\n    this.gitIntegrationService.getGitHubIntegration().subscribe((integration) => {\n      this.repositoryList = integration.gitRepositories;\n      this.repositoryListLoaded = true;\n    });\n  }\n\n  addRepository() {\n    this.gitIntegrationService\n      .attachGitHubIntegration(this.projectId, this.form.value.repository)\n      .subscribe();\n  }\n\n  ngOnInit() {\n    this.loadRepositories();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Github\n    \n    Connect to Github\n  \n\n  \n\n    \n    \n      \n        {{repository.fullName}}\n        \n      \n      Add repository\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./integration-github.component.scss\n                \n                main {\n  padding: 20px;\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n\n  section {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n    color: var(--color-text);\n\n    .github {\n      width: 100%;\n    }\n\n    app-button {\n      align-items: center;\n      justify-content: center;\n      margin-bottom: 20px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Github        Connect to Github                          {{repository.fullName}}                    Add repository      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'IntegrationGithubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page/landing-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/landing-page/landing-page.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss'],\n})\nexport class LandingPageComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./landing-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LetContext.html":{"url":"interfaces/LetContext.html","title":"interface - LetContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LetContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/let.directive.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ngLet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngLet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ngLet:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface LetContext {\n  ngLet: T;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class LetDirective {\n  private _context: LetContext = { ngLet: null };\n\n  constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>) {\n    _viewContainer.createEmbeddedView(_templateRef, this._context);\n  }\n\n  @Input()\n  set ngLet(value: T) {\n    this._context.ngLet = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LetDirective.html":{"url":"directives/LetDirective.html","title":"directive - LetDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/let.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngLet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngLet\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngLet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/directives/let.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _viewContainer\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _templateRef\n                                                  \n                                                        \n                                                                        TemplateRef>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngLet\n                    \n                \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/directives/let.directive.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LetContext\n\n                    \n                \n                \n                    \n                        Default value : { ngLet: null }\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/directives/let.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ngLet\n                    \n                \n\n\n                \n                    \n                        setngLet(value: T)\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/directives/let.directive.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface LetContext {\n  ngLet: T;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class LetDirective {\n  private _context: LetContext = { ngLet: null };\n\n  constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>) {\n    _viewContainer.createEmbeddedView(_templateRef, this._context);\n  }\n\n  @Input()\n  set ngLet(value: T) {\n    this._context.ngLet = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListGroupComponent.html":{"url":"components/ListGroupComponent.html","title":"component - ListGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/components/list-group/list-group.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-group\n            \n\n            \n                styleUrls\n                ./list-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/components/list-group/list-group.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/list-group/list-group.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/components/list-group/list-group.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-group',\n  templateUrl: './list-group.component.html',\n  styleUrls: ['./list-group.component.scss'],\n})\nexport class ListGroupComponent implements OnInit {\n  @Input() label!: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  {{ label }}\n\n\n    \n\n    \n                \n                    ./list-group.component.scss\n                \n                h4 {\n  display: block;\n  width: 100%;\n  padding: 5px 0;\n  border-bottom: 1px solid var(--color-secondary-300);\n  color: var(--color-secondary-300);\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoggedInUsersGuard.html":{"url":"guards/LoggedInUsersGuard.html","title":"guard - LoggedInUsersGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoggedInUsersGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guard/logged-in-users.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guard/logged-in-users.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/guard/logged-in-users.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LoggedInUsersGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/auth/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/login/login.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                error\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                loginSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/login/login.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n    password: new FormControl('', [requiredValidator()], []),\n    remember: new FormControl('', [], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:27\n                        \n                    \n\n            \n                \n                    Form group for login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        loginSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '@auth/services/user.service';\nimport { catchError, EMPTY, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n  ) {}\n\n  private loginSubscription?: Subscription;\n  public error?: string;\n\n  /**\n   * Form group for login.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n    password: new FormControl('', [requiredValidator()], []),\n    remember: new FormControl('', [], []),\n  });\n\n  ngOnInit() {\n    this.userService.getMyself().subscribe(() => {\n      localStorage.setItem('logged', 'true');\n      this.router.navigate(['/']);\n    });\n  }\n\n  login() {\n    if (this.loginSubscription && !this.loginSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.loginSubscription = this.authService\n        .login(this.form.value)\n        .pipe(\n          catchError((e) => {\n            this.handleError(e);\n            return EMPTY;\n          }),\n        )\n        .subscribe((response) => {\n          if (response.deleted) {\n            this.router.navigate(['/auth/restore-account']);\n          } else {\n            localStorage.setItem('logged', 'true');\n            this.router.navigate(['/']);\n          }\n        });\n    }\n  }\n\n  handleError(error: any) {\n    switch (error.status) {\n      case 403:\n        this.error = $localize`User is already logged`;\n        break;\n      case 404:\n        this.error = $localize`Wrong username or password`;\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Login to system\n          This is a secure site. Please enter your login information to enter or click here to register.\n        \n\n        \n          {{ error }}\n        \n\n        \n\n        \n\n        Forgot your password? Reset password.\n\n        \n          \n        \n\n        Log in\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .remember-me {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n\n        a {\n          color: var(--color-link);\n          cursor: pointer;\n          transition: color 0.2s ease;\n\n          &:hover {\n            color: var(--color-link-hover);\n          }\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Login to system          This is a secure site. Please enter your login information to enter or click here to register.                          {{ error }}                                Forgot your password? Reset password.                                  Log in                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/_main/_main.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Main dependency module with all universal components and modules declarations\nThis module is required for application to run properly\n```js\nimport { MainModule } from '@app/main/main.module';(@)NgModule({\n  imports: [ ..., MainModule ],\n  ...\n})\nexport class ExampleModule {}\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injector, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CardComponent } from './components/card/card.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { FiltersComponent } from './components/filters/filters.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { InputDateTimeComponent } from './components/input-date-time/input-date-time.component';\nimport { InputComponent } from './components/input/input.component';\nimport { MainViewComponent } from './components/main-view/main-view.component';\nimport { NavElementWorkspaceComponent } from './components/nav-element-workspace/nav-element-workspace.component';\nimport { NavElementComponent } from './components/nav-element/nav-element.component';\nimport { OptionComponent } from './components/option/option.component';\nimport { SelectComponent } from './components/select/select.component';\nimport { SidebarNavigationComponent } from './components/sidebar-navigation/sidebar-navigation.component';\nimport { SnackbarOutletComponent } from './components/snackbar-outlet/snackbar-outlet.component';\nimport { SnackbarComponent } from './components/snackbar/snackbar.component';\nimport { TextareaComponent } from './components/textarea/textarea.component';\nimport { UpperNavigationComponent } from './components/upper-navigation/upper-navigation.component';\nimport { AlertDialog } from './dialogs/alert/alert.dialog';\nimport { ClickStopPropagationDirective } from './directives/click-stop-propagation.directive';\nimport { FocusInitialDirective } from './directives/focus-initial.directive';\nimport { LetDirective } from './directives/let.directive';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\nimport { MockPage } from './pages/mock/mock.page';\nimport { ValidationErrorPipe } from './pipes/validation-error.pipe';\nimport { ApiService } from './services/api.service';\nimport { DialogService } from './services/dialog.service';\n\n/**\n * Main module configuration object\n */\nconst ngModuleConfig = {\n  imports: [\n    /*=============================================\n    =             Local dependencies              =\n    =============================================*/\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n    ObserversModule,\n  ],\n  importExports: [\n    /*=============================================\n      =                Dependencies                 =\n      =============================================*/\n    DragDropModule,\n    PlatformModule,\n    OverlayModule,\n\n    /*=============================================\n      =              Material modules               =\n      =============================================*/\n    MatDialogModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTableModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n\n    /*=============================================\n      =              External modules               =\n      =============================================*/\n    FontAwesomeModule,\n  ],\n  declarations: [\n    /*=============================================\n    =         Local custom components             =\n    =============================================*/\n  ],\n  exportDeclarations: [\n    /*=============================================\n    =         Exported custom components          =\n    =============================================*/\n    InputComponent,\n    ButtonComponent,\n    ValidationErrorPipe,\n    AlertDialog,\n    IconComponent,\n    FocusInitialDirective,\n    SidebarNavigationComponent,\n    NavElementComponent,\n    NavElementWorkspaceComponent,\n    UpperNavigationComponent,\n    SelectComponent,\n    OptionComponent,\n    MainViewComponent,\n    TextareaComponent,\n    CheckboxComponent,\n    CardComponent,\n    ClickStopPropagationDirective,\n    InputDateTimeComponent,\n    LetDirective,\n    FiltersComponent,\n    SnackbarComponent,\n    SnackbarOutletComponent,\n    MockPage,\n  ],\n  providers: [\n    DialogService,\n    ApiService,\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    MatCheckboxModule,\n    MatDatepickerModule,\n  ],\n};\n\n/**\n * Main dependency module with all universal components and modules declarations\n * This module is required for application to run properly\n * @example\n * ```js\n * import { MainModule } from '@app/main/main.module';\n *\n * (@)NgModule({\n *   imports: [ ..., MainModule ],\n *   ...\n * })\n * export class ExampleModule {}\n * ```\n */\n@NgModule({\n  imports: [...ngModuleConfig.imports, ...ngModuleConfig.importExports],\n  declarations: [...ngModuleConfig.declarations, ...ngModuleConfig.exportDeclarations],\n  exports: [...ngModuleConfig.importExports, ...ngModuleConfig.exportDeclarations],\n  providers: [...ngModuleConfig.providers],\n})\nexport class MainModule {\n  static injector: Injector;\n\n  constructor(injector: Injector) {\n    MainModule.injector = injector;\n    (window as any).injector = injector;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainViewComponent.html":{"url":"components/MainViewComponent.html","title":"component - MainViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/main-view/main-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-view\n            \n\n            \n                styleUrls\n                ./main-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/main-view/main-view.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/main-view/main-view.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-view',\n  templateUrl: './main-view.component.html',\n  styleUrls: ['./main-view.component.scss'],\n})\nexport class MainViewComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  \n\n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./main-view.component.scss\n                \n                :host {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background-color: var(--color-secondary-700);\n}\n\nsection {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow-x: hidden;\n\n  main {\n    width: 100%;\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberListComponent.html":{"url":"components/MemberListComponent.html","title":"component - MemberListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/member-list/member-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-list\n            \n\n            \n                styleUrls\n                ./member-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./member-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                memberList$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteMember\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addedMembers\n                            \n                            \n                                memberList\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(memberService: MemberService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addedMembers\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        memberList\n                    \n                \n                \n                    \n                        Type :     ProjectMember[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"create\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'edit'\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMember\n                        \n                    \n                \n            \n            \n                \ndeleteMember(id: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        memberList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.scss'],\n})\nexport class MemberListComponent implements OnInit {\n  public projectId!: number;\n\n  public memberList$!: Observable;\n\n  @Input()\n  addedMembers?: string[];\n\n  @Input()\n  type: 'create' | 'edit' = 'edit';\n\n  @Input()\n  memberList!: ProjectMember[];\n\n  constructor(private memberService: MemberService, private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n    this.projectId = projectId;\n\n    this.memberList$ = this.memberService.list(projectId);\n  }\n\n  deleteMember(id: number[]) {\n    this.memberService.remove(this.projectId, id).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  \n  \n    Username\n     {{ row.user.username }} \n  \n\n  \n  \n    Email\n     {{ row.user.email }} \n  \n\n  \n  \n    Name\n     {{ row.user.name }} \n  \n\n  \n  \n    Surname\n     {{ row.user.surname }} \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Delete member\n        \n      \n    \n  \n\n  \n  \n\n\n\n\n  \n  \n    Username or Email\n     {{ row }} \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./member-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Username     {{ row.user.username }}           Email     {{ row.user.email }}           Name     {{ row.user.name }}           Surname     {{ row.user.surname }}                                                           Delete member                                Username or Email     {{ row }}       '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemberListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberService.html":{"url":"injectables/MemberService.html","title":"injectable - MemberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/member.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                leave\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                map\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/member.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(emails: string[], projects: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:49\n                \n            \n\n\n            \n                \n                    Adds members to projects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    emails\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        emails of people to add\n\n                                    \n                                \n                                \n                                    projects\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        leave\n                        \n                    \n                \n            \n            \n                \n                    \n                    leave(projectId: number, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:39\n                \n            \n\n\n            \n                \n                    Let member leave project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the member who will leave the project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:19\n                \n            \n\n\n            \n                \n                    Lists members in given project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        map\n                        \n                    \n                \n            \n            \n                \n                    \n                    map(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:61\n                \n            \n\n\n            \n                \n                    Creates members map from given project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(projectId: number, id: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:29\n                \n            \n\n\n            \n                \n                    Removes members from project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        list of member ids to remove from project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { map, Observable } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class MemberService {\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Lists members in given project\n   * @param projectId project which are members from\n   * @returns Request observable, which completes when request is finished\n   */\n  public list(projectId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/member`);\n  }\n\n  /**\n   * Removes members from project\n   * @param projectId project which are members from\n   * @param id list of member ids to remove from project\n   * @returns Request observable, which completes when request is finished\n   */\n  public remove(projectId: number, id: number[]): Observable {\n    return this.apiService.put(`/project/${projectId}/member`, { body: id });\n  }\n\n  /**\n   * Let member leave project.\n   * @param projectId project which are members from\n   * @param id id of the member who will leave the project\n   * @returns Request observable, which completes when request is finished\n   */\n  public leave(projectId: number, id: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/member`, { body: id });\n  }\n\n  /**\n   * Adds members to projects.\n   * @param emails emails of people to add\n   * @param projectList projects where people will be added\n   * @returns Request observable, which completes when request is finished\n   */\n  public add(\n    emails: string[],\n    projects: number[],\n  ): Observable {\n    return this.apiService.post(`/project/member`, { body: { emails, projects } });\n  }\n\n  /**\n   * Creates members map from given project\n   * @param projectId project which are members from\n   * @returns Request observable, which completes when request is finished\n   */\n  public map(projectId: number): Observable> {\n    return this.list(projectId).pipe(\n      map((members) =>\n        members.reduce((acc: Map, member: ProjectMember) => {\n          acc.set(member.user.id, member);\n          return acc;\n        }, new Map()),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesModule.html":{"url":"modules/MessagesModule.html","title":"module - MessagesModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_imports\n\n\n\n\nMessagesRoutingModule\n\nMessagesRoutingModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nMessagesRoutingModule->MessagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/messages/messages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MessagesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MessagesRoutingModule } from './messages.routing';\n\n@NgModule({\n  imports: [CommonModule, MessagesRoutingModule],\n  declarations: [],\n})\nexport class MessagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesRoutingModule.html":{"url":"modules/MessagesRoutingModule.html","title":"module - MessagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/messages/messages.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\n\n/**\n * Messages routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/messages.svg',\n    },\n  },\n];\n\n/**\n * Messages routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MessagesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MockPage.html":{"url":"components/MockPage.html","title":"component - MockPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MockPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/pages/mock/mock.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mock\n            \n\n            \n                styleUrls\n                ./mock.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./mock.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                image\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/pages/mock/mock.page.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/pages/mock/mock.page.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/pages/mock/mock.page.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-mock',\n  templateUrl: './mock.page.html',\n  styleUrls: ['./mock.page.scss'],\n})\nexport class MockPage implements OnInit {\n  constructor(private activatedRoute: ActivatedRoute) {}\n\n  public image: string = '';\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(({ image }) => {\n      this.image = image;\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./mock.page.scss\n                \n                img {\n  width: 100%;\n  border: 4px solid #f39c12;\n}\n\n:host {\n  position: relative;\n  display: block;\n  text-align: center;\n\n  &::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    display: block;\n    padding: 1rem 4rem;\n    background-color: #f39c12;\n    border-radius: var(--border-radius);\n    color: #222;\n    content: 'Work in progress';\n    font-weight: bold;\n    text-align: center;\n    transform: translate(-50%, -50%);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'MockPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModifyUser.html":{"url":"interfaces/ModifyUser.html","title":"interface - ModifyUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModifyUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavElementComponent.html":{"url":"components/NavElementComponent.html","title":"component - NavElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/nav-element/nav-element.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-element\n            \n\n            \n                styleUrls\n                ./nav-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                    Optional\n                                listElement\n                            \n                            \n                                    Public\n                                showArrow$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeNavElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                openNavElement\n                            \n                            \n                                    Public\n                                toggleNavElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routerLink\n                            \n                            \n                                showOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:24\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routerLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showOptions\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    openNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        listElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('elementList')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showArrow$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-nav-element',\n  templateUrl: './nav-element.component.html',\n  styleUrls: ['./nav-element.component.scss'],\n})\nexport class NavElementComponent implements AfterViewInit {\n  @Input()\n  public routerLink?: string;\n\n  @Input()\n  public showOptions?: boolean;\n\n  public active: boolean = false;\n\n  public showArrow$: BehaviorSubject = new BehaviorSubject(false);\n\n  @ViewChild('elementList')\n  listElement?: ElementRef;\n\n  faAngleDown = faAngleDown;\n\n  constructor() {}\n\n  public openNavElement() {\n    this.active = true;\n  }\n  public closeNavElement() {\n    this.active = false;\n  }\n  public toggleNavElement() {\n    if (!this.active) {\n      this.openNavElement();\n    } else {\n      this.closeNavElement();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.showArrow$.next(Boolean(this.listElement?.nativeElement.children.length));\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n    \n      \n    \n    \n      \n        more_vert\n      \n      \n        \n      \n    \n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./nav-element.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n}\n\nsection {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  height: 46px;\n  align-items: center;\n  justify-content: space-between;\n  color: var(--color-neutral-300);\n  cursor: pointer;\n  transition: color 0.2s ease-in-out;\n\n  .element {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    padding: 0 0 0 20px;\n  }\n\n  .icons {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 0 5px 0 0;\n    }\n\n    .open-below {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: center;\n      padding: 0 5px;\n\n      // padding: 0 5px;\n\n      app-icon {\n        display: flex;\n        justify-content: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n\n    .options button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  &:hover {\n    color: var(--color-text);\n  }\n}\n\n.list {\n  display: none;\n  width: 100%;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    justify-content: center;\n    background-color: var(--color-secondary-600);\n  }\n}\n\n.hidden {\n  visibility: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              more_vert                                  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavElementWorkspaceComponent.html":{"url":"components/NavElementWorkspaceComponent.html","title":"component - NavElementWorkspaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavElementWorkspaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-element-workspace\n            \n\n            \n                styleUrls\n                ./nav-element-workspace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-element-workspace.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeWorkspace\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                    Optional\n                                listElement\n                            \n                            \n                                    Public\n                                showArrow$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeWorkspace\n                            \n                            \n                                createProject\n                            \n                            \n                                deleteProject\n                            \n                            \n                                deleteWorkspace\n                            \n                            \n                                editProject\n                            \n                            \n                                editWorkspace\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                openWithLocalVSCode\n                            \n                            \n                                openWithLocalVSCodeInsiders\n                            \n                            \n                                openWithVSCode\n                            \n                            \n                                    Public\n                                openWorkspace\n                            \n                            \n                                routeToProject\n                            \n                            \n                                routeToWorkspace\n                            \n                            \n                                    Public\n                                toggleWorkspace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routerLink\n                            \n                            \n                                workspace\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, dialogService: DialogService, projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routerLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        workspace\n                    \n                \n                \n                    \n                        Type :         Workspace\n\n                    \n                \n                \n                    \n                        Default value : { id: -1 } as unknown as Workspace\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createProject\n                        \n                    \n                \n            \n            \n                \ncreateProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteWorkspace\n                        \n                    \n                \n            \n            \n                \ndeleteWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProject\n                        \n                    \n                \n            \n            \n                \neditProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editWorkspace\n                        \n                    \n                \n            \n            \n                \neditWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithLocalVSCode\n                        \n                    \n                \n            \n            \n                \nopenWithLocalVSCode(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithLocalVSCodeInsiders\n                        \n                    \n                \n            \n            \n                \nopenWithLocalVSCodeInsiders(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithVSCode\n                        \n                    \n                \n            \n            \n                \nopenWithVSCode(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    openWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeToProject\n                        \n                    \n                \n            \n            \n                \nrouteToProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeToWorkspace\n                        \n                    \n                \n            \n            \n                \nrouteToWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeWorkspace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        listElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('elementList')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showArrow$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { BehaviorSubject } from 'rxjs';\nimport { Project } from 'src/app/dashboard/interfaces/project.interface';\nimport { Workspace } from 'src/app/dashboard/interfaces/workspace.interface';\nimport { ProjectService } from 'src/app/dashboard/services/project.service';\nimport { WorkspaceService } from 'src/app/dashboard/services/workspace.service';\nimport { DialogService } from '../../services/dialog.service';\n\n@Component({\n  selector: 'app-nav-element-workspace',\n  templateUrl: './nav-element-workspace.component.html',\n  styleUrls: ['./nav-element-workspace.component.scss'],\n})\nexport class NavElementWorkspaceComponent implements AfterViewInit {\n  @Input()\n  public routerLink?: string;\n\n  @Input()\n  public workspace: Workspace = { id: -1 } as unknown as Workspace;\n\n  faAngleDown = faAngleDown;\n  public activeWorkspace: boolean = false;\n\n  public showArrow$: BehaviorSubject = new BehaviorSubject(false);\n\n  @ViewChild('elementList')\n  listElement?: ElementRef;\n\n  constructor(\n    private workspaceService: WorkspaceService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private router: Router,\n  ) {}\n\n  public openWorkspace() {\n    this.activeWorkspace = true;\n  }\n  public closeWorkspace() {\n    this.activeWorkspace = false;\n  }\n  public toggleWorkspace() {\n    if (!this.activeWorkspace) {\n      this.openWorkspace();\n    } else {\n      this.closeWorkspace();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.showArrow$.next(Boolean(this.listElement?.nativeElement.children.length));\n    });\n  }\n\n  routeToWorkspace() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id]));\n  }\n\n  routeToProject(project: Project) {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, project.id]));\n  }\n\n  createProject() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, 'create']));\n  }\n\n  editProject(project: Project) {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, project.id, 'edit']));\n  }\n\n  deleteProject(project: Project) {\n    this.dialogService.confirmProjectDelete(project).subscribe(() => {\n      this.projectService.delete(project.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n\n  editWorkspace() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, 'edit']));\n  }\n\n  deleteWorkspace() {\n    this.dialogService.confirmWorkspaceDelete(this.workspace).subscribe(() => {\n      this.workspaceService.delete(this.workspace.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n\n  openWithVSCode(project: Project) {\n    window.open(`https://github.dev/${project.gitHubIntegration}`, '_blank');\n  }\n\n  openWithLocalVSCode(project: Project) {\n    window.open(\n      `vscode://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,\n      '_blank',\n    );\n  }\n\n  openWithLocalVSCodeInsiders(project: Project) {\n    window.open(\n      `vscode-insiders://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,\n      '_blank',\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n      \n      \n        \n          more_vert\n        \n        \n          \n            Create project\n          \n          \n            Manage projects\n          \n          \n            Edit workspace\n          \n          \n            Delete workspace\n          \n        \n      \n    \n  \n  \n    \n      \n        {{projectWithPriv.project.name}}\n        \n          \n            \n              more_vert\n            \n            \n              \n                Open in github.dev\n              \n              \n                Open in Visual Studio Code\n              \n              \n                Open in Visual Studio Code Insiders\n              \n              \n                Edit project\n              \n              \n                Delete project\n              \n            \n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./nav-element-workspace.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  @include typo-title;\n\n  background-color: var(--color-secondary-600);\n}\n\nli {\n  background-color: var(--color-secondary-700);\n}\n\n.workspace {\n  display: flex;\n  width: 100%;\n  height: 46px;\n  justify-content: space-between;\n  border-radius: var(--border-radius);\n  color: var(--color-neutral-300);\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n\n  .element {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    padding: 0 0 0 30px;\n  }\n\n  .icons {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 0 5px 0 0;\n    }\n\n    .open-below {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: center;\n      padding: 0 5px;\n\n      app-icon {\n        display: flex;\n        justify-content: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n\n    .options button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  &:hover {\n    background-color: var(--color-secondary-500);\n  }\n}\n\n.project {\n  display: none;\n  width: 100%;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    justify-content: center;\n    background-color: var(--color-secondary-600);\n    color: var(--color-neutral-300);\n    transition: background-color 0.2s ease-in-out;\n\n    li {\n      display: flex;\n      width: 100%;\n      height: 46px;\n      align-items: center;\n      justify-content: space-between;\n      border-radius: var(--border-radius);\n\n      .sub-element {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        align-items: center;\n        padding: 0 0 0 40px;\n      }\n\n      .icons {\n        display: flex;\n        height: 100%;\n        align-items: center;\n        padding: 0 5px 0 0;\n      }\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n  }\n}\n\nbutton {\n  display: flex;\n  align-items: center;\n}\n\n.hidden {\n  visibility: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                more_vert                                      Create project                                Manage projects                                Edit workspace                                Delete workspace                                                  {{projectWithPriv.project.name}}                                            more_vert                                                      Open in github.dev                                            Open in Visual Studio Code                                            Open in Visual Studio Code Insiders                                            Edit project                                            Delete project                                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavElementWorkspaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionComponent.html":{"url":"components/OptionComponent.html","title":"component - OptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/option/option.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-option\n            \n\n            \n                styleUrls\n                ./option.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faQuestion\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    viewValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/option/option.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/option/option.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/option/option.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faQuestion\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/option/option.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        viewValue\n                    \n                \n\n                \n                    \n                        getviewValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/option/option.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input } from '@angular/core';\nimport { faQuestion, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-option',\n  templateUrl: './option.component.html',\n  styleUrls: ['./option.component.scss'],\n})\nexport class OptionComponent {\n  @Input() value!: any;\n  @Input() icon?: string | IconDefinition;\n\n  faQuestion = faQuestion;\n\n  public get viewValue(): string {\n    return this.ref.nativeElement.innerText;\n  }\n\n  constructor(private ref: ElementRef) {}\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./option.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'OptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PersistentMap.html":{"url":"classes/PersistentMap.html","title":"class - PersistentMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PersistentMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/persistent-map.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _persistentKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                clear\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    Private\n                                saveState\n                            \n                            \n                                    \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PersistentMapOptions, entries?:  | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/persistent-map.class.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PersistentMapOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                     | null\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _persistentKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/persistent-map.class.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: K)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        set\n                        \n                    \n                \n            \n            \n                \n                    \n                    set(key: K, value: V)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface PersistentMapOptions {\n  persistentKey: string;\n}\n\nexport class PersistentMap extends Map {\n  override clear(): void {\n    localStorage.removeItem(this._persistentKey);\n    super.clear();\n  }\n\n  override delete(key: K): boolean {\n    const temp = super.delete(key);\n    this.saveState();\n    return temp;\n  }\n\n  override set(key: K, value: V): this {\n    const temp = super.set(key, value);\n    this.saveState();\n    return temp;\n  }\n\n  private saveState() {\n    localStorage.setItem(this._persistentKey, JSON.stringify([...this.entries()]));\n  }\n\n  private _persistentKey = '';\n\n  constructor(\n    { persistentKey }: PersistentMapOptions,\n    entries?: readonly (readonly [K, V])[] | null,\n  ) {\n    super(\n      persistentKey && localStorage.getItem(persistentKey)\n        ? JSON.parse(localStorage.getItem(persistentKey)!)\n        : entries,\n    );\n\n    if (!persistentKey) {\n      console.error('PersistentMap need persistentKey option');\n      return;\n    }\n\n    this._persistentKey = persistentKey;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersistentMapOptions.html":{"url":"interfaces/PersistentMapOptions.html","title":"interface - PersistentMapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersistentMapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/persistent-map.class.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            persistentKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        persistentKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        persistentKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersistentMapOptions {\n  persistentKey: string;\n}\n\nexport class PersistentMap extends Map {\n  override clear(): void {\n    localStorage.removeItem(this._persistentKey);\n    super.clear();\n  }\n\n  override delete(key: K): boolean {\n    const temp = super.delete(key);\n    this.saveState();\n    return temp;\n  }\n\n  override set(key: K, value: V): this {\n    const temp = super.set(key, value);\n    this.saveState();\n    return temp;\n  }\n\n  private saveState() {\n    localStorage.setItem(this._persistentKey, JSON.stringify([...this.entries()]));\n  }\n\n  private _persistentKey = '';\n\n  constructor(\n    { persistentKey }: PersistentMapOptions,\n    entries?: readonly (readonly [K, V])[] | null,\n  ) {\n    super(\n      persistentKey && localStorage.getItem(persistentKey)\n        ? JSON.parse(localStorage.getItem(persistentKey)!)\n        : entries,\n    );\n\n    if (!persistentKey) {\n      console.error('PersistentMap need persistentKey option');\n      return;\n    }\n\n    this._persistentKey = persistentKey;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/project.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitHubIntegration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitHubIntegration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitHubIntegration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub repository name\n\"SamPanDonte/untitled\"\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project's ID.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project's name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectMembers:     ProjectMember[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectMember[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of projects members\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProjectMember } from './project-member.interface';\n\nexport interface Project {\n  /**\n   * The project's ID.\n   */\n  id: number;\n\n  /**\n   * The project's name.\n   */\n  name: string;\n\n  /**\n   * GitHub repository name\n   * @example\n   * \"SamPanDonte/untitled\"\n   */\n  gitHubIntegration: string;\n\n  /**\n   * List of projects members\n   */\n  projectMembers?: ProjectMember[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectMember.html":{"url":"interfaces/ProjectMember.html","title":"interface - ProjectMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/project-member.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            privileges\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        privileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        privileges:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectMember {\n  user: {\n    id: number;\n    name: string;\n    surname: string;\n    email: string;\n    avatar: string;\n    username: string;\n  };\n  privileges: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeWorkspace\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/project.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeWorkspace(projectId: number, newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:57\n                \n            \n\n\n            \n                \n                    Changes the workspace of the project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project to move\n\n                                    \n                                \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace where the project will be moved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(project: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:47\n                \n            \n\n\n            \n                \n                    Creates a new project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:29\n                \n            \n\n\n            \n                \n                    Deletes the project by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the project to delete from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:20\n                \n            \n\n\n            \n                \n                    Gets a project by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the project to get from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:64\n                \n            \n\n\n            \n                \n                    List projects in given workspace.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:38\n                \n            \n\n\n            \n                \n                    Updates a project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project object to update in the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { map } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Project } from '../interfaces/project.interface';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Gets a project by its ID.\n   * @param projectId identifier of the project to get from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(projectId: number) {\n    return this.apiService.get(`/project/${projectId}`);\n  }\n\n  /**\n   * Deletes the project by its ID.\n   * @param projectId identifier of the project to delete from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(projectId: number) {\n    return this.apiService.delete(`/project/${projectId}`);\n  }\n\n  /**\n   * Updates a project.\n   * @param project project object to update in the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public update(project: Project) {\n    return this.apiService.put(`/project/${project.id}`, { body: project });\n  }\n\n  /**\n   * Creates a new project.\n   * @param project project to add\n   * @returns Request observable, which completes when request is finished\n   */\n  public create(project: { name: string; workspaceId: number }) {\n    return this.apiService.post('/project', { body: project });\n  }\n\n  /**\n   * Changes the workspace of the project.\n   * @param projectId project to move\n   * @param newWorkspaceId workspace where the project will be moved\n   * @returns Request observable, which completes when request is finished\n   */\n  public changeWorkspace(projectId: number, newWorkspaceId: number) {\n    return this.apiService.put(`/project/${projectId}/workspace/${newWorkspaceId}`);\n  }\n\n  /**\n   * List projects in given workspace.\n   */\n  public list() {\n    return this.apiService.get('/workspace').pipe(\n      map((workspaces) =>\n        workspaces.reduce((projects: any, workspace: Workspace) => {\n          projects.push(...workspace.projectsWithPrivileges.map((p) => p.project));\n          return projects;\n        }, []),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsListPage.html":{"url":"components/ProjectsListPage.html","title":"component - ProjectsListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/projects-list/projects-list.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects-list\n            \n\n            \n                styleUrls\n                ./projects-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./projects-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faPlus\n                            \n                            \n                                projects$\n                            \n                            \n                                workspace$\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProject\n                            \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                openProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, workspaceService: WorkspaceService, projectService: ProjectService, dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WorkspaceService } from '../../services/workspace.service';\nimport { map, Observable } from 'rxjs';\nimport { Project } from '../../interfaces/project.interface';\nimport { Workspace } from '../../interfaces/workspace.interface';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from 'src/app/_main/services/dialog.service';\nimport { ProjectService } from '../../services/project.service';\n\n@Component({\n  selector: 'app-projects-list',\n  templateUrl: './projects-list.page.html',\n  styleUrls: ['./projects-list.page.scss'],\n})\nexport class ProjectsListPage {\n  workspace$: Observable;\n  projects$: Observable;\n\n  faPlus = faPlus;\n\n  private workspaceId!: number;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private router: Router,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.projects$ = this.workspace$.pipe(\n      map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)),\n    );\n  }\n\n  public editProject(project: Project) {\n    this.router.navigate(['/', this.workspaceId, project.id, 'edit']);\n  }\n\n  public openProject(project: Project) {\n    this.router.navigate(['/', this.workspaceId, project.id]);\n  }\n\n  deleteProject(project: Project) {\n    this.dialogService.confirmProjectDelete(project).subscribe(() => {\n      this.projectService.delete(project.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n\n  {{ (workspace$ | async)?.name }}\n  New project\n\n\n\n\n\n  \n  \n    Name\n     {{ row.name }} \n  \n\n  \n  \n    Statistics\n     - \n  \n\n  \n  \n    Last update\n     - \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Edit project\n        \n        \n          Delete project\n        \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./projects-list.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ (workspace$ | async)?.name }}  New project        Name     {{ row.name }}           Statistics     -           Last update     -                                                           Edit project                          Delete project                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Random.html":{"url":"classes/Random.html","title":"class - Random","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Random\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/random.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                m_w\n                            \n                            \n                                    Private\n                                m_z\n                            \n                            \n                                    Private\n                                mask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                random\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(seed: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/random.class.ts:4\n                            \n                        \n\n                \n                    \n                            Random number generation class with optional seed\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        seed\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the seed to use in random number generation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        m_w\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 123456789\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        m_z\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 987654321\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0xffffffff\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        random\n                        \n                    \n                \n            \n            \n                \n                    \n                    random()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/random.class.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Random {\n  private m_w = 123456789;\n  private m_z = 987654321;\n  private mask = 0xffffffff;\n\n  /**\n   * Random number generation class with optional seed\n   * @param seed the seed to use in random number generation\n   */\n  constructor(seed: number = new Date().getTime()) {\n    this.m_w = (123456789 + seed) & this.mask;\n    this.m_z = (987654321 - seed) & this.mask;\n  }\n\n  // Returns number between 0 (inclusive) and 1.0 (exclusive),\n  // just like Math.random().\n  public random() {\n    this.m_z = (36969 * (this.m_z & 65535) + (this.m_z >> 16)) & this.mask;\n    this.m_w = (18000 * (this.m_w & 65535) + (this.m_w >> 16)) & this.mask;\n    let result = ((this.m_z >> 0;\n    result /= 4294967296;\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/register/register.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                error\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                RegisterStage\n                            \n                            \n                                    Private\n                                    Optional\n                                registerSubscription\n                            \n                            \n                                    Public\n                                    Optional\n                                stage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                nextStage\n                            \n                            \n                                previousStage\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/register/register.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousStage\n                        \n                    \n                \n            \n            \n                \npreviousStage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator(), emailValidator()], []),\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n    name: new FormControl('', [requiredValidator()], []),\n    surname: new FormControl('', [requiredValidator()], []),\n    username: new FormControl('', [requiredValidator()], []),\n    agreements: new FormControl('', [requiredValidator()], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:33\n                        \n                    \n\n            \n                \n                    Form group for register.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RegisterStage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RegisterStage\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        registerSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegisterStage\n\n                    \n                \n                \n                    \n                        Default value : RegisterStage.IMPORTANT_DATA\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { emailValidator } from '@main/validators/email.validator';\nimport { passwordValidator } from '@main/validators/password.validator';\nimport { sameAsValidator } from '@main/validators/same-as.validator';\nimport { catchError, EMPTY, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { AuthService } from '../../services/auth.service';\n\nenum RegisterStage {\n  IMPORTANT_DATA,\n  PERSONAL_DATA,\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  private registerSubscription?: Subscription;\n  public stage?: RegisterStage = RegisterStage.IMPORTANT_DATA;\n  RegisterStage = RegisterStage;\n\n  public error?: string;\n\n  /**\n   * Form group for register.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator(), emailValidator()], []),\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n    name: new FormControl('', [requiredValidator()], []),\n    surname: new FormControl('', [requiredValidator()], []),\n    username: new FormControl('', [requiredValidator()], []),\n    agreements: new FormControl('', [requiredValidator()], []),\n  });\n\n  nextStage() {\n    let formFields: string[] = ['email', 'password', 'repeatPassword', 'agreements'];\n    let correctData: boolean = true;\n    for (let field of formFields) {\n      this.form.get(field)?.markAsTouched();\n      this.form.get(field)?.updateValueAndValidity();\n      if (this.form.get(field)?.invalid) {\n        correctData = false;\n      }\n    }\n    if (correctData) {\n      this.stage = RegisterStage.PERSONAL_DATA;\n    }\n  }\n\n  previousStage() {\n    this.stage = RegisterStage.IMPORTANT_DATA;\n  }\n\n  register() {\n    if (this.registerSubscription && !this.registerSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.registerSubscription = this.authService\n        .register(this.form.value)\n        .pipe(\n          catchError((e) => {\n            this.handleError(e);\n            return EMPTY;\n          }),\n        )\n        .subscribe(() => {\n          this.router.navigate(['/']);\n        });\n    }\n  }\n\n  handleError(error: any) {\n    switch (error.status) {\n      case 422:\n        switch (error.error.message) {\n          case 'this email is already taken':\n            this.error = $localize`Email is already taken`;\n            break;\n          case 'this username is already taken':\n            this.error = $localize`Username is already taken`;\n        }\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Register\n          This is a secure site. Please enter your register information or if you have an\n            account already, click here to login.\n        \n\n        \n          {{ error }}\n        \n\n        \n          \n\n          \n\n          \n\n          \n            \n              I agree to the End User License Agreement and Privacy Statement.\n            \n          \n\n          Next\n        \n        \n          \n\n          \n\n          \n          \n            Back\n            Register\n          \n        \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .agreements {\n          display: flex;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n\n        a {\n          color: var(--color-link);\n          cursor: pointer;\n          transition: color 0.2s ease;\n\n          &:hover {\n            color: var(--color-link-hover);\n          }\n        }\n\n        .buttons {\n          display: flex;\n          width: 100%;\n          justify-content: space-between;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Register          This is a secure site. Please enter your register information or if you have an            account already, click here to login.                          {{ error }}                                                                                  I agree to the End User License Agreement and Privacy Statement.                                Next                                                                    Back            Register                                      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestOptions.html":{"url":"interfaces/RequestOptions.html","title":"interface - RequestOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/request-options.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Request options interface\nUse this interface to configure request options like body, params, headers, etc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            context\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            observe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reportProgress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            responseType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withCredentials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Body to send with the request. Used int POST, PATH, PATCH, DELETE requests.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:         HttpContext\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpContext\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional context to attach with request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     HttpHeaders | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to send with the request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        observe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        observe:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Part of the response to observe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:     HttpParams | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpParams | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Query params to send with the request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportProgress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reportProgress:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to report progress events like download or upload progress.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responseType:     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Response type to expect from the server.\nFor example:\n\nblob - will return a Blob object (used when API sends back a file).\njson - will return a JSON object.\ntext - will return a string.\n\nDefault is json.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If you want the credentials (cookie authentication token) to be passable through a call,\nyou need to add { withCredentials: true } in your httpClient call.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpContext, HttpHeaders, HttpParams } from '@angular/common/http';\n\n/**\n * Request options interface\n * Use this interface to configure request options like body, params, headers, etc.\n */\nexport interface RequestOptions {\n  /**\n   * Body to send with the request. Used int POST, PATH, PATCH, DELETE requests.\n   */\n  body?: any;\n  /**\n   * Headers to send with the request.\n   */\n  headers?:\n    | HttpHeaders\n    | {\n        [header: string]: string | string[];\n      };\n  /**\n   * Additional context to attach with request.\n   */\n  context?: HttpContext;\n  /**\n   * Part of the response to observe.\n   */\n  observe?: 'body';\n  /**\n   * Query params to send with the request.\n   */\n  params?:\n    | HttpParams\n    | {\n        [param: string]: string | number | boolean | ReadonlyArray;\n      };\n  /**\n   * Used to report progress events like download or upload progress.\n   */\n  reportProgress?: boolean;\n\n  /**\n   * Response type to expect from the server.\n   * For example:\n   * - blob - will return a Blob object (used when API sends back a file).\n   * - json - will return a JSON object.\n   * - text - will return a string.\n   *\n   * Default is json.\n   */\n  responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  /**\n   * If you want the credentials (cookie authentication token) to be passable through a call,\n   * you need to add `{ withCredentials: true }` in your httpClient call.\n   */\n  withCredentials?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestoreAccountPage.html":{"url":"components/RestoreAccountPage.html","title":"component - RestoreAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RestoreAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/restore-account/restore-account.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-restore-account-page\n            \n\n            \n                styleUrls\n                ./restore-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./restore-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/restore-account/restore-account.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/restore-account/restore-account.page.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restore\n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/restore-account/restore-account.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\n\n@Component({\n  selector: 'app-restore-account-page',\n  templateUrl: './restore-account.page.html',\n  styleUrls: ['./restore-account.page.scss'],\n})\nexport class RestoreAccountPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  logOut() {\n    this.authService.logout().subscribe();\n  }\n\n  restore() {\n    this.authService.recoverAccount().subscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Restore account\n          Your account has been deleted. You can restore your account within 7 days of\n            deletion.\n        \n\n        \n          Log out\n          Restore\n        \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./restore-account.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .actions {\n          display: flex;\n          width: 100%;\n          justify-content: flex-end;\n          margin-bottom: 1rem;\n\n          > *:not(:last-child) {\n            margin-right: 1rem;\n          }\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Restore account          Your account has been deleted. You can restore your account within 7 days of            deletion.                          Log out          Restore                            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'RestoreAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterExtensionsService.html":{"url":"injectables/RouterExtensionsService.html","title":"injectable - RouterExtensionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RouterExtensionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/router-extensions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    snapshot\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/router-extensions.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        snapshot\n                    \n                \n\n                \n                    \n                        getsnapshot()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/services/router-extensions.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterExtensionsService {\n  constructor(private router: Router) {}\n  public get snapshot() {\n    let node = (this.router.routerState.snapshot as any)._root;\n    while (node.children[0]) {\n      node = node.children[0];\n    }\n\n    return { params: node.value.params };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SchedulePage.html":{"url":"components/SchedulePage.html","title":"component - SchedulePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SchedulePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/schedule/schedule.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-schedule-page\n            \n\n            \n                styleUrls\n                ./schedule.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./schedule.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cursor\n                            \n                            \n                                    Public\n                                limitAfter\n                            \n                            \n                                    Public\n                                limitBefore\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                schedule$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dates\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, activatedRoute: ActivatedRoute, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/schedule/schedule.page.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cursor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dayjs().toDate()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limitAfter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limitBefore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        schedule$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dates\n                    \n                \n\n                \n                    \n                        getdates()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/pages/schedule/schedule.page.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport { Schedule } from '@tasks/interfaces/schedule.interface';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-schedule-page',\n  templateUrl: './schedule.page.html',\n  styleUrls: ['./schedule.page.scss'],\n})\nexport class SchedulePage implements OnInit {\n  public schedule$: Observable;\n  public project$: Observable;\n\n  public cursor = dayjs().toDate();\n  public limitAfter = 20;\n  public limitBefore = 0;\n\n  public get dates() {\n    const { cursor, limitBefore, limitAfter } = this;\n\n    const dates = [];\n\n    for (let i = 0; i \n    \n\n    \n        \n\n\n  \n    \n      \n        {{ cursor | date:'MMMM' }}\n      \n    \n    \n      \n    \n    \n      \n      \n        \n          {{ singleSchedule.user.name.substring(0, 1) }}\n        \n      \n    \n  \n\n  \n    \n      \n      \n        {{ date | date:'d' }}\n        {{ date | date:'EEE' }}\n      \n    \n    \n      \n      \n    \n    \n      \n      \n        \n          \n            \n              {{ task.name }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./schedule.page.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  padding: 2rem;\n}\n\n.schedule {\n  display: flex;\n  width: 100%;\n  padding-left: 10px;\n\n  // Sections\n\n  .people-header {\n    width: 80px;\n    height: 100%;\n    flex-shrink: 0;\n    margin-right: 1rem;\n    background-color: var(--color-secondary-800);\n    border-radius: var(--border-radius);\n  }\n\n  .timeline {\n    width: 100%;\n    height: 100%;\n    flex-grow: 1;\n    background-color: var(--color-secondary-800);\n    border-radius: var(--border-radius);\n    overflow-x: auto;\n\n    .cell {\n      width: 130px;\n      border-right: 1px solid var(--color-secondary-600);\n    }\n\n    .group-event-row {\n      .cell {\n        border-top: 1px solid var(--color-secondary-600);\n      }\n    }\n\n    .single-person-row {\n      .cell {\n        border-top: 1px solid var(--color-secondary-600);\n      }\n    }\n  }\n\n  // Rows\n  .header-event-row,\n  .group-event-row,\n  .single-person-row {\n    display: flex;\n  }\n\n  .header-row {\n    @include typo-title;\n\n    display: flex;\n    height: 64px;\n    color: var(--color-text);\n  }\n\n  .group-event-row {\n    display: flex;\n    height: 30px;\n  }\n\n  .single-person-row {\n    display: flex;\n    width: 100%;\n    height: 100px;\n  }\n\n  .cell {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    flex-shrink: 0;\n    align-items: center;\n    justify-content: center;\n\n    .number {\n      @include typo-title;\n    }\n\n    .day-of-week {\n      @include typo-body;\n    }\n\n    .task {\n      width: 100%;\n      height: 100%;\n      padding: 10px;\n      background-color: var(--color-primary-500);\n      border-radius: var(--border-radius);\n      color: var(--color-text);\n    }\n  }\n}\n\n.avatar {\n  @include typo-heading-5;\n\n  display: flex;\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-primary-500);\n  border-radius: 50%;\n  color: var(--color-text);\n  text-transform: uppercase;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ cursor | date:\\'MMMM\\' }}                                                          {{ singleSchedule.user.name.substring(0, 1) }}                                              {{ date | date:\\'d\\' }}        {{ date | date:\\'EEE\\' }}                                                                                          {{ task.name }}                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SchedulePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/select/select.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                ./select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                options\n                            \n                            \n                                    Optional\n                                optionsMap\n                            \n                            \n                                    Optional\n                                queryOptions\n                            \n                            \n                                selected$\n                            \n                            \n                                yet\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateOptions\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/select/select.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOptions\n                        \n                    \n                \n            \n            \n                \nupdateOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        optionsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        queryOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(OptionComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:77\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/select/select.component.ts:20\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, ContentChildren, Input, OnInit, QueryList } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Subject } from 'rxjs';\nimport { OptionComponent } from '../option/option.component';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n})\nexport class SelectComponent extends ControlAccessor implements AfterViewInit, OnInit {\n  @ContentChildren(OptionComponent) queryOptions?: QueryList;\n  options?: any[];\n  optionsMap?: Map = new Map();\n  @Input() floatingLabel: string = '';\n  yet: boolean = false;\n\n  selected$: Subject = new Subject();\n\n  get selected() {\n    return this.optionsMap?.get(this.control.value);\n  }\n\n  ngOnInit(): void {\n    this.control.valueChanges.subscribe((value) => {\n      console.log('Value changed to: ' + value);\n      this.optionsMap?.forEach((option, key) => {\n        const selected = key === value;\n        option.selected = selected;\n        if (selected) {\n          this.selected$.next(option);\n        }\n      });\n    });\n\n    this.selected$.subscribe((val) => {\n      console.log(val);\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.queryOptions?.changes.subscribe((options) => {\n      console.log('updated options');\n      this.updateOptions();\n    });\n    this.updateOptions();\n  }\n\n  updateOptions() {\n    console.log(this.control.value);\n\n    this.yet = false;\n    this.options = this.queryOptions?.map((x) => {\n      const option = { value: x.value, viewValue: x.viewValue, icon: x.icon };\n\n      this.optionsMap!.set(x.value, option);\n      return option;\n    });\n    setTimeout(() => {\n      this.selected$.next(this.optionsMap?.get(this.control.value));\n      this.yet = true;\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ floatingLabel }}\n  \n    \n      \n      {{ selectedItem.viewValue }}\n    \n    \n      \n        \n        {{ option.viewValue }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./select.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ floatingLabel }}                  {{ selectedItem.viewValue }}                              {{ option.viewValue }}            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsService.html":{"url":"injectables/SessionsService.html","title":"injectable - SessionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/services/sessions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/services/sessions.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/services/sessions.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/services/sessions.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserSession } from 'src/app/settings/interfaces/session.interface';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionsService {\n  constructor(private apiService: ApiService) {}\n\n  public list(): Observable {\n    return this.apiService.get(`/session`);\n  }\n\n  public delete(id: number) {\n    return this.apiService.delete(`/session/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsAccountPage.html":{"url":"components/SettingsAccountPage.html","title":"component - SettingsAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-account/settings-account.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-account-page\n            \n\n            \n                styleUrls\n                ./settings-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccountMailCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-account/settings-account.page.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccountMailCheck\n                        \n                    \n                \n            \n            \n                \ndeleteAccountMailCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', requiredValidator()),\n    name: new FormControl('', requiredValidator()),\n    surname: new FormControl('', requiredValidator()),\n    username: new FormControl('', requiredValidator()),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-account/settings-account.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AuthService } from '@auth/services/auth.service';\nimport { UserService } from '@auth/services/user.service';\nimport { requiredValidator } from '@main/validators/required.validator';\n\n@Component({\n  selector: 'app-settings-account-page',\n  templateUrl: './settings-account.page.html',\n  styleUrls: ['./settings-account.page.scss'],\n})\nexport class SettingsAccountPage implements OnInit {\n  constructor(private userService: UserService, private authService: AuthService) {}\n\n  public form = new FormGroup({\n    email: new FormControl('', requiredValidator()),\n    name: new FormControl('', requiredValidator()),\n    surname: new FormControl('', requiredValidator()),\n    username: new FormControl('', requiredValidator()),\n  });\n\n  ngOnInit() {\n    this.userService.getMyself().subscribe((response) => {\n      this.form.patchValue(response);\n    });\n  }\n\n  submit() {\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.userService.update(this.form.value).subscribe(() => {});\n  }\n\n  resetPassword() {\n    this.authService.resetPassword(this.form.value.email).subscribe(() => {\n      this.authService.logout().subscribe();\n    });\n  }\n\n  deleteAccountMailCheck() {\n    this.authService.deleteAccount().subscribe(() => {\n      // dodac popup czy na pewno zgadzamy sie na usuniecie konta, jesli tak to infomracja ze zostal wyslany link na maila dezaktywujacy konto i ze ma mozliwosc jego przywrocenia do 7 dni\n      this.authService.logout().subscribe();\n    });\n  }\n}\n\n    \n\n    \n        Account\n\n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n    Update profile\n  \n\n  \n  \n    Change password\n    It's highly recommended to change the password every 30 days. It will increase your\n      account security.\n    \n      Change password\n    \n  \n\n  \n  \n    Delete account\n    Delete your account permanently. All not shared owned projects will also be deleted.\n      This action is reversible in period of 7 days - you need to log in to your account in this time to revert your\n      account deletion.\n    \n      Delete account\n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings-account.page.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n}\n\n.actions {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Account                                Update profile          Change password    It\\'s highly recommended to change the password every 30 days. It will increase your      account security.          Change password              Delete account    Delete your account permanently. All not shared owned projects will also be deleted.      This action is reversible in period of 7 days - you need to log in to your account in this time to revert your      account deletion.          Delete account      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsIntegrationsPage.html":{"url":"components/SettingsIntegrationsPage.html","title":"component - SettingsIntegrationsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsIntegrationsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-integrations\n            \n\n            \n                styleUrls\n                ./settings-integrations.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-integrations.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gitHubAccounts$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                getConnectedProjects\n                            \n                            \n                                    Public\n                                loadGitHubIntegration\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnect\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnect(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConnectedProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConnectedProjects(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        gitHubAccounts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GitAccount } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { map, Observable, take } from 'rxjs';\n\ninterface GitAccountWithUsage {\n  account: GitAccount;\n  usage: Observable;\n}\n\n@Component({\n  selector: 'app-settings-integrations',\n  templateUrl: './settings-integrations.page.html',\n  styleUrls: ['./settings-integrations.page.scss'],\n})\nexport class SettingsIntegrationsPage implements OnInit {\n  public gitHubAccounts$!: Observable;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  ngOnInit() {\n    this.loadGitHubIntegration();\n  }\n\n  public loadGitHubIntegration(): void {\n    this.gitHubAccounts$ = this.gitIntegrationService.getConnectedGitHubAccounts().pipe(\n      map((accounts) => {\n        return accounts.map((account) => {\n          return {\n            account,\n            usage: this.getConnectedProjects(account).pipe(take(1)),\n          };\n        });\n      }),\n    );\n  }\n\n  public disconnect(account: GitAccount): void {\n    this.gitIntegrationService.deleteConnectedGitHubAccount(account.id).subscribe(({ link }) => {\n      window.open(link, '_blank');\n    });\n  }\n\n  public getConnectedProjects(account: GitAccount): Observable {\n    return this.gitIntegrationService\n      .getGitHubAccountConnectedProjects(account)\n      .pipe(map((projects) => projects.map((project: any) => project.name).join(', ')));\n  }\n}\n\n    \n\n    \n        Integrations\n\n\n\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-integrations.page.scss\n                \n                .list {\n  > * {\n    display: block;\n    margin-top: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Integrations              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsIntegrationsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsLocalizationPage.html":{"url":"components/SettingsLocalizationPage.html","title":"component - SettingsLocalizationPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsLocalizationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-localization/settings-localization.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-localization-page\n            \n\n            \n                styleUrls\n                ./settings-localization.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-localization.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateFormats\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:56\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dateFormats\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n    $localize`YYYY-MM-DD`,\n    $localize`DD-MM-YYYY`,\n    $localize`MM/DD/YYYY`,\n    $localize`DD.MM.YYYY`,\n  ].map((format) => ({\n    format,\n    example: dayjs().format(format),\n  }))\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    language: new FormControl('', requiredValidator()),\n    dateFormat: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      code: 'de-DE',\n      name: 'Deutsch',\n    },\n    {\n      code: 'en-GB',\n      name: 'English (British)',\n    },\n    {\n      code: 'es-ES',\n      name: 'Español',\n    },\n    {\n      code: 'it-IT',\n      name: 'Italiano',\n    },\n    {\n      code: 'pl-PL',\n      name: 'Polski',\n    },\n    {\n      code: 'en-US',\n      name: 'English (American)',\n    },\n    {\n      code: 'uk-UA',\n      name: 'Українська',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'app-settings-localization-page',\n  templateUrl: './settings-localization.page.html',\n  styleUrls: ['./settings-localization.page.scss'],\n})\nexport class SettingsLocalizationPage {\n  public form = new FormGroup({\n    language: new FormControl('', requiredValidator()),\n    dateFormat: new FormControl(''),\n  });\n\n  languages = [\n    {\n      code: 'de-DE',\n      name: 'Deutsch',\n    },\n    {\n      code: 'en-GB',\n      name: 'English (British)',\n    },\n    {\n      code: 'es-ES',\n      name: 'Español',\n    },\n    {\n      code: 'it-IT',\n      name: 'Italiano',\n    },\n    {\n      code: 'pl-PL',\n      name: 'Polski',\n    },\n    {\n      code: 'en-US',\n      name: 'English (American)',\n    },\n    {\n      code: 'uk-UA',\n      name: 'Українська',\n    },\n  ];\n\n  dateFormats = [\n    $localize`YYYY-MM-DD`,\n    $localize`DD-MM-YYYY`,\n    $localize`MM/DD/YYYY`,\n    $localize`DD.MM.YYYY`,\n  ].map((format) => ({\n    format,\n    example: dayjs().format(format),\n  }));\n\n  constructor() {}\n\n  changeLanguage() {\n    location.href = `https://workflow.adiantek.ovh/${this.form.value.language}/settings/localization`;\n  }\n\n  submit() {\n    this.changeLanguage();\n  }\n}\n\n    \n\n    \n        Localization\n\n\n  \n  \n    {{ language.name }}\n  \n\n  \n  \n    {{ dateFormat.example }}\n  \n\n  \n  \n    Save settings\n  \n\n\n    \n\n    \n                \n                    ./settings-localization.page.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n}\n\n.actions {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Localization        {{ language.name }}          {{ dateFormat.example }}          Save settings  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsLocalizationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nIntegrationEntryComponent\n\nIntegrationEntryComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nIntegrationEntryComponent->SettingsModule\n\n\n\n\n\nListGroupComponent\n\nListGroupComponent\n\nSettingsModule -->\n\nListGroupComponent->SettingsModule\n\n\n\n\n\nSettingsAccountPage\n\nSettingsAccountPage\n\nSettingsModule -->\n\nSettingsAccountPage->SettingsModule\n\n\n\n\n\nSettingsIntegrationsPage\n\nSettingsIntegrationsPage\n\nSettingsModule -->\n\nSettingsIntegrationsPage->SettingsModule\n\n\n\n\n\nSettingsLocalizationPage\n\nSettingsLocalizationPage\n\nSettingsModule -->\n\nSettingsLocalizationPage->SettingsModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\nSettingsModule -->\n\nSettingsPage->SettingsModule\n\n\n\n\n\nSettingsSessionsPage\n\nSettingsSessionsPage\n\nSettingsModule -->\n\nSettingsSessionsPage->SettingsModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nSettingsModule -->\n\nMainModule->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IntegrationEntryComponent\n                        \n                        \n                            ListGroupComponent\n                        \n                        \n                            SettingsAccountPage\n                        \n                        \n                            SettingsIntegrationsPage\n                        \n                        \n                            SettingsLocalizationPage\n                        \n                        \n                            SettingsPage\n                        \n                        \n                            SettingsSessionsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainModule\n                        \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '@main/_main.module';\nimport { SettingsPage } from 'src/app/settings/pages/settings/settings.page';\nimport { IntegrationEntryComponent } from './components/integration-entry/integration-entry.component';\nimport { ListGroupComponent } from './components/list-group/list-group.component';\nimport { SettingsAccountPage } from './pages/settings-account/settings-account.page';\nimport { SettingsIntegrationsPage } from './pages/settings-integrations/settings-integrations.page';\nimport { SettingsLocalizationPage } from './pages/settings-localization/settings-localization.page';\nimport { SettingsSessionsPage } from './pages/settings-sessions/settings-sessions.page';\nimport { SettingsRoutingModule } from './settings.routing';\n\n@NgModule({\n  imports: [CommonModule, MainModule, ReactiveFormsModule, SettingsRoutingModule],\n  declarations: [\n    SettingsPage,\n    SettingsLocalizationPage,\n    SettingsAccountPage,\n    SettingsIntegrationsPage,\n    SettingsSessionsPage,\n    ListGroupComponent,\n    IntegrationEntryComponent,\n  ],\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings/settings.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-page\n            \n\n            \n                styleUrls\n                ./settings.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAddressCard\n                            \n                            \n                                faCircleNodes\n                            \n                            \n                                faGlobe\n                            \n                            \n                                faUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings/settings.page.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings/settings.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAddressCard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAddressCard\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCircleNodes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCircleNodes\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGlobe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGlobe\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faUser\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { faAddressCard, faCircleNodes, faGlobe, faUser } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-settings-page',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  faUser = faUser;\n  faGlobe = faGlobe;\n  faCircleNodes = faCircleNodes;\n  faAddressCard = faAddressCard;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n  \n  \n    \n\n      \n      \n        \n          \n          Account\n        \n      \n\n      \n      \n        \n          \n          Localization\n        \n      \n\n      \n      \n        \n          \n          Integrations\n        \n      \n\n      \n      \n        \n          \n          Sessions\n        \n      \n\n    \n  \n\n  \n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings.page.scss\n                \n                @import '../../../../styles/typography';\n\nsection {\n  display: flex;\n  justify-content: center;\n}\n\n.sidebar {\n  width: 315px;\n  height: 100%;\n  padding: 40px;\n\n  a {\n    @include typo-body;\n\n    position: relative;\n    display: flex;\n    align-items: center;\n    padding: 8px 10px;\n    margin-bottom: 0.35rem;\n    border-radius: var(--border-radius);\n    color: var(--color-text);\n    transition: background-color 0.2s ease-in-out;\n\n    app-icon {\n      margin-right: 1rem;\n    }\n\n    &:hover {\n      background-color: var(--color-secondary-500);\n    }\n\n    &.active {\n      background-color: var(--color-secondary-500);\n\n      &::before {\n        position: absolute;\n        top: 10%;\n        left: -10px;\n        width: 4px;\n        height: 80%;\n        background-color: var(--color-primary-700);\n        border-radius: var(--border-radius);\n        content: '';\n      }\n    }\n  }\n}\n\n.content {\n  width: 100%;\n  max-width: 800px;\n  padding: 40px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Account                                                      Localization                                                      Integrations                                                      Sessions                              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingsAccountPage } from './pages/settings-account/settings-account.page';\nimport { SettingsIntegrationsPage } from './pages/settings-integrations/settings-integrations.page';\nimport { SettingsLocalizationPage } from './pages/settings-localization/settings-localization.page';\nimport { SettingsSessionsPage } from './pages/settings-sessions/settings-sessions.page';\nimport { SettingsPage } from './pages/settings/settings.page';\n\n/**\n * Messages routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage,\n    children: [\n      {\n        path: 'account',\n        component: SettingsAccountPage,\n      },\n      {\n        path: 'localization',\n        component: SettingsLocalizationPage,\n      },\n      {\n        path: 'integrations',\n        component: SettingsIntegrationsPage,\n      },\n      {\n        path: 'sessions',\n        component: SettingsSessionsPage,\n      },\n    ],\n  },\n];\n\n/**\n * Messages routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsSessionsPage.html":{"url":"components/SettingsSessionsPage.html","title":"component - SettingsSessionsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsSessionsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-sessions/settings-sessions.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-sessions\n            \n\n            \n                styleUrls\n                ./settings-sessions.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-sessions.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sessionsList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agentType\n                            \n                            \n                                changeDate\n                            \n                            \n                                deleteSession\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agentType\n                        \n                    \n                \n            \n            \n                \nagentType(type: string, agent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    agent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSession\n                        \n                    \n                \n            \n            \n                \ndeleteSession(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sessionsList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\nimport * as UAParser from 'ua-parser-js';\nimport { UserSession } from '../../interfaces/session.interface';\nimport { SessionsService } from '../../services/sessions.service';\n\n@Component({\n  selector: 'app-settings-sessions',\n  templateUrl: './settings-sessions.page.html',\n  styleUrls: ['./settings-sessions.page.scss'],\n})\nexport class SettingsSessionsPage implements OnInit {\n  public sessionsList$!: Observable;\n\n  constructor(private sessionService: SessionsService) {}\n  ngOnInit() {\n    this.sessionsList$ = this.sessionService.list();\n  }\n\n  changeDate(date: number) {\n    let currentDate = dayjs();\n    let sessionDate = dayjs(date);\n\n    if (currentDate.year() != sessionDate.year()) {\n      if (currentDate.diff(sessionDate, 'month') > 0) {\n        return sessionDate.format('LL');\n      } else {\n        return sessionDate.format('LLL');\n      }\n    } else {\n      return sessionDate.format('MMMM D, h:mm A');\n    }\n  }\n\n  agentType(type: string, agent: string) {\n    let uaParser = new UAParser(agent);\n    let osName = uaParser.getOS().name || 'Unknown system';\n    let browser = uaParser.getBrowser().name || 'Unknown browser';\n    if (type == 'os') {\n      return osName;\n    }\n    if (type == 'browser') {\n      return browser;\n    }\n    return osName + ', ' + browser;\n  }\n\n  deleteSession(id: number) {\n    this.sessionService.delete(id).subscribe();\n  }\n}\n\n    \n\n    \n        Sessions\n\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                {{ agentType(\"os\", session.userAgent) }},\n              \n              \n                {{ agentType(\"browser\", session.userAgent) }}\n              \n            \n            \n              \n                {{ session.geoip.city }}, {{ session.geoip.country }}\n              \n              \n                {{ changeDate(session.lastUsed) }}\n              \n              \n                Active now\n              \n            \n          \n          \n            Log out\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-sessions.page.scss\n                \n                .list {\n  > * {\n    display: block;\n    margin-top: 1rem;\n  }\n}\n\n.sessions-entry {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px;\n  border: 1px solid var(--color-secondary-300);\n  border-radius: var(--border-radius);\n\n  .labels {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    margin-bottom: 0;\n\n    .agent,\n    .local {\n      display: flex;\n    }\n\n    mark {\n      display: block;\n      margin-left: 0.5rem;\n      background-color: transparent;\n      color: var(--color-purple-300);\n    }\n\n    .description {\n      display: block;\n      padding-left: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n}\n\n.actions {\n  flex-grow: 1;\n  flex-shrink: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sessions                                                                          {{ agentType(\"os\", session.userAgent) }},                                            {{ agentType(\"browser\", session.userAgent) }}                                                                    {{ session.geoip.city }}, {{ session.geoip.country }}                                            {{ changeDate(session.lastUsed) }}                                            Active now                                                          Log out                              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsSessionsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarNavigationComponent.html":{"url":"components/SidebarNavigationComponent.html","title":"component - SidebarNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar-navigation\n            \n\n            \n                styleUrls\n                ./sidebar-navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar-navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                workspaceList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWorkspace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createWorkspace\n                        \n                    \n                \n            \n            \n                \ncreateWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        workspaceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Workspace } from 'src/app/dashboard/interfaces/workspace.interface';\nimport { WorkspaceService } from 'src/app/dashboard/services/workspace.service';\n\n@Component({\n  selector: 'app-sidebar-navigation',\n  templateUrl: './sidebar-navigation.component.html',\n  styleUrls: ['./sidebar-navigation.component.scss'],\n})\nexport class SidebarNavigationComponent {\n  @Input()\n  public icon!: String;\n\n  public workspaceList?: Observable;\n\n  createWorkspace() {\n    this.router.navigate(['/', 'create']);\n  }\n\n  constructor(private workspaceService: WorkspaceService, private router: Router) {\n    this.workspaceList = this.workspaceService.list();\n  }\n}\n\n    \n\n    \n        \n  \n  \n\nDashboard\n\n  Workspaces\n  \n    \n      \n        {{workspace.name}}\n      \n    \n  \n  \n    \n      Create workspace\n    \n    \n      Manage workspaces\n    \n  \n\nEmails\nMessages\n    \n\n    \n                \n                    ./sidebar-navigation.component.scss\n                \n                :host {\n  display: flex;\n  width: 250px;\n  height: 100%;\n  flex-direction: column;\n  flex-shrink: 0;\n  background-color: var(--color-secondary-800);\n}\n\n.logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin: 10px 20px 0;\n  background-image: url('../../../../assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n  transform-origin: 50% 25%;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Dashboard  Workspaces                    {{workspace.name}}                        Create workspace              Manage workspaces      EmailsMessages'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SinglePersonSchedule.html":{"url":"interfaces/SinglePersonSchedule.html","title":"interface - SinglePersonSchedule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SinglePersonSchedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/schedule.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tasks\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '@auth/interfaces/user.interface';\n\nexport type Schedule = SinglePersonSchedule[];\n\nexport interface SinglePersonSchedule {\n  user: UserData;\n  tasks: Map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/snackbar/snackbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationName\n                            \n                            \n                                faClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setAnimationName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                duration\n                            \n                            \n                                message\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.animation-name\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    colorStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 'gray'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        duration\n                    \n                \n                \n                    \n                        Default value : 4000\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uid\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:15\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.animation-name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnimationName\n                        \n                    \n                \n            \n            \n                \nsetAnimationName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        animationName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.animation-name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faClose\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faClose\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        colorStyle\n                    \n                \n\n                \n                    \n                        getcolorStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { faClose } from '@fortawesome/free-solid-svg-icons';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { SnackbarData } from './snackbar.interface';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss'],\n})\nexport class SnackbarComponent implements OnInit {\n  faClose = faClose;\n\n  @Input()\n  public uid!: string;\n\n  @Input()\n  public message!: SnackbarData['message'];\n\n  @Input()\n  public duration: SnackbarData['duration'] = 4000;\n\n  @Input()\n  public color: SnackbarData['color'] = 'gray';\n\n  @HostBinding('style.animation-name')\n  public animationName: string = 'open';\n\n  public get colorStyle(): string {\n    switch (this.color) {\n      case 'gray':\n        return 'var(--color-gray-500)';\n      case 'green':\n        return '#00b300';\n    }\n  }\n\n  constructor(private snackbarService: SnackbarService) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.close();\n    }, this.duration);\n  }\n\n  close() {\n    this.setAnimationName('close');\n    setTimeout(() => {\n      this.snackbarService.close(this.uid);\n    }, 1000);\n  }\n\n  setAnimationName(name: string) {\n    this.animationName = name;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ message }}\n  \n  \n\n\n    \n\n    \n                \n                    ./snackbar.component.scss\n                \n                :host {\n  display: block;\n  overflow: visible;\n  animation: open 1s ease-in-out forwards;\n}\n\n.content {\n  display: flex;\n  padding: 1rem;\n  border-radius: var(--border-radius);\n\n  .message {\n    margin-right: 0.75rem;\n    color: var(--color-text);\n  }\n\n  .close-button {\n    position: relative;\n    width: 24px;\n    height: 24px;\n    color: var(--color-text);\n    cursor: pointer;\n\n    &::before,\n    &::after {\n      position: absolute;\n      top: 0;\n      left: 50%;\n      display: block;\n      width: 1px;\n      height: 1rem;\n      margin-top: 0.25rem;\n      background-color: var(--color-text);\n      border-radius: 50%;\n      content: '';\n      transition: background-color 0.4s ease;\n    }\n\n    &::before {\n      transform: rotate(45deg);\n    }\n\n    &::after {\n      transform: rotate(-45deg);\n    }\n  }\n}\n\n@keyframes open {\n  from {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n}\n\n@keyframes close {\n  from {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n\n  to {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ message }}    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnackbarData.html":{"url":"interfaces/SnackbarData.html","title":"interface - SnackbarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnackbarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/components/snackbar/snackbar.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     \"gray\" | \"green\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"gray\" | \"green\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SnackbarData {\n  color: 'gray' | 'green';\n  message: string;\n  duration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarOutletComponent.html":{"url":"components/SnackbarOutletComponent.html","title":"component - SnackbarOutletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnackbarOutletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar-outlet\n            \n\n            \n                styleUrls\n                ./snackbar-outlet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snackbar-outlet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackbars$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trackSnackbarTuple\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        trackSnackbarTuple\n                        \n                    \n                \n            \n            \n                \ntrackSnackbarTuple(_index: number, undefined: [string, SnackbarData])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                [string, SnackbarData]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackbars$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.snackbarService.snackbars$\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { SnackbarData } from '../snackbar/snackbar.interface';\n\n@Component({\n  selector: 'app-snackbar-outlet',\n  templateUrl: './snackbar-outlet.component.html',\n  styleUrls: ['./snackbar-outlet.component.scss'],\n})\nexport class SnackbarOutletComponent {\n  public snackbars$ = this.snackbarService.snackbars$;\n\n  constructor(private snackbarService: SnackbarService) {}\n\n  trackSnackbarTuple(_index: number, [uid, _]: [string, SnackbarData]) {\n    return uid;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./snackbar-outlet.component.scss\n                \n                :host {\n  position: absolute;\n  z-index: 50;\n  top: 74px;\n  right: 0;\n  display: flex;\n  overflow: hidden;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-right: 10px;\n}\n\napp-snackbar:not(:last-child) {\n  margin-bottom: 0.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarOutletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/snackbar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackbars$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                closeAll\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/snackbar.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        show\n                        \n                    \n                \n            \n            \n                \n                    \n                    show(message: string, color: \"gray\" | \"green\", duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    color\n                                    \n                                            \"gray\" | \"green\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'gray'\n                                    \n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        4000\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackbars$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Map())\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/snackbar.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SnackbarData } from '@main/components/snackbar/snackbar.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { BehaviorSubject } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  constructor() {}\n\n  public snackbars$ = new BehaviorSubject>(new Map());\n\n  public show(message: string, color: 'gray' | 'green' = 'gray', duration: number = 4000) {\n    const data = { message, duration, color };\n    const uid = uuid();\n\n    const map = this.snackbars$.value;\n    map.set(uid, data);\n\n    this.snackbars$.next(map);\n  }\n\n  public close(uid: string) {\n    const map = this.snackbars$.value;\n    map.delete(uid);\n  }\n\n  public closeAll() {\n    this.snackbars$.next(new Map());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Status.html":{"url":"interfaces/Status.html","title":"interface - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/status.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Task status/column interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            begin\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            final\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        begin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        begin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status begin (used to determine if the task is in progress or not). If begin is true,\nthe work on the task does not started yet.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         color\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         color\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status color (used to display as the background of the labels)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        final\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        final:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status final (used to determine if the task is done or not)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status id (unique per database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status name (Header displayed in labels or on the top of the columns)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { color } from '../../_main/interfaces/color.interface';\nimport { Task } from './task.interface';\n\n/**\n * Task status/column interface\n */\nexport interface Status {\n  /**\n   * Status id (unique per database)\n   */\n  id: number;\n\n  /**\n   * Status name (Header displayed in labels or on the top of the columns)\n   */\n  name: string;\n\n  /**\n   * Status color (used to display as the background of the labels)\n   */\n  color: color;\n\n  /**\n   * Status final (used to determine if the task is done or not)\n   */\n  final: boolean;\n\n  /**\n   * Status begin (used to determine if the task is in progress or not). If begin is true,\n   * the work on the task does not started yet.\n   */\n  begin: boolean;\n}\n\n/**\n * Status with task interface - status column with tasks\n */\nexport interface StatusWithTasks extends Status {\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/StatusColorPipe.html":{"url":"pipes/StatusColorPipe.html","title":"pipe - StatusColorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StatusColorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/status-color.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        statusColor\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value:  | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/status-color.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                             | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Status } from '@tasks/interfaces/status.interface';\n\n@Pipe({\n  name: 'statusColor',\n})\nexport class StatusColorPipe implements PipeTransform {\n  transform(value: Status['name'] | undefined): any {\n    switch (value) {\n      case 'TO DO':\n      case 'To Do':\n        return '#4A5465';\n      case 'IN PROGRESS':\n      case 'In Progress':\n        return '#f39c12';\n      case 'DONE':\n      case 'Done':\n        return '#2ECC71';\n      default:\n        return '#4A5465';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusLabelComponent.html":{"url":"components/StatusLabelComponent.html","title":"component - StatusLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatusLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/status-label/status-label.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n            \n                selector\n                app-status-label\n            \n\n            \n                styleUrls\n                ./status-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./status-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isOpen$\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                overlay\n                            \n                            \n                                    Public\n                                statuses$\n                            \n                            \n                                statusMap\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                            \n                                statuses\n                            \n                            \n                                statusId\n                            \n                            \n                                taskId\n                            \n                            \n                                variant\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    statuses\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statuses\n                    \n                \n                \n                    \n                        Type :         Status[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statusId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        taskId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        variant\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"small\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('overlay')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statuses$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        statuses\n                    \n                \n\n\n                \n                    \n                        setstatuses(statuses: Status[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            statuses\n                                                    \n                                                            \n                                                                            Status[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:43\n                                \n                            \n\n                \n                    \n                        setisOpen(val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { TaskService } from '@tasks/services/task.service';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport { BehaviorSubject, filter, fromEvent, take } from 'rxjs';\n\n@Component({\n  selector: 'app-status-label',\n  templateUrl: './status-label.component.html',\n  styleUrls: ['./status-label.component.scss'],\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\nexport class StatusLabelComponent extends ControlAccessor {\n  @Input() variant: 'default' | 'small' = 'default';\n  @Input() projectId!: number;\n  @Input() statusId!: number;\n  @Input() taskId?: number;\n  @Input() set statuses(statuses: Status[]) {\n    this.statuses$.next(statuses);\n    this.statusMap = statuses.reduce((acc, status) => {\n      acc.set(status.id, status);\n      return acc;\n    }, new Map());\n  }\n\n  statusMap = new Map();\n\n  constructor(public override ngControl: NgControl, private taskService: TaskService) {\n    super(ngControl);\n  }\n\n  @ViewChild('overlay') overlay!: ElementRef;\n\n  public statuses$ = new BehaviorSubject([]);\n  public readonly isOpen$ = new BehaviorSubject(false);\n\n  public set isOpen(val: boolean) {\n    this.isOpen$.next(val);\n  }\n\n  public get isOpen() {\n    return this.isOpen$.value;\n  }\n\n  public open() {\n    setTimeout(() => {\n      fromEvent(document, 'click')\n        .pipe(\n          take(1),\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\n        )\n        .subscribe(() => this.close());\n      this.isOpen$.next(true);\n    });\n  }\n\n  public close() {\n    this.isOpen$.next(false);\n  }\n\n  public toggle() {\n    if (this.isOpen) {\n      return this.close();\n    }\n    return this.open();\n  }\n\n  public select(status: Status) {\n    if (this.taskId && this.projectId)\n      this.taskService.changeStatus(status.id, this.taskId, this.projectId).subscribe(() => {\n        this.close();\n        location.reload();\n      });\n  }\n}\n\n    \n\n    \n        \n\n  {{ statusMap.get(statusId)?.name }}\n\n\n\n  \n    \n      {{ status.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./status-label.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  width: 100%;\n  padding: 0 1rem;\n  margin: 0 1rem;\n}\n\n.status {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  max-width: 250px;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-secondary-400);\n  border-radius: var(--border-radius);\n  text-transform: uppercase;\n\n  &.small {\n    width: auto;\n    height: auto;\n    padding: 0.25rem 0.75rem;\n  }\n}\n\n.statuses-overlay {\n  padding: 1rem;\n  padding: 0.5rem 0;\n  background-color: var(--color-secondary-500);\n  border-radius: var(--border-radius);\n\n  li {\n    display: flex;\n    align-items: center;\n    padding: 0.5rem 1rem;\n    background-color: var(--color-secondary-500);\n    color: var(--color-text);\n    cursor: pointer;\n    transition: background-color 0.4s ease;\n\n    &:hover {\n      background-color: var(--color-secondary-400);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ statusMap.get(statusId)?.name }}            {{ status.name }}      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatusLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusService.html":{"url":"injectables/StatusService.html","title":"injectable - StatusService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/services/status.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                listWithTasks\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/services/status.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        board\n                        \n                    \n                \n            \n            \n                \n                    \n                    board(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:39\n                \n            \n\n\n            \n                \n                    Creates new status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the created status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:59\n                \n            \n\n\n            \n                \n                    Deletes status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(projectId: number, statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:29\n                \n            \n\n\n            \n                \n                    Get status information\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to get status\n\n                                    \n                                \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status id needed to get status information\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:19\n                \n            \n\n\n            \n                \n                    Get list of statuses\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable with list of statuses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        listWithTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    listWithTasks(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:49\n                \n            \n\n\n            \n                \n                    Updates status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the updated status\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Task } from '@tasks/interfaces/task.interface';\nimport { combineLatest, map, Observable } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Status, StatusWithTasks } from '../interfaces/status.interface';\nimport { TaskService } from './task.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StatusService {\n  constructor(private apiService: ApiService, private taskService: TaskService) {}\n\n  /**\n   * Get list of statuses\n   * @param projectId Project id needed to create status\n   * @returns Request observable with list of statuses\n   */\n  public list(projectId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/status/`);\n  }\n\n  /**\n   * Get status information\n   * @param statusId Status id needed to get status information\n   * @param projectId Project id needed to get status\n   * @returns Request observable with the status\n   */\n  public get(projectId: number, statusId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/status/${statusId}`);\n  }\n\n  /**\n   * Creates new status\n   * @param status Status to create\n   * @param projectId Project id needed to create status\n   * @returns Request observable with the created status\n   */\n  public create(projectId: number, status: Status): Observable {\n    return this.apiService.post(`/project/${projectId}/status/`, { body: status });\n  }\n\n  /**\n   * Updates status\n   * @param status Status to update\n   * @param projectId Project id needed to create status\n   * @returns Request observable with the updated status\n   */\n  public update(projectId: number, status: Status): Observable {\n    return this.apiService.put(`/project/${projectId}/status/${status.id}`, { body: status });\n  }\n\n  /**\n   * Deletes status\n   * @param status Status id to delete\n   * @param projectId Project id needed to create status\n   * @returns Request observable\n   */\n  public delete(projectId: number, status: Status): Observable {\n    return this.apiService.delete(`/project/${projectId}/status/${status.id}`);\n  }\n\n  public listWithTasks(projectId: number): Observable {\n    return combineLatest([this.list(projectId), this.taskService.list(projectId)]).pipe(\n      map(([statuses, tasks]) => {\n        statuses.forEach((status) => {\n          (status as StatusWithTasks).tasks = tasks.filter((task) => task.statusId === status.id);\n        });\n        return statuses as StatusWithTasks[];\n      }),\n    );\n  }\n\n  public board(projectId: number): Observable {\n    return combineLatest([this.list(projectId), this.taskService.list(projectId)]).pipe(\n      map(([statuses, tasks]) => {\n        const board: [Task | string, StatusWithTasks[]][] = [];\n        const OTHER = ['OTHER', statuses.map((s) => ({ ...s, tasks: [] }))] as [\n          string,\n          StatusWithTasks[],\n        ];\n\n        for (const task of tasks) {\n          if (task.subTasks?.length) {\n            const statusesWithSubtasks = statuses.map((status) => ({\n              ...status,\n              tasks: task.subTasks?.filter((subtask) => subtask.statusId === status.id) || [],\n            }));\n            board.push([task, statusesWithSubtasks]);\n          } else {\n            let status = OTHER[1].find((status) => status.id === task.statusId)!;\n            if (!status.tasks) {\n              status.tasks = [];\n            }\n            status.tasks.push(task);\n          }\n        }\n\n        board.push(OTHER);\n        return board;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StatusWithTasks.html":{"url":"interfaces/StatusWithTasks.html","title":"interface - StatusWithTasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StatusWithTasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/status.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Status with task interface - status column with tasks\n\n            \n\n            \n                Extends\n            \n            \n                        Status\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tasks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { color } from '../../_main/interfaces/color.interface';\nimport { Task } from './task.interface';\n\n/**\n * Task status/column interface\n */\nexport interface Status {\n  /**\n   * Status id (unique per database)\n   */\n  id: number;\n\n  /**\n   * Status name (Header displayed in labels or on the top of the columns)\n   */\n  name: string;\n\n  /**\n   * Status color (used to display as the background of the labels)\n   */\n  color: color;\n\n  /**\n   * Status final (used to determine if the task is done or not)\n   */\n  final: boolean;\n\n  /**\n   * Status begin (used to determine if the task is in progress or not). If begin is true,\n   * the work on the task does not started yet.\n   */\n  begin: boolean;\n}\n\n/**\n * Status with task interface - status column with tasks\n */\nexport interface StatusWithTasks extends Status {\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/task.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Project task interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            assigneeId\n                                        \n                                \n                                \n                                        \n                                            deadline\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            estimatedDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mergedPullList\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parentTaskId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pull\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subTasks\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assigneeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assigneeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional user id who is assigned to task\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deadline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deadline:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task deadline to be completed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estimatedDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estimatedDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task estimated date to work on it\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task id (unique per project)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional link to the GitHub issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mergedPullList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mergedPullList:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional merged pull requests list\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentTaskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentTaskId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Parent task id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pull\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pull:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional link to the GitHub pull request\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Status id (unique per database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subTasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of subtasks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task type (ex. EPIC, USER_STORY)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\n\n/**\n * Project task interface\n */\nexport interface Task {\n  /**\n   * Task id (unique per project)\n   */\n  id: number;\n\n  /**\n   * Task name\n   */\n  name: string;\n\n  /**\n   * Task description\n   */\n  description: string;\n\n  /**\n   * Task deadline to be completed\n   */\n  deadline: Date;\n\n  /**\n   * Task estimated date to work on it\n   */\n  estimatedDate: Date;\n\n  /**\n   * Status id (unique per database)\n   */\n  statusId?: number;\n\n  /**\n   * Parent task id\n   */\n  parentTaskId?: number;\n\n  /**\n   * List of subtasks\n   */\n  subTasks?: Task[];\n\n  /**\n   * Optional link to the GitHub issue\n   */\n  issue?: string;\n\n  /**\n   * Task type (ex. EPIC, USER_STORY)\n   */\n  type: string;\n\n  /**\n   * Optional link to the GitHub pull request\n   */\n  pull?: string;\n\n  /**\n   * Optional merged pull requests list\n   */\n  mergedPullList?: String[];\n\n  /**\n   * Optional user id who is assigned to task\n   */\n  assigneeId?: number;\n}\n\n/**\n * Extended project task interface\n */\nexport interface TaskWithAdditionalData extends Omit {\n  /**\n   * Project identifier\n   */\n  projectId: number;\n\n  /**\n   * Workspace identifier\n   */\n  workspaceId: string;\n\n  /**\n   * Boolean to determine if task is connected to GitHub issue\n   */\n  connectWithIssueOnGitHub: boolean;\n\n  /**\n   * Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n   */\n  issueAttachGithub: boolean;\n\n  /**\n   * Boolean to determine if task is connected to GitHub pull request\n   */\n  connectWithPullRequestOnGitHub: boolean;\n\n  /**\n   * GitHub pull to which the task is connected to\n   */\n  pull: GitPull;\n\n  /**\n   * GitHub issue to which the task is connected to\n   */\n  issue: GitIssue;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDialog.html":{"url":"components/TaskDialog.html","title":"component - TaskDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/dialogs/task/task.dialog.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-dialog\n            \n\n            \n                styleUrls\n                ./task.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./task.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                isGitHubIntegrationAvailable\n                            \n                            \n                                    Public\n                                issueList$\n                            \n                            \n                                    Public\n                                projectList$\n                            \n                            \n                                    Public\n                                pullList$\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                subTaskTypes\n                            \n                            \n                                TaskDialogVariant\n                            \n                            \n                                    Public\n                                taskPriorities\n                            \n                            \n                                    Public\n                                taskTypes\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                clearGitHubIntegrationFields\n                            \n                            \n                                confirm\n                            \n                            \n                                loadParamsFromUrl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onProjectIdChange\n                            \n                            \n                                onWorkspaceIdChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: TaskDialogData, dialogRef: MatDialogRef, statusService: StatusService, workspaceService: WorkspaceService, gitIntegrationService: GitIntegrationService, routerExtensions: RouterExtensionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        TaskDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerExtensions\n                                                  \n                                                        \n                                                                        RouterExtensionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearGitHubIntegrationFields\n                        \n                    \n                \n            \n            \n                \nclearGitHubIntegrationFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadParamsFromUrl\n                        \n                    \n                \n            \n            \n                \nloadParamsFromUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onProjectIdChange\n                        \n                    \n                \n            \n            \n                \nonProjectIdChange(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWorkspaceIdChange\n                        \n                    \n                \n            \n            \n                \nonWorkspaceIdChange(workspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(TaskType.TASK, [requiredValidator()]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(this.taskPriorities[2], [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n\n    // GitHub issue integration fields\n    connectWithIssueOnGitHub: new FormControl(false),\n    issueAttachGithub: new FormControl(false),\n    issue: new FormControl(null),\n\n    // Github pull requests integration fields\n    connectWithPullRequestOnGitHub: new FormControl(false),\n    pull: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isGitHubIntegrationAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pullList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        subTaskTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Enum.entries(SubTaskType)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TaskDialogVariant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TaskDialogVariant\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskPriorities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(TaskPriority)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Enum.entries(TaskType)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { Enum } from '@main/classes/enum.class';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { TaskPriority } from '@tasks/enums/task-priority.enum';\nimport { SubTaskType, TaskType } from '@tasks/enums/task-type.enum';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\nimport { Task } from '../../interfaces/task.interface';\n\nexport enum TaskDialogVariant {\n  CREATE = 'create',\n  EDIT = 'edit',\n}\n\nexport interface TaskDialogData {\n  workspaceId: number;\n  projectId?: number;\n  variant: TaskDialogVariant;\n  task?: Partial;\n  subtask?: boolean;\n}\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task.dialog.html',\n  styleUrls: ['./task.dialog.scss'],\n})\nexport class TaskDialog implements OnInit {\n  TaskDialogVariant = TaskDialogVariant;\n\n  public taskTypes = Enum.entries(TaskType);\n  public subTaskTypes = Enum.entries(SubTaskType);\n  public taskPriorities = Object.values(TaskPriority);\n\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n  public projectList$: Observable = new BehaviorSubject([]);\n  public issueList$!: Observable;\n  public pullList$!: Observable;\n\n  public isGitHubIntegrationAvailable: boolean = false;\n\n  public form = new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(TaskType.TASK, [requiredValidator()]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(this.taskPriorities[2], [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n\n    // GitHub issue integration fields\n    connectWithIssueOnGitHub: new FormControl(false),\n    issueAttachGithub: new FormControl(false),\n    issue: new FormControl(null),\n\n    // Github pull requests integration fields\n    connectWithPullRequestOnGitHub: new FormControl(false),\n    pull: new FormControl(null),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TaskDialogData,\n    private dialogRef: MatDialogRef,\n    private statusService: StatusService,\n    private workspaceService: WorkspaceService,\n    private gitIntegrationService: GitIntegrationService,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId, task } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n    if (task) this.form.patchValue(task);\n\n    this.workspaceList$ = this.workspaceService.list();\n\n    this.form.get('workspaceId')?.valueChanges.subscribe(this.onWorkspaceIdChange.bind(this));\n    this.form.get('projectId')?.valueChanges.subscribe(this.onProjectIdChange.bind(this));\n\n    if (workspaceId) {\n      this.onWorkspaceIdChange(workspaceId);\n    }\n\n    if (projectId) {\n      this.onProjectIdChange(projectId);\n    }\n  }\n\n  onWorkspaceIdChange(workspaceId: number) {\n    this.projectList$ = this.projectList$ = this.workspaceService\n      .get(workspaceId)\n      .pipe(map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)));\n  }\n\n  onProjectIdChange(projectId: number) {\n    this.statusList$ = this.statusService.list(projectId);\n    this.clearGitHubIntegrationFields();\n\n    this.statusList$.subscribe((statuses) => {\n      const statusId = statuses.find((status) => status.begin)?.id;\n\n      if (!statusId) return;\n\n      this.form.patchValue({ statusId });\n    });\n\n    this.gitIntegrationService.hasGitHubIntegration(projectId!).subscribe((value) => {\n      this.isGitHubIntegrationAvailable = value;\n\n      if (this.isGitHubIntegrationAvailable) {\n        this.issueList$ = this.gitIntegrationService.gitHubIssueList(projectId);\n        this.pullList$ = this.gitIntegrationService.gitHubPullList(projectId);\n      } else {\n        this.issueList$ = new BehaviorSubject([]);\n        this.pullList$ = new BehaviorSubject([]);\n      }\n    });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  clearGitHubIntegrationFields() {\n    this.form.patchValue({\n      issueNumberGitHub: null,\n      issueAttachGithub: false,\n      connectWithIssueOnGitHub: false,\n    });\n  }\n\n  confirm() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    if (formValues.connectWithIssueOnGitHub && !formValues.issueAttachGithub) {\n      formValues.createIssue = true;\n    } else {\n      formValues.createIssue = false;\n    }\n\n    console.log(formValues);\n\n    this.dialogRef.close(formValues);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        Edit task: {{ data.task?.name }}\nCreate new task\nCreate new subtask\n\n  \n\n    \n    \n      {{ workspace.name }}\n      \n    \n\n    \n    \n      \n        {{project.name}}\n        \n      \n    \n\n    \n    \n      {{ type[0] | taskType\n        }}\n      \n    \n\n    \n    \n    \n\n    \n    \n\n    \n    \n      {{ status.name }}\n      \n    \n\n    \n    \n      {{\n        priority | taskPriority }}\n    \n\n    \n    \n    \n\n    \n    \n    \n\n    \n    Create or attach\n      GitHub issue simultaneously\n\n    \n      \n        Create\n        Attach\n      \n\n      \n        {{issue.title}}\n      \n    \n\n    \n    \n      Connect with GitHub pull request\n    \n\n    \n      \n        {{pullRequest.title}}\n        \n      \n    \n\n  \n\n\n  Cancel\n  Create\n  \n  Save changes\n  \n\n\n    \n\n    \n                \n                    ./task.dialog.scss\n                \n                form {\n  > * {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Edit task: {{ data.task?.name }}Create new taskCreate new subtask                {{ workspace.name }}                                {{project.name}}                                {{ type[0] | taskType        }}                                            {{ status.name }}                        {{        priority | taskPriority }}                                    Create or attach      GitHub issue simultaneously                  Create        Attach                    {{issue.title}}                        Connect with GitHub pull request                      {{pullRequest.title}}                      Cancel  Create    Save changes  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskDialogData.html":{"url":"interfaces/TaskDialogData.html","title":"interface - TaskDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/dialogs/task/task.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            projectId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subtask\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            task\n                                        \n                                \n                                \n                                        \n                                            variant\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtask\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtask:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:         TaskDialogVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TaskDialogVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { Enum } from '@main/classes/enum.class';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { TaskPriority } from '@tasks/enums/task-priority.enum';\nimport { SubTaskType, TaskType } from '@tasks/enums/task-type.enum';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\nimport { Task } from '../../interfaces/task.interface';\n\nexport enum TaskDialogVariant {\n  CREATE = 'create',\n  EDIT = 'edit',\n}\n\nexport interface TaskDialogData {\n  workspaceId: number;\n  projectId?: number;\n  variant: TaskDialogVariant;\n  task?: Partial;\n  subtask?: boolean;\n}\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task.dialog.html',\n  styleUrls: ['./task.dialog.scss'],\n})\nexport class TaskDialog implements OnInit {\n  TaskDialogVariant = TaskDialogVariant;\n\n  public taskTypes = Enum.entries(TaskType);\n  public subTaskTypes = Enum.entries(SubTaskType);\n  public taskPriorities = Object.values(TaskPriority);\n\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n  public projectList$: Observable = new BehaviorSubject([]);\n  public issueList$!: Observable;\n  public pullList$!: Observable;\n\n  public isGitHubIntegrationAvailable: boolean = false;\n\n  public form = new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(TaskType.TASK, [requiredValidator()]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(this.taskPriorities[2], [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n\n    // GitHub issue integration fields\n    connectWithIssueOnGitHub: new FormControl(false),\n    issueAttachGithub: new FormControl(false),\n    issue: new FormControl(null),\n\n    // Github pull requests integration fields\n    connectWithPullRequestOnGitHub: new FormControl(false),\n    pull: new FormControl(null),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TaskDialogData,\n    private dialogRef: MatDialogRef,\n    private statusService: StatusService,\n    private workspaceService: WorkspaceService,\n    private gitIntegrationService: GitIntegrationService,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId, task } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n    if (task) this.form.patchValue(task);\n\n    this.workspaceList$ = this.workspaceService.list();\n\n    this.form.get('workspaceId')?.valueChanges.subscribe(this.onWorkspaceIdChange.bind(this));\n    this.form.get('projectId')?.valueChanges.subscribe(this.onProjectIdChange.bind(this));\n\n    if (workspaceId) {\n      this.onWorkspaceIdChange(workspaceId);\n    }\n\n    if (projectId) {\n      this.onProjectIdChange(projectId);\n    }\n  }\n\n  onWorkspaceIdChange(workspaceId: number) {\n    this.projectList$ = this.projectList$ = this.workspaceService\n      .get(workspaceId)\n      .pipe(map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)));\n  }\n\n  onProjectIdChange(projectId: number) {\n    this.statusList$ = this.statusService.list(projectId);\n    this.clearGitHubIntegrationFields();\n\n    this.statusList$.subscribe((statuses) => {\n      const statusId = statuses.find((status) => status.begin)?.id;\n\n      if (!statusId) return;\n\n      this.form.patchValue({ statusId });\n    });\n\n    this.gitIntegrationService.hasGitHubIntegration(projectId!).subscribe((value) => {\n      this.isGitHubIntegrationAvailable = value;\n\n      if (this.isGitHubIntegrationAvailable) {\n        this.issueList$ = this.gitIntegrationService.gitHubIssueList(projectId);\n        this.pullList$ = this.gitIntegrationService.gitHubPullList(projectId);\n      } else {\n        this.issueList$ = new BehaviorSubject([]);\n        this.pullList$ = new BehaviorSubject([]);\n      }\n    });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  clearGitHubIntegrationFields() {\n    this.form.patchValue({\n      issueNumberGitHub: null,\n      issueAttachGithub: false,\n      connectWithIssueOnGitHub: false,\n    });\n  }\n\n  confirm() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    if (formValues.connectWithIssueOnGitHub && !formValues.issueAttachGithub) {\n      formValues.createIssue = true;\n    } else {\n      formValues.createIssue = false;\n    }\n\n    console.log(formValues);\n\n    this.dialogRef.close(formValues);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListPage.html":{"url":"components/TaskListPage.html","title":"component - TaskListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/task-list/task-list.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n            \n                styleUrls\n                ./task-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assigneeControl\n                            \n                            \n                                expandedSubtasks\n                            \n                            \n                                faCheck\n                            \n                            \n                                faChevronRight\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Public\n                                filtersControl\n                            \n                            \n                                isSubtasksRow\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                statusList\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                taskList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                createSubtask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                editTask\n                            \n                            \n                                getStatus\n                            \n                            \n                                    Public\n                                getSubtasksContainerHeight\n                            \n                            \n                                initAssigneeChanging\n                            \n                            \n                                populateSubtasks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, taskService: TaskService, statusService: StatusService, projectService: ProjectService, dialogService: DialogService, memberService: MemberService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date?: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubtask\n                        \n                    \n                \n            \n            \n                \ncreateSubtask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:123\n                \n            \n\n\n            \n                \n                    TODO: Move this method to service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTask\n                        \n                    \n                \n            \n            \n                \neditTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSubtasksContainerHeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubtasksContainerHeight(taskId: number, element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initAssigneeChanging\n                        \n                    \n                \n            \n            \n                \ninitAssigneeChanging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populateSubtasks\n                        \n                    \n                \n            \n            \n                \npopulateSubtasks(taskList: Task[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        assigneeControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandedSubtasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ESet()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faChevronRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faChevronRight\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filtersControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubtasksRow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '@auth/services/user.service';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport {\n  faCheck,\n  faChevronRight,\n  faCodeCommit,\n  faCodePullRequest,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { ESet } from '@main/classes/e-set.class';\nimport { Filters } from '@main/classes/filters.class';\nimport { Filter } from '@main/interfaces/filters.interface';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskDialog, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Task } from '@tasks/interfaces/task.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { map, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.page.html',\n  styleUrls: ['./task-list.page.scss'],\n})\nexport class TaskListPage {\n  faPlus = faPlus;\n  faChevronRight = faChevronRight;\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  public projectId!: number;\n\n  public taskList$!: Observable;\n  public statusList$!: Observable;\n  public project$!: Observable;\n  public members$!: Observable>;\n  public assigneeControl = new FormControl(null);\n\n  public statusList: Status[] = [];\n\n  public filters: Filter[] = [];\n  public filtersControl = new FormControl();\n\n  isSubtasksRow = (i: number, row: Object) => row.hasOwnProperty('withSubtasks');\n  expandedSubtasks = new ESet();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private taskService: TaskService,\n    private statusService: StatusService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n    private userService: UserService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.projectId = projectId;\n    this.project$ = this.projectService.get(projectId);\n\n    /**\n     * TODO: Use method from service\n     */\n    this.members$ = this.memberService.list(projectId).pipe(\n      map((members) =>\n        members.reduce((acc: Map, member: ProjectMember) => {\n          acc.set(member.user.id, member);\n          return acc;\n        }, new Map()),\n      ),\n    );\n    this.taskList$ = this.taskService.list(projectId);\n    this.statusList$ = this.statusService.list(projectId);\n    this.statusList$.subscribe((list) => {\n      this.statusList = list;\n    });\n    this.userService.getMyself().subscribe((user) => {\n      this.filters.push(Filters.ONLY_MY_TASKS(user.id));\n    });\n\n    this.filtersControl.valueChanges.subscribe((filters) => {\n      this.taskList$ = this.taskService.list(projectId, filters);\n    });\n  }\n\n  getStatus(statusId: number) {\n    return this.statusList.find((status) => status.id === statusId)?.name;\n  }\n\n  changeDate(date?: Date) {\n    if (!date) return '-';\n    let sessionDate = dayjs(date);\n    return sessionDate.format('YYYY-MM-DD, hh:mm A');\n  }\n\n  populateSubtasks(taskList: Task[]) {\n    const populatedTasks = [];\n    const tasks = taskList.filter((task) => !task.parentTaskId);\n\n    for (const task of tasks) {\n      populatedTasks.push(task);\n\n      if (task.subTasks && task.subTasks.length) {\n        populatedTasks.push({ ...task, withSubtasks: true });\n      }\n    }\n\n    return populatedTasks;\n  }\n\n  /**\n   * TODO: Move this method to service\n   */\n  createSubtask(task: Task) {\n    this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n        projectId: this.projectId,\n        subtask: true,\n        task: {\n          parentTaskId: task.id,\n        },\n      })\n      .afterClosed()\n      .subscribe((task) => {\n        if (!task) return;\n\n        this.taskService.create(this.projectId, task).subscribe(() => {\n          location.reload();\n        });\n      });\n  }\n\n  editTask(task: Task) {\n    this.taskService.openEditTaskDialog(this.projectId, task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  deleteTask(task: Task) {\n    this.taskService.deleteWithConfirmation(this.projectId, task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  initAssigneeChanging() {\n    this.assigneeControl.valueChanges.subscribe((assignee) => {});\n  }\n\n  public getSubtasksContainerHeight(taskId: number, element: HTMLElement) {\n    return `${Number(this.expandedSubtasks.has(taskId)) * element.scrollHeight}px`;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n  \n    Title\n    Status\n    Assignee\n    Deadline\n    \n      \n    \n  \n\n  \n  \n    \n\n      \n      \n        \n          \n          \n          #{{ task.id }}\n          {{ task.name }}\n          \n            \n          \n          \n            \n          \n          \n            \n            \n          \n        \n      \n\n      \n      \n        \n        \n      \n\n      \n      \n        \n        \n      \n\n      \n      {{changeDate(task.deadline)}}\n\n      \n      \n        \n          \n        \n        \n          \n            Edit task\n          \n          \n            Create subtask\n          \n          \n            Delete task\n          \n        \n      \n    \n    \n      \n\n        \n        \n          \n            #{{ subtask.id }}\n            \n            {{ subtask.name }}\n            \n              \n            \n            \n              \n            \n            \n              \n              \n            \n          \n        \n\n        \n        \n          \n        \n\n        \n        \n          \n          \n        \n\n        \n        {{changeDate(subtask.deadline)}}\n\n        \n        \n          \n            \n          \n          \n            \n              Edit task\n            \n            \n              Create subtask\n            \n            \n              Delete task\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-list.page.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  padding: 2rem;\n}\n\n.table {\n  width: 100%;\n  padding-left: 10px;\n}\n\n.table .row .cell .status {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  max-width: 250px;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  padding: 0 1rem;\n  margin: 0 1rem;\n  background-color: var(--color-secondary-400);\n  border-radius: var(--border-radius);\n}\n\n.task-title,\n.subtask-title {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  padding-left: 0.5rem;\n\n  .task-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .task-property {\n    display: flex;\n    margin-left: 1rem;\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.2s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    .check {\n      margin-left: 5px;\n      color: #2ecc71;\n    }\n  }\n\n  &>app-icon {\n    margin-right: 1rem;\n    opacity: 0.5;\n    transition: transform .2s ease;\n  }\n}\n\n.subtasks {\n  position: relative;\n  overflow: hidden;\n  max-height: 0;\n  padding-left: 4rem;\n  transition: max-height 0.4s ease;\n\n  .subtask-title {\n    display: flex;\n  }\n\n  .subtask-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .row {\n    position: relative;\n\n    &::before,\n    &::after {\n      position: absolute;\n      top: 0;\n      left: -2.5rem;\n      display: block;\n      content: '';\n    }\n\n    &:last-child {\n      margin-bottom: 1rem;\n    }\n\n    &:not(:last-child)::before {\n      width: 2px;\n      height: calc(100% + 1rem);\n      background-color: var(--color-secondary-400);\n    }\n\n    &::after {\n      width: 29px;\n      height: 29px;\n      border: 2px solid var(--color-secondary-400);\n      border-top-width: 0;\n      border-right-width: 0;\n      border-bottom-left-radius: 50%;\n    }\n  }\n}\n\n.row {\n  cursor: pointer;\n\n  &.expanded {\n    .task-title>app-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.task-type {\n  width: 16px;\n  height: 16px;\n  margin-right: 1rem;\n  border-radius: 4px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Title    Status    Assignee    Deadline                                                                          #{{ task.id }}          {{ task.name }}                                                                                                                                                                                                          {{changeDate(task.deadline)}}                                                                    Edit task                                Create subtask                                Delete task                                                                            #{{ subtask.id }}                        {{ subtask.name }}                                                                                                                                                                                                                                                {{changeDate(subtask.deadline)}}                                                                                    Edit task                                      Create subtask                                      Delete task                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskPriorityIconPipe.html":{"url":"pipes/TaskPriorityIconPipe.html","title":"pipe - TaskPriorityIconPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskPriorityIconPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-priority-icon.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskPriorityIcon\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-priority-icon.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskPriorityIcon',\n})\nexport class TaskPriorityIconPipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'lowest':\n        return 'cuPriorityLowest';\n      case 'low':\n        return 'cuPriorityLow';\n      case 'medium':\n        return 'cuPriorityMedium';\n      case 'high':\n        return 'cuPriorityHigh';\n      case 'highest':\n        return 'cuPriorityHighest';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskPriorityPipe.html":{"url":"pipes/TaskPriorityPipe.html","title":"pipe - TaskPriorityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskPriorityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-priority.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskPriority\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-priority.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskPriority',\n})\nexport class TaskPriorityPipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'lowest':\n        return $localize`Lowest`;\n      case 'low':\n        return $localize`Low`;\n      case 'medium':\n        return $localize`Medium`;\n      case 'high':\n        return $localize`High`;\n      case 'highest':\n        return $localize`Highest`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/services/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assign\n                            \n                            \n                                    Public\n                                changeStatus\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                deleteWithConfirmation\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                openCreateNewTaskDialog\n                            \n                            \n                                    Public\n                                openCreateSubtaskDialog\n                            \n                            \n                                    Public\n                                openEditTaskDialog\n                            \n                            \n                                    Public\n                                schedule\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, gitIntegrationService: GitIntegrationService, dialogService: DialogService, projectService: ProjectService, memberService: MemberService, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/services/task.service.ts:33\n                            \n                        \n\n                \n                    \n                            Default constructor with dependency injection.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ApiService\n\n                                                        \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        assign\n                        \n                    \n                \n            \n            \n                \n                    \n                    assign(userId: number | null, taskId: number, projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:269\n                \n            \n\n\n            \n                \n                    Assign task to specific user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user to assign task to (if null, task will be unassigned)\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task to assign\n\n                                    \n                                \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id needed to assign task\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Updated task object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeStatus(statusId: number, taskId: number, projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:282\n                \n            \n\n\n            \n                \n                    Change status of specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        status to change task to\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task to change status of\n\n                                    \n                                \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id needed to change status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Updated task object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(projectId: number, task: TaskWithAdditionalData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:74\n                \n            \n\n\n            \n                \n                    Creates new task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                TaskWithAdditionalData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the created task\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:119\n                \n            \n\n\n            \n                \n                    Deletes task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to delete task\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteWithConfirmation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteWithConfirmation(projectId: number, task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:129\n                \n            \n\n\n            \n                \n                    Opens dialog to delete specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to delete task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable with true if task was deleted, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number, filters?: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:53\n                \n            \n\n\n            \n                \n                    Get list of tasks\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to list all tasks\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with list of tasks\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateNewTaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateNewTaskDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:181\n                \n            \n\n\n            \n                \n                    Opens dialog to create new task\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        created task, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateSubtaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateSubtaskDialog(projectId: number, parentTask: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:204\n                \n            \n\n\n            \n                \n                    Opens dialog to create new subtask\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update subtask\n\n                                    \n                                \n                                \n                                    parentTask\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent task id to which attach subtask\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        created subtask, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openEditTaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openEditTaskDialog(projectId: number, task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:155\n                \n            \n\n\n            \n                \n                    Opens dialog to edit specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable with updated task, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        schedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    schedule(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:231\n                \n            \n\n\n            \n                \n                    Generates schedule object for specific project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id to generate schedule from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Schedule object with all tasks\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(projectId: number, task: TaskWithAdditionalData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:98\n                \n            \n\n\n            \n                \n                    Updates task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                TaskWithAdditionalData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the updated task\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/services/task.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport { AlertDialogVariant } from '@main/dialogs/alert/alert.dialog';\nimport { Filter } from '@main/interfaces/filters.interface';\nimport { applyFilters } from '@main/operators/apply-filters.operator';\nimport { DialogService } from '@main/services/dialog.service';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { Schedule } from '@tasks/interfaces/schedule.interface';\nimport * as dayjs from 'dayjs';\nimport {\n  combineLatest,\n  EMPTY,\n  map,\n  Observable,\n  of,\n  ReplaySubject,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs';\nimport { ApiService } from '../../_main/services/api.service';\nimport { Task, TaskWithAdditionalData } from '../interfaces/task.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  private lists = new Map>();\n\n  /**\n   * Default constructor with dependency injection.\n   * @param apiService ApiService\n   */\n  constructor(\n    private apiService: ApiService,\n    private gitIntegrationService: GitIntegrationService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private memberService: MemberService,\n    private snackbarService: SnackbarService,\n  ) {}\n\n  /**\n   * Get list of tasks\n   * @param projectId Project id needed to list all tasks\n   * @returns Request observable with list of tasks\n   */\n  public list(projectId: number, filters?: Filter[]): Observable {\n    let subject: ReplaySubject;\n    if (this.lists.has(projectId)) {\n      subject = this.lists.get(projectId)!;\n    } else {\n      subject = new ReplaySubject();\n      this.lists.set(projectId, subject);\n      this.apiService.get(`/project/${projectId}/task`).subscribe((tasks) => {\n        subject.next(tasks);\n      });\n    }\n\n    return subject.pipe(applyFilters(filters));\n  }\n\n  /**\n   * Creates new task\n   * @param task Task to create\n   * @param projectId Project id needed to create task\n   * @returns Request observable with the created task\n   */\n  public create(projectId: number, task: TaskWithAdditionalData): Observable {\n    return this.apiService.post(`/project/${projectId}/task/`, { body: task }).pipe(\n      switchMap((newTask) => {\n        if (task.connectWithPullRequestOnGitHub) {\n          return this.gitIntegrationService.connectGitHubPull(projectId, newTask.id, task.pull);\n        } else return of(newTask);\n      }),\n      switchMap((newTask) => {\n        if (task.connectWithIssueOnGitHub && task.issue) {\n          return this.gitIntegrationService.connectGitHubIssue(projectId, newTask.id, task.issue);\n        } else return of(newTask);\n      }),\n      tap(() => {\n        this.snackbarService.show($localize`Task created successfully!`);\n      }),\n    );\n  }\n\n  /**\n   * Updates task\n   * @param task Task to update\n   * @param projectId Project id needed to update task\n   * @returns Request observable with the updated task\n   */\n  public update(projectId: number, task: TaskWithAdditionalData): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${task.id}`, { body: task }).pipe(\n      switchMap((newTask) => {\n        if (task.connectWithPullRequestOnGitHub) {\n          return this.gitIntegrationService.connectGitHubPull(projectId, newTask.id, task.pull);\n        } else return of(newTask);\n      }),\n      switchMap((newTask) => {\n        if (task.connectWithIssueOnGitHub) {\n          return this.gitIntegrationService.connectGitHubIssue(projectId, newTask.id, task.issue);\n        } else return of(newTask);\n      }),\n    );\n  }\n\n  /**\n   * Deletes task\n   * @param taskId Task id to delete\n   * @param projectId Project id needed to delete task\n   * @returns Request observable\n   */\n  public delete(projectId: number, taskId: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}`);\n  }\n\n  /**\n   * Opens dialog to delete specific task\n   * @param projectId Project id needed to delete task\n   * @param task Task to delete\n   * @returns Observable with true if task was deleted, EMPTY otherwise (when user cancels the dialog)\n   */\n  public deleteWithConfirmation(projectId: number, task: Task): Observable {\n    return this.dialogService\n      .confirm({\n        title: $localize`Delete task \"${task.name}\"`,\n        message: $localize`Are you sure you want to delete this task \"${task.name}\"?`,\n        confirmText: $localize`Delete`,\n        cancelText: $localize`Cancel`,\n        variant: AlertDialogVariant.IMPORTANT,\n      })\n      .pipe(\n        switchMap((confirmed) => {\n          if (confirmed) {\n            return this.delete(projectId, task.id).pipe(switchMap(() => of(true)));\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to edit specific task\n   * @param projectId Project id needed to update task\n   * @param task Task to update\n   * @returns Observable with updated task, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openEditTaskDialog(projectId: number, task: Task): Observable {\n    return this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.EDIT,\n        projectId,\n        task,\n      })\n      .afterClosed()\n      .pipe(\n        tap((data) => {\n          console.log(data);\n        }),\n        switchMap((updatedTask: any) => {\n          if (updatedTask) {\n            return this.update(projectId, updatedTask);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to create new task\n   * @returns created task, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openCreateNewTaskDialog() {\n    return this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n      } as TaskDialogData)\n      .afterClosed()\n      .pipe(\n        switchMap((task: TaskWithAdditionalData) => {\n          if (task) {\n            return this.create(task.projectId, task);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to create new subtask\n   * @param projectId Project id needed to update subtask\n   * @param parentTask Parent task id to which attach subtask\n   * @returns created subtask, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openCreateSubtaskDialog(projectId: number, parentTask: Task): Observable {\n    return this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n        projectId: projectId,\n        subtask: true,\n        task: {\n          parentTaskId: parentTask.id,\n        },\n      })\n      .afterClosed()\n      .pipe(\n        switchMap((newTask: any) => {\n          if (newTask) {\n            return this.create(projectId, newTask);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Generates schedule object for specific project\n   * @param projectId Project id to generate schedule from\n   * @returns Schedule object with all tasks\n   */\n  public schedule(projectId: number): Observable {\n    return combineLatest([\n      this.list(projectId).pipe(take(1)),\n      this.memberService.list(projectId).pipe(take(1)),\n    ]).pipe(\n      map(([tasks, members]: [tasks: Task[], members: ProjectMember[]]) => {\n        const schedules = [];\n\n        for (const { user } of members) {\n          schedules.push({ user, tasks: new Map() });\n        }\n\n        for (const task of tasks) {\n          const schedule = schedules.find((s) => s.user.id === task.assigneeId);\n\n          if (!schedule) continue;\n\n          if (task.estimatedDate) {\n            schedule.tasks.set(dayjs(task.estimatedDate).format('YYYY-MM-DD'), task);\n          } else {\n            if (!schedule.tasks.has(null)) schedule.tasks.set(null, []);\n\n            schedule.tasks.get(null).push(task);\n          }\n        }\n\n        return schedules;\n      }),\n    );\n  }\n\n  /**\n   * Assign task to specific user\n   * @param userId user to assign task to (if null, task will be unassigned)\n   * @param taskId task to assign\n   * @param projectId project id needed to assign task\n   * @returns Updated task object\n   */\n  public assign(userId: number | null, taskId: number, projectId: number): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${taskId}`, {\n      body: { assigneeId: userId },\n    });\n  }\n\n  /**\n   * Change status of specific task\n   * @param statusId status to change task to\n   * @param taskId task to change status of\n   * @param projectId project id needed to change status\n   * @returns Updated task object\n   */\n  public changeStatus(statusId: number, taskId: number, projectId: number): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${taskId}`, {\n      body: { statusId },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskTypeIconPipe.html":{"url":"pipes/TaskTypeIconPipe.html","title":"pipe - TaskTypeIconPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskTypeIconPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-type-icon.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskTypeIcon\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type-icon.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskTypeIcon',\n})\nexport class TaskTypeIconPipe implements PipeTransform {\n  /**\n   * @deprecated\n   */\n  transform(value: any): any {\n    switch (value) {\n      case 'TASK':\n        return 'cuTask';\n      case 'ISSUE':\n        return 'cuIssue';\n      case 'EPIC':\n        return 'cuEpic';\n      case 'USER_STORY':\n        return 'cuUserStory';\n      case 'SUBTASK':\n        return 'cuSubtask';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskTypePipe.html":{"url":"pipes/TaskTypePipe.html","title":"pipe - TaskTypePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskTypePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-type.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskType\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, type?: \"name\" | \"icon\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"name\" | \"icon\"\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, type: \"color\" | \"name\" | \"icon\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                \"color\" | \"name\" | \"icon\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'name'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { TaskType } from '@tasks/enums/task-type.enum';\nimport * as Color from 'color';\n\n@Pipe({\n  name: 'taskType',\n})\nexport class TaskTypePipe implements PipeTransform {\n  transform(value: any, type?: 'name' | 'icon'): string;\n  transform(value: any, type: 'color'): Color;\n\n  transform(value: any, type: 'color' | 'name' | 'icon' = 'name'): string | Color {\n    if (typeof value === 'number') value = TaskType[value];\n\n    switch (value) {\n      // Task\n      case 'TASK':\n        return {\n          name: $localize`Task`,\n          color: Color.rgb(52, 152, 219),\n          icon: 'cuTask',\n        }[type];\n\n      // User story\n      case 'USER_STORY':\n        return {\n          name: $localize`User story`,\n          color: Color.rgb(46, 204, 113),\n          icon: 'cuUserStory',\n        }[type];\n\n      // Issue\n      case 'ISSUE':\n        return {\n          name: $localize`Issue`,\n          color: Color.rgb(231, 76, 60),\n          icon: 'cuIssue',\n        }[type];\n\n      // Epic\n      case 'EPIC':\n        return {\n          name: $localize`Epic`,\n          color: Color.rgb(155, 89, 182),\n          icon: 'cuEpic',\n        }[type];\n\n      // Subtask\n      case 'SUBTASK':\n        return {\n          name: $localize`Subtask`,\n          color: Color.rgb(88, 183, 189),\n          icon: 'cuSubtask',\n        }[type];\n\n      // Unknown\n      default:\n        console.warn('Unknown task type:', value);\n        return value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskWithAdditionalData.html":{"url":"interfaces/TaskWithAdditionalData.html","title":"interface - TaskWithAdditionalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskWithAdditionalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/task.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Extended project task interface\n\n            \n\n            \n                Extends\n            \n            \n                    Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connectWithIssueOnGitHub\n                                        \n                                \n                                \n                                        \n                                            connectWithPullRequestOnGitHub\n                                        \n                                \n                                \n                                        \n                                            issue\n                                        \n                                \n                                \n                                        \n                                            issueAttachGithub\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            pull\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectWithIssueOnGitHub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectWithIssueOnGitHub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task is connected to GitHub issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connectWithPullRequestOnGitHub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectWithPullRequestOnGitHub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task is connected to GitHub pull request\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issue:         GitIssue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitIssue\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub issue to which the task is connected to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueAttachGithub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueAttachGithub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Project identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pull\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pull:         GitPull\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitPull\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub pull to which the task is connected to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace identifier\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\n\n/**\n * Project task interface\n */\nexport interface Task {\n  /**\n   * Task id (unique per project)\n   */\n  id: number;\n\n  /**\n   * Task name\n   */\n  name: string;\n\n  /**\n   * Task description\n   */\n  description: string;\n\n  /**\n   * Task deadline to be completed\n   */\n  deadline: Date;\n\n  /**\n   * Task estimated date to work on it\n   */\n  estimatedDate: Date;\n\n  /**\n   * Status id (unique per database)\n   */\n  statusId?: number;\n\n  /**\n   * Parent task id\n   */\n  parentTaskId?: number;\n\n  /**\n   * List of subtasks\n   */\n  subTasks?: Task[];\n\n  /**\n   * Optional link to the GitHub issue\n   */\n  issue?: string;\n\n  /**\n   * Task type (ex. EPIC, USER_STORY)\n   */\n  type: string;\n\n  /**\n   * Optional link to the GitHub pull request\n   */\n  pull?: string;\n\n  /**\n   * Optional merged pull requests list\n   */\n  mergedPullList?: String[];\n\n  /**\n   * Optional user id who is assigned to task\n   */\n  assigneeId?: number;\n}\n\n/**\n * Extended project task interface\n */\nexport interface TaskWithAdditionalData extends Omit {\n  /**\n   * Project identifier\n   */\n  projectId: number;\n\n  /**\n   * Workspace identifier\n   */\n  workspaceId: string;\n\n  /**\n   * Boolean to determine if task is connected to GitHub issue\n   */\n  connectWithIssueOnGitHub: boolean;\n\n  /**\n   * Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n   */\n  issueAttachGithub: boolean;\n\n  /**\n   * Boolean to determine if task is connected to GitHub pull request\n   */\n  connectWithPullRequestOnGitHub: boolean;\n\n  /**\n   * GitHub pull to which the task is connected to\n   */\n  pull: GitPull;\n\n  /**\n   * GitHub issue to which the task is connected to\n   */\n  issue: GitIssue;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nBoardPage\n\nBoardPage\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nBoardPage->TasksModule\n\n\n\n\n\nBoardTaskComponent\n\nBoardTaskComponent\n\nTasksModule -->\n\nBoardTaskComponent->TasksModule\n\n\n\n\n\nInputAssigneeComponent\n\nInputAssigneeComponent\n\nTasksModule -->\n\nInputAssigneeComponent->TasksModule\n\n\n\n\n\nSchedulePage\n\nSchedulePage\n\nTasksModule -->\n\nSchedulePage->TasksModule\n\n\n\n\n\nStatusColorPipe\n\nStatusColorPipe\n\nTasksModule -->\n\nStatusColorPipe->TasksModule\n\n\n\n\n\nStatusLabelComponent\n\nStatusLabelComponent\n\nTasksModule -->\n\nStatusLabelComponent->TasksModule\n\n\n\n\n\nTaskDialog\n\nTaskDialog\n\nTasksModule -->\n\nTaskDialog->TasksModule\n\n\n\n\n\nTaskListPage\n\nTaskListPage\n\nTasksModule -->\n\nTaskListPage->TasksModule\n\n\n\n\n\nTaskPriorityIconPipe\n\nTaskPriorityIconPipe\n\nTasksModule -->\n\nTaskPriorityIconPipe->TasksModule\n\n\n\n\n\nTaskPriorityPipe\n\nTaskPriorityPipe\n\nTasksModule -->\n\nTaskPriorityPipe->TasksModule\n\n\n\n\n\nTaskTypeIconPipe\n\nTaskTypeIconPipe\n\nTasksModule -->\n\nTaskTypeIconPipe->TasksModule\n\n\n\n\n\nTaskTypePipe\n\nTaskTypePipe\n\nTasksModule -->\n\nTaskTypePipe->TasksModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nTasksModule -->\n\nMainModule->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardPage\n                        \n                        \n                            BoardTaskComponent\n                        \n                        \n                            InputAssigneeComponent\n                        \n                        \n                            SchedulePage\n                        \n                        \n                            StatusColorPipe\n                        \n                        \n                            StatusLabelComponent\n                        \n                        \n                            TaskDialog\n                        \n                        \n                            TaskListPage\n                        \n                        \n                            TaskPriorityIconPipe\n                        \n                        \n                            TaskPriorityPipe\n                        \n                        \n                            TaskTypeIconPipe\n                        \n                        \n                            TaskTypePipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainModule\n                        \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { BoardTaskComponent } from './components/board-task/board-task.component';\nimport { InputAssigneeComponent } from './components/input-assignee/input-assignee.component';\nimport { StatusLabelComponent } from './components/status-label/status-label.component';\nimport { ViewOptionsComponent } from './components/view-options/view-options.component';\nimport { TaskDialog } from './dialogs/task/task.dialog';\nimport { BoardPage } from './pages/board/board.page';\nimport { SchedulePage } from './pages/schedule/schedule.page';\nimport { TaskListPage } from './pages/task-list/task-list.page';\nimport { StatusColorPipe } from './pipes/status-color.pipe';\nimport { TaskPriorityIconPipe } from './pipes/task-priority-icon.pipe';\nimport { TaskPriorityPipe } from './pipes/task-priority.pipe';\nimport { TaskTypeIconPipe } from './pipes/task-type-icon.pipe';\nimport { TaskTypePipe } from './pipes/task-type.pipe';\nimport { TasksRoutingModule } from './tasks.routing';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, MainModule, TasksRoutingModule],\n  declarations: [\n    BoardPage,\n    BoardTaskComponent,\n    TaskListPage,\n    TaskDialog,\n    TaskTypePipe,\n    TaskPriorityPipe,\n    TaskPriorityIconPipe,\n    TaskTypeIconPipe,\n    ViewOptionsComponent,\n    SchedulePage,\n    InputAssigneeComponent,\n    StatusLabelComponent,\n    StatusColorPipe,\n  ],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\nimport { BoardPage } from './pages/board/board.page';\nimport { SchedulePage } from './pages/schedule/schedule.page';\nimport { TaskListPage } from './pages/task-list/task-list.page';\n\n/**\n * Tasks routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'board',\n  },\n  {\n    path: 'board',\n    component: BoardPage,\n  },\n  {\n    path: 'list',\n    component: TaskListPage,\n  },\n  {\n    path: 'schedule',\n    component: SchedulePage,\n  },\n  {\n    path: 'calendar',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/calendar.svg',\n    },\n  },\n];\n\n/**\n * Tasks routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TasksRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestNgControl.html":{"url":"classes/TestNgControl.html","title":"class - TestNgControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestNgControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/helpers/ng-control-testing-provider.helper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NgControl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _control\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                viewToModelUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    control\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        viewToModelUpdate\n                        \n                    \n                \n            \n            \n                \nviewToModelUpdate(newValue: any)\n                \n            \n\n\n            \n                \n                    Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n\n                \n                    \n                        getcontrol()\n                    \n                \n                            \n                                \n                                    Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { AbstractControl, FormControl, NgControl } from '@angular/forms';\n\nexport class TestNgControl extends NgControl {\n  private _control = new FormControl('');\n  viewToModelUpdate(newValue: any): void {\n    this._control = newValue;\n  }\n  get control(): AbstractControl | null {\n    return this._control;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextareaComponent.html":{"url":"components/TextareaComponent.html","title":"component - TextareaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextareaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/textarea/textarea.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-textarea\n            \n\n            \n                styleUrls\n                ./textarea.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./textarea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cols\n                            \n                            \n                                floatingLabel\n                            \n                            \n                                hint\n                            \n                            \n                                placeholder\n                            \n                            \n                                rows\n                            \n                            \n                                staticLabel\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cols\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:13\n                            \n                        \n                \n                    \n                        Floating label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:28\n                            \n                        \n                \n                    \n                        Hint to display beneath the input to provide additional information of how to use the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:23\n                            \n                        \n                \n                    \n                        Input placeholder text\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        staticLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:18\n                            \n                        \n                \n                    \n                        Static label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:77\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.scss'],\n})\nexport class TextareaComponent extends ControlAccessor {\n  /**\n   * Floating label text to display\n   */\n  @Input() floatingLabel?: string;\n\n  /**\n   * Static label text to display\n   */\n  @Input() staticLabel?: string;\n\n  /**\n   * Input placeholder text\n   */\n  @Input() placeholder: string = '';\n\n  /**\n   * Hint to display beneath the input to provide additional information of how to use the input\n   */\n  @Input() hint?: string;\n\n  @Input() rows?: number = 4;\n\n  @Input() cols?: number = 50;\n}\n\n    \n\n    \n        \n  {{ staticLabel }}\n  \n    {{ floatingLabel }}\n    \n    {{ ngControl.control?.errors | validationError }}\n    {{ hint }}\n  \n\n\n    \n\n    \n                \n                    ./textarea.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ staticLabel }}      {{ floatingLabel }}        {{ ngControl.control?.errors | validationError }}    {{ hint }}  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextareaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpperNavigationComponent.html":{"url":"components/UpperNavigationComponent.html","title":"component - UpperNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpperNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/upper-navigation/upper-navigation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-upper-navigation\n            \n\n            \n                styleUrls\n                ./upper-navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./upper-navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _isButtonDisabled\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                faCog\n                            \n                            \n                                faSignOut\n                            \n                            \n                                faUser\n                            \n                            \n                                openBelow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeProfile\n                            \n                            \n                                createNewTask\n                            \n                            \n                                    Public\n                                isButtonDisabled\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openProfile\n                            \n                            \n                                    Public\n                                toggleProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, taskService: TaskService, workspaceService: WorkspaceService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTask\n                        \n                    \n                \n            \n            \n                \ncreateNewTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isButtonDisabled\n                        \n                    \n                \n            \n            \n                \n                    \n                    isButtonDisabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _isButtonDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCog\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faSignOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faSignOut\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faUser\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openBelow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('openBelow')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { faAngleDown, faCog, faSignOut, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { TaskService } from '@tasks/services/task.service';\nimport { fromEvent, map, skip, take } from 'rxjs';\n\n@Component({\n  selector: 'app-upper-navigation',\n  templateUrl: './upper-navigation.component.html',\n  styleUrls: ['./upper-navigation.component.scss'],\n})\nexport class UpperNavigationComponent implements OnInit {\n  constructor(\n    private dialogService: DialogService,\n    private taskService: TaskService,\n    private workspaceService: WorkspaceService,\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.workspaceService.list().pipe(\n      map((workspaces) => {\n        if (workspaces.length === 0) {\n          this._isButtonDisabled = false;\n        } else if (\n          workspaces.filter((workspace) => workspace.projectsWithPrivileges.length).length === 0\n        ) {\n          this._isButtonDisabled = false;\n        } else {\n          this._isButtonDisabled = true;\n        }\n      }),\n    );\n  }\n\n  @ViewChild('openBelow') openBelow!: ElementRef;\n\n  faAngleDown = faAngleDown;\n  faUser = faUser;\n  faCog = faCog;\n  faSignOut = faSignOut;\n\n  public active: boolean = false;\n  public _isButtonDisabled = true;\n\n  createNewTask() {\n    this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n      } as TaskDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.taskService.create(result.projectId, result).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n\n  logout() {\n    this.authService.logout().subscribe(() => {\n      this.router.navigate(['/', 'auth', 'login']);\n    });\n  }\n\n  public isButtonDisabled() {\n    return this._isButtonDisabled;\n  }\n  public openProfile() {\n    this.active = true;\n    fromEvent(document, 'click')\n      .pipe(skip(1), take(1))\n      .subscribe(() => {\n        this.closeProfile();\n      });\n  }\n\n  public closeProfile() {\n    this.active = false;\n  }\n  public toggleProfile() {\n    if (!this.active) {\n      this.openProfile();\n    } else {\n      this.closeProfile();\n    }\n  }\n}\n\n    \n\n    \n        New task\n\n\n\n  \n  \n    \n    \n    \n      \n    \n  \n\n\n  \n    \n      \n        \n        Profile\n      \n    \n    \n      \n        \n        Settings\n      \n    \n    \n      \n        \n        Log out\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./upper-navigation.component.scss\n                \n                :host {\n  display: flex;\n  width: 100%;\n  height: 62px;\n\n  // flex-shrink: 0;\n  align-items: center;\n  background-color: var(--color-secondary-800);\n  color: var(--color-text);\n}\n\napp-button {\n  align-items: center;\n  justify-content: center;\n  padding: 10px 20px;\n  margin: 0;\n}\n\n.flex-end-position {\n  position: absolute;\n  right: 0;\n  display: flex;\n  height: 62px;\n\n  .profile {\n    width: 200px;\n\n    .open-below {\n      position: absolute;\n      right: 0;\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 10px;\n      cursor: pointer;\n\n      app-icon {\n        display: flex;\n        align-items: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n  }\n}\n\n.options {\n  position: absolute;\n  z-index: 2;\n  top: 62px;\n  right: 0;\n  display: none;\n  width: 200px;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    background-color: var(--color-secondary-600);\n    color: var(--color-text);\n\n    a {\n      position: relative;\n      display: flex;\n      align-items: center;\n      padding: 12px 10px;\n      border-radius: var(--border-radius);\n      color: var(--color-text);\n      transition: background-color 0.2s ease-in-out;\n\n      app-icon {\n        margin-right: 1rem;\n        margin-left: 2rem;\n      }\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New task                                                        Profile                                    Settings                                    Log out            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpperNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMyself\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMyself\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyself()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(modUser: ModifyUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/user.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modUser\n                                    \n                                                ModifyUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ModifyUser } from '@auth/interfaces/user.interface';\nimport { ApiService } from '@main/services/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private apiService: ApiService) {}\n\n  public update(modUser: ModifyUser): Observable {\n    return this.apiService.put(`/auth/edit`, { body: modUser });\n  }\n\n  public getMyself() {\n    return this.apiService.get(`/auth/me`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserSession.html":{"url":"interfaces/UserSession.html","title":"interface - UserSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/interfaces/session.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            geoip\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ip\n                                        \n                                \n                                \n                                        \n                                            lastUsed\n                                        \n                                \n                                \n                                        \n                                            remembered\n                                        \n                                \n                                \n                                        \n                                            userAgent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geoip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geoip:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastUsed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remembered\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remembered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserSession {\n  id: number;\n  userAgent: string;\n  ip: string;\n  lastUsed: number;\n  remembered: boolean;\n  geoip: {\n    city: string;\n    country: string;\n  };\n  current: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUtils.html":{"url":"classes/UserUtils.html","title":"class - UserUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/classes/user.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getColorById\n                            \n                            \n                                    Static\n                                getColorByUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getColorById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/classes/user.class.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getColorByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/classes/user.class.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Random } from '@main/classes/random.class';\nimport * as Color from 'color';\n\nexport class UserUtils {\n  public static getColorById(id: number): Color {\n    const random = new Random(id);\n    const randomNumber = random.random();\n    const hue = randomNumber * 255;\n    return Color.hsl(hue, 95, 41);\n  }\n\n  /**\n   * @unsupported\n   */\n  public static getColorByUsername(username: string): Color {\n    let numberRepresentation = username\n      .split('')\n      .map((c) => c.charCodeAt(0))\n      .reduce((sum, n) => sum * 10 ** 6 + n, 0);\n\n    // This requires some tweaks to make the number smaller.\n    numberRepresentation = numberRepresentation / 10000000;\n\n    const random = new Random(numberRepresentation);\n    const randomNumber = random.random();\n    const hue = randomNumber * 255;\n    return Color.hsl(hue, 95, 41);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserWithPrivileges.html":{"url":"interfaces/UserWithPrivileges.html","title":"interface - UserWithPrivileges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserWithPrivileges\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            privileges\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        privileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        privileges:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/utils.class.ts\n        \n\n\n            \n                Description\n            \n            \n                Utilities class with some useful methods not available in any libraries.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                has\n                            \n                            \n                                    Static\n                                isLetter\n                            \n                            \n                                    Static\n                                regexIndexOf\n                            \n                            \n                                    Static\n                                snakeCase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        has\n                        \n                    \n                \n            \n            \n                \n                    \n                    has(object: any, keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:45\n                \n            \n\n\n            \n                \n                    Check if object has all the properties from array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to check\n\n                                    \n                                \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        keys to search for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if object has all of the specified properties, false otherwise.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isLetter\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLetter(char: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:59\n                \n            \n\n\n            \n                \n                    Checks if passed character is a letter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    char\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Character to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        regexIndexOf\n                        \n                    \n                \n            \n            \n                \n                    \n                    regexIndexOf(string: string, regex: RegExp, startPos: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:12\n                \n            \n\n\n            \n                \n                    Function to find first occurrence of regex in string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        String to search in\n\n                                    \n                                \n                                \n                                    regex\n                                    \n                                            RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Regex to search for\n\n                                    \n                                \n                                \n                                    startPos\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Optional starting position in the string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The index of the first match\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        snakeCase\n                        \n                    \n                \n            \n            \n                \n                    \n                    snakeCase(inputString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:22\n                \n            \n\n\n            \n                \n                    Converts string from camelCase and PascalCase to snake_case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string in snake_case\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utils {\n  /**\n   * Function to find first occurrence of regex in string\n   * @param string String to search in\n   * @param regex Regex to search for\n   * @param startPos Optional starting position in the string\n   * @returns The index of the first match\n   */\n  public static regexIndexOf(string: string, regex: RegExp, startPos: number = 0) {\n    var indexOf = string.substring(startPos).search(regex);\n    return indexOf >= 0 ? indexOf + startPos : indexOf;\n  }\n\n  /**\n   * Converts string from camelCase and PascalCase to snake_case\n   * @param inputString String to convert\n   * @returns string in snake_case\n   */\n  public static snakeCase(inputString: string) {\n    return inputString\n      .split('')\n      .map((character, index) => {\n        if (Utils.isLetter(character) && character == character.toUpperCase()) {\n          if (index > 0) {\n            return '_' + character.toLowerCase();\n          } else {\n            return character.toLowerCase();\n          }\n        } else {\n          return character;\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Check if object has all the properties from array\n   * @param object Object to check\n   * @param keys keys to search for\n   * @returns true if object has all of the specified properties, false otherwise.\n   */\n  public static has(object: any, keys: string[]) {\n    for (const key of keys) {\n      if (!object.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Checks if passed character is a letter\n   * @param char Character to check\n   * @returns\n   */\n  public static isLetter(char: String) {\n    if (char.length > 1) return false;\n    return (char >= 'A' && char = 'a' && char \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationError.html":{"url":"interfaces/ValidationError.html","title":"interface - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/validation-error.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error interface. Used with form controls to specify what validators returned errors.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Human readable error message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of the error. For example 'required', 'minlength', 'maxlength', 'pattern', 'email', etc.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ValidationError {\n  /**\n   * Type of the error. For example 'required', 'minlength', 'maxlength', 'pattern', 'email', etc.\n   */\n  type: string;\n  /**\n   * Human readable error message.\n   */\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ValidationErrorPipe.html":{"url":"pipes/ValidationErrorPipe.html","title":"pipe - ValidationErrorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ValidationErrorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/_main/pipes/validation-error.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe to transform validation errors to a human readable string\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        validationError\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/pipes/validation-error.pipe.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe value to be transformed\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        message from validation error\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe to transform validation errors to a human readable string\n */\n@Pipe({\n  name: 'validationError',\n})\nexport class ValidationErrorPipe implements PipeTransform {\n  /**\n   *\n   * @param value - The value to be transformed\n   * @returns message from validation error\n   */\n  transform(value: any): any {\n    return value?.message || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOptionsComponent.html":{"url":"components/ViewOptionsComponent.html","title":"component - ViewOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/view-options/view-options.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-options\n            \n\n            \n                styleUrls\n                ./view-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./view-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                penToSquare\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/view-options/view-options.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/view-options/view-options.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFilter\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        penToSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPenToSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { faFilter, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-view-options',\n  templateUrl: './view-options.component.html',\n  styleUrls: ['./view-options.component.scss'],\n})\nexport class ViewOptionsComponent {\n  penToSquare = faPenToSquare;\n  filter = faFilter;\n\n  public workspaceId: number;\n  public projectId: number;\n\n  @Input()\n  project!: Project;\n\n  @Input()\n  title!: string;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{title}}\n      {{title}} {{project.name}}\n    \n    \n      \n        General\n      \n      \n        Members\n      \n    \n    \n      \n        General\n      \n      \n        Members\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./view-options.component.scss\n                \n                :host {\n  width: 100%;\n  align-items: center;\n  color: var(--color-text);\n}\n\nsection {\n  position: relative;\n  display: flex;\n  margin-bottom: 1rem;\n\n  .tabs {\n    display: flex;\n\n    .project-name {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      margin-right: 10px;\n    }\n\n    a {\n      position: relative;\n      display: block;\n      padding: 10px;\n      margin-right: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      &.active {\n        color: var(--color-text);\n\n        &::before {\n          position: absolute;\n          bottom: 10px;\n          left: 5px;\n          width: calc(100% - 10px);\n          height: 2px;\n          background-color: var(--color-primary-700);\n          border-radius: var(--border-radius);\n          content: '';\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}      {{title}} {{project.name}}                      General                    Members                            General                    Members            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOptionsComponent-1.html":{"url":"components/ViewOptionsComponent-1.html","title":"component - ViewOptionsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/view-options/view-options.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-options\n            \n\n            \n                styleUrls\n                ./view-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./view-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faGithub\n                            \n                            \n                                filter\n                            \n                            \n                                    Public\n                                isFiltersOpen\n                            \n                            \n                                penToSquare\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                filtersControl\n                            \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersControl\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faGithub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGithub\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFilter\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isFiltersOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        penToSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPenToSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faFilter, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport { Filter } from '@main/interfaces/filters.interface';\n\n@Component({\n  selector: 'app-view-options',\n  templateUrl: './view-options.component.html',\n  styleUrls: ['./view-options.component.scss'],\n})\nexport class ViewOptionsComponent {\n  penToSquare = faPenToSquare;\n  faGithub = faGithub;\n  filter = faFilter;\n\n  public workspaceId: number;\n  public projectId: number;\n\n  @Input()\n  project!: Project;\n\n  @Input()\n  filters: Filter[] = [];\n\n  @Input()\n  public filtersControl = new FormControl();\n\n  public isFiltersOpen = false;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{project.name}}\n      \n        \n      \n    \n    \n      Board\n    \n    \n      List\n    \n    \n      Schedule\n    \n    \n      Calendar\n    \n    \n      Backlog\n    \n  \n  \n    \n      \n      Edit\n    \n    \n      \n      Filters\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./view-options.component.scss\n                \n                :host {\n  width: 100%;\n  align-items: center;\n  color: var(--color-text);\n}\n\nsection {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n\n  .tabs {\n    display: flex;\n\n    .project-name {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      margin-right: 10px;\n\n      a {\n        padding: 0;\n        margin-left: 1rem;\n      }\n    }\n\n    a {\n      position: relative;\n      display: block;\n      padding: 10px 10px 15px 10px;\n      margin-right: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      &.active {\n        color: var(--color-text);\n\n        &::before {\n          position: absolute;\n          bottom: 10px;\n          left: 5px;\n          width: calc(100% - 10px);\n          height: 2px;\n          background-color: var(--color-primary-700);\n          border-radius: var(--border-radius);\n          content: '';\n        }\n      }\n    }\n  }\n\n  .options {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options-element {\n      position: relative;\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      app-icon {\n        display: flex;\n        align-items: center;\n        padding-right: 10px;\n      }\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      .overlay {\n        position: absolute;\n        z-index: 150;\n        right: 0;\n        bottom: 0;\n        width: 200px;\n        padding: 1rem;\n        background-color: var(--color-secondary-600);\n        border-radius: var(--border-radius);\n        transform: translateY(100%);\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{project.name}}                                  Board              List              Schedule              Calendar              Backlog                        Edit                    Filters                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewOptionsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Workspace.html":{"url":"interfaces/Workspace.html","title":"interface - Workspace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Workspace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/workspace.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Main workspace (projects/spaces grouping entity) interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            projectsWithPrivileges\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectsWithPrivileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectsWithPrivileges:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Project } from './project.interface';\n/**\n * Main workspace (projects/spaces grouping entity) interface\n */\nexport interface Workspace {\n  /**\n   * Workspace ID\n   */\n  id: number;\n  /**\n   * Workspace name\n   */\n  name: string;\n\n  projectsWithPrivileges: {\n    project: Project;\n    privileges: number;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspaceService.html":{"url":"injectables/WorkspaceService.html","title":"injectable - WorkspaceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkspaceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/workspace.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Workspaces management service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Private\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/workspace.service.ts:14\n                            \n                        \n\n                \n                    \n                            Default constructor with ApiService dependency.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Api service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:62\n                \n            \n\n\n            \n                \n                    Creates a new workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace to modify\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:36\n                \n            \n\n\n            \n                \n                    Deletes the workspace by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the workspace to delete from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:27\n                \n            \n\n\n            \n                \n                    Gets a workspace by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the workspace to get from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:53\n                \n            \n\n\n            \n                \n                    Lists all available workspaces.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:45\n                \n            \n\n\n            \n                \n                    Updates a workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace object to update in the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(identifier: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ServiceValidator({DELETE: undefined, GET: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        list$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/services/workspace.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ServiceValidator } from '@main/decorators/service-validator.decorator';\nimport { Observable, Subject } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Workspace } from '../interfaces/workspace.interface';\n\n/**\n * Workspaces management service\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class WorkspaceService {\n  list$ = new Subject();\n\n  /**\n   * Default constructor with `ApiService` dependency.\n   * @param apiService Api service\n   */\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Gets a workspace by its ID.\n   * @param id identifier of the workspace to get from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(id: number): Observable {\n    return this.apiService.get(`/workspace/${id}`);\n  }\n\n  /**\n   * Deletes the workspace by its ID.\n   * @param id identifier of the workspace to delete from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(id: number): Observable {\n    return this.apiService.delete(`/workspace/${id}`).pipe(this.validate('DELETE'));\n  }\n\n  /**\n   * Updates a workspace.\n   * @param workspace workspace object to update in the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public update(workspace: Workspace): Observable {\n    return this.apiService.put(`/workspace/${workspace.id}`, { body: workspace });\n  }\n\n  /**\n   * Lists all available workspaces.\n   * @returns Request observable, which completes when request is finished\n   */\n  public list(): Observable {\n    return this.apiService.get(`/workspace`);\n  }\n\n  /**\n   * Creates a new workspace.\n   * @param workspace workspace to modify\n   * @returns Request observable, which completes when request is finished\n   */\n  public create(workspace: Workspace): Observable {\n    return this.apiService.post(`/workspace`, { body: workspace });\n  }\n\n  @ServiceValidator({\n    DELETE: {\n      400: $localize`Workspace is not empty. Only empty workspaces can be deleted.`,\n    },\n    GET: {\n      404: $localize`Workspace with this ID does not exist.`,\n    },\n  })\n  private validate(identifier: string): any {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspacesListPage.html":{"url":"components/WorkspacesListPage.html","title":"component - WorkspacesListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WorkspacesListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts\n\n\n\n    \n        Description\n    \n    \n        Workspaces list page component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-workspaces-list-page\n            \n\n            \n                styleUrls\n                ./workspaces-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./workspaces-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                faPlus\n                            \n                            \n                                    Public\n                                    Optional\n                                workspaces$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteWorkspace\n                            \n                            \n                                editWorkspace\n                            \n                            \n                                loadWorkspaces\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openWorkspace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:20\n                            \n                        \n\n                \n                    \n                            Default constructor with dependency injection.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteWorkspace\n                        \n                    \n                \n            \n            \n                \ndeleteWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:62\n                \n            \n\n\n            \n                \n                    Shows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editWorkspace\n                        \n                    \n                \n            \n            \n                \neditWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:75\n                \n            \n\n\n            \n                \n                    Navigates to the workspace edit page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadWorkspaces\n                        \n                    \n                \n            \n            \n                \nloadWorkspaces()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:54\n                \n            \n\n\n            \n                \n                    Loads the workspaces list from the workspace service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:47\n                \n            \n\n\n            \n                \n                    Lifecycle hook to load workspaces at the start of the page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWorkspace\n                        \n                    \n                \n            \n            \n                \nopenWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:37\n                        \n                    \n\n            \n                \n                    Plus icon to display on the add button\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        workspaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:42\n                        \n                    \n\n            \n                \n                    Workspaces list observable to use in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Observable } from 'rxjs';\nimport { Page } from 'src/app/_main/decorators/page.decorator';\nimport { DialogService } from 'src/app/_main/services/dialog.service';\nimport { Workspace } from '../../interfaces/workspace.interface';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Workspaces list page component.\n */\n@Page()\n@Component({\n  selector: 'app-workspaces-list-page',\n  templateUrl: './workspaces-list.page.html',\n  styleUrls: ['./workspaces-list.page.scss'],\n})\nexport class WorkspacesListPage implements OnInit {\n  /**\n   * Default constructor with dependency injection.\n   * @param workspaceService Workspace service\n   * @param dialogService Dialog service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private router: Router,\n  ) {}\n\n  /**\n   * Plus icon to display on the add button\n   */\n  public faPlus = faPlus;\n\n  /**\n   * Workspaces list observable to use in the template.\n   */\n  public workspaces$?: Observable;\n\n  /**\n   * Lifecycle hook to load workspaces at the start of the page.\n   */\n  ngOnInit() {\n    this.loadWorkspaces();\n  }\n\n  /**\n   * Loads the workspaces list from the workspace service.\n   */\n  loadWorkspaces() {\n    this.workspaces$ = this.workspaceService.list();\n  }\n\n  /**\n   * Shows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.\n   * @param workspace Workspace to delete\n   */\n  deleteWorkspace(workspace: Workspace) {\n    this.dialogService.confirmWorkspaceDelete(workspace).subscribe(() => {\n      this.workspaceService.delete(workspace.id).subscribe(() => {\n        // this.loadWorkspaces();\n        window.location.reload();\n      });\n    });\n  }\n\n  /**\n   * Navigates to the workspace edit page.\n   * @param workspace Workspace to edit\n   */\n  editWorkspace(workspace: Workspace) {\n    this.router.navigate(['/', workspace.id, 'edit']);\n  }\n\n  openWorkspace(workspace: Workspace) {\n    this.router.navigate(['/', workspace.id]);\n  }\n}\n\n    \n\n    \n        \n\n  Workspaces\n  New workspace\n\n\n\n\n\n  \n  \n    Name\n     {{ row.name }} \n  \n\n  \n  \n    Statistics\n     - \n  \n\n  \n  \n    Last update\n     - \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Edit workspace\n        \n        \n          Delete workspace\n        \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./workspaces-list.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Workspaces  New workspace        Name     {{ row.name }}           Statistics     -           Last update     -                                                           Edit workspace                          Delete workspace                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkspacesListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/_main/_main.module.ts\n            \n            variable\n            ngModuleConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/classes/control-accessor.class.ts\n            \n            component\n            ControlAccessor\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/_main/classes/e-set.class.ts\n            \n            class\n            ESet\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/classes/enum.class.ts\n            \n            class\n            Enum\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/_main/classes/filters.class.ts\n            \n            class\n            Filters\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/classes/persistent-map.class.ts\n            \n            class\n            PersistentMap\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/_main/classes/persistent-map.class.ts\n            \n            interface\n            PersistentMapOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/classes/random.class.ts\n            \n            class\n            Random\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/_main/classes/utils.class.ts\n            \n            class\n            Utils\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/_main/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/_main/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_main/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/_main/components/filters/filters.component.ts\n            \n            component\n            FiltersComponent\n            \n                57 %\n                (11/19)\n            \n        \n        \n            \n                \n                src/app/_main/components/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/_main/components/input-date-time/input-date-time.component.ts\n            \n            component\n            InputDateTimeComponent\n            \n                50 %\n                (10/20)\n            \n        \n        \n            \n                \n                src/app/_main/components/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                70 %\n                (17/24)\n            \n        \n        \n            \n                \n                src/app/_main/components/main-view/main-view.component.ts\n            \n            component\n            MainViewComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts\n            \n            component\n            NavElementWorkspaceComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/_main/components/nav-element/nav-element.component.ts\n            \n            component\n            NavElementComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/_main/components/option/option.component.ts\n            \n            component\n            OptionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/_main/components/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts\n            \n            component\n            SidebarNavigationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts\n            \n            component\n            SnackbarOutletComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/components/snackbar/snackbar.component.ts\n            \n            component\n            SnackbarComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/_main/components/snackbar/snackbar.interface.ts\n            \n            interface\n            SnackbarData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/components/textarea/textarea.component.ts\n            \n            component\n            TextareaComponent\n            \n                84 %\n                (16/19)\n            \n        \n        \n            \n                \n                src/app/_main/components/upper-navigation/upper-navigation.component.ts\n            \n            component\n            UpperNavigationComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/debug.decorator.ts\n            \n            function\n            Debug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/page.decorator.ts\n            \n            function\n            Page\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/service-validator.decorator.ts\n            \n            interface\n            ErrorValidationTree\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/service-validator.decorator.ts\n            \n            function\n            ServiceValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/service.decorator.ts\n            \n            function\n            Service\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/dialogs/alert/alert.dialog.ts\n            \n            component\n            AlertDialog\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/_main/dialogs/alert/alert.dialog.ts\n            \n            interface\n            AlertDialogData\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/_main/directives/click-stop-propagation.directive.ts\n            \n            directive\n            ClickStopPropagationDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_main/directives/focus-initial.directive.ts\n            \n            directive\n            FocusInitialDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_main/directives/let.directive.ts\n            \n            directive\n            LetDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/directives/let.directive.ts\n            \n            interface\n            LetContext\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/interfaces/filters.interface.ts\n            \n            interface\n            FilterCheckbox\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/_main/interfaces/request-options.interface.ts\n            \n            interface\n            RequestOptions\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/_main/interfaces/validation-error.interface.ts\n            \n            interface\n            ValidationError\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_main/operators/apply-filters.operator.ts\n            \n            function\n            applyFilters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/operators/catch-response.operator.ts\n            \n            function\n            catchResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/pages/mock/mock.page.ts\n            \n            component\n            MockPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/pipes/validation-error.pipe.ts\n            \n            pipe\n            ValidationErrorPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/_main/services/dialog.service.ts\n            \n            injectable\n            DialogService\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/_main/services/router-extensions.service.ts\n            \n            injectable\n            RouterExtensionsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/services/snackbar.service.ts\n            \n            injectable\n            SnackbarService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/_main/validators/email.validator.ts\n            \n            function\n            emailValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/validators/max-length.validator.ts\n            \n            function\n            maxLengthValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/validators/password.validator.ts\n            \n            function\n            passwordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/validators/required.validator.ts\n            \n            function\n            requiredValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/validators/same-as.validator.ts\n            \n            function\n            sameAsValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/guard/logged-in-users.guard.ts\n            \n            guard\n            LoggedInUsersGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            ModifyUser\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            UserData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            UserWithPrivileges\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/pages/change-password/change-password.page.ts\n            \n            component\n            ChangePasswordPage\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/auth/pages/delete-account/delete-account.page.ts\n            \n            component\n            DeleteAccountPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/pages/forgot-password/forgot-password.page.ts\n            \n            component\n            ForgotPasswordPage\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/auth/pages/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/auth/pages/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/auth/pages/restore-account/restore-account.page.ts\n            \n            component\n            RestoreAccountPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/auth/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/classes/user.class.ts\n            \n            class\n            UserUtils\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/components/integration-github/integration-github.component.ts\n            \n            component\n            IntegrationGithubComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/components/member-list/member-list.component.ts\n            \n            component\n            MemberListComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/components/view-options/view-options.component.ts\n            \n            component\n            ViewOptionsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n            \n            component\n            AddMemberDialog\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n            \n            interface\n            AddMemberDialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitAccount\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitIntegration\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitIssue\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitPull\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/project-member.interface.ts\n            \n            interface\n            ProjectMember\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/project.interface.ts\n            \n            interface\n            Project\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/workspace.interface.ts\n            \n            interface\n            Workspace\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/create-project-members/create-project-members.page.ts\n            \n            component\n            CreateProjectMembersPage\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/create-project/create-project.page.ts\n            \n            component\n            CreateProjectPage\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/create-workspace/create-workspace.page.ts\n            \n            component\n            CreateWorkspacePage\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts\n            \n            component\n            EditProjectMembersPage\n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/edit-project/edit-project.page.ts\n            \n            component\n            EditProjectPage\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts\n            \n            component\n            EditWorkspacePage\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/github-integration/github-integration.page.ts\n            \n            component\n            GithubIntegrationPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/projects-list/projects-list.page.ts\n            \n            component\n            ProjectsListPage\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts\n            \n            component\n            WorkspacesListPage\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/services/git-integration.service.ts\n            \n            injectable\n            GitIntegrationService\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                src/app/dashboard/services/member.service.ts\n            \n            injectable\n            MemberService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/dashboard/services/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/services/workspace.service.ts\n            \n            injectable\n            WorkspaceService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/settings/components/integration-entry/integration-entry.component.ts\n            \n            component\n            IntegrationEntryComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/settings/components/list-group/list-group.component.ts\n            \n            component\n            ListGroupComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/settings/interfaces/session.interface.ts\n            \n            interface\n            UserSession\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-account/settings-account.page.ts\n            \n            component\n            SettingsAccountPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n            \n            component\n            SettingsIntegrationsPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n            \n            interface\n            GitAccountWithUsage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-localization/settings-localization.page.ts\n            \n            component\n            SettingsLocalizationPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-sessions/settings-sessions.page.ts\n            \n            component\n            SettingsSessionsPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings/settings.page.ts\n            \n            component\n            SettingsPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/services/sessions.service.ts\n            \n            injectable\n            SessionsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/components/board-task/board-task.component.ts\n            \n            component\n            BoardTaskComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tasks/components/input-assignee/input-assignee.component.ts\n            \n            component\n            InputAssigneeComponent\n            \n                40 %\n                (11/27)\n            \n        \n        \n            \n                \n                src/app/tasks/components/status-label/status-label.component.ts\n            \n            component\n            StatusLabelComponent\n            \n                40 %\n                (11/27)\n            \n        \n        \n            \n                \n                src/app/tasks/components/view-options/view-options.component.ts\n            \n            component\n            ViewOptionsComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/tasks/dialogs/task/task.dialog.ts\n            \n            component\n            TaskDialog\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/tasks/dialogs/task/task.dialog.ts\n            \n            interface\n            TaskDialogData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/schedule.interface.ts\n            \n            interface\n            SinglePersonSchedule\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/status.interface.ts\n            \n            interface\n            Status\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/status.interface.ts\n            \n            interface\n            StatusWithTasks\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/task.interface.ts\n            \n            interface\n            Task\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/task.interface.ts\n            \n            interface\n            TaskWithAdditionalData\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/tasks/pages/board/board.page.ts\n            \n            component\n            BoardPage\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/tasks/pages/schedule/schedule.page.ts\n            \n            component\n            SchedulePage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tasks/pages/task-list/task-list.page.ts\n            \n            component\n            TaskListPage\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/status-color.pipe.ts\n            \n            pipe\n            StatusColorPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/task-priority-icon.pipe.ts\n            \n            pipe\n            TaskPriorityIconPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/task-priority.pipe.ts\n            \n            pipe\n            TaskPriorityPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/task-type-icon.pipe.ts\n            \n            pipe\n            TaskTypeIconPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/task-type.pipe.ts\n            \n            pipe\n            TaskTypePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/services/status.service.ts\n            \n            injectable\n            StatusService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/tasks/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/_main.mocks.prod.ts\n            \n            function\n            initMocks\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/_main.mocks.ts\n            \n            function\n            initMocks\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/helpers/response.mock.helper.ts\n            \n            variable\n            NO_CONTENT_PROVIDED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/helpers/response.mock.helper.ts\n            \n            variable\n            SUCCESS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/workspaces.mocks.ts\n            \n            function\n            workspacesMock\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/workspaces.mocks.ts\n            \n            function\n            workspacesSeed\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tests/helpers/mat-dialog-testing-provider.helper.ts\n            \n            variable\n            MatDialogTestingProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers/ng-control-testing-provider.helper.ts\n            \n            class\n            TestNgControl\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tests/helpers/validator-testing.helper.ts\n            \n            function\n            expectToFail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers/validator-testing.helper.ts\n            \n            function\n            expectToPass\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/test.ts\n            \n            variable\n            context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tests/test.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/typings/typings.ts\n            \n            interface\n            FormGroup\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/cdk : ^13.3.0\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/material : ^13.3.0\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @fortawesome/angular-fontawesome : ^0.10.2\n        \n            @fortawesome/fontawesome-svg-core : ^6.1.0\n        \n            @fortawesome/free-brands-svg-icons : ^6.1.0\n        \n            @fortawesome/free-regular-svg-icons : ^6.1.0\n        \n            @fortawesome/free-solid-svg-icons : ^6.1.0\n        \n            @tabuckner/material-dayjs-adapter : ^1.1.0\n        \n            color : ^4.2.3\n        \n            concurrently : ^7.1.0\n        \n            dayjs : ^1.11.2\n        \n            miragejs : ^0.1.43\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            ua-parser-js : ^1.0.2\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AlertDialogVariant   (src/.../alert.dialog.ts)\n                        \n                        \n                            RegisterStage   (src/.../register.page.ts)\n                        \n                        \n                            SubTaskType   (src/.../task-type.enum.ts)\n                        \n                        \n                            TaskDialogVariant   (src/.../task.dialog.ts)\n                        \n                        \n                            TaskPriority   (src/.../task-priority.enum.ts)\n                        \n                        \n                            TaskType   (src/.../task-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/dialogs/alert/alert.dialog.ts\n    \n        \n            \n                \n                    \n                        \n                        AlertDialogVariant\n                    \n                \n                    \n                        \n                            Type of the dialog variant. Used to specify what dialog styling should be used.\n\n                        \n                    \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n                        \n                            \n                                 IMPORTANT\n                            \n                        \n                        \n                            \n                                Value : important\n                            \n                        \n            \n        \n\n    src/app/auth/pages/register/register.page.ts\n    \n        \n            \n                \n                    \n                        \n                        RegisterStage\n                    \n                \n                        \n                            \n                                 IMPORTANT_DATA\n                            \n                        \n                        \n                            \n                                 PERSONAL_DATA\n                            \n                        \n            \n        \n\n    src/app/tasks/enums/task-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        SubTaskType\n                    \n                \n                        \n                            \n                                 SUBTASK\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TaskType\n                    \n                \n                        \n                            \n                                 TASK\n                            \n                        \n                        \n                            \n                                 USER_STORY\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 EPIC\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/tasks/dialogs/task/task.dialog.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDialogVariant\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n                        \n                            \n                                Value : edit\n                            \n                        \n            \n        \n\n    src/app/tasks/enums/task-priority.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskPriority\n                    \n                \n                        \n                            \n                                 HIGHEST\n                            \n                        \n                        \n                            \n                                Value : highest\n                            \n                        \n                        \n                            \n                                 HIGH\n                            \n                        \n                        \n                            \n                                Value : high\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                Value : medium\n                            \n                        \n                        \n                            \n                                 LOW\n                            \n                        \n                        \n                            \n                                Value : low\n                            \n                        \n                        \n                            \n                                 LOWEST\n                            \n                        \n                        \n                            \n                                Value : lowest\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            applyFilters   (src/.../apply-filters.operator.ts)\n                        \n                        \n                            catchResponse   (src/.../catch-response.operator.ts)\n                        \n                        \n                            Debug   (src/.../debug.decorator.ts)\n                        \n                        \n                            emailValidator   (src/.../email.validator.ts)\n                        \n                        \n                            expectToFail   (src/.../validator-testing.helper.ts)\n                        \n                        \n                            expectToPass   (src/.../validator-testing.helper.ts)\n                        \n                        \n                            initMocks   (src/.../_main.mocks.prod.ts)\n                        \n                        \n                            initMocks   (src/.../_main.mocks.ts)\n                        \n                        \n                            maxLengthValidator   (src/.../max-length.validator.ts)\n                        \n                        \n                            Page   (src/.../page.decorator.ts)\n                        \n                        \n                            passwordValidator   (src/.../password.validator.ts)\n                        \n                        \n                            requiredValidator   (src/.../required.validator.ts)\n                        \n                        \n                            sameAsValidator   (src/.../same-as.validator.ts)\n                        \n                        \n                            Service   (src/.../service.decorator.ts)\n                        \n                        \n                            ServiceValidator   (src/.../service-validator.decorator.ts)\n                        \n                        \n                            workspacesMock   (src/.../workspaces.mocks.ts)\n                        \n                        \n                            workspacesSeed   (src/.../workspaces.mocks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/operators/apply-filters.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters(filters?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/operators/catch-response.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        catchResponse\n                        \n                    \n                \n            \n            \n                \ncatchResponse(message: string, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/debug.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Debug\n                        \n                    \n                \n            \n            \n                \nDebug()\n                \n            \n\n\n\n\n        \n    \n    src/app/_main/validators/email.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailValidator\n                        \n                    \n                \n            \n            \n                \nemailValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if email is valid\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/tests/helpers/validator-testing.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        expectToFail\n                        \n                    \n                \n            \n            \n                \nexpectToFail(val: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expectToPass\n                        \n                    \n                \n            \n            \n                \nexpectToPass(val: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/mocks/_main.mocks.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initMocks\n                        \n                    \n                \n            \n            \n                \ninitMocks()\n                \n            \n\n\n\n\n            \n                \n                    Production version of mocking initializer\nThis file need to be in file replacements in angular.json\n{\n \"replace\": \"src/mocks/_main.mocks.ts\",\n \"with\": \"src/mocks/_main.mocks.prod.ts\"\n}\n\n                \n            \n        \n    \n    src/mocks/_main.mocks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initMocks\n                        \n                    \n                \n            \n            \n                \ninitMocks()\n                \n            \n\n\n\n\n            \n                \n                    Function to initialize mocking server with all routes\n\n\n                \n            \n        \n    \n    src/app/_main/validators/max-length.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        maxLengthValidator\n                        \n                    \n                \n            \n            \n                \nmaxLengthValidator(length: number)\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if the length is not greater than specyfic number\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/page.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Page\n                        \n                    \n                \n            \n            \n                \nPage()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to mark component or directive as a page.\n(@)Page()\n(@)Component({\n  selector: 'app-example-page',\n  templateUrl: './example.page.html',\n  styleUrls: ['./example.page.scss'],\n})\nexport class CreateWorkspacePage { ... }\n\n                \n            \n        \n    \n    src/app/_main/validators/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if password is valid\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/validators/required.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        requiredValidator\n                        \n                    \n                \n            \n            \n                \nrequiredValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if value was provided\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/validators/same-as.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sameAsValidator\n                        \n                    \n                \n            \n            \n                \nsameAsValidator(compareWith: string, message: string)\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if password is valid\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    compareWith\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/service.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Service\n                        \n                    \n                \n            \n            \n                \nService()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to mark class as a service and store theirs instances in global variable.\n\n\n                \n            \n        \n    \n    src/app/_main/decorators/service-validator.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ServiceValidator\n                        \n                    \n                \n            \n            \n                \nServiceValidator(errorValidationTree: ErrorValidationTree)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorValidationTree\n                                    \n                                                ErrorValidationTree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/mocks/workspaces.mocks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        workspacesMock\n                        \n                    \n                \n            \n            \n                \nworkspacesMock(server: Server)\n                \n            \n\n\n\n\n            \n                \n                    Function to create mocking routes for workspaces.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    server\n                                    \n                                            Server\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Miragejs server\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workspacesSeed\n                        \n                    \n                \n            \n            \n                \nworkspacesSeed(server: Server)\n                \n            \n\n\n\n\n            \n                \n                    Function to seed data into the mocking server\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    server\n                                    \n                                            Server\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Miragejs server\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWorkflow - Clean and powerful work management app.\n\n\n  \n  \n  Workflow is a task management app with multiple independent modules to speed up work.\n    tasks / mail / messages\n  \n\n\n\n  DEVELOPMENT SERVER\n  \n\n\n\n  \n  \n  \n  \n\n\n\n\n\nGetting started\nAt first install node.js and npm from https://nodejs.org/en/. In the second step run command:\nnpm installAnd you are ready to go. It's highly recommended to use yarn instead of npm.\nnpm install -g yarn\nyarn install\n\nDevelopment server\nFor a dev server run:\nyarn startNavigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\n\n\nBuild\nTo build the project run:\nyarn buildThe build artifacts will be stored in the dist/ directory.\n\n\nRunning unit tests\nTo execute the unit tests via Karma run:\nyarn start:test\n\nRunning end-to-end tests\nTo execute the end-to-end tests via Cypress run:\nyarn e2e\n\nBuilding documentation\nTo build documentation via compodoc run:\nyarn start:docsAPI Documentation and repository\nEndpoints documentation is shared using Swagger library here. The repository is in other GitHub account here.\nRecommended Versions\nnode - 16.13.0\nyarn - 1.22.17\nAngular CLI - 13.2.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 2-Clause License\nCopyright (c) 2022, [Aleksandra Serba, Marcin Czerniak, Bartosz Wawrzyniak, Adrian Antkowiak]\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_EmailsModule\n\n\n\ncluster_EmailsModule_imports\n\n\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nMainModule->AuthModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nMainModule->DashboardModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nMainModule->SettingsModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nMainModule->TasksModule\n\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\nAuthModule -->\n\nChangePasswordPage->AuthModule\n\n\n\n\n\nDeleteAccountPage\n\nDeleteAccountPage\n\nAuthModule -->\n\nDeleteAccountPage->AuthModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\nAuthModule -->\n\nForgotPasswordPage->AuthModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAuthModule -->\n\nLoginPage->AuthModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nAuthModule -->\n\nRegisterPage->AuthModule\n\n\n\n\n\nRestoreAccountPage\n\nRestoreAccountPage\n\nAuthModule -->\n\nRestoreAccountPage->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAddMemberDialog\n\nAddMemberDialog\n\nDashboardModule -->\n\nAddMemberDialog->DashboardModule\n\n\n\n\n\nCreateProjectMembersPage\n\nCreateProjectMembersPage\n\nDashboardModule -->\n\nCreateProjectMembersPage->DashboardModule\n\n\n\n\n\nCreateProjectPage\n\nCreateProjectPage\n\nDashboardModule -->\n\nCreateProjectPage->DashboardModule\n\n\n\n\n\nCreateWorkspacePage\n\nCreateWorkspacePage\n\nDashboardModule -->\n\nCreateWorkspacePage->DashboardModule\n\n\n\n\n\nEditProjectMembersPage\n\nEditProjectMembersPage\n\nDashboardModule -->\n\nEditProjectMembersPage->DashboardModule\n\n\n\n\n\nEditProjectPage\n\nEditProjectPage\n\nDashboardModule -->\n\nEditProjectPage->DashboardModule\n\n\n\n\n\nEditWorkspacePage\n\nEditWorkspacePage\n\nDashboardModule -->\n\nEditWorkspacePage->DashboardModule\n\n\n\n\n\nIntegrationGithubComponent\n\nIntegrationGithubComponent\n\nDashboardModule -->\n\nIntegrationGithubComponent->DashboardModule\n\n\n\n\n\nMemberListComponent\n\nMemberListComponent\n\nDashboardModule -->\n\nMemberListComponent->DashboardModule\n\n\n\n\n\nProjectsListPage\n\nProjectsListPage\n\nDashboardModule -->\n\nProjectsListPage->DashboardModule\n\n\n\n\n\nViewOptionsComponent\n\nViewOptionsComponent\n\nDashboardModule -->\n\nViewOptionsComponent->DashboardModule\n\n\n\n\n\nWorkspacesListPage\n\nWorkspacesListPage\n\nDashboardModule -->\n\nWorkspacesListPage->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nGitIntegrationService\n\nGitIntegrationService\n\nDashboardModule -->\n\nGitIntegrationService->DashboardModule\n\n\n\n\n\nEmailsRoutingModule\n\nEmailsRoutingModule\n\n\n\nEmailsModule\n\nEmailsModule\n\nEmailsModule -->\n\nEmailsRoutingModule->EmailsModule\n\n\n\n\n\nMessagesRoutingModule\n\nMessagesRoutingModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nMessagesRoutingModule->MessagesModule\n\n\n\n\n\nIntegrationEntryComponent\n\nIntegrationEntryComponent\n\nSettingsModule -->\n\nIntegrationEntryComponent->SettingsModule\n\n\n\n\n\nListGroupComponent\n\nListGroupComponent\n\nSettingsModule -->\n\nListGroupComponent->SettingsModule\n\n\n\n\n\nSettingsAccountPage\n\nSettingsAccountPage\n\nSettingsModule -->\n\nSettingsAccountPage->SettingsModule\n\n\n\n\n\nSettingsIntegrationsPage\n\nSettingsIntegrationsPage\n\nSettingsModule -->\n\nSettingsIntegrationsPage->SettingsModule\n\n\n\n\n\nSettingsLocalizationPage\n\nSettingsLocalizationPage\n\nSettingsModule -->\n\nSettingsLocalizationPage->SettingsModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\nSettingsModule -->\n\nSettingsPage->SettingsModule\n\n\n\n\n\nSettingsSessionsPage\n\nSettingsSessionsPage\n\nSettingsModule -->\n\nSettingsSessionsPage->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\nBoardPage\n\nBoardPage\n\nTasksModule -->\n\nBoardPage->TasksModule\n\n\n\n\n\nBoardTaskComponent\n\nBoardTaskComponent\n\nTasksModule -->\n\nBoardTaskComponent->TasksModule\n\n\n\n\n\nInputAssigneeComponent\n\nInputAssigneeComponent\n\nTasksModule -->\n\nInputAssigneeComponent->TasksModule\n\n\n\n\n\nSchedulePage\n\nSchedulePage\n\nTasksModule -->\n\nSchedulePage->TasksModule\n\n\n\n\n\nStatusColorPipe\n\nStatusColorPipe\n\nTasksModule -->\n\nStatusColorPipe->TasksModule\n\n\n\n\n\nStatusLabelComponent\n\nStatusLabelComponent\n\nTasksModule -->\n\nStatusLabelComponent->TasksModule\n\n\n\n\n\nTaskDialog\n\nTaskDialog\n\nTasksModule -->\n\nTaskDialog->TasksModule\n\n\n\n\n\nTaskListPage\n\nTaskListPage\n\nTasksModule -->\n\nTaskListPage->TasksModule\n\n\n\n\n\nTaskPriorityIconPipe\n\nTaskPriorityIconPipe\n\nTasksModule -->\n\nTaskPriorityIconPipe->TasksModule\n\n\n\n\n\nTaskPriorityPipe\n\nTaskPriorityPipe\n\nTasksModule -->\n\nTaskPriorityPipe->TasksModule\n\n\n\n\n\nTaskTypeIconPipe\n\nTaskTypeIconPipe\n\nTasksModule -->\n\nTaskTypeIconPipe->TasksModule\n\n\n\n\n\nTaskTypePipe\n\nTaskTypePipe\n\nTasksModule -->\n\nTaskTypePipe->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    56 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    30 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        84 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            color   (src/.../color.interface.ts)\n                        \n                        \n                            Filter   (src/.../filters.interface.ts)\n                        \n                        \n                            FilterType   (src/.../filters.interface.ts)\n                        \n                        \n                            Schedule   (src/.../schedule.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/interfaces/color.interface.ts\n    \n    \n        \n            \n                \n                    \n                    color\n                \n            \n            \n                \n                            number\n\n                \n            \n        \n    \n    src/app/_main/interfaces/filters.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                            FilterCheckbox\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/tasks/interfaces/schedule.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Schedule\n                \n            \n            \n                \n                            SinglePersonSchedule[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            MatDialogTestingProvider   (src/.../mat-dialog-testing-provider.helper.ts)\n                        \n                        \n                            ngModuleConfig   (src/.../_main.module.ts)\n                        \n                        \n                            NO_CONTENT_PROVIDED   (src/.../response.mock.helper.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            SUCCESS   (src/.../response.mock.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tests/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('../', true, /\\.spec\\.ts$/)\n                    \n                \n\n            \n                \n                    Context for searching for tests\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n            \n                \n                    Context builder form karma tests\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiURL: '/api',\n  disableConsoleLog: true,\n}\n                    \n                \n\n            \n                \n                    Variant of global environment file for production.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Whether the application is running in production mode.\n   */\n  production: false,\n\n  /**\n   * API URL for the backend.\n   */\n  apiURL: '/api',\n\n  /**\n   * Whether to disable console logging.\n   */\n  disableConsoleLog: false,\n}\n                    \n                \n\n            \n                \n                    Global environment configuration object, replaced in configurations other than development. Stores build specific data.\n\n                \n            \n\n        \n    \n\n    src/tests/helpers/mat-dialog-testing-provider.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MatDialogTestingProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  MatDialogModule,\n  { provide: MAT_DIALOG_DATA, useValue: {} },\n  { provide: MatDialogRef, useValue: {} },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/_main/_main.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ngModuleConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  imports: [\n    /*=============================================\n    =             Local dependencies              =\n    =============================================*/\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n    ObserversModule,\n  ],\n  importExports: [\n    /*=============================================\n      =                Dependencies                 =\n      =============================================*/\n    DragDropModule,\n    PlatformModule,\n    OverlayModule,\n\n    /*=============================================\n      =              Material modules               =\n      =============================================*/\n    MatDialogModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTableModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n\n    /*=============================================\n      =              External modules               =\n      =============================================*/\n    FontAwesomeModule,\n  ],\n  declarations: [\n    /*=============================================\n    =         Local custom components             =\n    =============================================*/\n  ],\n  exportDeclarations: [\n    /*=============================================\n    =         Exported custom components          =\n    =============================================*/\n    InputComponent,\n    ButtonComponent,\n    ValidationErrorPipe,\n    AlertDialog,\n    IconComponent,\n    FocusInitialDirective,\n    SidebarNavigationComponent,\n    NavElementComponent,\n    NavElementWorkspaceComponent,\n    UpperNavigationComponent,\n    SelectComponent,\n    OptionComponent,\n    MainViewComponent,\n    TextareaComponent,\n    CheckboxComponent,\n    CardComponent,\n    ClickStopPropagationDirective,\n    InputDateTimeComponent,\n    LetDirective,\n    FiltersComponent,\n    SnackbarComponent,\n    SnackbarOutletComponent,\n    MockPage,\n  ],\n  providers: [\n    DialogService,\n    ApiService,\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    MatCheckboxModule,\n    MatDatepickerModule,\n  ],\n}\n                    \n                \n\n            \n                \n                    Main module configuration object\n\n                \n            \n\n        \n    \n\n    src/mocks/helpers/response.mock.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NO_CONTENT_PROVIDED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 400,\n  body: {\n    message: 'No data provided',\n  },\n}\n                    \n                \n\n            \n                \n                    Object to mock no content provided response. Mainly used when request checks\nfor data in body, but nothing is provided.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SUCCESS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  body: {\n    message: 'Success',\n  },\n}\n                    \n                \n\n            \n                \n                    Object to mock success response. Used often to notify app that request was\nsuccessful.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture.html":{"url":"additional-documentation/architecture.html","title":"additional-page - Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture\nArchitecture of the application is maintained with base Angular methodologies. For more information's about Angular methodologies see Angular documentation.\nNaming conventions\nEach file should be named using only lower case letters and  - to replace spaces. Filename should be .. where  is the name of the file (ex. hello-world),  is the type of the file (ex. module or component) and the  is the extension of the file (ex. .ts).\nSingle responsibility principle\nEach file should have only one responsibility. For example, src/app/hello-world/hello-world.module.ts should have only one responsibility to create the module. For more information's about the Single Responsibility Principle see Wikipedia.\nModules\nApp is splitter into separated modules. Each module has it's own folder in src/app directory. In this dedicated space each module has it's own .module.ts file and optionally .routing.ts file.\nClasses\nIf project is using some additional classes logic like class grouped utility functions or abstract control classes, then they should be placed in dedicated folder in classes/ directory.\nComponents\nComponents are the main building blocks of the application. They are the most important part of the architecture. Each component has it's own folder in components/ directory. In this dedicated space each component has it's own .component.ts file.\nDecorators\nDecorators are used to add additional functionality to the components. For example, @Component decorator is used to mark the component as a component. Each decorator has it's own file in decorators/ directory. In this dedicated space each pipe has it's own .decorator.ts file. For more information's about decorators see Angular documentation.\nDialogs\nDialogs are used to display information to the user. Dialogs are located in dialogs/ directory. For more information's about dialogs see Angular documentation.\nDirectives\nDirectives are used to add additional functionality to the components. For example, @Directive decorator is used to mark the directive as a directive. Each decorator has it's own file in directives/ directory. In this dedicated space each directive has it's own .directive.ts file. For more information's about directives see Angular documentation.\nEnums\nEnums are used to define the values of the enumeration. Each enumerable value has it's own enum.ts file in enums/ directory.\nGuards\nGuards are used to protect routes from unauthorized access. Each guard has it's own folder in guards/ directory. In this dedicated space each guard has it's own .guard.ts file. For more information's about guards see Angular documentation.\nInterfaces\nInterfaces are used to structure the code. They are used to describe the shape of the object. For more information's about interfaces see Angular documentation.\nPipes\nPipes are used to transform data. Each pipe has it's own folder in pipes/ directory. In this dedicated space each pipe has it's own .pipe.ts file. For more information's about pipes see Angular documentation.\nServices\nServices are used to share data between components. Each service has it's own .service.ts file located in services/ directory in one of the modules.\nValidators\nValidators are used to validate the data (mainly in forms). Each validator has it's own .validator.ts file located in validators/ directory in one of the modules.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/localization.html":{"url":"additional-documentation/localization.html","title":"additional-page - Localization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocalization\nApp is localized using angular/localize. At the current stage of the project app is translated in:\nde-DE -> German (Germany)\nen-GB -> English (United Kingdom)\nen-US -> English (United States, Default app language)\nes-ES -> Spanish (Spain)\nit-IT -> Italian (Italy)\npl-PL -> Polish (Poland)\nuk-UA -> Ukrainian (Ukraine)Configuration\nEach language is listed in angular.json file in i18n section.\nFor polish language for example:\n\"i18n\": {\n  ...\n  \"locales\": {\n    \"pl-PL\": {\n      \"translation\": \"src/locales/messages.pl-PL.xlf\"\n    },\n    ...\n  }\n}Languages also requires separated file in src/locales folder to be created before build.\nIn the future adding new language will need some more work to do. For example adding new element in language selection list.\nMaking translations\nBefore translating strings first what you need to do is to extract all translatable strings from the app. To do this run the command:\nyarn extract:i18nEach language translations are located in src/locales folder, for example src/locales/messages.pl-PL.xlf file. This files can be edited using any text editor, but more convenient is to use external tools.\nIn Visual Studio Code there is an extension named Angular I18n Editor. This extension is used to make translations in more human readable way. It serves an UI interface to edit translations. To open this extension press F1 and search for Angular I18n Editor: Open command.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/continuos-integration.html":{"url":"additional-documentation/continuos-integration.html","title":"additional-page - Continuos integration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCI/CD pipeline\nContinuos integration was resolved using tool named GitHub Actions. Actions are located in .github/workflows/ directory. At this moment there is one pipeline to deploy application named deploy.yml. This action after every push to the master branch rebuild the application and deploy it to the production environment using rsync protocol. This action also build documentation page, publishes it and runs tests. There is also included a small script to create badges to use them in Readme.md and documentation files. This file is named badge-generator.js and is located in the root directory.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
