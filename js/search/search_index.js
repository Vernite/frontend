var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddMemberDialog.html",[0,0.159,1,0.9]],["body/components/AddMemberDialog.html",[0,0.222,1,1.38,2,1.089,3,0.091,4,0.085,5,0.808,6,0.822,7,0.808,8,0.808,9,0.055,10,7.089,11,5.648,12,3.124,13,1.516,14,2.352,15,0.684,16,1.761,17,1.758,18,1.712,19,1.458,20,2.994,21,1.089,22,5.812,23,1.089,24,4.939,25,0.212,26,0.616,27,1.476,28,3.02,29,2.474,30,4.453,31,4.25,32,0.714,33,6.376,34,5.41,35,5.459,36,2.58,37,0.837,38,3.124,39,5.464,40,4.453,41,4.467,42,4.976,43,4.662,44,0.907,45,3.829,46,0.513,47,0.007,48,0.603,49,0.331,50,0.434,51,3.829,52,0.83,53,1.38,54,3.829,55,3.829,56,3.829,57,1.832,58,3.784,59,3.829,60,0.684,61,0.588,62,1.54,63,2.82,64,2.133,65,2.626,66,2.891,67,3.829,68,2.199,69,3.829,70,3.829,71,0.497,72,2.608,73,0.32,74,1.243,75,2.489,76,2.385,77,1.147,78,2.133,79,2.914,80,2.914,81,0.921,82,2.489,83,1.025,84,2.914,85,0.124,86,0.647,87,3.172,88,1.069,89,2.881,90,0.177,91,1.13,92,2.914,93,1.751,94,2.914,95,2.747,96,2.914,97,4.228,98,2.747,99,4.228,100,2.747,101,2.914,102,2.914,103,1.885,104,1.885,105,2.133,106,0.723,107,3.404,108,2.608,109,2.994,110,1.149,111,1.321,112,1.94,113,1.106,114,1.171,115,0.808,116,1.172,117,1.281,118,0.672,119,1.485,120,0.808,121,1.379,122,0.723,123,0.779,124,0.751,125,0.808,126,0.737,127,0.808,128,0.751,129,0.779,130,0.808,131,0.751,132,0.808,133,0.751,134,0.808,135,0.737,136,0.779,137,0.808,138,0.751,139,0.808,140,0.779,141,0.737,142,1.147,143,0.837,144,1.172,145,0.737,146,1.172,147,0.723,148,1.832,149,0.737,150,0.659,151,0.808,152,0.737,153,1.258,154,0.737,155,0.737,156,0.751,157,0.808,158,0.737,159,0.808,160,0.764,161,0.697,162,1.281,163,0.751,164,0.808,165,0.751,166,1.089,167,0.808,168,0.751,169,0.808,170,0.751,171,0.751,172,0.808,173,0.751,174,0.808,175,0.751,176,0.808,177,0.737,178,0.779,179,0.751,180,0.854,181,0.808,182,0.737,183,0.808,184,0.737,185,0.751,186,0.808,187,0.751,188,1.379,189,0.697,190,0.808,191,0.751,192,1.172,193,0.808,194,0.751,195,0.808,196,0.751,197,0.808,198,0.737,199,0.764,200,0.737,201,0.808,202,0.737,203,0.793,204,1.05,205,0.737,206,0.751,207,0.751,208,0.808,209,0.737,210,1.548,211,0.723,212,0.808,213,0.737,214,0.764,215,0.737,216,0.737,217,0.808,218,0.751,219,0.808,220,1.172,221,0.751,222,0.808,223,0.751,224,0.808,225,0.808,226,0.751,227,0.808,228,0.723,229,0.904,230,0.737,231,0.751,232,0.808,233,0.751,234,0.808,235,1.05,236,1.172,237,1.172,238,0.737,239,0.779,240,0.684,241,0.737,242,0.737,243,0.793,244,0.764,245,0.808,246,0.737,247,0.808,248,0.723,249,0.779,250,0.808,251,0.004,252,0.004]],["title/interfaces/AddMemberDialogData.html",[39,3.357,86,0.791]],["body/interfaces/AddMemberDialogData.html",[0,0.255,1,1.15,3,0.143,4,0.133,9,0.086,10,4.874,11,3.883,12,4.874,13,1.63,14,2.702,16,1.068,17,1.068,18,1.581,19,1.215,20,3.22,21,1.171,22,5.311,23,1.171,24,5.311,25,0.331,26,0.833,27,1.43,28,2.515,29,2.061,30,4.069,31,3.883,33,5.311,34,4.069,35,4.547,36,2.149,37,0.901,39,5.896,40,4.069,41,4.679,42,4.547,43,4.883,47,0.007,49,0.347,50,0.851,58,4.069,62,1.613,63,3.24,64,2.293,65,3.017,66,3.322,68,2.373,71,0.551,72,4.069,73,0.499,74,1.939,75,3.883,76,3.721,77,1.048,78,3.328,79,4.547,80,4.547,81,0.991,82,3.883,83,1.6,84,4.547,85,0.167,86,1.01,87,4.071,88,1.745,89,3.697,90,0.276,91,1.527,92,4.547,93,2.2,94,4.547,95,4.286,96,4.547,97,5.718,98,4.286,99,5.718,100,4.286,101,4.547,102,4.547,103,2.94,104,2.94,105,3.328,106,1.129,107,5.311,108,4.069,251,0.005,252,0.005,253,1.978]],["title/components/AlertDialog.html",[0,0.159,122,0.884]],["body/components/AlertDialog.html",[0,0.25,1,0.682,2,1.029,3,0.085,4,0.079,5,0.747,6,0.761,7,0.747,8,0.747,9,0.051,15,0.633,16,1.755,17,1.751,18,0.682,19,1.067,20,5.192,21,1.029,23,1.029,25,0.196,26,0.582,27,1.282,28,3.689,32,0.675,34,5.027,37,1.042,38,2.891,40,4.708,41,4.305,44,0.848,46,0.475,47,0.007,48,0.585,49,0.357,50,0.402,52,0.895,53,1.01,57,2.512,58,3.576,60,1.429,61,0.961,71,0.311,72,2.414,73,0.296,75,2.304,76,2.207,77,0.921,81,0.588,85,0.139,86,0.887,90,0.164,91,0.721,108,2.414,111,1.223,115,0.747,116,1.107,117,1.225,118,0.622,119,1.431,120,0.747,121,1.318,122,1.306,123,1.571,124,0.695,125,0.747,126,0.682,127,0.747,128,0.695,129,0.721,130,0.747,131,0.695,132,0.747,133,0.695,134,0.747,135,0.682,136,0.721,137,0.747,138,0.695,139,0.747,140,0.721,141,0.682,142,1.097,143,0.791,144,1.107,145,0.682,146,1.107,147,0.67,148,1.8,149,0.682,150,0.61,151,0.747,152,0.682,153,1.203,154,0.682,155,0.682,156,0.695,157,0.747,158,0.682,159,0.747,160,0.708,161,0.645,162,1.225,163,0.695,164,0.747,165,0.695,166,1.029,167,0.747,168,0.695,169,0.747,170,0.695,171,0.695,172,0.747,173,0.695,174,0.747,175,0.695,176,0.747,177,0.682,178,0.721,179,0.695,180,0.807,181,0.747,182,0.682,183,0.747,184,0.682,185,0.695,186,0.747,187,0.695,188,1.318,189,0.645,190,0.747,191,0.695,192,1.107,193,0.747,194,0.695,195,0.747,196,0.695,197,0.747,198,0.682,199,0.708,200,0.682,201,0.747,202,0.682,203,0.734,204,0.992,205,0.682,206,0.695,207,0.695,208,0.747,209,0.682,210,1.5,211,0.67,212,0.747,213,0.682,214,0.708,215,0.682,216,0.682,217,0.747,218,0.695,219,0.747,220,1.107,221,0.695,222,0.747,223,0.695,224,0.747,225,0.747,226,0.695,227,0.747,228,0.67,229,0.854,230,0.682,231,0.695,232,0.747,233,0.695,234,0.747,235,0.992,236,1.107,237,1.107,238,0.682,239,0.721,240,0.633,241,0.682,242,0.682,243,0.734,244,0.708,245,0.747,246,0.682,247,0.747,248,0.67,249,0.721,250,0.747,251,0.004,252,0.004,254,2.698,255,1.191,256,4.666,257,2.964,258,3.057,259,4.666,260,4.282,261,5.558,262,4.666,263,5.738,264,5.338,265,4.797,266,3.995,267,5.249,268,5.295,269,5.249,270,3.269,271,4.959,272,3.265,273,5.1,274,2.829,275,1.876,276,5.558,277,4.758,278,5.249,279,2.157,280,5.1,281,2.836,282,3.544,283,6.144,284,1.971,285,6.144,286,5.639,287,4.666,288,6.144,289,3.544,290,1.637,291,4.666,292,4.666,293,3.739,294,4.282,295,3.544,296,4.666,297,2.543,298,3.057,299,3.995,300,4.282,301,2.207,302,3.151,303,2.698,304,3.995,305,1.146,306,2.543,307,2.21,308,2.21,309,2.543,310,2.414,311,2.061,312,3.151,313,3.151,314,3.151,315,5.249,316,5.249,317,5.249,318,6.912]],["title/interfaces/AlertDialogData.html",[86,0.791,268,3.357]],["body/interfaces/AlertDialogData.html",[0,0.26,3,0.123,4,0.115,9,0.074,16,0.922,17,0.922,20,5.271,21,1.011,23,1.011,25,0.286,26,0.758,27,1.133,28,3.802,34,5.22,37,1.03,40,4.655,41,4.256,47,0.007,49,0.417,50,1.046,52,0.791,58,3.515,60,1.37,71,0.404,72,3.515,73,0.431,75,3.354,76,3.214,85,0.171,86,1.295,90,0.238,91,1.049,108,3.515,111,2.358,122,0.975,123,1.659,251,0.005,252,0.005,253,1.709,254,3.928,255,1.171,256,4.587,257,3.671,258,3.934,259,4.587,260,4.21,261,4.587,262,4.587,263,6.257,264,5.303,265,4.981,268,5.498,270,3.214,271,4.903,272,2.695,273,4.21,274,2.781,275,1.548,276,4.587,277,3.928,279,1.78,280,4.21,281,2.341,283,6.075,284,1.938,285,6.075,286,5.575,287,4.587,288,6.075,290,1.61,291,4.587,292,4.587,293,4.576,294,4.21,296,4.587,297,3.702,298,3.856,299,5.832,300,6.251,301,3.214,302,6.075,303,5.202,304,6.209,305,1.553,306,4.903,307,3.434,308,3.434,309,5.853,310,5.557,311,2.683,312,4.587,313,4.587,314,4.587]],["title/injectables/ApiService.html",[319,1.648,320,2.371]],["body/injectables/ApiService.html",[3,0.092,4,0.086,9,0.094,25,0.214,26,0.62,27,1.539,32,0.719,37,0.99,44,0.892,46,1.205,47,0.007,48,0.651,49,0.419,50,0.931,52,1.032,60,1.174,61,0.594,68,2.574,71,0.452,73,0.322,85,0.086,90,0.178,91,1.336,106,1.505,150,1.24,251,0.004,252,0.004,255,1.864,290,1.205,305,1.567,311,3.532,319,1.969,320,2.833,321,1.957,322,3.434,323,2.586,324,4.561,325,4.655,326,5.841,327,6.402,328,6.402,329,7.202,330,5.313,331,3.863,332,7.479,333,5.591,334,3.808,335,5.591,336,5.25,337,7.095,338,3.863,339,6.064,340,7.924,341,6.277,342,7.924,343,5.427,344,8.914,345,7.924,346,6.784,347,6.784,348,5.591,349,3.863,350,5.591,351,3.863,352,5.591,353,3.863,354,5.591,355,3.863,356,5.591,357,3.863,358,3.881,359,5.591,360,2.92,361,5.591,362,3.013,363,5.001,364,4.561,365,2.94,366,3.863,367,3.434,368,3.863,369,3.863,370,1.957,371,1.849,372,1.279,373,3.863,374,3.863,375,3.151,376,3.434,377,3.434,378,3.863,379,3.863,380,3.863,381,3.863,382,3.863]],["title/components/AppComponent.html",[0,0.159,124,0.917]],["body/components/AppComponent.html",[0,0.277,1,0.889,2,1.243,3,0.11,4,0.103,5,0.974,6,0.992,7,0.974,8,0.974,9,0.066,15,0.826,16,1.774,17,1.771,18,0.889,19,1.29,21,1.243,23,1.243,25,0.256,26,0.703,27,1.201,37,1.092,44,0.673,47,0.007,48,0.618,49,0.213,60,0.826,61,0.71,71,0.273,73,0.386,77,1.113,81,0.766,85,0.103,90,0.213,113,1.334,114,1.413,115,0.974,116,1.338,117,1.42,118,0.811,119,1.692,120,0.974,121,1.528,122,0.873,123,0.939,124,1.528,125,0.974,126,0.889,127,0.974,128,0.906,129,0.939,130,0.974,131,0.906,132,0.974,133,0.906,134,0.974,135,0.889,136,0.939,137,0.974,138,0.906,139,0.974,140,0.939,141,0.889,142,1.271,143,0.956,144,1.338,145,0.889,146,1.338,147,0.873,148,1.907,149,0.889,150,0.796,151,0.974,152,0.889,153,1.394,154,0.889,155,0.889,156,0.906,157,0.974,158,0.889,159,0.974,160,0.922,161,0.841,162,1.42,163,0.906,164,0.974,165,0.906,166,1.243,167,0.974,168,0.906,169,0.974,170,0.906,171,0.906,172,0.974,173,0.906,174,0.974,175,0.906,176,0.974,177,0.889,178,0.939,179,0.906,180,0.975,181,0.974,182,0.889,183,0.974,184,0.889,185,1.602,186,0.974,187,0.906,188,1.528,189,0.841,190,0.974,191,0.906,192,1.338,193,0.974,194,0.906,195,0.974,196,0.906,197,0.974,198,0.889,199,0.922,200,0.889,201,0.974,202,0.889,203,0.957,204,1.198,205,0.889,206,0.906,207,0.906,208,0.974,209,0.889,210,1.661,211,0.873,212,0.974,213,0.889,214,0.922,215,0.889,216,0.889,217,0.974,218,0.906,219,0.974,220,1.338,221,0.906,222,0.974,223,0.906,224,0.974,225,0.974,226,0.906,227,0.974,228,0.873,229,1.032,230,0.889,231,0.906,232,0.974,233,0.906,234,0.974,235,1.198,236,1.338,237,1.338,238,0.889,239,0.939,240,1.295,241,0.889,242,0.889,243,0.957,244,0.922,245,0.974,246,0.889,247,0.974,248,0.873,249,0.939,250,0.974,251,0.005,252,0.005,255,1.048,257,3.282,279,1.594,305,0.766,371,3.036,383,4.107,384,5.639,385,6.343,386,2.67,387,5.639,388,7.244,389,6.343,390,6.343,391,5.639,392,4.62,393,4.62,394,1.594,395,1.831,396,2.043,397,2.413]],["title/modules/AppModule.html",[398,1.837,399,3.561]],["body/modules/AppModule.html",[3,0.157,4,0.146,9,0.094,47,0.007,71,0.549,73,0.549,85,0.146,90,0.304,124,1.898,177,1.787,178,1.338,251,0.006,252,0.006,399,7.394,400,2.705,401,4.297,402,5.848,403,5.848,404,5.848,405,5.848,406,6.661,407,5.558,408,4.773,409,3.436,410,3.064,411,6.579,412,4.773,413,3.816,414,7.973,415,3.924,416,7.973,417,5.848,418,6.579,419,6.579,420,6.579,421,6.068,422,5.848,423,5.007,424,4.277]],["title/modules/AppRoutingModule.html",[398,1.837,406,3.357]],["body/modules/AppRoutingModule.html",[0,0.267,3,0.154,4,0.144,9,0.093,47,0.007,64,2.482,71,0.538,73,0.54,85,0.144,90,0.298,93,1.731,177,1.518,178,1.604,184,1.518,240,1.155,251,0.006,252,0.006,400,2.657,406,5.659,413,3.093,415,3.882,421,6.004,422,5.746,425,6.464,426,4.722,427,4.588,428,1.939,429,6.004,430,6.464,431,6.464,432,6.464,433,4.92,434,5.746,435,5.758,436,5.273,437,7.88,438,6.464,439,6.464,440,5.746,441,5.273,442,6.464,443,6.464,444,4.638,445,6.464,446,6.464,447,6.464,448,6.464,449,6.464,450,6.464,451,5.746,452,6.464,453,6.464,454,4.026]],["title/modules/AuthModule.html",[398,1.837,455,3.561]],["body/modules/AuthModule.html",[3,0.147,4,0.137,9,0.088,47,0.007,71,0.566,73,0.513,74,1.996,85,0.137,90,0.284,135,1.758,149,1.758,158,1.758,182,1.758,200,1.758,202,1.758,251,0.006,252,0.006,400,2.528,401,4.123,407,5.468,408,4.579,409,3.212,410,2.864,412,4.579,413,3.661,415,3.765,423,4.681,455,7.459,456,5.467,457,5.467,458,5.467,459,6.554,460,6.15,461,4.764,462,3.83,463,5.21,464,6.15,465,5.467,466,4.681,467,6.8,468,5.467,469,4.681,470,5.488,471,5.467,472,4.681,473,5.467,474,5.467,475,5.467,476,4.681]],["title/modules/AuthRoutingModule.html",[398,1.837,459,3.357]],["body/modules/AuthRoutingModule.html",[0,0.316,3,0.152,4,0.142,9,0.091,47,0.007,62,1.37,71,0.558,73,0.532,85,0.142,90,0.294,93,1.708,135,1.506,149,1.506,150,1.098,158,1.506,180,0.98,182,1.629,200,1.506,202,1.506,203,1.321,204,1.478,251,0.006,252,0.006,281,2.894,398,2.504,400,2.622,409,3.331,413,3.052,415,3.851,426,4.683,427,4.88,428,1.914,435,5.814,436,6.382,454,3.972,459,5.613,465,5.67,466,4.855,467,6.955,468,5.67,469,4.855,470,5.613,471,5.67,472,4.855,473,5.67,474,5.67,475,5.67,476,4.855,477,6.379,478,4.146,479,4.855,480,4.855,481,4.086,482,4.345]],["title/injectables/AuthService.html",[319,1.648,483,2.522]],["body/injectables/AuthService.html",[3,0.12,4,0.112,9,0.072,25,0.279,27,1.617,32,0.865,37,0.76,44,0.975,46,1.16,47,0.007,48,0.721,49,0.431,50,0.981,52,1.053,64,3.493,71,0.448,73,0.421,85,0.112,90,0.233,106,1.737,251,0.005,252,0.005,275,2.019,284,1.893,290,1.573,305,1.584,319,2.37,320,4.389,321,2.554,323,2.184,370,2.554,371,2.413,372,1.669,478,4.924,479,6.152,480,5.765,481,4.8,483,3.627,484,4.481,485,7.185,486,6.729,487,8.082,488,8.082,489,6.179,490,5.982,491,3.018,492,5.041,493,5.041,494,6.729,495,5.041,496,6.152,497,5.041,498,5.041,499,5.186,500,5.041,501,5.041,502,5.041,503,5.041,504,5.041,505,5.041,506,5.041,507,6.729,508,5.041,509,3.617,510,3.434,511,4.534,512,4.082,513,5.041,514,4.422,515,6.733,516,5.041,517,4.481,518,5.041,519,5.041,520,5.041,521,5.041,522,5.041,523,5.041,524,4.481]],["title/components/BoardPage.html",[0,0.159,126,0.9]],["body/components/BoardPage.html",[0,0.166,1,0.463,2,0.762,3,0.057,4,0.054,5,0.507,6,0.516,7,0.507,8,0.507,9,0.034,13,1.06,14,1.759,15,0.43,16,1.718,17,1.721,18,0.463,19,0.79,21,0.762,23,0.762,25,0.133,26,0.431,27,1.456,30,4.919,32,0.5,36,2.02,37,0.586,44,0.931,46,0.825,47,0.007,48,0.591,49,0.369,50,0.786,52,0.803,53,1.081,60,1.24,61,1.066,62,0.835,68,2.154,71,0.499,73,0.201,77,0.682,81,0.931,83,0.644,85,0.054,87,1.063,88,1.435,89,2.648,90,0.111,91,1.516,93,1.934,106,1.164,109,2.635,110,2.082,112,1.218,113,1.78,114,1.885,115,0.507,116,0.819,117,1.292,118,0.422,119,1.544,120,0.507,121,1.031,122,0.454,123,0.994,124,0.471,125,0.507,126,1.081,127,0.507,128,0.471,129,1.593,130,0.507,131,0.471,132,0.507,133,0.471,134,0.507,135,0.463,136,0.489,137,0.507,138,0.471,139,0.507,140,0.489,141,0.463,142,0.858,143,0.994,144,0.819,145,0.463,146,0.819,147,0.454,148,1.615,149,0.463,150,0.414,151,0.507,152,0.463,153,0.941,154,0.463,155,0.463,156,0.471,157,0.507,158,0.463,159,0.507,160,0.48,161,0.438,162,0.958,163,0.471,164,0.507,165,0.471,166,0.762,167,0.507,168,0.471,169,0.507,170,0.471,171,0.471,172,0.507,173,0.471,174,0.507,175,0.471,176,0.507,177,0.463,178,0.489,179,0.471,180,0.863,181,0.507,182,0.463,183,0.507,184,0.463,185,0.471,186,0.507,187,0.471,188,1.031,189,0.438,190,0.507,191,0.471,192,0.819,193,0.507,194,0.471,195,0.507,196,0.471,197,0.507,198,0.463,199,0.48,200,0.463,201,0.507,202,0.463,203,0.498,204,0.734,205,0.463,206,0.471,207,0.471,208,0.507,209,0.463,210,1.253,211,0.454,212,0.507,213,0.463,214,0.48,215,0.463,216,0.463,217,0.507,218,0.471,219,0.507,220,0.819,221,0.471,222,0.507,223,0.471,224,0.507,225,0.507,226,0.471,227,0.507,228,0.734,229,1.371,230,0.463,231,0.471,232,0.507,233,0.471,234,0.507,235,0.734,236,1.031,237,0.819,238,0.463,239,0.489,240,0.43,241,0.463,242,0.463,243,0.498,244,0.48,245,0.507,246,0.463,247,0.507,248,0.454,249,0.489,250,0.507,251,0.003,252,0.003,257,1.964,258,1.718,279,0.83,293,1.218,305,1.151,308,1.636,309,2.788,310,2.647,330,2.635,336,1.296,394,0.83,395,2.085,396,1.718,428,0.721,525,2.138,526,3.989,527,4.89,528,3.886,529,5.378,530,5.861,531,5.378,532,5.378,533,4.285,534,4.89,535,4.89,536,4.991,537,3.886,538,3.886,539,3.886,540,3.026,541,5.615,542,1.563,543,3.155,544,3.865,545,4.51,546,3.148,547,3.415,548,4.002,549,3.886,550,3.886,551,5.615,552,2.405,553,1.962,554,3.886,555,4.347,556,2.405,557,2.405,558,3.886,559,2.405,560,1.44,561,3.886,562,2.405,563,4.89,564,2.405,565,2.405,566,2.405,567,2.405,568,2.405,569,2.405,570,2.405,571,2.405,572,2.405,573,2.405,574,2.405,575,2.405,576,3.331,577,2.405,578,2.405,579,2.724,580,3.508,581,3.17,582,2.405,583,2.405,584,3.886,585,2.138,586,1.34,587,1.563,588,1.498,589,1.296,590,1.563,591,1.83,592,1.037,593,1.428,594,1.012,595,1.037,596,2.405,597,2.405,598,2.405,599,2.526,600,1.498,601,2.138,602,2.138,603,1.725,604,2.405,605,2.405,606,1.34,607,2.242,608,1.83,609,2.138,610,2.405,611,2.405,612,3.722,613,2.405,614,2.405,615,3.886,616,2.138,617,2.405,618,2.138,619,1.962,620,2.405,621,2.405,622,2.405,623,2.405,624,2.405,625,2.405,626,3.886,627,2.405,628,2.405,629,2.405,630,2.405,631,5.615,632,2.405,633,3.886,634,3.886,635,3.886,636,4.89,637,5.615,638,2.138,639,2.405,640,2.405,641,2.405,642,2.405,643,2.405,644,2.405,645,2.405,646,3.331,647,0.923,648,2.405,649,3.722,650,4.89,651,2.406,652,2.138,653,3.886,654,3.045,655,3.17,656,3.17,657,3.886,658,1.83,659,1.962,660,1.725,661,2.405,662,3.17,663,3.508,664,3.045,665,2.405,666,2.405,667,2.405,668,1.725,669,1.725,670,1.44,671,1.962,672,2.138,673,1.44,674,2.405,675,2.405,676,2.405,677,2.405,678,3.17,679,3.17,680,2.958,681,2.242,682,1.87,683,2.388,684,2.663,685,2.483,686,3.04,687,3.508,688,2.437,689,3.623,690,2.282,691,1.387,692,2.405,693,2.526,694,2.993,695,3.115,696,2.405,697,2.138,698,2.477,699,2.364,700,1.962,701,1.962,702,1.638,703,2.871,704,1.725,705,3.454,706,2.277,707,2.405,708,3.886,709,1.498,710,2.406,711,1.725,712,2.788,713,1.638,714,1.428,715,1.428,716,1.459,717,0.847,718,1.212,719,1.256,720,1.218,721,1.877,722,2.405,723,2.405,724,2.162,725,2.109,726,1.387,727,2.109,728,1.718,729,2.405,730,3.886,731,4.89,732,2.958,733,3.673,734,2.405,735,3.886,736,3.886,737,3.886,738,3.886,739,1.92,740,2.405,741,2.405,742,2.405,743,1.498,744,0.736,745,0.903,746,1.912,747,3.331,748,1.34,749,1.218,750,1.091,751,1.184,752,1.387,753,1.83,754,3.886,755,1.44,756,1.387,757,1.83]],["title/components/BoardTaskComponent.html",[0,0.159,128,0.917]],["body/components/BoardTaskComponent.html",[0,0.197,1,0.607,2,0.942,3,0.075,4,0.07,5,0.665,6,0.677,7,0.665,8,0.665,9,0.045,15,0.564,16,1.745,17,1.741,18,0.607,19,0.978,21,0.942,23,0.942,25,0.175,26,0.533,27,0.967,32,0.618,37,0.475,44,0.893,46,0.644,47,0.007,48,0.609,49,0.324,50,0.545,52,0.755,53,1.121,60,1.165,61,1.078,62,1.033,71,0.481,73,0.263,77,0.844,81,0.523,85,0.07,88,0.925,89,2.618,90,0.146,91,0.641,106,0.908,109,3.141,110,1.443,111,1.659,113,1.882,114,1.471,115,0.665,116,1.014,117,1.142,118,0.553,119,1.769,120,0.665,121,1.229,122,0.596,123,0.641,124,0.618,125,0.665,126,0.607,127,0.665,128,1.278,129,1.685,130,0.665,131,0.618,132,0.665,133,0.618,134,0.665,135,0.607,136,0.641,137,0.665,138,0.618,139,0.665,140,0.641,141,0.607,142,1.231,143,0.725,144,1.014,145,0.607,146,1.014,147,0.596,148,1.748,149,0.607,150,1.324,151,0.665,152,0.607,153,1.563,154,0.607,155,0.607,156,0.618,157,0.665,158,0.607,159,0.665,160,0.63,161,0.574,162,1.142,163,0.618,164,0.665,165,0.618,166,1.45,167,0.665,168,0.618,169,0.665,170,0.618,171,1.507,172,0.665,173,0.618,174,0.665,175,0.618,176,0.665,177,0.607,178,0.641,179,0.618,180,0.739,181,0.665,182,0.607,183,0.665,184,0.607,185,0.618,186,0.665,187,0.618,188,1.229,189,0.574,190,0.665,191,0.618,192,1.014,193,0.665,194,0.618,195,0.665,196,0.618,197,0.665,198,0.607,199,0.63,200,0.607,201,0.665,202,0.607,203,0.653,204,0.908,205,0.607,206,0.618,207,0.618,208,0.665,209,0.607,210,1.427,211,0.596,212,0.665,213,0.607,214,0.63,215,0.607,216,0.607,217,0.665,218,0.618,219,0.665,220,1.014,221,0.618,222,0.665,223,0.618,224,0.665,225,0.665,226,0.618,227,0.665,228,0.908,229,1.483,230,0.607,231,0.618,232,0.665,233,0.618,234,0.665,235,0.908,236,1.014,237,1.014,238,0.607,239,0.641,240,0.564,241,0.607,242,0.607,243,0.653,244,0.63,245,0.665,246,0.607,247,0.665,248,0.596,249,0.641,250,0.665,251,0.004,252,0.004,257,1.931,279,1.088,290,0.984,293,1.598,308,2.954,336,1.7,372,1.044,394,2.551,395,2.602,514,2.367,529,6.033,531,6.033,532,6.033,544,4.284,546,3.355,586,1.757,587,2.05,588,1.964,592,1.36,593,1.159,594,1.328,595,1.36,600,1.964,603,2.263,607,1.819,649,2.4,654,1.964,668,2.263,669,2.263,670,1.888,671,2.573,673,3.489,679,3.923,682,1.877,683,2.391,684,1.211,685,1.395,686,1.328,688,2.233,690,2.147,694,2.074,695,2.812,703,2.714,706,3.036,710,2.868,714,1.159,715,1.159,716,1.806,717,2.053,718,1.818,721,1.211,724,2.577,725,2.074,727,2.514,728,2.577,733,4.284,739,1.888,744,0.965,745,1.184,746,2.367,747,3.97,749,2.953,750,2.957,751,1.552,752,2.774,753,2.4,758,7.595,759,6.97,760,2.804,761,5.828,762,4.809,763,3.66,764,5.795,765,1.888,766,2.573,767,4.809,768,2.744,769,3.154,770,3.154,771,3.154,772,3.66,773,3.154,774,3.154,775,3.154,776,3.154,777,3.154,778,3.154,779,1.888,780,2.4,781,2.148,782,3.126,783,2.804,784,4.809,785,2.804,786,3.63,787,2.05,788,3.154,789,2.804,790,2.804,791,2.4,792,2.4,793,2.573,794,2.4,795,2.4,796,2.804,797,4.809,798,4.274,799,4.809,800,1.757,801,2.024,802,1.647,803,2.878,804,3.923,805,3.154,806,2.804,807,2.4,808,1.964,809,1.509,810,3.154,811,2.573,812,4.181,813,3.154,814,3.631,815,3.631,816,2.804,817,2.804,818,3.154,819,3.154,820,2.263,821,2.148,822,1.647,823,3.154,824,3.154,825,2.301,826,3.154,827,2.05]],["title/components/ButtonComponent.html",[0,0.159,131,0.917]],["body/components/ButtonComponent.html",[0,0.24,1,0.619,2,0.956,3,0.077,4,0.072,5,0.678,6,0.69,7,0.678,8,0.678,9,0.046,13,1.331,15,0.575,16,1.747,17,1.745,18,0.619,19,0.992,21,0.956,23,0.956,25,0.178,26,0.541,32,0.627,44,0.79,47,0.007,48,0.522,49,0.368,52,0.372,53,0.619,57,1.539,60,1.054,61,0.906,71,0.39,73,0.268,77,0.856,81,0.533,85,0.072,90,0.148,110,0.965,111,1.109,113,1.901,115,0.678,116,1.244,117,1.517,118,0.564,119,1.872,120,0.678,121,1.244,122,0.607,123,0.654,124,0.63,125,0.678,126,0.619,127,0.678,128,0.63,129,0.654,130,0.678,131,1.29,132,0.678,133,0.63,134,0.678,135,0.619,136,0.654,137,0.678,138,0.63,139,0.678,140,0.654,141,0.619,142,1.035,143,0.735,144,1.029,145,0.619,146,1.029,147,0.607,148,1.756,149,0.619,150,0.554,151,0.678,152,0.619,153,1.135,154,0.619,155,0.619,156,0.63,157,0.678,158,0.619,159,0.678,160,0.642,161,0.585,162,1.156,163,0.63,164,0.678,165,0.63,166,1.517,167,0.678,168,0.63,169,0.678,170,0.63,171,0.63,172,0.678,173,0.63,174,0.678,175,0.63,176,0.678,177,0.619,178,0.654,179,0.63,180,0.75,181,0.678,182,0.619,183,0.678,184,0.619,185,1.156,186,0.678,187,0.63,188,1.244,189,0.585,190,0.678,191,0.63,192,1.029,193,0.678,194,0.63,195,0.678,196,0.63,197,0.678,198,0.619,199,0.642,200,0.619,201,0.678,202,0.619,203,0.666,204,0.922,205,0.619,206,0.63,207,0.63,208,0.678,209,0.619,210,1.439,211,0.607,212,0.678,213,0.619,214,0.642,215,0.619,216,0.619,217,0.678,218,0.63,219,0.678,220,1.029,221,0.63,222,0.678,223,0.63,224,0.678,225,0.678,226,0.63,227,0.678,228,0.607,229,0.794,230,0.619,231,0.63,232,0.678,233,0.63,234,0.678,235,0.922,236,1.029,237,1.029,238,0.619,239,0.654,240,0.575,241,0.619,242,0.619,243,0.666,244,0.642,245,0.678,246,0.619,247,0.678,248,0.607,249,0.654,250,0.678,251,0.004,252,0.004,255,0.729,257,1.291,264,5.185,271,3.501,275,1.464,284,1.832,293,3.586,305,0.809,307,4.025,308,2.483,394,3.135,395,2.681,396,3.612,592,1.387,593,2.419,594,1.353,595,1.387,682,1.607,683,1.436,684,1.873,688,1.876,690,2.589,694,1.387,698,4.138,699,1.353,703,3.066,706,2.273,709,2.002,714,1.793,715,1.793,716,2.472,717,1.718,718,1.839,721,1.234,725,1.387,727,3.593,728,2.911,733,4.151,739,1.916,746,3.24,749,3.335,750,3.38,755,2.921,765,1.916,800,1.791,801,2.772,802,2.548,803,2.921,804,3.98,806,4.337,814,1.791,815,1.791,822,2.548,828,2.858,829,2.105,830,5.897,831,5.897,832,4.879,833,6.882,834,7.742,835,4.81,836,3.215,837,3.215,838,3.039,839,4.879,840,4.879,841,5.011,842,3.215,843,5.033,844,3.215,845,4.337,846,3.215,847,6.583,848,3.402,849,4.879,850,3.215,851,3.215,852,2.002,853,2.09,854,3.215,855,2.858,856,3.714,857,2.858,858,3.215,859,3.215,860,3.215,861,2.858,862,3.98,863,3.215,864,3.215,865,1.925,866,3.215,867,3.215,868,3.215,869,4.81,870,4.337,871,3.215,872,2.447,873,3.387,874,7.078,875,3.215,876,3.215,877,2.623,878,2.19,879,3.215,880,5.187,881,4.231]],["title/components/CardComponent.html",[0,0.159,133,0.917]],["body/components/CardComponent.html",[0,0.239,1,0.848,2,1.204,3,0.105,4,0.098,5,0.93,6,0.947,7,0.93,8,0.93,9,0.063,13,1.675,14,2.542,15,0.788,16,1.771,17,1.768,18,0.848,19,1.249,21,1.204,23,1.204,25,0.244,32,0.789,36,2.749,37,1.065,44,0.651,47,0.007,48,0.606,52,0.51,53,0.848,71,0.363,73,0.368,77,1.077,81,0.731,85,0.098,90,0.204,110,1.323,115,0.93,116,1.295,117,1.385,118,0.773,119,1.874,120,0.93,121,1.49,122,0.833,123,0.896,124,0.864,125,0.93,126,0.848,127,0.93,128,0.864,129,0.896,130,0.93,131,0.864,132,0.93,133,1.498,134,0.93,135,0.848,136,0.896,137,0.93,138,0.864,139,0.93,140,0.896,141,0.848,142,1.24,143,0.926,144,1.295,145,0.848,146,1.295,147,0.833,148,1.889,149,0.848,150,0.759,151,0.93,152,0.848,153,1.36,154,0.848,155,0.848,156,0.864,157,0.93,158,0.848,159,0.93,160,0.88,161,0.803,162,1.385,163,0.864,164,0.93,165,0.864,166,1.204,167,0.93,168,0.864,169,0.93,170,0.864,171,0.864,172,0.93,173,0.864,174,0.93,175,0.864,176,0.93,177,0.848,178,0.896,179,0.864,180,0.944,181,0.93,182,0.848,183,0.93,184,0.848,185,0.864,186,0.93,187,0.864,188,1.49,189,0.803,190,0.93,191,0.864,192,1.295,193,0.93,194,0.864,195,0.93,196,0.864,197,0.93,198,0.848,199,0.88,200,0.848,201,0.93,202,0.848,203,0.913,204,1.16,205,0.848,206,0.864,207,0.864,208,0.93,209,0.848,210,1.634,211,0.833,212,0.93,213,0.848,214,0.88,215,0.848,216,0.848,217,0.93,218,0.864,219,0.93,220,1.295,221,0.864,222,0.93,223,0.864,224,0.93,225,0.93,226,0.864,227,0.93,228,0.833,229,0.999,230,0.848,231,0.864,232,0.93,233,0.864,234,0.93,235,1.16,236,1.295,237,1.295,238,0.848,239,0.896,240,0.788,241,0.848,242,0.848,243,0.913,244,0.88,245,0.93,246,0.848,247,0.93,248,0.833,249,0.896,250,0.93,251,0.004,252,0.004,257,1.771,264,2.865,279,1.521,308,2.975,395,2.586,396,1.949,397,3.207,514,3.022,593,2.257,682,1.076,683,1.807,685,1.949,686,1.856,688,1.954,713,4.183,718,1.375,721,2.357,727,3.297,728,2.716,733,2.456,755,3.676,756,2.543,800,2.456,814,3.936,815,3.936,827,2.865,882,3.919,883,8.707,884,7.067,885,6.141,886,4.408,887,4.408,888,5.459,889,6.794,890,4.408,891,4.408,892,3.355,893,4.408]],["title/components/ChangePasswordPage.html",[0,0.159,135,0.9]],["body/components/ChangePasswordPage.html",[0,0.201,1,0.624,2,0.962,3,0.077,4,0.072,5,0.683,6,0.696,7,0.683,8,0.683,9,0.046,13,1.339,14,2.132,15,0.579,16,1.747,17,1.745,18,0.624,19,0.998,21,0.962,23,0.962,25,0.179,26,0.544,27,0.983,29,2.925,32,0.631,36,2.378,37,0.74,44,0.793,46,0.434,47,0.007,48,0.563,49,0.274,50,0.805,52,0.568,53,0.945,60,0.579,61,0.498,62,1.846,63,2.556,65,2.853,66,3.141,71,0.473,73,0.271,74,1.052,77,0.861,81,0.537,83,0.868,85,0.072,90,0.15,91,1.664,93,0.868,103,1.595,104,1.595,106,0.612,110,0.972,111,1.118,113,2.613,114,2.446,115,0.683,116,1.035,117,1.162,118,0.569,119,1.608,120,0.683,121,1.25,122,0.612,123,0.659,124,0.635,125,0.683,126,0.624,127,0.683,128,0.635,129,0.659,130,0.683,131,0.635,132,0.683,133,0.635,134,0.683,135,1.272,136,1.626,137,0.683,138,0.635,139,0.683,140,0.659,141,0.624,142,1.04,143,0.74,144,1.035,145,0.624,146,1.035,147,0.612,148,1.76,149,0.624,150,0.558,151,0.683,152,0.624,153,1.14,154,0.624,155,0.624,156,0.635,157,0.683,158,0.624,159,0.683,160,0.647,161,0.59,162,1.162,163,0.635,164,0.683,165,0.635,166,1.162,167,0.683,168,0.635,169,0.683,170,0.635,171,0.635,172,0.683,173,0.635,174,0.683,175,0.635,176,0.683,177,0.624,178,0.659,179,0.635,180,0.754,181,0.683,182,0.624,183,0.683,184,0.624,185,1.465,186,0.683,187,0.635,188,1.25,189,0.59,190,0.683,191,0.635,192,1.035,193,0.683,194,0.635,195,0.683,196,0.635,197,0.683,198,0.624,199,0.647,200,0.624,201,0.683,202,0.624,203,0.671,204,0.927,205,0.624,206,0.635,207,0.635,208,0.683,209,0.624,210,1.444,211,0.612,212,0.683,213,0.624,214,0.647,215,0.624,216,0.624,217,0.683,218,0.635,219,0.683,220,1.035,221,0.635,222,0.683,223,0.635,224,0.683,225,0.683,226,0.635,227,0.683,228,0.612,229,0.799,230,0.624,231,0.635,232,0.683,233,0.635,234,0.683,235,0.927,236,1.035,237,1.035,238,0.624,239,0.659,240,0.579,241,0.624,242,0.624,243,0.671,244,0.647,245,0.683,246,0.624,247,0.683,248,0.612,249,0.659,250,0.683,251,0.004,252,0.004,281,2.227,305,0.814,307,1.364,386,3.268,394,2.578,395,2.158,397,1.692,409,2.564,428,0.972,466,5.909,481,4.489,483,4.028,490,5.876,496,5.406,543,3.715,579,3.301,682,1.613,683,2.353,684,3.143,685,2.171,686,2.067,688,1.885,690,1.813,709,2.018,710,1.595,714,2.429,715,2.178,716,2.482,717,2.087,718,1.849,719,1.692,720,1.642,721,1.885,724,1.433,725,1.398,726,2.832,801,1.364,803,4.252,809,1.551,825,1.551,865,1.94,894,6.901,895,2.644,896,5.268,897,4.364,898,5.268,899,2.208,900,4.909,901,2.881,902,3.241,903,5.406,904,4.364,905,4.364,906,4.364,907,4.364,908,4.364,909,3.241,910,2.646,911,4.909,912,3.241,913,2.881,914,2.325,915,2.467,916,2.881,917,2.881,918,2.325,919,2.644,920,4.909,921,4.364,922,2.881,923,2.467,924,2.644,925,3.241,926,3.241,927,2.018,928,2.644,929,3.736,930,2.107,931,1.87,932,2.018,933,1.692,934,4.028,935,2.208,936,3.191,937,2.208,938,1.87,939,5.685,940,2.939,941,2.107,942,1.87,943,2.018,944,2.107,945,2.107,946,2.325,947,4.503,948,2.208,949,4.838,950,4.503,951,2.208,952,2.208,953,2.208,954,2.208,955,2.208,956,2.208,957,2.208,958,2.208]],["title/components/CheckboxComponent.html",[0,0.159,138,0.917]],["body/components/CheckboxComponent.html",[0,0.212,1,0.684,2,1.031,3,0.085,4,0.079,5,0.749,6,0.763,7,0.749,8,0.749,9,0.051,15,0.635,16,1.755,17,1.751,18,0.684,19,1.069,21,1.031,23,1.031,25,0.197,26,0.583,27,0.872,29,2.159,32,0.676,44,0.939,46,0.926,47,0.007,48,0.651,49,0.379,50,0.784,52,0.926,53,1.54,60,1.32,61,1.312,62,1.486,64,1.364,68,1.807,71,0.311,73,0.297,77,0.922,81,0.589,85,0.079,90,0.164,91,1.761,115,0.749,116,1.109,117,1.448,118,0.922,119,1.433,120,0.749,121,1.32,122,0.671,123,0.722,124,0.696,125,0.749,126,0.684,127,0.749,128,0.696,129,0.722,130,0.749,131,0.696,132,0.749,133,0.696,134,0.749,135,0.684,136,0.722,137,0.749,138,1.356,139,0.749,140,1.844,141,0.684,142,1.098,143,0.793,144,1.109,145,0.684,146,1.109,147,0.671,148,1.801,149,0.684,150,0.612,151,0.749,152,0.684,153,1.205,154,0.684,155,0.684,156,0.696,157,0.749,158,0.684,159,0.749,160,0.709,161,0.647,162,1.227,163,0.696,164,0.749,165,0.696,166,1.356,167,0.749,168,0.696,169,0.749,170,0.696,171,0.696,172,0.749,173,0.696,174,0.749,175,0.696,176,0.749,177,0.684,178,0.722,179,0.696,180,0.808,181,0.749,182,0.684,183,0.749,184,0.684,185,0.696,186,0.749,187,0.696,188,1.32,189,0.647,190,0.749,191,0.696,192,1.109,193,0.749,194,0.696,195,0.749,196,0.696,197,0.749,198,0.684,199,0.709,200,0.684,201,0.749,202,0.684,203,0.736,204,0.993,205,0.684,206,0.696,207,0.696,208,0.749,209,0.684,210,1.502,211,0.671,212,0.749,213,0.684,214,0.709,215,0.684,216,0.684,217,0.749,218,0.696,219,0.749,220,1.109,221,0.696,222,0.749,223,0.696,224,0.749,225,0.749,226,0.696,227,0.749,228,0.671,229,0.856,230,0.684,231,0.696,232,0.749,233,0.696,234,0.749,235,0.993,236,1.558,237,1.109,238,0.684,239,0.722,240,0.635,241,0.684,242,0.684,243,0.736,244,0.709,245,0.749,246,0.684,247,0.749,248,0.671,249,0.722,250,0.749,251,0.004,252,0.004,255,1.57,274,1.914,275,1.878,279,1.225,281,3.351,284,1.334,290,1.108,298,2.325,305,0.872,323,1.153,325,3.172,358,3.374,362,1.914,540,3.374,647,2.018,651,2.588,682,1.283,691,4.461,694,1.532,721,1.364,745,1.334,748,2.929,751,1.748,752,2.049,765,2.064,801,2.214,802,1.855,812,2.549,822,1.855,829,1.532,856,5.267,873,1.7,878,3.581,959,3.158,960,2.516,961,4.289,962,6.26,963,5.258,964,3.148,965,3.148,966,3.992,967,4.63,968,3.747,969,3.747,970,3.148,971,3.148,972,3.148,973,3.148,974,3.148,975,3.552,976,5.46,977,2.212,978,2.126,979,2.929,980,2.126,981,2.126,982,2.049,983,1.914,984,1.914,985,2.212,986,4.602,987,2.929,988,1.979,989,2.212,990,2.049,991,1.979,992,2.212,993,4.422,994,2.126,995,1.979,996,2.049,997,2.049,998,2.126,999,2.126,1000,1.278,1001,3.148,1002,2.126,1003,2.212,1004,3.148,1005,2.516,1006,4.63,1007,2.126,1008,3.487,1009,2.049,1010,3.611,1011,3.148,1012,2.385,1013,4.142,1014,1.979,1015,2.126,1016,3.148,1017,2.126,1018,2.212,1019,2.126,1020,2.126,1021,2.212,1022,3.148,1023,2.126,1024,2.126,1025,2.309,1026,2.212,1027,2.212,1028,2.212,1029,2.212,1030,2.212,1031,2.126,1032,2.929,1033,2.212,1034,3.148,1035,2.898,1036,2.704,1037,2.212,1038,2.309,1039,2.212,1040,5.258,1041,3.418,1042,3.552,1043,3.552,1044,3.172,1045,2.704,1046,3.158,1047,3.552,1048,2.419,1049,2.898]],["title/directives/ClickStopPropagationDirective.html",[118,0.821,242,0.9]],["body/directives/ClickStopPropagationDirective.html",[3,0.162,4,0.151,9,0.097,15,1.214,16,1.453,25,0.376,27,1.442,32,1.045,44,0.862,46,0.91,47,0.007,48,0.538,49,0.314,50,0.77,52,0.786,53,1.564,57,3.251,62,1.459,71,0.402,73,0.567,85,0.151,90,0.314,118,1.426,241,1.307,242,1.564,243,1.866,244,1.84,251,0.006,252,0.006,290,2.535,553,7.353,1050,7.732,1051,6.038,1052,8.128,1053,8.128,1054,8.128,1055,6.793,1056,8.128,1057,8.128,1058,8.128,1059,6.793,1060,6.793,1061,6.793,1062,6.793,1063,6.793,1064,6.793]],["title/components/ControlAccessor.html",[0,0.159,140,0.951]],["body/components/ControlAccessor.html",[0,0.236,1,0.524,2,0.841,3,0.065,4,0.061,5,0.574,7,0.905,8,0.574,9,0.039,13,1.17,15,0.487,16,1.729,17,1.723,18,0.524,19,0.872,25,0.151,26,0.475,27,1.252,29,2.744,32,0.551,37,0.908,44,0.932,46,0.878,47,0.007,48,0.654,49,0.349,50,0.743,52,0.939,53,1.61,60,1.077,61,1.36,62,1.669,64,1.647,65,2.633,68,2.011,71,0.357,73,0.227,74,0.883,77,0.753,81,0.451,83,0.729,85,0.061,90,0.278,91,1.773,93,0.729,106,1.316,115,0.574,116,0.905,117,1.428,118,0.931,119,1.247,120,0.574,121,1.12,122,0.514,123,0.553,124,0.534,125,0.574,126,0.524,127,0.574,128,0.534,129,0.553,130,0.574,131,0.534,132,0.574,133,0.534,134,0.574,135,0.524,136,0.553,137,0.574,138,0.534,139,0.574,140,1.225,141,0.524,142,0.931,143,0.647,144,0.905,145,0.524,146,0.905,147,0.514,148,1.678,149,0.524,150,0.469,151,0.574,152,0.524,153,1.022,154,0.524,155,0.524,156,0.534,157,0.574,158,0.524,159,0.574,160,0.543,161,0.496,162,1.041,163,0.534,164,0.574,165,0.534,166,1.181,167,0.574,168,0.534,169,0.574,170,0.534,171,0.534,172,0.574,173,0.534,174,0.574,175,0.534,176,0.574,177,0.524,178,0.553,179,0.534,180,0.659,181,0.574,182,0.524,183,0.574,184,0.524,185,0.534,186,0.574,187,0.534,188,1.12,189,0.496,190,0.574,191,0.534,192,0.905,193,0.574,194,0.534,195,0.574,196,0.534,197,0.574,198,0.524,199,0.543,200,0.524,201,0.574,202,0.524,203,0.564,204,0.81,205,0.524,206,0.534,207,0.534,208,0.574,209,0.524,210,1.333,211,0.514,212,0.574,213,0.524,214,0.543,215,0.524,216,0.524,217,0.574,218,0.534,219,0.574,220,0.905,221,0.534,222,0.574,223,0.534,224,0.574,225,0.574,226,0.534,227,0.574,228,0.514,229,0.698,230,0.524,231,0.534,232,0.574,233,0.534,234,0.574,235,0.81,236,1.593,237,0.905,238,0.524,239,0.553,240,0.487,241,0.524,242,0.524,243,0.564,244,0.543,245,0.574,246,0.524,247,0.574,248,0.514,249,0.553,250,0.574,251,0.003,252,0.003,255,1.58,274,2.312,275,1.967,281,3.426,284,1.611,290,1.879,298,3.223,303,2.072,311,2.573,323,1.392,325,3.528,358,3.753,362,2.312,424,2.788,526,4.331,540,3.247,647,2.313,651,2.965,712,3.078,748,3.879,751,2.111,765,2.365,829,1.85,838,1.695,873,2.053,964,3.178,965,3.178,966,4.887,967,4.652,968,3.606,969,3.606,970,2.568,971,2.568,972,2.568,973,2.568,974,3.178,978,2.568,979,3.356,980,2.568,981,3.178,982,2.474,983,2.312,984,2.312,986,5.088,987,4.519,988,2.39,990,2.474,991,2.39,993,4.762,994,2.568,995,3.356,996,2.474,997,2.474,998,2.568,999,2.568,1000,1.543,1001,3.606,1002,2.568,1004,3.606,1005,2.883,1006,4.938,1007,2.568,1008,3.879,1009,2.474,1010,4.017,1011,3.606,1012,2.733,1013,4.521,1014,2.39,1015,2.568,1016,3.606,1017,2.568,1019,2.568,1020,2.568,1022,3.606,1023,3.178,1024,2.568,1026,2.672,1027,2.672,1028,2.672,1029,2.672,1031,2.568,1032,3.652,1034,3.606,1036,4.989,1065,7.868,1066,2.42,1067,3.813,1068,3.499,1069,3.146,1070,4.29,1071,3.265,1072,5.309,1073,2.788,1074,3.078,1075,3.616,1076,5.347,1077,1.854,1078,2.722,1079,3.499,1080,3.499,1081,2.39,1082,2.722,1083,2.722,1084,2.722,1085,2.722,1086,2.722,1087,2.722,1088,2.722,1089,2.722,1090,2.722,1091,2.722,1092,2.722,1093,2.722,1094,2.722,1095,2.722,1096,3.813,1097,2.722,1098,2.722,1099,2.22,1100,2.722,1101,2.722,1102,2.722,1103,2.722,1104,2.722,1105,5.309,1106,2.053,1107,2.22,1108,1.854,1109,2.22,1110,2.722,1111,2.42,1112,2.22,1113,2.072,1114,2.072,1115,2.722,1116,2.722,1117,4.29,1118,2.722,1119,2.722,1120,2.722,1121,2.722,1122,2.42,1123,2.722,1124,2.722,1125,2.722,1126,5.309,1127,2.722,1128,2.22,1129,2.722,1130,2.722,1131,2.722,1132,2.22,1133,4.29,1134,4.29,1135,2.722,1136,2.722,1137,2.722,1138,2.722,1139,2.722,1140,2.722]],["title/components/CreateProjectMembersPage.html",[0,0.159,141,0.9]],["body/components/CreateProjectMembersPage.html",[0,0.202,1,0.951,2,0.968,3,0.078,4,0.073,5,0.689,6,0.702,7,0.689,8,0.689,9,0.047,11,2.124,15,0.584,16,1.748,17,1.746,18,1.146,19,1.449,21,0.968,23,0.968,25,0.181,26,0.548,27,1.428,28,2.079,29,2.885,32,0.635,37,1.001,44,0.87,46,0.437,47,0.007,48,0.617,49,0.329,50,0.808,52,0.572,53,1.146,60,1.186,61,0.759,62,1.672,63,2.569,65,2.392,66,2.634,68,1.719,71,0.516,73,0.273,74,1.06,77,1.59,78,1.82,81,0.542,83,0.875,85,0.073,87,3.152,88,0.951,90,0.151,91,1.751,93,0.875,103,1.608,104,1.608,105,1.82,106,0.933,109,2.662,110,1.787,111,1.704,112,2.503,113,0.943,114,0.999,115,0.689,116,1.042,117,1.167,118,0.573,119,1.374,120,0.689,121,1.256,122,0.617,123,0.664,124,0.64,125,0.689,126,0.629,127,0.689,128,0.64,129,0.664,130,0.689,131,0.64,132,0.689,133,0.64,134,0.689,135,0.629,136,0.664,137,0.689,138,0.64,139,0.689,140,0.664,141,1.277,142,1.467,143,1.428,144,1.042,145,0.629,146,1.042,147,0.617,148,1.764,149,0.629,150,0.563,151,0.689,152,0.629,153,1.146,154,0.629,155,0.629,156,0.64,157,0.689,158,0.629,159,0.689,160,0.652,161,0.595,162,1.167,163,0.64,164,0.689,165,0.64,166,0.968,167,0.689,168,0.64,169,0.689,170,0.64,171,0.64,172,0.689,173,0.64,174,0.689,175,0.64,176,0.689,177,0.629,178,0.664,179,0.64,180,1.095,181,0.689,182,0.629,183,0.689,184,0.629,185,0.64,186,0.689,187,0.64,188,1.256,189,0.595,190,0.689,191,0.64,192,1.042,193,0.689,194,0.64,195,0.689,196,0.64,197,0.689,198,0.629,199,0.652,200,0.629,201,0.689,202,0.629,203,0.677,204,0.933,205,0.629,206,0.64,207,0.64,208,0.689,209,0.629,210,1.449,211,0.617,212,0.689,213,0.629,214,0.652,215,0.629,216,0.629,217,0.689,218,0.64,219,0.689,220,1.042,221,0.64,222,0.689,223,0.64,224,0.689,225,0.689,226,0.64,227,0.689,228,0.617,229,0.804,230,0.629,231,0.64,232,0.689,233,0.64,234,0.689,235,0.933,236,1.042,237,1.042,238,0.629,239,0.664,240,0.584,241,0.629,242,0.629,243,0.677,244,0.652,245,0.689,246,0.629,247,0.689,248,0.617,249,0.664,250,0.689,251,0.004,252,0.004,255,0.741,258,2.184,270,3.076,279,1.127,305,0.819,307,2.079,311,1.939,323,2.602,386,3.626,428,0.98,533,4.873,543,3.726,546,3.532,547,3.831,548,4.491,579,3.971,590,2.124,592,1.409,593,1.201,594,1.376,595,1.409,606,1.82,654,2.035,663,2.344,664,2.035,670,1.956,682,1.454,683,1.753,688,1.895,689,2.579,694,2.131,717,1.151,718,1.019,721,1.254,745,1.227,779,1.956,825,1.564,910,2.662,933,1.706,1044,2.503,1141,6.365,1142,6.365,1143,2.665,1144,5.294,1145,4.391,1146,4.858,1147,4.858,1148,5.415,1149,5.415,1150,1.956,1151,3.726,1152,4.94,1153,3.267,1154,3.076,1155,3.364,1156,3.211,1157,3.211,1158,3.076,1159,3.364,1160,3.267,1161,3.267,1162,5.415,1163,3.267,1164,3.364,1165,3.267,1166,2.904,1167,3.267,1168,2.665,1169,2.487,1170,2.035,1171,2.226,1172,2.226,1173,2.035,1174,2.226,1175,2.035,1176,2.124,1177,2.487,1178,2.665,1179,2.487,1180,2.487,1181,2.665,1182,4.029,1183,2.665,1184,4.029,1185,2.904,1186,2.904,1187,2.904,1188,4.391,1189,3.211,1190,2.904]],["title/components/CreateProjectPage.html",[0,0.159,145,0.9]],["body/components/CreateProjectPage.html",[0,0.201,1,0.947,2,0.965,3,0.078,4,0.072,5,0.686,6,0.698,7,0.686,8,0.686,9,0.047,11,2.114,15,0.581,16,1.748,17,1.746,18,1.143,19,1.446,21,0.965,23,0.965,25,0.18,26,0.546,27,1.471,28,2.072,29,2.881,32,0.633,37,0.998,44,0.869,46,0.435,47,0.007,48,0.616,49,0.328,50,0.673,52,0.57,53,1.143,60,1.271,61,0.913,62,1.669,63,2.561,65,2.385,66,2.626,68,1.714,71,0.515,73,0.271,74,1.055,77,1.619,78,1.812,81,0.539,83,0.871,85,0.072,87,3.146,88,0.947,90,0.15,91,1.666,93,0.871,103,1.6,104,1.6,105,1.812,106,0.93,109,3.2,110,1.987,111,1.698,112,2.494,113,1.421,114,1.506,115,0.686,116,1.038,117,1.164,118,0.571,119,1.371,120,0.686,121,1.252,122,0.614,123,0.661,124,0.637,125,0.686,126,0.626,127,0.686,128,0.637,129,0.661,130,0.686,131,0.637,132,0.686,133,0.637,134,0.686,135,0.626,136,0.661,137,0.686,138,0.637,139,0.686,140,0.661,141,0.626,142,1.465,143,1.128,144,1.038,145,1.274,146,1.038,147,0.614,148,1.762,149,0.626,150,0.56,151,0.686,152,0.626,153,1.143,154,0.626,155,0.626,156,0.637,157,0.686,158,0.626,159,0.686,160,0.649,161,0.592,162,1.164,163,0.637,164,0.686,165,0.637,166,0.965,167,0.686,168,0.637,169,0.686,170,0.637,171,0.637,172,0.686,173,0.637,174,0.686,175,0.637,176,0.686,177,0.626,178,0.661,179,0.637,180,1.093,181,0.686,182,0.626,183,0.686,184,0.626,185,0.637,186,0.686,187,0.637,188,1.252,189,0.592,190,0.686,191,0.637,192,1.038,193,0.686,194,0.637,195,0.686,196,0.637,197,0.686,198,0.626,199,0.649,200,0.626,201,0.686,202,0.626,203,0.673,204,0.93,205,0.626,206,0.637,207,0.637,208,0.686,209,0.626,210,1.446,211,0.614,212,0.686,213,0.626,214,0.649,215,0.626,216,0.626,217,0.686,218,0.637,219,0.686,220,1.038,221,0.637,222,0.686,223,0.637,224,0.686,225,0.686,226,0.637,227,0.686,228,0.614,229,0.801,230,0.626,231,0.637,232,0.686,233,0.637,234,0.686,235,0.93,236,1.038,237,1.038,238,0.626,239,0.661,240,0.581,241,0.626,242,0.626,243,0.673,244,0.649,245,0.686,246,0.626,247,0.686,248,0.614,249,0.661,250,0.686,251,0.004,252,0.004,255,0.738,258,2.177,270,3.065,279,1.122,305,0.816,307,2.072,311,1.932,323,2.598,386,3.622,428,0.976,533,4.864,543,3.72,546,3.526,547,3.825,548,4.484,579,3.963,590,2.114,592,1.403,593,1.195,594,1.369,595,1.403,606,1.812,654,2.025,663,2.333,664,2.025,670,1.947,682,1.616,683,1.949,688,1.566,689,2.57,690,0.995,694,2.123,714,1.195,715,1.195,716,1.221,717,1.145,718,1.014,745,1.221,779,1.947,825,1.556,910,2.652,933,1.698,943,2.025,1044,2.494,1141,6.358,1146,4.844,1147,4.844,1148,5.402,1149,5.402,1150,1.947,1151,3.72,1154,3.065,1155,3.352,1156,3.199,1157,3.199,1158,3.065,1159,3.352,1162,5.402,1164,3.352,1168,2.653,1169,2.475,1170,2.025,1171,2.215,1172,2.215,1173,2.025,1174,2.215,1175,2.025,1176,2.114,1177,2.475,1178,2.653,1179,2.475,1180,2.475,1181,2.653,1182,4.844,1183,2.653,1184,4.015,1185,2.891,1186,2.891,1187,2.891,1188,4.375,1189,3.199,1191,6.358,1192,2.653,1193,5.279,1194,4.375,1195,4.922,1196,3.252,1197,3.252,1198,3.252,1199,3.252,1200,3.252,1201,3.252,1202,3.252,1203,4.015,1204,3.199]],["title/components/CreateWorkspacePage.html",[0,0.159,147,0.884]],["body/components/CreateWorkspacePage.html",[0,0.258,1,0.736,2,1.088,3,0.091,4,0.085,5,0.806,6,0.821,7,0.806,8,0.806,9,0.055,15,0.683,16,1.761,17,1.758,18,0.736,19,1.128,21,1.088,23,1.088,25,0.212,26,0.615,27,1.418,28,2.336,29,2.996,32,0.713,37,0.985,44,0.76,46,0.512,47,0.007,48,0.649,49,0.256,50,0.74,52,0.443,53,1.068,60,1.168,61,0.588,62,1.802,63,2.818,65,2.624,66,2.889,71,0.497,73,0.319,74,1.241,77,1.651,81,0.634,83,1.024,85,0.085,90,0.177,91,0.777,103,1.882,104,1.882,105,2.13,106,1.048,110,1.147,111,1.319,115,0.806,116,1.17,117,1.28,118,0.671,119,1.484,120,0.806,121,1.378,122,0.722,123,0.777,124,0.749,125,0.806,126,0.736,127,0.806,128,0.749,129,0.777,130,0.806,131,0.749,132,0.806,133,0.749,134,0.806,135,0.736,136,0.777,137,0.806,138,0.749,139,0.806,140,0.777,141,0.736,142,1.588,143,0.836,144,1.17,145,0.736,146,1.17,147,1.354,148,1.832,149,0.736,150,0.658,151,0.806,152,0.736,153,1.257,154,0.736,155,0.736,156,0.749,157,0.806,158,0.736,159,0.806,160,0.763,161,0.696,162,1.28,163,0.749,164,0.806,165,0.749,166,1.088,167,0.806,168,0.749,169,0.806,170,0.749,171,0.749,172,0.806,173,0.749,174,0.806,175,0.749,176,0.806,177,0.736,178,0.777,179,0.749,180,1.101,181,0.806,182,0.736,183,0.806,184,0.736,185,0.749,186,0.806,187,0.749,188,1.378,189,0.696,190,0.806,191,0.749,192,1.17,193,0.806,194,0.749,195,0.806,196,0.749,197,0.806,198,0.736,199,0.763,200,0.736,201,0.806,202,0.736,203,0.792,204,1.048,205,0.736,206,0.749,207,0.749,208,0.806,209,0.736,210,1.547,211,0.722,212,0.806,213,0.736,214,0.763,215,0.736,216,0.736,217,0.806,218,0.749,219,0.806,220,1.17,221,0.749,222,0.806,223,0.749,224,0.806,225,0.806,226,0.749,227,0.806,228,0.722,229,0.903,230,0.736,231,0.749,232,0.806,233,0.749,234,0.806,235,1.048,236,1.17,237,1.17,238,0.736,239,0.777,240,1.464,241,0.736,242,0.736,243,0.792,244,0.763,245,0.806,246,0.736,247,0.806,248,0.722,249,0.777,250,0.806,251,0.004,252,0.004,255,1.259,258,2.454,270,3.456,307,1.61,311,2.179,323,2.723,372,1.266,386,3.745,428,1.147,579,4.24,682,0.933,683,1.125,688,1.216,695,1.649,910,2.991,942,2.205,1044,2.812,1141,5.793,1146,5.329,1149,5.847,1150,2.289,1151,3.92,1154,3.456,1155,3.78,1156,3.607,1157,3.607,1158,3.456,1159,3.78,1162,5.847,1164,3.78,1170,2.381,1171,2.604,1172,2.604,1173,2.381,1175,2.381,1183,3.119,1184,4.527,1189,2.485,1204,3.607,1205,5.793,1206,3.119,1207,5.807,1208,4.933,1209,5.549,1210,3.823,1211,3.823,1212,3.399,1213,3.823,1214,3.399]],["title/modules/DashboardModule.html",[398,1.837,1215,3.561]],["body/modules/DashboardModule.html",[1,1.696,3,0.128,4,0.119,9,0.077,11,3.485,47,0.007,71,0.571,73,0.448,74,1.74,85,0.119,90,0.248,141,1.696,143,1.248,145,1.696,147,1.665,152,1.696,154,1.696,155,1.696,175,1.728,187,1.728,198,1.696,235,1.665,238,1.696,251,0.005,252,0.005,400,2.204,401,3.777,407,5.276,408,4.196,409,2.8,410,2.497,412,4.196,413,3.354,415,3.449,423,4.081,424,4.556,461,4.365,462,3.339,463,4.774,1142,4.081,1169,4.081,1191,4.081,1205,4.081,1215,7.504,1216,4.766,1217,4.766,1218,4.766,1219,4.766,1220,6.324,1221,4.75,1222,5.362,1223,4.766,1224,4.374,1225,5.362,1226,5.362,1227,4.374,1228,5.362,1229,4.766,1230,3.847,1231,4.766,1232,5.362,1233,5.362,1234,6.941,1235,6.23,1236,6.23,1237,6.23,1238,6.941,1239,4.081,1240,4.081,1241,4.081,1242,4.766,1243,4.081,1244,5.334,1245,4.766,1246,4.081,1247,5.362,1248,3.339]],["title/modules/DashboardRoutingModule.html",[398,1.837,1220,3.357]],["body/modules/DashboardRoutingModule.html",[0,0.318,3,0.135,4,0.125,9,0.081,28,3.046,47,0.007,71,0.561,73,0.47,85,0.125,87,2.49,89,2.262,90,0.26,93,1.508,141,1.392,142,1.269,143,1.272,145,1.392,147,1.367,152,1.392,153,1.084,154,1.392,155,1.392,160,1.444,161,1.025,180,0.865,189,1.317,198,1.392,210,1.145,238,1.392,251,0.005,252,0.005,290,1.757,398,2.211,400,2.315,413,2.695,415,3.561,426,4.331,427,4.703,428,1.69,435,5.983,437,6.432,441,4.594,454,3.507,482,3.836,934,3.035,1142,4.286,1191,4.286,1205,4.286,1220,5.191,1234,7.106,1235,6.432,1236,6.432,1237,6.432,1238,7.106,1239,4.286,1240,4.286,1241,4.286,1242,5.006,1243,4.286,1244,5.507,1245,5.006,1246,4.286,1249,5.632,1250,4.286,1251,5.632,1252,4.594,1253,5.632,1254,7.106,1255,5.507,1256,5.507,1257,5.632,1258,5.632,1259,5.632,1260,5.632,1261,6.432,1262,7.236,1263,5.632,1264,5.632,1265,7.236,1266,5.632,1267,5.632,1268,5.632]],["title/components/DeleteAccountPage.html",[0,0.159,149,0.9]],["body/components/DeleteAccountPage.html",[0,0.213,1,0.69,2,1.038,3,0.086,4,0.08,5,0.756,6,0.77,7,0.756,8,0.756,9,0.051,13,1.445,14,2.265,15,0.641,16,1.756,17,1.754,18,0.69,19,1.077,21,1.038,23,1.038,25,0.199,29,2.558,32,0.681,36,2.501,37,0.798,44,0.668,46,0.709,47,0.007,48,0.615,49,0.244,50,0.6,52,0.613,53,1.019,71,0.373,73,0.299,77,0.929,81,0.595,85,0.08,90,0.166,91,1.28,93,0.96,110,1.076,111,1.237,113,2.638,114,2.374,115,0.756,116,1.117,117,1.234,118,0.629,119,1.742,120,0.756,121,1.328,122,0.678,123,0.729,124,0.703,125,0.756,126,0.69,127,0.756,128,0.703,129,0.729,130,0.756,131,0.703,132,0.756,133,0.703,134,0.756,135,0.69,136,0.729,137,0.756,138,0.703,139,0.756,140,0.729,141,0.69,142,1.105,143,0.798,144,1.117,145,0.69,146,1.117,147,0.678,148,1.805,149,1.338,150,1.419,151,0.756,152,0.69,153,1.212,154,0.69,155,0.69,156,0.703,157,0.756,158,0.69,159,0.756,160,0.716,161,0.653,162,1.234,163,0.703,164,0.756,165,0.703,166,1.234,167,0.756,168,0.703,169,0.756,170,0.703,171,0.703,172,0.756,173,0.703,174,0.756,175,0.703,176,0.756,177,0.69,178,0.729,179,0.703,180,0.814,181,0.756,182,0.69,183,0.756,184,0.69,185,1.521,186,0.756,187,0.703,188,1.328,189,0.653,190,0.756,191,0.703,192,1.117,193,0.756,194,0.703,195,0.756,196,0.703,197,0.756,198,0.69,199,0.716,200,0.69,201,0.756,202,0.69,203,0.743,204,1.557,205,0.69,206,0.703,207,0.703,208,0.756,209,0.69,210,1.508,211,0.678,212,0.756,213,0.69,214,0.716,215,0.69,216,0.69,217,0.756,218,0.703,219,0.756,220,1.117,221,0.703,222,0.756,223,0.703,224,0.756,225,0.756,226,0.703,227,0.756,228,0.678,229,0.862,230,0.69,231,0.703,232,0.756,233,0.703,234,0.756,235,1.001,236,1.117,237,1.117,238,0.69,239,0.729,240,0.641,241,0.69,242,0.69,243,1.304,244,0.716,245,0.756,246,0.69,247,0.756,248,0.678,249,0.729,250,0.756,251,0.004,252,0.004,305,1.044,307,1.51,386,3.38,394,2.677,395,2.506,397,1.873,428,1.076,469,5.291,470,3.799,483,4.183,485,4.707,496,4.792,543,3.842,682,1.537,683,2.183,684,3.164,685,1.586,686,1.51,688,2.003,690,1.926,703,1.67,706,1.67,709,2.234,710,1.765,714,2.313,715,1.946,716,2.364,717,1.263,718,1.119,721,2.033,724,2.342,725,2.284,726,3.055,749,1.817,750,2.402,801,1.51,803,4.439,809,1.716,825,1.716,865,2.147,899,2.443,918,2.573,919,2.926,930,2.331,931,2.069,932,2.234,933,1.873,934,4.183,935,2.443,936,3.442,937,2.443,938,2.069,939,5.829,940,3.17,942,2.069,943,2.234,944,2.331,945,2.331,946,2.573,947,4.735,948,2.443,949,5.051,950,4.735,951,2.443,952,2.443,953,2.443,954,2.443,955,2.443,956,2.443,957,2.443,958,2.443,1269,6.18,1270,2.73,1271,5.136,1272,4.32,1273,3.188,1274,5.296,1275,3.188,1276,3.188,1277,3.587,1278,3.587,1279,3.607,1280,5.296,1281,5.296,1282,4.735,1283,4.031,1284,2.606]],["title/injectables/DialogService.html",[319,1.648,546,2.123]],["body/injectables/DialogService.html",[0,0.28,3,0.103,4,0.096,9,0.062,20,5.153,25,0.24,26,0.672,27,0.718,28,3.948,32,0.779,37,1.055,41,2.696,44,0.956,46,1.137,47,0.007,48,0.673,49,0.407,50,0.962,52,1.033,53,0.833,60,1.355,61,0.932,62,1.628,71,0.513,73,0.361,76,2.696,77,1.49,78,2.412,83,1.159,85,0.096,90,0.2,91,1.682,93,1.874,106,1.605,113,1.25,122,0.818,123,1.233,143,1.28,150,1.044,251,0.004,252,0.004,255,1.811,257,2.811,258,3.095,263,3.106,265,4.929,268,6.219,271,5.936,272,4.32,273,6.749,274,3.268,277,5.326,293,3.546,305,1.161,309,4.35,310,4.767,311,3.134,319,2.136,321,2.193,323,2.461,334,4.13,367,3.848,370,2.193,371,2.072,372,1.433,546,2.751,589,2.333,655,4.946,656,4.946,662,4.946,664,2.696,670,2.591,690,1.324,768,2.553,1044,3.546,1045,4.615,1069,3.166,1285,3.848,1286,4.946,1287,7.096,1288,6.998,1289,6.74,1290,6.063,1291,6.063,1292,3.63,1293,6.063,1294,6.998,1295,4.329,1296,9.02,1297,4.329,1298,6.063,1299,4.329,1300,6.749,1301,6.063,1302,8.273,1303,7.354,1304,4.329,1305,6.063,1306,4.329,1307,6.063,1308,4.329,1309,6.063,1310,4.329,1311,6.063,1312,4.329,1313,6.063,1314,6.063,1315,4.35,1316,5.39,1317,6.063,1318,4.329,1319,6.063,1320,4.329,1321,4.329,1322,4.329,1323,4.329,1324,2.696,1325,2.412,1326,3.848,1327,5.709,1328,3.848,1329,4.329,1330,4.329,1331,3.848,1332,3.295,1333,4.329,1334,4.329,1335,4.329,1336,6.063,1337,4.329,1338,4.329,1339,4.329,1340,4.329,1341,4.329,1342,6.063,1343,6.063,1344,6.74,1345,4.615,1346,4.615]],["title/classes/ESet.html",[90,0.216,1347,3.561]],["body/classes/ESet.html",[3,0.172,4,0.16,9,0.103,25,0.399,32,1.081,44,0.763,46,0.964,47,0.007,48,0.57,49,0.332,50,0.816,52,0.833,53,1.385,85,0.16,90,0.332,251,0.006,252,0.006,281,3.816,960,4.026,1081,4.011,1347,6.403,1348,7.478,1349,6.4,1350,6.403,1351,8.412,1352,7.2,1353,4.904,1354,7.2,1355,7.2,1356,7.2]],["title/components/EditProjectMembersPage.html",[0,0.159,152,0.9]],["body/components/EditProjectMembersPage.html",[0,0.184,1,0.846,2,0.862,3,0.067,4,0.063,5,0.592,6,0.603,7,0.592,8,0.592,9,0.04,11,1.826,15,0.502,16,1.734,17,1.732,18,1.043,19,1.353,21,0.862,23,0.862,25,0.156,26,0.487,27,1.535,28,2.581,29,2.769,31,3.522,32,0.565,37,0.924,39,3.155,44,0.914,46,0.726,47,0.007,48,0.622,49,0.362,50,0.836,52,0.817,53,1.419,60,1.189,61,0.833,62,1.64,63,2.337,65,2.176,66,2.396,68,1.921,71,0.505,73,0.235,74,0.912,77,1.579,78,1.565,81,0.466,83,0.752,85,0.063,87,2.943,88,1.575,89,2.835,90,0.13,91,1.69,93,0.752,103,1.383,104,1.383,105,1.565,106,0.831,109,2.37,110,1.626,111,1.517,112,2.228,113,0.811,114,0.859,115,0.592,116,0.927,117,1.062,118,0.493,119,1.269,120,0.592,121,1.143,122,0.531,123,0.571,124,0.551,125,0.592,126,0.541,127,0.592,128,0.551,129,0.571,130,0.592,131,0.551,132,0.592,133,0.551,134,0.592,135,0.541,136,0.571,137,0.592,138,0.551,139,0.592,140,0.571,141,0.541,142,0.951,143,1.451,144,0.927,145,0.541,146,0.927,147,0.531,148,1.693,149,0.541,150,0.484,151,0.592,152,1.18,153,1.545,154,0.541,155,0.541,156,0.551,157,0.592,158,0.541,159,0.592,160,0.561,161,0.512,162,1.062,163,0.551,164,0.592,165,0.551,166,0.862,167,0.592,168,0.551,169,0.592,170,0.551,171,0.551,172,0.592,173,0.551,174,0.592,175,0.551,176,0.592,177,0.541,178,0.571,179,0.551,180,1.023,181,0.592,182,0.541,183,0.592,184,0.541,185,0.551,186,0.592,187,0.551,188,1.143,189,0.512,190,0.592,191,0.551,192,0.927,193,0.592,194,0.551,195,0.592,196,0.551,197,0.592,198,0.541,199,0.561,200,0.541,201,0.592,202,0.541,203,0.582,204,0.831,205,0.541,206,0.551,207,0.551,208,0.592,209,0.541,210,1.353,211,0.531,212,0.592,213,0.541,214,0.561,215,0.541,216,0.541,217,0.592,218,0.551,219,0.592,220,0.927,221,0.551,222,0.592,223,0.551,224,0.592,225,0.592,226,0.551,227,0.592,228,0.531,229,0.716,230,0.541,231,0.551,232,0.592,233,0.551,234,0.592,235,0.831,236,0.927,237,0.927,238,0.541,239,0.571,240,0.502,241,0.541,242,0.541,243,0.582,244,0.561,245,0.592,246,0.541,247,0.592,248,0.531,249,0.571,250,0.592,251,0.003,252,0.003,255,0.998,258,1.945,270,2.739,279,0.969,307,1.851,311,2.407,323,2.769,386,3.5,428,0.843,533,4.587,540,3.304,543,3.979,546,3.346,547,3.63,548,4.255,579,4.372,589,1.514,590,1.826,592,1.212,593,1.032,594,1.183,595,1.212,606,1.565,607,2.537,608,2.138,654,1.75,663,2.016,664,1.75,670,1.682,673,1.682,682,1.323,683,1.595,688,1.724,689,2.296,694,1.897,717,0.989,718,0.876,721,1.078,744,1.875,745,1.055,779,1.682,825,1.344,910,2.37,927,1.75,933,1.467,1044,2.228,1106,1.344,1143,2.292,1144,4.817,1145,3.909,1148,5.001,1150,1.682,1151,3.53,1155,2.995,1156,2.858,1157,2.858,1158,2.739,1159,2.995,1164,2.995,1166,2.497,1168,2.292,1169,2.138,1170,1.75,1171,1.914,1172,1.914,1173,1.75,1174,1.914,1175,1.75,1176,3.522,1179,2.138,1180,2.138,1181,2.292,1190,2.497,1239,6.623,1357,6.623,1358,4.42,1359,4.42,1360,4.666,1361,3.909,1362,3.909,1363,5.001,1364,4.398,1365,2.809,1366,3.909,1367,2.809,1368,6.228,1369,3.909,1370,2.809,1371,3.347,1372,2.809,1373,3.155,1374,3.347,1375,3.347,1376,3.909,1377,3.909,1378,2.809,1379,2.809,1380,2.858,1381,2.809,1382,2.995,1383,2.809,1384,3.587,1385,2.809,1386,2.995,1387,2.809,1388,3.587,1389,2.809,1390,2.995,1391,2.809,1392,2.292,1393,2.497,1394,2.497,1395,2.497,1396,2.497,1397,3.587,1398,2.809,1399,2.497,1400,2.292,1401,5.429,1402,2.497,1403,2.497,1404,2.497,1405,2.292,1406,2.497,1407,3.909,1408,2.632,1409,2.809,1410,2.809,1411,2.497,1412,2.497]],["title/components/EditProjectPage.html",[0,0.159,154,0.9]],["body/components/EditProjectPage.html",[0,0.192,1,0.578,2,0.908,3,0.072,4,0.067,5,0.633,6,0.645,7,0.633,8,0.633,9,0.043,13,1.263,15,0.537,16,1.741,17,1.737,18,0.578,19,0.941,21,0.908,23,0.908,25,0.166,26,0.513,27,1.547,28,2.675,29,2.821,31,3.674,32,0.595,37,0.958,44,0.907,46,0.757,47,0.007,48,0.635,49,0.37,50,0.856,52,0.795,53,1.396,60,1.135,61,0.712,62,1.676,63,2.438,65,2.27,66,2.499,68,1.982,71,0.484,73,0.251,74,0.974,77,1.621,78,1.672,81,0.498,83,0.804,85,0.067,87,2.809,88,1.602,89,2.552,90,0.139,91,1.663,93,1.24,95,2.154,98,2.154,100,2.154,103,1.478,104,1.478,105,1.672,106,0.875,110,1.389,111,1.036,112,1.521,115,0.633,116,0.976,117,1.108,118,0.527,119,1.315,120,0.633,121,1.192,122,0.567,123,0.61,124,0.588,125,0.633,126,0.578,127,0.633,128,0.588,129,0.61,130,0.633,131,0.588,132,0.633,133,0.588,134,0.633,135,0.578,136,0.61,137,0.633,138,0.588,139,0.633,140,0.61,141,0.578,142,0.992,143,1.304,144,0.976,145,0.578,146,0.976,147,0.567,148,1.725,149,0.578,150,0.517,151,0.633,152,0.578,153,1.574,154,1.223,155,0.578,156,0.588,157,0.633,158,0.578,159,0.633,160,0.599,161,0.547,162,1.108,163,0.588,164,0.633,165,0.588,166,0.908,167,0.633,168,0.588,169,0.633,170,0.588,171,0.588,172,0.633,173,0.588,174,0.633,175,0.588,176,0.633,177,0.578,178,0.61,179,0.588,180,0.976,181,0.633,182,0.578,183,0.633,184,0.578,185,0.588,186,0.633,187,0.588,188,1.192,189,0.547,190,0.633,191,0.588,192,0.976,193,0.633,194,0.588,195,0.633,196,0.588,197,0.633,198,0.578,199,0.599,200,0.578,201,0.633,202,0.578,203,0.622,204,0.875,205,0.578,206,0.588,207,0.588,208,0.633,209,0.578,210,1.395,211,0.567,212,0.633,213,0.578,214,0.599,215,0.578,216,0.578,217,0.633,218,0.588,219,0.633,220,0.976,221,0.588,222,0.633,223,0.588,224,0.633,225,0.633,226,0.588,227,0.633,228,0.567,229,0.754,230,0.578,231,0.588,232,0.633,233,0.588,234,0.633,235,0.875,236,0.976,237,0.976,238,0.578,239,0.61,240,0.537,241,0.578,242,0.578,243,0.622,244,0.599,245,0.633,246,0.578,247,0.633,248,0.567,249,0.61,250,0.633,251,0.003,252,0.003,255,1.05,258,2.048,270,2.884,279,1.036,307,1.264,311,2.494,323,2.808,386,3.557,400,1.904,428,0.901,526,4.611,540,3.424,543,4.043,547,3.72,579,4.461,589,1.618,606,1.672,607,1.732,608,2.285,673,1.797,682,1.13,683,1.363,688,0.955,689,1.568,694,1.295,695,1.295,717,1.057,718,0.937,744,1.943,745,1.127,825,1.437,910,2.495,927,1.87,1044,2.346,1106,1.437,1150,1.797,1151,3.617,1155,3.154,1156,3.01,1157,3.01,1158,2.884,1159,3.154,1164,3.154,1170,1.87,1171,2.045,1172,2.045,1173,1.87,1174,2.045,1175,1.87,1176,4.13,1179,2.285,1180,2.285,1192,2.449,1193,5.024,1194,4.116,1204,3.01,1240,6.585,1346,3.524,1357,6.585,1358,4.611,1359,4.611,1360,4.835,1361,4.116,1362,4.116,1363,5.182,1366,4.116,1368,6.367,1369,4.116,1371,3.524,1373,3.322,1374,3.524,1375,3.524,1376,4.116,1377,4.116,1380,3.01,1382,3.154,1384,3.777,1386,3.154,1388,3.777,1390,3.154,1392,2.449,1393,2.669,1394,2.669,1395,2.669,1396,2.669,1397,3.777,1400,2.449,1401,5.599,1402,2.669,1403,2.669,1404,2.669,1405,2.449,1406,2.669,1407,4.116,1408,2.772,1411,2.669,1412,2.669,1413,4.63,1414,3.002,1415,3.002,1416,3.002,1417,3.002,1418,3.002,1419,3.002,1420,3.002,1421,3.002,1422,3.002,1423,3.002,1424,3.002,1425,3.002,1426,3.002,1427,3.002,1428,3.002,1429,4.116,1430,3.002]],["title/components/EditWorkspacePage.html",[0,0.159,155,0.9]],["body/components/EditWorkspacePage.html",[0,0.247,1,0.663,2,1.008,3,0.082,4,0.077,5,0.727,6,0.74,7,0.727,8,0.727,9,0.049,15,0.616,16,1.753,17,1.75,18,0.663,19,1.046,21,1.008,23,1.008,25,0.191,26,0.57,27,1.486,28,2.871,29,2.924,32,0.661,37,1.028,44,0.84,46,0.689,47,0.007,48,0.646,49,0.337,50,0.867,52,0.595,53,0.99,60,1.099,61,0.53,62,1.643,63,2.653,65,2.93,66,2.72,68,1.776,71,0.482,73,0.288,74,1.119,77,1.684,78,1.921,81,0.572,83,0.923,85,0.077,87,1.525,88,1.184,90,0.159,91,1.555,93,0.923,103,1.697,104,1.697,105,1.921,106,0.972,110,1.034,111,1.189,115,0.727,116,1.084,117,1.206,118,0.605,119,1.412,120,0.727,121,1.297,122,0.651,123,0.701,124,0.676,125,0.727,126,0.663,127,0.727,128,0.676,129,0.701,130,0.727,131,0.676,132,0.727,133,0.676,134,0.727,135,0.663,136,0.701,137,0.727,138,0.676,139,0.727,140,0.701,141,0.663,142,1.079,143,0.775,144,1.084,145,0.663,146,1.084,147,0.651,148,1.788,149,0.663,150,0.594,151,0.727,152,0.663,153,1.71,154,0.663,155,1.312,156,0.676,157,0.727,158,0.663,159,0.727,160,0.688,161,0.628,162,1.206,163,0.676,164,0.727,165,0.676,166,1.008,167,0.727,168,0.676,169,0.727,170,0.676,171,0.676,172,0.727,173,0.676,174,0.727,175,0.676,176,0.727,177,0.663,178,0.701,179,0.676,180,1.048,181,0.727,182,0.663,183,0.727,184,0.663,185,0.676,186,0.727,187,0.676,188,1.297,189,0.628,190,0.727,191,0.676,192,1.084,193,0.727,194,0.676,195,0.727,196,0.676,197,0.727,198,0.663,199,0.688,200,0.663,201,0.727,202,0.663,203,0.714,204,0.972,205,0.663,206,0.676,207,0.676,208,0.727,209,0.663,210,1.483,211,0.651,212,0.727,213,0.663,214,0.688,215,0.663,216,0.663,217,0.727,218,0.676,219,0.727,220,1.084,221,0.676,222,0.727,223,0.676,224,0.727,225,0.727,226,0.676,227,0.727,228,0.651,229,0.837,230,0.663,231,0.676,232,0.727,233,0.676,234,0.727,235,0.972,236,1.084,237,1.084,238,0.663,239,0.701,240,1.304,241,0.663,242,0.663,243,0.714,244,0.688,245,0.727,246,0.663,247,0.727,248,0.651,249,0.701,250,0.727,251,0.004,252,0.004,255,1.395,258,2.274,270,3.203,307,1.451,311,2.677,323,2.885,386,3.668,428,1.034,543,4.169,579,4.639,606,1.921,682,0.842,683,1.015,688,1.097,695,1.487,739,2.019,744,2.34,910,2.772,942,1.989,1044,2.606,1150,2.064,1151,3.793,1155,3.503,1156,3.343,1157,3.343,1158,3.203,1159,3.503,1164,3.503,1170,2.147,1171,2.348,1172,2.348,1173,2.147,1175,2.147,1177,2.624,1189,2.241,1203,4.195,1204,3.343,1206,2.812,1207,5.468,1208,4.572,1214,3.065,1241,6.201,1357,6.201,1358,5.018,1359,5.018,1363,5.563,1371,3.914,1380,3.343,1384,4.195,1386,3.503,1388,4.195,1392,2.812,1397,2.812,1399,3.065,1400,2.812,1401,4.195,1431,5.143,1432,5.143,1433,5.143,1434,3.448,1435,3.448,1436,3.448,1437,3.448,1438,3.448,1439,3.448,1440,3.448,1441,3.448]],["title/modules/EmailsModule.html",[398,1.837,1442,3.561]],["body/modules/EmailsModule.html",[3,0.17,4,0.159,9,0.102,47,0.007,71,0.526,73,0.596,85,0.159,90,0.329,251,0.006,252,0.006,400,2.933,401,4.51,408,5.009,409,3.726,410,3.323,412,4.271,413,4.005,415,4.119,461,5.212,462,4.444,1442,7.198,1443,6.343,1444,6.343,1445,6.786,1446,7.136,1447,7.136]],["title/modules/EmailsRoutingModule.html",[398,1.837,1445,3.357]],["body/modules/EmailsRoutingModule.html",[0,0.237,3,0.167,4,0.156,9,0.1,28,2.947,47,0.007,71,0.521,73,0.584,85,0.156,90,0.323,93,1.874,180,1.076,189,1.507,251,0.006,252,0.006,398,2.748,400,2.878,413,3.35,415,4.072,426,4.953,427,5.006,428,2.1,435,4.36,454,4.36,482,4.768,934,3.773,984,4.46,1250,5.328,1255,5.328,1256,5.328,1445,5.937,1448,7.001,1449,7.001]],["title/classes/Enum.html",[90,0.216,301,2.914]],["body/classes/Enum.html",[3,0.103,4,0.096,9,0.062,25,0.24,27,1.257,32,0.779,44,0.804,46,1.015,47,0.007,48,0.601,49,0.35,50,0.859,52,1.003,61,1.165,85,0.096,88,1.167,90,0.2,93,1.159,106,1.605,251,0.004,252,0.004,255,1.811,275,1.819,284,2.628,290,2.183,301,6.075,305,1.161,311,2.977,690,2.319,739,3.647,820,6.664,829,3.569,1005,3.959,1014,4.971,1081,2.412,1122,5.39,1315,4.35,1353,4.767,1450,3.848,1451,3.848,1452,3.295,1453,4.329,1454,5.917,1455,6.749,1456,6.063,1457,7.705,1458,6.063,1459,4.329,1460,8.808,1461,6.664,1462,9.173,1463,9.173,1464,7.07,1465,6.998,1466,8.668,1467,6.063,1468,6.063,1469,6.063,1470,7.354,1471,6.063,1472,4.329,1473,4.615,1474,7.582,1475,6.063,1476,5.39,1477,6.063,1478,5.39,1479,6.063,1480,4.329,1481,6.998,1482,6.063,1483,4.329,1484,6.998,1485,4.329,1486,4.329,1487,4.329,1488,4.329,1489,3.531,1490,6.063,1491,6.063,1492,4.329,1493,6.063,1494,3.531,1495,4.329,1496,6.063,1497,3.531,1498,6.063,1499,6.063,1500,4.329,1501,4.329]],["title/interceptors/ErrorInterceptor.html",[1502,4.159,1503,3.357]],["body/interceptors/ErrorInterceptor.html",[3,0.146,4,0.136,9,0.088,13,1.669,25,0.339,26,0.845,32,0.98,37,0.922,44,0.881,46,1.021,47,0.007,48,0.604,49,0.384,50,0.864,52,0.708,60,1.094,61,0.94,68,2.398,71,0.53,73,0.511,83,1.638,85,0.136,88,1.177,90,0.282,91,1.768,106,1.69,204,1.156,251,0.006,252,0.006,319,2.686,365,4.657,372,2.026,386,3.895,428,1.836,517,6.778,524,5.439,546,4.139,647,2.349,690,2.333,739,2.402,766,4.991,779,3.663,928,4.991,1112,6.777,1279,4.168,1503,5.471,1504,6.119,1505,5.439,1506,8.307,1507,7.626,1508,6.119,1509,7.626,1510,8.696,1511,8.696,1512,6.119,1513,6.119,1514,6.119,1515,6.119,1516,7.626,1517,4.991,1518,6.239,1519,7.626,1520,6.119,1521,4.991,1522,6.119,1523,6.119,1524,6.119,1525,7.626,1526,6.119,1527,6.119,1528,6.119,1529,6.119,1530,6.119,1531,6.119,1532,6.119]],["title/interfaces/ErrorValidationTree.html",[86,0.791,1533,3.561]],["body/interfaces/ErrorValidationTree.html",[3,0.142,4,0.167,9,0.085,44,0.63,47,0.007,49,0.274,52,0.687,62,1.607,68,2.366,71,0.443,81,1.359,83,1.59,85,0.167,86,1.003,88,1.143,93,2.461,106,1.737,251,0.005,252,0.005,253,1.966,257,2.385,258,3.309,305,1.502,310,4.044,360,3.101,375,6.104,499,3.554,546,3.395,664,3.698,751,4.033,779,3.554,1000,2.136,1005,4.117,1044,4.152,1106,2.841,1353,5.581,1533,6.237,1534,6.104,1535,4.844,1536,5.938,1537,5.938,1538,5.278,1539,5.938,1540,5.938,1541,7.483,1542,5.938,1543,5.938,1544,5.581,1545,5.938,1546,5.938,1547,6.652,1548,6.104,1549,5.938,1550,5.938,1551,5.938,1552,5.938,1553,5.938,1554,5.695,1555,4.844,1556,5.938,1557,5.938,1558,5.938,1559,5.938,1560,5.938,1561,5.938,1562,5.938,1563,5.938,1564,5.938,1565,5.938,1566,8.603,1567,5.938,1568,7.483,1569,5.938,1570,5.938,1571,5.938,1572,5.938,1573,5.938,1574,5.938]],["title/interfaces/FilterCheckbox.html",[86,0.791,1575,3.357]],["body/interfaces/FilterCheckbox.html",[3,0.159,4,0.149,9,0.096,25,0.369,26,0.891,32,1.034,44,0.707,46,0.893,47,0.007,48,0.529,49,0.448,50,0.756,52,0.772,61,1.377,85,0.192,86,1.127,166,1.307,251,0.006,252,0.006,253,2.209,305,1.431,336,4.828,339,7.17,499,4.813,690,2.741,691,5.168,739,3.517,961,6.558,990,4.638,1106,3.847,1325,3.716,1575,6.192,1576,5.441,1577,8.04,1578,5.878,1579,6.67,1580,5.929]],["title/classes/Filters.html",[90,0.216,1581,2.914]],["body/classes/Filters.html",[3,0.162,4,0.151,9,0.097,25,0.376,27,1.127,32,1.045,44,0.72,46,0.91,47,0.007,48,0.538,49,0.375,50,0.77,52,0.786,61,1.044,71,0.481,85,0.151,90,0.314,106,1.536,229,1.323,251,0.006,252,0.006,305,1.495,336,3.661,681,3.918,690,2.486,691,3.918,739,2.667,961,5.541,1081,3.784,1454,5.654,1575,6.24,1578,4.627,1581,5.062,1582,6.038,1583,8.128,1584,8.128,1585,6.793,1586,8.128,1587,4.874,1588,5.541,1589,6.793,1590,6.186,1591,6.793,1592,6.038,1593,6.038,1594,6.793]],["title/components/FiltersComponent.html",[0,0.159,156,0.917]],["body/components/FiltersComponent.html",[0,0.199,1,0.613,2,0.95,3,0.076,4,0.071,5,0.672,6,0.685,7,0.672,8,0.672,9,0.046,15,0.57,16,1.746,17,1.743,18,0.613,19,0.986,21,0.95,23,0.95,25,0.325,26,0.537,27,1.42,29,2.562,32,0.623,37,0.48,44,0.968,46,1.034,47,0.007,48,0.669,49,0.408,50,0.923,52,0.962,53,1.568,60,1.26,61,1.277,62,1.658,64,1.224,65,2.632,68,1.694,71,0.388,73,0.266,74,1.034,77,0.85,81,0.529,85,0.071,88,1.129,90,0.147,91,1.78,93,1.57,106,1.238,113,1.694,114,1.794,115,0.672,116,1.022,117,1.382,118,0.85,119,1.357,120,0.672,121,1.237,122,0.602,123,0.648,124,0.625,125,0.672,126,0.613,127,0.672,128,0.625,129,0.648,130,0.672,131,0.625,132,0.672,133,0.625,134,0.672,135,0.613,136,0.648,137,0.672,138,0.625,139,0.672,140,1.811,141,0.613,142,1.029,143,0.731,144,1.022,145,0.613,146,1.022,147,0.602,148,1.752,149,0.613,150,0.549,151,0.672,152,0.613,153,1.129,154,0.613,155,0.613,156,1.285,157,0.672,158,0.613,159,0.672,160,0.636,161,0.58,162,1.15,163,0.625,164,0.672,165,0.625,166,1.285,167,0.672,168,0.625,169,0.672,170,0.625,171,0.625,172,0.672,173,0.625,174,0.672,175,0.625,176,0.672,177,0.613,178,0.648,179,0.625,180,0.745,181,0.672,182,0.613,183,0.672,184,0.613,185,0.625,186,0.672,187,0.625,188,1.237,189,0.58,190,0.672,191,0.625,192,1.022,193,0.672,194,0.625,195,0.672,196,0.625,197,0.672,198,0.613,199,0.636,200,0.613,201,0.672,202,0.613,203,0.66,204,0.916,205,0.613,206,0.625,207,0.625,208,0.672,209,0.613,210,1.434,211,0.602,212,0.672,213,0.613,214,0.636,215,0.613,216,0.613,217,0.672,218,0.625,219,0.672,220,1.022,221,0.625,222,0.672,223,0.625,224,0.672,225,0.672,226,0.625,227,0.672,228,0.602,229,0.789,230,0.613,231,0.625,232,0.672,233,0.625,234,0.672,235,0.916,236,1.487,237,1.022,238,0.613,239,0.648,240,0.57,241,0.613,242,0.613,243,0.66,244,0.636,245,0.672,246,0.613,247,0.672,248,0.602,249,0.648,250,0.672,251,0.004,252,0.004,255,1.487,274,1.718,275,1.76,281,3.199,284,1.197,290,0.994,298,1.409,307,2.041,323,1.034,325,2.972,358,3.161,362,1.718,540,3.161,647,1.861,651,2.386,690,0.975,739,1.251,748,2.7,751,1.569,765,1.903,829,1.375,873,1.525,960,2.32,964,2.902,965,2.902,966,4.794,967,4.221,968,3.511,969,3.511,970,2.902,971,2.902,972,2.902,973,2.902,974,2.902,976,5.334,977,1.985,978,1.908,979,2.7,980,1.908,981,1.908,982,1.839,983,1.718,984,1.718,985,1.985,986,4.552,987,2.7,988,1.776,989,1.985,990,1.839,991,1.776,992,1.985,993,4.221,994,1.908,995,1.776,996,1.839,997,1.839,998,1.908,999,1.908,1000,1.146,1001,2.902,1002,1.908,1003,1.985,1004,2.902,1005,2.32,1006,4.445,1007,1.908,1008,3.268,1009,1.839,1010,3.384,1011,2.902,1012,2.199,1013,3.923,1014,1.776,1015,1.908,1016,2.902,1017,1.908,1018,1.985,1019,1.908,1020,1.908,1021,1.985,1022,2.902,1023,1.908,1024,1.908,1025,2.072,1026,1.985,1027,1.985,1028,1.985,1029,1.985,1030,1.985,1031,1.908,1032,2.7,1033,1.985,1034,2.902,1037,1.985,1038,2.072,1039,1.985,1069,2.531,1077,2.171,1099,3.954,1204,3.151,1325,4.706,1581,5.334,1587,2.287,1595,2.833,1596,5.866,1597,4.847,1598,5.866,1599,6.554,1600,4.847,1601,4.847,1602,4.847,1603,3.187,1604,3.187,1605,3.187,1606,6.554,1607,3.187,1608,3.187,1609,3.187,1610,3.187,1611,3.187,1612,4.847,1613,3.187,1614,3.187,1615,4.847,1616,2.287,1617,2.072,1618,2.287,1619,3.187,1620,3.187,1621,3.187,1622,4.847,1623,3.187,1624,3.187,1625,3.187,1626,3.187,1627,4.847,1628,3.954,1629,4.847,1630,2.833,1631,2.833]],["title/directives/FocusInitialDirective.html",[118,0.821,246,0.9]],["body/directives/FocusInitialDirective.html",[3,0.157,4,0.146,9,0.094,13,2.17,15,1.171,16,1.422,25,0.363,32,1.022,37,1.291,44,0.843,46,0.877,47,0.007,48,0.519,49,0.302,50,0.742,52,0.758,53,1.531,60,1.422,71,0.388,73,0.547,85,0.146,90,0.302,117,1.745,118,1.662,166,1.559,240,1.422,241,1.261,246,1.531,251,0.006,252,0.006,255,1.804,271,5.706,311,2.572,372,2.17,658,6.053,711,5.706,833,7.07,848,5.137,1079,6.488,1374,6.053,1375,6.053,1632,7.612,1633,5.824,1634,6.518,1635,7.953,1636,6.778,1637,6.552,1638,6.552,1639,8.564,1640,6.552,1641,6.552]],["title/components/ForgotPasswordPage.html",[0,0.159,158,0.9]],["body/components/ForgotPasswordPage.html",[0,0.201,1,0.622,2,0.961,3,0.077,4,0.072,5,0.682,6,0.695,7,0.682,8,0.682,9,0.046,15,0.578,16,1.747,17,1.747,18,0.622,19,0.997,21,0.961,23,0.961,25,0.179,26,0.543,27,0.982,29,2.924,32,0.63,37,0.488,44,0.753,46,0.433,47,0.007,48,0.562,49,0.226,50,0.671,52,0.374,53,0.622,60,0.876,61,0.753,62,1.418,63,2.553,64,2.867,65,2.377,66,2.617,71,0.459,73,0.27,74,1.05,77,0.86,81,0.536,83,0.866,85,0.072,90,0.149,91,1.343,103,1.592,104,1.592,106,0.926,110,0.97,111,1.116,113,2.612,114,2.444,115,0.682,116,1.034,117,1.16,118,0.567,119,1.755,120,0.682,121,1.248,122,0.611,123,0.658,124,0.634,125,0.682,126,0.622,127,0.682,128,0.634,129,0.658,130,0.682,131,0.634,132,0.682,133,0.634,134,0.682,135,0.622,136,0.658,137,0.682,138,0.634,139,0.682,140,0.658,141,0.622,142,1.038,143,0.739,144,1.034,145,0.622,146,1.034,147,0.611,148,1.759,149,0.622,150,0.557,151,0.682,152,0.622,153,1.139,154,0.622,155,0.622,156,0.634,157,0.682,158,1.271,159,1.685,160,0.646,161,0.589,162,1.16,163,0.634,164,0.682,165,0.634,166,1.16,167,0.682,168,0.634,169,0.682,170,0.634,171,0.634,172,0.682,173,0.634,174,0.682,175,0.634,176,0.682,177,0.622,178,0.658,179,0.634,180,0.753,181,0.682,182,0.622,183,0.682,184,0.622,185,1.464,186,0.682,187,0.634,188,1.248,189,0.589,190,0.682,191,0.634,192,1.034,193,0.682,194,0.634,195,0.682,196,0.634,197,0.682,198,0.622,199,0.646,200,0.622,201,0.682,202,0.622,203,0.67,204,0.926,205,0.622,206,0.634,207,0.634,208,0.682,209,0.622,210,1.443,211,0.611,212,0.682,213,0.622,214,0.646,215,0.622,216,0.622,217,0.682,218,0.634,219,0.682,220,1.034,221,0.634,222,0.682,223,0.634,224,0.682,225,0.682,226,0.634,227,0.682,228,0.611,229,0.798,230,0.622,231,0.634,232,0.682,233,0.634,234,0.682,235,0.926,236,1.034,237,1.034,238,0.622,239,0.658,240,1.268,241,0.622,242,0.622,243,0.67,244,0.646,245,0.682,246,0.622,247,0.682,248,0.611,249,0.658,250,0.682,251,0.004,252,0.004,307,2.064,372,1.071,386,3.266,394,2.576,395,2.558,397,1.689,409,4.173,428,0.97,472,5.684,478,3.186,481,4.173,483,4.025,489,5.387,579,3.297,592,1.395,593,1.189,594,1.362,595,1.395,682,1.894,683,2.495,684,3.141,685,2.168,686,2.064,688,2.258,690,2.284,698,2.483,699,1.362,700,2.638,703,1.506,706,1.506,709,2.014,710,1.592,714,2.851,715,2.608,716,2.913,717,2.326,718,2.06,719,1.689,720,1.639,721,1.882,724,2.168,725,2.114,726,2.828,743,2.014,745,1.215,746,1.592,749,1.639,750,2.685,752,1.866,801,2.064,802,1.689,803,4.248,809,1.548,825,1.548,865,1.936,895,2.638,896,5.261,897,4.357,898,5.261,899,2.203,901,2.875,910,2.642,914,2.321,918,2.321,921,4.357,922,2.875,923,2.462,929,3.731,930,2.102,931,1.866,932,2.014,933,1.689,934,4.025,935,2.203,936,3.186,937,2.203,938,1.866,939,5.682,940,2.934,941,3.186,942,1.866,943,2.014,944,2.102,945,2.102,946,3.517,947,4.498,948,2.203,949,4.834,950,4.498,951,2.203,952,2.203,953,2.203,954,2.203,955,2.203,956,2.203,957,2.203,958,2.203,1284,3.675,1642,6.639,1643,5.684,1644,3.234,1645,3.234,1646,3.234,1647,3.234,1648,3.234,1649,3.999,1650,4.902,1651,4.902,1652,3.234]],["title/interfaces/FormGroup.html",[63,2.018,86,0.791]],["body/interfaces/FormGroup.html",[3,0.172,4,0.161,9,0.103,25,0.4,32,1.083,44,0.766,47,0.007,52,0.836,53,1.622,63,3.966,71,0.427,74,2.344,85,0.161,86,1.22,251,0.006,252,0.006,253,2.391,841,6.998,1005,3.456,1653,6.419,1654,7.221,1655,7.221,1656,5.891,1657,7.221,1658,7.221]],["title/interfaces/GitAccount.html",[86,0.791,1659,2.699]],["body/interfaces/GitAccount.html",[3,0.159,4,0.148,9,0.095,25,0.369,26,0.89,47,0.007,49,0.398,85,0.204,86,1.549,88,1.792,91,1.354,251,0.006,252,0.006,253,2.206,255,1.822,257,3.226,275,2.687,305,1.625,323,2.607,341,5.222,651,3.953,744,2.881,1284,3.278,1659,4.634,1660,4.537,1661,4.537,1662,6.1,1663,6.1,1664,5.003,1665,4.779,1666,4.149,1667,4.779,1668,3.59,1669,3.59,1670,4.537]],["title/interfaces/GitAccountWithUsage.html",[86,0.791,1671,3.561]],["body/interfaces/GitAccountWithUsage.html",[0,0.263,3,0.15,4,0.14,9,0.09,13,1.715,14,2.789,16,1.124,17,1.124,21,1.232,23,1.232,25,0.348,26,0.86,27,1.456,36,2.261,47,0.007,49,0.358,53,1.492,68,2.652,71,0.52,73,0.525,83,1.683,85,0.14,86,1.062,90,0.29,106,1.589,204,1.704,210,1.71,211,1.188,251,0.006,252,0.006,253,2.082,372,2.082,768,2.647,1221,4.532,1248,3.915,1284,3.094,1659,5.298,1671,5.902,1672,4.282,1673,4.511,1674,5.128,1675,8.016,1676,3.915,1677,3.915,1678,4.086,1679,4.086,1680,4.785,1681,5.588,1682,5.588,1683,5.588,1684,5.588,1685,5.588,1686,5.588,1687,5.588,1688,5.128,1689,5.128,1690,5.588,1691,5.588,1692,5.588,1693,5.588,1694,4.785,1695,5.588,1696,5.128,1697,5.128,1698,5.588,1699,5.588,1700,5.588]],["title/interfaces/GitIntegration.html",[86,0.791,1666,2.914]],["body/interfaces/GitIntegration.html",[3,0.161,4,0.15,9,0.096,25,0.373,26,0.896,47,0.007,49,0.373,85,0.205,86,1.553,88,1.729,91,1.368,251,0.006,252,0.006,253,2.227,255,1.833,257,3.245,275,2.424,305,1.627,323,2.622,341,5.252,651,3.977,744,2.748,1284,4.422,1659,3.88,1660,4.582,1661,4.582,1662,4.582,1663,4.582,1664,5.595,1665,4.826,1666,5.032,1667,6.446,1668,3.625,1669,3.625,1670,4.582]],["title/injectables/GitIntegrationService.html",[319,1.648,1221,2.522]],["body/injectables/GitIntegrationService.html",[3,0.08,4,0.074,9,0.048,25,0.185,27,1.61,32,0.646,37,0.504,44,0.959,46,1.183,47,0.007,48,0.712,49,0.408,50,1.001,52,1.058,62,1.297,68,2.664,71,0.464,73,0.279,83,0.895,85,0.074,88,1.857,89,3.317,90,0.154,91,0.68,93,1.346,106,1.708,143,0.91,150,0.866,161,1.609,162,1.582,180,0.514,204,1.743,240,1.352,251,0.004,252,0.004,255,1.37,272,3.507,275,1.508,286,4.927,290,2.095,305,1.37,311,2.371,319,1.771,320,3.832,321,1.695,323,2.18,324,4.101,343,3.424,358,2.709,360,2.625,370,1.695,371,1.601,372,1.108,478,3.268,491,2.002,509,2.4,514,2.973,547,3.862,589,1.803,646,4.575,647,1.93,660,5.427,739,1.313,744,1.538,768,2.116,829,2.897,941,4.366,982,3.874,1000,1.808,1221,2.709,1284,2.474,1292,4.021,1300,4.101,1303,4.469,1315,4.819,1325,1.863,1405,2.728,1476,4.469,1555,5.479,1659,4.657,1662,2.278,1666,2.083,1668,3.62,1669,3.62,1676,2.083,1677,2.083,1679,2.174,1688,2.728,1689,2.728,1694,2.546,1697,4.101,1701,8.084,1702,2.973,1703,5.027,1704,3.826,1705,7.564,1706,6.717,1707,4.597,1708,5.027,1709,5.027,1710,5.027,1711,5.027,1712,5.027,1713,5.027,1714,5.027,1715,6.717,1716,5.027,1717,6.717,1718,5.027,1719,5.027,1720,5.027,1721,5.027,1722,5.027,1723,3.345,1724,5.027,1725,7.564,1726,3.345,1727,5.027,1728,6.21,1729,4.183,1730,3.345,1731,5.027,1732,3.345,1733,5.027,1734,3.345,1735,4.469,1736,5.027,1737,3.607,1738,5.027,1739,5.027,1740,3.345,1741,5.027,1742,3.345,1743,5.027,1744,3.345,1745,3.345,1746,3.345,1747,3.345,1748,5.027,1749,3.345,1750,5.027,1751,3.345,1752,5.027,1753,3.345,1754,5.027,1755,3.345,1756,4.101,1757,6.717,1758,3.826,1759,4.469,1760,3.345,1761,4.469,1762,5.027,1763,3.345,1764,5.027,1765,3.345,1766,5.027,1767,5.027,1768,5.027,1769,5.027,1770,5.027,1771,2.973,1772,3.345,1773,3.345,1774,3.345,1775,3.345,1776,3.345,1777,3.345,1778,3.345,1779,5.027,1780,3.345,1781,3.345,1782,3.345,1783,2.973,1784,2.973,1785,3.345,1786,3.345,1787,3.345,1788,2.546,1789,3.345,1790,2.728,1791,3.345,1792,3.345,1793,3.345,1794,3.345,1795,3.345,1796,3.345,1797,3.345,1798,3.345,1799,5.027,1800,3.345,1801,3.345,1802,3.345,1803,3.345,1804,3.345,1805,3.345,1806,3.345,1807,3.345,1808,5.027,1809,3.345,1810,3.345,1811,2.973,1812,3.345,1813,3.345,1814,3.345]],["title/interfaces/GitIssue.html",[86,0.791,1668,2.522]],["body/interfaces/GitIssue.html",[3,0.155,4,0.144,9,0.093,25,0.358,26,0.875,47,0.007,49,0.427,85,0.202,86,1.537,88,1.78,91,1.316,251,0.006,252,0.006,253,2.143,255,2.063,257,3.652,275,2.369,305,1.639,323,2.951,341,5.91,651,4.475,744,2.864,1284,3.186,1659,3.734,1660,4.409,1661,4.409,1662,4.409,1663,4.409,1664,4.917,1665,4.644,1666,4.031,1667,4.644,1668,4.255,1669,3.488,1670,4.409]],["title/interfaces/GitPull.html",[86,0.791,1669,2.522]],["body/interfaces/GitPull.html",[3,0.153,4,0.143,9,0.092,25,0.355,26,0.87,47,0.007,49,0.431,85,0.202,86,1.533,88,1.776,91,1.304,251,0.006,252,0.006,253,2.123,255,2.057,257,3.642,275,2.355,305,1.641,323,2.943,341,5.895,651,4.463,744,2.859,1284,3.156,1659,3.699,1660,4.368,1661,4.368,1662,4.368,1663,4.368,1664,4.889,1665,4.601,1666,3.994,1667,4.601,1668,3.456,1669,4.23,1670,6.021]],["title/interfaces/GitRepository.html",[86,0.791,1664,2.914]],["body/interfaces/GitRepository.html",[3,0.159,4,0.148,9,0.095,25,0.369,26,0.89,47,0.007,49,0.398,85,0.204,86,1.549,88,1.792,91,1.821,251,0.006,252,0.006,253,2.206,255,1.822,257,3.226,275,2.687,305,1.625,323,2.607,341,5.222,651,3.953,744,2.881,1284,3.278,1659,3.842,1660,4.537,1661,4.537,1662,4.537,1663,4.537,1664,5.372,1665,6.425,1666,4.149,1667,4.779,1668,3.59,1669,3.59,1670,4.537]],["title/components/GithubIntegrationPage.html",[0,0.159,160,0.934]],["body/components/GithubIntegrationPage.html",[0,0.237,1,0.833,2,1.188,3,0.103,4,0.096,5,0.913,6,0.93,7,0.913,8,0.913,9,0.062,13,1.654,14,2.517,15,0.774,16,1.769,17,1.767,18,0.833,19,1.233,21,1.188,23,1.188,25,0.24,32,0.779,36,2.727,37,0.914,44,0.643,46,0.58,47,0.007,48,0.633,49,0.2,50,0.49,52,0.501,53,0.833,71,0.414,73,0.361,77,1.064,81,0.718,85,0.096,90,0.2,91,1.233,93,1.159,114,1.324,115,0.913,116,1.279,117,1.372,118,0.759,119,1.713,120,0.913,121,1.476,122,0.818,123,0.88,124,0.848,125,0.913,126,0.833,127,0.913,128,0.848,129,0.88,130,0.913,131,0.848,132,0.913,133,0.848,134,0.913,135,0.833,136,0.88,137,0.913,138,0.848,139,0.913,140,0.88,141,0.833,142,1.228,143,0.914,144,1.279,145,0.833,146,1.279,147,0.818,148,1.882,149,0.833,150,0.745,151,0.913,152,0.833,153,1.347,154,0.833,155,0.833,156,0.848,157,0.913,158,0.833,159,0.913,160,1.514,161,1.625,162,1.565,163,0.848,164,0.913,165,0.848,166,1.188,167,0.913,168,0.848,169,0.913,170,0.848,171,0.848,172,0.913,173,0.848,174,0.913,175,0.848,176,0.913,177,0.833,178,0.88,179,0.848,180,0.932,181,0.913,182,0.833,183,0.913,184,0.833,185,0.848,186,0.913,187,0.848,188,1.476,189,0.788,190,0.913,191,0.848,192,1.279,193,0.913,194,0.848,195,0.913,196,0.848,197,0.913,198,0.833,199,0.864,200,0.833,201,0.913,202,0.833,203,0.896,204,1.146,205,0.833,206,0.848,207,0.848,208,0.913,209,0.833,210,1.623,211,0.818,212,0.913,213,0.833,214,0.864,215,0.833,216,0.833,217,0.913,218,0.848,219,0.913,220,1.279,221,0.848,222,0.913,223,0.848,224,0.913,225,0.913,226,0.848,227,0.913,228,0.818,229,0.987,230,0.833,231,0.848,232,0.913,233,0.848,234,0.913,235,1.146,236,1.279,237,1.279,238,0.833,239,0.88,240,1.427,241,0.833,242,0.833,243,0.896,244,0.864,245,0.913,246,0.833,247,0.913,248,0.818,249,0.88,250,0.913,251,0.004,252,0.004,279,1.493,308,2.553,395,2.189,428,1.299,542,2.814,543,3.959,682,1.057,683,1.784,684,1.662,685,1.914,686,1.822,714,1.591,715,1.591,716,2.277,717,1.525,718,1.35,733,2.412,812,3.106,919,3.531,943,2.696,944,2.814,945,2.814,1012,2.751,1048,2.949,1221,4.578,1248,2.696,1252,5.709,1554,4.615,1678,2.814,1735,5.39,1815,6.221,1816,3.848,1817,6.998,1818,6.063,1819,4.329,1820,4.329,1821,6.063,1822,7.982,1823,4.329,1824,4.329,1825,5.39,1826,4.35,1827,3.848]],["title/components/IconComponent.html",[0,0.159,163,0.917]],["body/components/IconComponent.html",[0,0.235,1,0.593,2,0.926,3,0.074,4,0.069,5,0.65,6,0.662,7,0.65,8,0.65,9,0.044,15,0.551,16,1.743,17,1.739,18,0.593,19,0.96,21,0.926,23,0.926,25,0.171,26,0.524,27,1.366,44,0.922,46,0.413,47,0.007,48,0.673,49,0.363,50,0.349,52,0.848,53,0.593,60,1.151,61,1.172,71,0.381,73,0.257,77,0.829,81,0.511,85,0.069,90,0.142,91,1.412,93,0.825,106,1.525,113,2.272,115,0.65,116,1.358,117,1.126,118,0.541,119,1.334,120,0.65,121,1.211,122,0.582,123,0.626,124,0.604,125,0.65,126,0.593,127,0.65,128,0.604,129,0.626,130,0.65,131,0.604,132,0.65,133,0.604,134,0.65,135,0.593,136,0.626,137,0.65,138,0.604,139,0.65,140,0.626,141,0.593,142,1.008,143,0.712,144,0.996,145,0.593,146,0.996,147,0.582,148,1.737,149,0.593,150,0.531,151,0.65,152,0.593,153,1.105,154,0.593,155,0.593,156,0.604,157,0.65,158,0.593,159,0.65,160,0.615,161,0.561,162,1.126,163,1.262,164,0.65,165,0.604,166,1.642,167,0.65,168,0.604,169,0.65,170,0.604,171,0.604,172,0.65,173,0.604,174,0.65,175,0.604,176,0.65,177,0.593,178,0.626,179,0.604,180,0.726,181,0.65,182,0.593,183,0.65,184,0.593,185,0.604,186,0.65,187,0.604,188,1.211,189,0.561,190,0.65,191,0.604,192,0.996,193,0.65,194,0.604,195,0.65,196,0.604,197,0.65,198,0.593,199,0.615,200,0.593,201,0.65,202,0.593,203,0.638,204,0.892,205,0.593,206,0.604,207,0.604,208,0.65,209,0.593,210,1.412,211,0.582,212,0.65,213,0.593,214,0.615,215,0.593,216,0.593,217,0.65,218,0.604,219,0.65,220,0.996,221,0.604,222,0.65,223,0.604,224,0.65,225,0.65,226,0.604,227,0.65,228,0.582,229,0.769,230,0.593,231,0.604,232,0.65,233,0.604,234,0.65,235,0.892,236,0.996,237,0.996,238,0.593,239,0.626,240,0.551,241,0.593,242,0.593,243,0.638,244,0.615,245,0.65,246,0.593,247,0.65,248,0.582,249,0.626,250,0.65,251,0.003,252,0.003,255,0.699,266,3.595,279,1.981,280,6.42,281,2.606,297,2.211,305,1.479,360,4.542,592,1.329,593,1.132,594,1.989,595,2.996,682,1.695,683,1.39,684,3.098,690,0.942,698,4.835,714,1.736,715,1.736,716,2.418,717,1.664,718,1.473,765,1.854,812,6.352,829,3.29,835,7.162,845,6.174,856,4.372,861,6.174,862,6.223,1005,2.26,1048,4.73,1069,2.467,1071,3.595,1113,2.345,1828,2.739,1829,6.44,1830,3.853,1831,4.724,1832,5.744,1833,4.724,1834,5.744,1835,4.724,1836,4.724,1837,6.945,1838,4.724,1839,6.945,1840,7.628,1841,7.628,1842,4.686,1843,3.081,1844,4.724,1845,6.44,1846,4.724,1847,4.724,1848,4.724,1849,7.328,1850,7.328,1851,4.724,1852,3.081,1853,3.853,1854,8.499,1855,4.724,1856,4.724,1857,7.87,1858,3.081,1859,6.945,1860,4.724,1861,3.081,1862,3.081,1863,3.081,1864,3.081,1865,3.081,1866,3.081,1867,3.081,1868,3.081,1869,4.724,1870,3.081,1871,3.081,1872,3.081,1873,3.081,1874,4.724,1875,2.725,1876,4.724,1877,4.724,1878,2.739,1879,2.739,1880,2.345,1881,3.081,1882,4.199,1883,3.081,1884,6.44,1885,4.724,1886,4.724,1887,3.081,1888,2.211,1889,4.724,1890,3.081,1891,4.724,1892,3.081,1893,3.081,1894,3.081,1895,3.081,1896,7.328,1897,3.081,1898,3.081,1899,4.724]],["title/components/InputAssigneeComponent.html",[0,0.159,165,0.917]],["body/components/InputAssigneeComponent.html",[0,0.162,1,0.448,2,0.742,3,0.056,4,0.052,5,0.491,6,0.5,7,0.491,8,0.491,9,0.033,15,0.416,16,1.714,17,1.708,18,0.448,19,1.392,21,0.742,23,0.742,25,0.129,26,0.42,27,1.487,29,1.651,32,0.487,37,0.351,44,0.968,46,0.988,47,0.007,48,0.638,49,0.397,50,0.879,52,0.945,53,1.572,57,1.115,60,1.224,61,1.216,62,1.533,64,0.895,68,1.382,71,0.449,73,0.195,74,0.756,77,0.665,81,0.386,83,0.624,85,0.052,88,1.061,89,1.922,90,0.108,91,1.682,93,1.281,106,1.041,109,4.182,110,1.436,111,0.804,113,1.591,115,0.491,116,0.799,117,1.189,118,0.665,119,1.733,120,0.491,121,1.009,122,0.44,123,0.474,124,0.457,125,0.491,126,0.448,127,0.491,128,0.457,129,0.474,130,0.491,131,0.457,132,0.491,133,0.457,134,0.491,135,0.448,136,0.474,137,0.491,138,0.457,139,0.491,140,1.701,141,0.448,142,0.84,143,0.571,144,0.799,145,0.448,146,0.799,147,0.44,148,1.599,149,0.448,150,0.401,151,0.491,152,0.448,153,0.921,154,0.448,155,0.448,156,0.457,157,0.491,158,0.448,159,0.491,160,0.465,161,0.424,162,0.938,163,0.457,164,0.491,165,1.08,166,1.601,167,0.491,168,0.457,169,0.491,170,0.457,171,0.457,172,0.491,173,0.457,174,0.491,175,0.457,176,0.491,177,0.448,178,0.474,179,0.457,180,0.582,181,0.491,182,0.448,183,0.491,184,0.448,185,0.457,186,0.491,187,0.457,188,1.009,189,0.424,190,0.491,191,0.457,192,0.799,193,0.491,194,0.457,195,0.491,196,0.457,197,0.491,198,0.448,199,0.465,200,0.448,201,0.491,202,0.448,203,0.483,204,0.716,205,0.448,206,0.457,207,0.457,208,0.491,209,0.448,210,1.233,211,0.44,212,0.491,213,0.448,214,0.465,215,0.448,216,0.448,217,0.491,218,0.457,219,0.491,220,0.799,221,0.457,222,0.491,223,0.457,224,0.491,225,0.491,226,0.457,227,0.491,228,0.44,229,0.616,230,0.448,231,0.457,232,0.491,233,0.457,234,0.491,235,0.716,236,1.279,237,0.799,238,0.448,239,0.474,240,0.416,241,0.448,242,0.448,243,0.784,244,0.465,245,0.491,246,0.448,247,0.491,248,0.44,249,0.474,250,0.491,251,0.003,252,0.003,255,1.25,257,1.521,274,1.256,275,1.949,281,3.107,284,0.875,290,0.727,298,1.03,308,2.321,323,0.756,325,2.425,358,2.579,362,1.256,394,2.545,395,2.609,396,2.874,424,2.462,512,1.256,540,2.579,544,3.815,586,4.55,587,1.515,588,1.451,607,2.185,647,1.454,651,1.864,673,1.395,682,1.48,683,1.912,684,2.116,685,1.03,686,0.981,688,1.205,689,1.217,690,1.464,694,1.005,695,2.064,703,1.764,706,1.764,710,1.147,714,2.025,715,2.025,716,2.571,717,1.686,718,1.719,724,1.675,725,1.634,727,2.616,728,2.682,733,2.666,743,2.359,746,1.864,747,2.58,748,2.11,750,1.057,751,1.147,755,2.268,756,2.761,765,1.487,768,2.321,781,1.587,800,1.298,801,1.595,802,1.217,803,1.395,804,1.901,807,1.774,809,2.29,811,6.749,814,2.11,815,2.11,822,1.217,829,1.005,843,1.515,848,2.761,852,1.451,853,1.515,872,1.774,873,1.813,927,2.359,960,1.813,964,2.268,965,2.268,966,4.565,967,3.63,968,2.865,969,2.865,970,2.268,971,2.268,972,2.268,973,2.268,974,2.268,976,4.928,977,1.451,978,1.395,979,2.11,980,1.395,981,1.395,982,1.344,983,1.256,984,1.256,985,1.451,986,4.087,987,2.11,988,1.298,989,1.451,990,1.344,991,1.298,992,1.451,993,3.63,994,1.395,995,1.298,996,1.344,997,1.344,998,1.395,999,1.395,1000,1.363,1001,2.268,1002,1.395,1003,1.451,1004,2.268,1005,1.813,1006,3.89,1007,1.395,1008,2.666,1009,1.344,1010,2.761,1011,2.268,1012,1.719,1013,3.3,1014,1.298,1015,1.395,1016,2.268,1017,1.395,1018,1.451,1019,1.395,1020,1.395,1021,1.451,1022,2.268,1023,1.395,1024,1.395,1025,1.515,1026,1.451,1027,1.451,1028,1.451,1029,1.451,1030,1.451,1031,1.395,1032,2.11,1033,1.451,1034,2.268,1037,1.451,1038,1.515,1039,1.451,1069,1.978,1073,2.462,1074,2.718,1075,3.26,1077,1.587,1106,3.851,1107,1.901,1108,1.587,1109,1.901,1113,1.774,1292,3.3,1324,2.981,1325,1.298,1350,4.195,1497,1.901,1616,1.672,1617,1.515,1618,1.672,1679,1.515,1728,3.434,1788,1.774,1826,3.955,1827,2.071,1900,7.705,1901,7.071,1902,2.071,1903,4.786,1904,3.788,1905,4.786,1906,4.786,1907,3.643,1908,5.776,1909,4.496,1910,3.09,1911,2.33,1912,3.788,1913,3.788,1914,2.33,1915,2.33,1916,2.33,1917,2.33,1918,3.788,1919,2.33,1920,2.33,1921,2.33,1922,2.33,1923,2.883,1924,2.33,1925,2.33,1926,2.33,1927,3.367,1928,2.33,1929,2.33,1930,2.33,1931,2.33,1932,2.33,1933,2.071,1934,2.33,1935,2.071,1936,2.33,1937,1.901,1938,1.774,1939,2.33,1940,1.901,1941,2.33,1942,3.788,1943,3.788,1944,2.33,1945,1.774,1946,2.33,1947,2.33,1948,3.788,1949,3.788,1950,2.33,1951,3.788,1952,2.33,1953,2.33,1954,2.071,1955,2.071,1956,2.071,1957,1.901,1958,2.071,1959,1.774,1960,3.904,1961,2.071,1962,2.071,1963,2.071,1964,2.071,1965,3.367,1966,2.33,1967,2.33,1968,3.788,1969,3.788,1970,3.788,1971,3.788,1972,3.788,1973,4.9,1974,2.718,1975,2.883,1976,2.33,1977,2.33,1978,1.395,1979,1.515,1980,4.786,1981,2.33,1982,2.33,1983,1.901,1984,2.33,1985,2.33,1986,1.901,1987,1.901,1988,2.33,1989,2.462,1990,5.512,1991,2.33]],["title/components/InputComponent.html",[0,0.159,168,0.917]],["body/components/InputComponent.html",[0,0.211,1,0.473,2,0.775,3,0.059,4,0.055,5,0.519,6,0.528,7,0.519,8,0.519,9,0.035,15,0.439,16,1.72,17,1.714,18,0.473,19,0.804,21,0.775,23,0.775,25,0.219,26,0.439,27,0.656,29,2.297,32,0.509,37,0.371,44,0.945,46,0.835,47,0.007,48,0.596,49,0.404,50,0.706,52,0.87,53,1.446,57,1.893,60,1.379,61,1.272,62,1.339,64,1.906,68,1.433,71,0.369,73,0.205,74,0.798,77,0.694,81,0.408,85,0.055,88,0.761,90,0.114,91,1.633,110,1.707,111,2.15,113,2.17,114,1.907,115,0.519,116,0.834,117,1.222,118,0.694,119,1.854,120,0.519,121,1.047,122,0.465,123,0.5,124,0.482,125,0.519,126,0.473,127,0.519,128,0.482,129,0.5,130,0.519,131,0.482,132,0.519,133,0.482,134,0.519,135,0.473,136,0.5,137,0.519,138,0.482,139,0.519,140,1.722,141,0.473,142,0.871,143,0.596,144,0.834,145,0.473,146,0.834,147,0.465,148,1.627,149,0.473,150,0.423,151,0.519,152,0.473,153,0.955,154,0.473,155,0.473,156,0.482,157,0.519,158,0.473,159,0.519,160,0.491,161,0.448,162,0.973,163,0.482,164,0.519,165,0.482,166,1.833,167,0.519,168,1.115,169,0.519,170,0.482,171,0.482,172,0.519,173,0.482,174,0.519,175,0.482,176,0.519,177,0.473,178,0.5,179,0.482,180,0.608,181,0.519,182,0.473,183,0.519,184,0.473,185,0.482,186,0.519,187,0.482,188,1.047,189,0.448,190,0.519,191,0.482,192,0.834,193,0.519,194,0.482,195,0.519,196,0.482,197,0.519,198,0.473,199,0.491,200,0.473,201,0.519,202,0.473,203,0.509,204,0.747,205,0.473,206,0.482,207,0.482,208,0.519,209,0.473,210,1.267,211,0.465,212,0.519,213,0.473,214,0.491,215,0.473,216,0.473,217,0.519,218,0.482,219,0.519,220,0.834,221,0.482,222,0.519,223,0.482,224,0.519,225,0.519,226,0.482,227,0.519,228,0.465,229,0.644,230,0.473,231,0.482,232,0.519,233,0.482,234,0.519,235,0.747,236,1.315,237,0.834,238,0.473,239,0.5,240,0.439,241,0.473,242,0.473,243,0.509,244,0.491,245,0.519,246,0.473,247,0.519,248,0.465,249,0.5,250,0.519,251,0.003,252,0.003,255,1.414,257,1.589,266,3.011,274,1.325,275,1.707,281,2.581,284,2.341,290,1.234,297,1.764,298,1.087,305,1.208,308,3.631,323,0.798,325,2.515,358,2.675,360,2.066,362,1.325,394,2.512,395,2.638,410,1.145,481,2.066,514,1.947,540,2.675,593,0.904,647,1.519,651,1.947,682,1.834,683,1.835,684,2.688,685,1.087,686,1.035,688,2.317,689,1.284,690,2.227,691,4.45,694,3.614,695,1.061,699,1.666,703,1.843,704,1.764,706,2.312,710,1.21,714,0.904,715,0.904,716,0.923,718,1.548,721,2.557,725,1.061,727,3.8,728,3.552,732,4.745,733,1.37,739,1.553,746,3.584,748,2.204,749,2.515,750,1.795,751,1.21,756,3.281,765,1.553,800,1.37,801,2.395,802,2.066,812,3.561,814,3.169,815,3.169,820,1.764,822,2.066,829,1.061,838,2.464,843,1.598,848,2.863,852,1.531,873,1.177,877,2.006,878,1.675,881,1.764,888,4.412,889,2.186,960,1.893,964,2.368,965,2.368,966,4.45,967,3.732,968,2.971,969,2.971,970,2.368,971,2.368,972,2.368,973,2.368,974,2.368,976,5.002,977,1.531,978,1.472,979,3.71,980,1.472,981,1.472,982,1.418,983,1.325,984,1.325,985,1.531,986,4.051,987,2.765,988,1.37,989,1.531,990,1.418,991,1.37,992,1.531,993,3.732,994,1.472,995,1.37,996,1.418,997,1.418,998,1.472,999,1.472,1000,0.884,1001,2.368,1002,1.472,1003,1.531,1004,2.368,1005,1.893,1006,3.987,1007,1.472,1008,2.765,1009,1.418,1010,2.863,1011,2.368,1012,1.795,1013,3.405,1014,1.37,1015,1.472,1016,2.368,1017,1.472,1018,1.531,1019,1.472,1020,1.472,1021,1.531,1022,2.368,1023,1.472,1024,1.472,1025,1.598,1026,1.531,1027,1.531,1028,1.531,1029,1.531,1030,1.531,1031,1.472,1032,2.204,1033,1.531,1034,2.368,1037,1.531,1039,1.531,1041,2.572,1044,1.246,1048,3.381,1049,2.006,1073,2.572,1077,1.675,1113,1.871,1331,2.186,1454,4.052,1616,1.764,1617,1.598,1618,1.764,1888,1.764,1992,2.186,1993,4.964,1994,3.956,1995,4.412,1996,5.688,1997,5.688,1998,4.745,1999,5.541,2000,5.541,2001,3.956,2002,7.002,2003,3.956,2004,2.459,2005,5.92,2006,2.459,2007,3.517,2008,2.572,2009,2.459,2010,2.459,2011,2.459,2012,3.956,2013,2.459,2014,2.459,2015,3.956,2016,3.517,2017,2.459,2018,2.459,2019,2.459,2020,3.956,2021,3.956,2022,5.688,2023,3.956,2024,5.688,2025,2.459,2026,2.459,2027,8.162,2028,6.234,2029,1.871,2030,2.459,2031,2.186,2032,3.956,2033,2.459,2034,2.459,2035,2.459,2036,2.459,2037,2.459,2038,2.459,2039,2.459,2040,3.956,2041,2.459]],["title/components/InputDateTimeComponent.html",[0,0.159,170,0.917]],["body/components/InputDateTimeComponent.html",[0,0.196,1,0.6,2,0.935,3,0.075,4,0.069,5,0.658,6,0.67,7,0.658,8,0.658,9,0.045,13,1.301,14,2.082,15,0.557,16,1.744,17,1.74,18,0.6,19,0.969,21,0.935,23,0.935,25,0.173,26,0.529,27,1.158,29,2.643,32,0.613,36,2.331,37,0.47,44,0.959,46,0.986,47,0.007,48,0.655,49,0.398,50,0.834,52,0.937,53,1.59,57,1.493,60,1.316,61,1.244,62,1.392,64,1.197,65,2.805,68,1.671,71,0.384,73,0.26,74,1.012,77,0.837,81,0.517,85,0.069,88,1.114,90,0.144,91,1.708,106,0.589,115,0.658,116,1.005,117,1.134,118,0.837,119,1.525,120,0.658,121,1.221,122,0.589,123,0.634,124,0.611,125,0.658,126,0.6,127,0.658,128,0.611,129,0.634,130,0.658,131,0.611,132,0.658,133,0.611,134,0.658,135,0.6,136,1.42,137,0.658,138,0.611,139,0.658,140,1.804,141,0.6,142,1.015,143,0.719,144,1.005,145,0.6,146,1.005,147,0.589,148,1.742,149,0.6,150,0.537,151,0.658,152,0.6,153,1.114,154,0.6,155,0.6,156,0.611,157,0.658,158,0.6,159,0.658,160,0.623,161,0.568,162,1.134,163,0.611,164,0.658,165,0.611,166,1.671,167,0.658,168,0.611,169,0.658,170,1.27,171,1.831,172,0.658,173,0.611,174,0.658,175,0.611,176,0.658,177,0.6,178,0.634,179,0.611,180,0.733,181,0.658,182,0.6,183,0.658,184,0.6,185,0.611,186,0.658,187,0.611,188,1.221,189,0.568,190,0.658,191,0.611,192,1.005,193,0.658,194,0.611,195,0.658,196,0.611,197,0.658,198,0.6,199,0.623,200,0.6,201,0.658,202,0.6,203,0.646,204,0.901,205,0.6,206,0.611,207,0.611,208,0.658,209,0.6,210,1.42,211,0.589,212,0.658,213,0.6,214,0.623,215,0.6,216,0.6,217,0.658,218,0.611,219,0.658,220,1.005,221,0.611,222,0.658,223,0.611,224,0.658,225,0.658,226,0.611,227,0.658,228,0.589,229,0.776,230,0.6,231,0.611,232,0.658,233,0.611,234,0.658,235,0.901,236,1.221,237,1.005,238,0.6,239,0.634,240,0.557,241,0.6,242,0.6,243,0.646,244,0.623,245,0.658,246,0.6,247,0.658,248,0.589,249,0.634,250,0.658,251,0.003,252,0.003,255,1.313,264,4.539,274,1.681,275,1.737,281,2.94,284,1.791,290,0.973,298,1.379,305,1.075,323,1.012,325,2.416,358,2.57,362,1.681,394,1.645,395,2.426,540,3.119,647,1.83,651,2.347,691,3.739,732,4.405,748,2.656,751,1.535,763,3.629,765,1.872,772,3.629,782,3.099,791,2.374,792,2.374,793,2.544,794,2.374,795,2.374,829,1.345,848,3.339,852,1.943,856,4.933,873,1.493,960,2.282,964,2.854,965,2.854,966,4.766,967,4.18,968,3.465,969,3.465,970,2.854,971,2.854,972,2.854,973,2.854,974,2.854,976,5.308,977,1.943,978,1.867,979,4.102,980,1.867,981,1.867,982,1.799,983,1.681,984,1.681,985,1.943,986,4.364,987,2.656,988,1.738,989,1.943,990,1.799,991,1.738,992,1.943,993,4.18,994,1.867,995,1.738,996,1.799,997,1.799,998,1.867,999,1.867,1000,1.122,1001,2.854,1002,1.867,1003,1.943,1004,2.854,1005,2.282,1006,4.18,1007,1.867,1008,2.656,1009,1.799,1010,2.75,1011,2.854,1012,2.163,1013,3.465,1014,1.738,1015,1.867,1016,2.854,1017,1.867,1018,1.943,1019,1.867,1020,1.867,1021,1.943,1022,2.854,1023,1.867,1024,2.854,1030,1.943,1031,1.867,1032,2.656,1033,1.943,1034,2.854,1037,1.943,1038,2.027,1039,1.943,1077,2.125,1350,2.374,1616,2.238,1617,3.099,1618,2.238,1630,5.761,1631,4.238,1978,2.854,1995,4.238,1998,5.315,2016,4.238,2042,7.023,2043,6.445,2044,2.773,2045,5.761,2046,5.788,2047,4.768,2048,5.788,2049,5.788,2050,4.768,2051,3.119,2052,3.119,2053,3.119,2054,3.119,2055,3.119,2056,3.119,2057,3.119,2058,3.119,2059,3.119,2060,3.119,2061,3.119,2062,5.788,2063,4.768,2064,5.788,2065,4.238,2066,3.119,2067,3.119]],["title/components/IntegrationEntryComponent.html",[0,0.159,173,0.917]],["body/components/IntegrationEntryComponent.html",[0,0.232,1,0.801,2,1.156,3,0.099,4,0.093,5,0.877,6,0.894,7,0.877,8,0.877,9,0.06,13,1.608,14,2.463,15,0.744,16,1.767,17,1.764,18,0.801,19,1.199,21,1.156,23,1.156,25,0.23,32,0.758,36,2.68,37,1.032,44,0.891,47,0.007,48,0.59,49,0.363,52,0.482,53,0.801,60,0.744,61,0.639,62,0.894,71,0.246,73,0.347,77,1.034,81,0.69,85,0.093,90,0.192,110,1.769,113,1.201,114,1.273,115,0.877,116,1.243,117,1.342,118,0.73,119,1.691,120,0.877,121,1.444,122,0.786,123,0.846,124,0.815,125,0.877,126,0.801,127,0.877,128,0.815,129,0.846,130,0.877,131,0.815,132,0.877,133,0.815,134,0.877,135,0.801,136,0.846,137,0.877,138,0.815,139,0.877,140,0.846,141,0.801,142,1.201,143,0.889,144,1.243,145,0.801,146,1.243,147,0.786,148,1.866,149,0.801,150,0.716,151,0.877,152,0.801,153,1.318,154,0.801,155,0.801,156,0.815,157,0.877,158,0.801,159,0.877,160,0.831,161,0.758,162,1.799,163,0.815,164,0.877,165,0.815,166,1.646,167,0.877,168,0.815,169,0.877,170,0.815,171,0.815,172,0.877,173,1.46,174,0.877,175,0.815,176,0.877,177,0.801,178,0.846,179,0.815,180,0.906,181,0.877,182,0.801,183,0.877,184,0.801,185,0.815,186,0.877,187,0.815,188,1.444,189,0.758,190,0.877,191,0.815,192,1.243,193,0.877,194,0.815,195,0.877,196,0.815,197,0.877,198,0.801,199,0.831,200,0.801,201,0.877,202,0.801,203,0.861,204,1.114,205,0.801,206,0.815,207,0.815,208,0.877,209,0.801,210,1.599,211,0.786,212,0.877,213,0.801,214,0.831,215,0.801,216,0.801,217,0.877,218,0.815,219,0.877,220,1.243,221,0.815,222,0.877,223,0.815,224,0.877,225,0.877,226,0.815,227,0.877,228,0.786,229,0.96,230,0.801,231,0.815,232,0.877,233,0.815,234,0.877,235,1.114,236,1.243,237,1.243,238,0.801,239,0.846,240,0.744,241,0.801,242,0.801,243,0.861,244,0.831,245,0.877,246,0.801,247,0.877,248,0.786,249,0.846,250,0.877,251,0.004,252,0.004,255,1.853,275,1.769,284,2.214,305,1.236,395,1.201,396,1.84,593,1.529,682,1.672,683,1.735,688,1.324,690,1.273,691,4.537,694,1.795,710,2.048,714,2.167,715,2.167,716,2.214,717,1.465,718,1.298,719,2.173,720,2.108,721,1.597,727,2.954,728,2.607,733,3.285,745,1.562,747,4.016,755,2.49,765,2.315,892,3.167,1106,2.822,1663,5.075,1978,2.49,1987,5.587,2068,7.628,2069,7,2070,3.698,2071,6.849,2072,5.896,2073,5.896,2074,6.991,2075,5.896,2076,4.161,2077,4.161,2078,4.161,2079,4.161,2080,6.849,2081,4.161,2082,5.896,2083,3.167]],["title/components/IntegrationGithubComponent.html",[0,0.159,175,0.917]],["body/components/IntegrationGithubComponent.html",[0,0.222,1,0.739,2,1.091,3,0.092,4,0.086,5,0.81,6,0.825,7,0.81,8,0.81,9,0.055,13,1.519,14,2.356,15,0.687,16,1.761,17,1.759,18,1.26,19,1.132,21,1.091,23,1.091,25,0.213,26,0.617,27,1.319,29,2.259,32,0.716,36,2.584,37,0.579,44,0.908,46,0.514,47,0.007,48,0.604,49,0.302,50,0.435,52,0.832,53,1.382,60,1.171,61,1.007,62,1.543,63,2.825,65,1.543,66,2.897,71,0.451,73,0.321,74,1.247,77,0.977,81,0.637,85,0.086,88,1.072,89,2.631,90,0.177,110,1.153,113,1.608,114,1.703,115,0.81,116,1.174,117,1.284,118,0.674,119,1.74,120,0.81,121,1.381,122,0.726,123,0.781,124,0.753,125,0.81,126,0.739,127,0.81,128,0.753,129,0.781,130,0.81,131,0.753,132,0.81,133,0.753,134,0.81,135,0.739,136,0.781,137,0.81,138,0.753,139,0.81,140,0.781,141,0.739,142,1.149,143,0.839,144,1.174,145,0.739,146,1.174,147,0.726,148,1.834,149,0.739,150,0.661,151,0.81,152,0.739,153,1.26,154,0.739,155,0.739,156,0.753,157,0.81,158,0.739,159,0.81,160,0.767,161,1.53,162,1.704,163,0.753,164,0.81,165,0.753,166,1.408,167,0.81,168,0.753,169,0.81,170,0.753,171,0.753,172,0.81,173,0.753,174,0.81,175,1.408,176,0.81,177,0.739,178,0.781,179,0.753,180,0.856,181,0.81,182,0.739,183,0.81,184,0.739,185,1.091,186,0.81,187,0.753,188,1.381,189,0.699,190,0.81,191,0.753,192,1.174,193,0.81,194,0.753,195,0.81,196,0.753,197,0.81,198,0.739,199,0.767,200,0.739,201,0.81,202,0.739,203,0.795,204,1.052,205,0.739,206,0.753,207,0.753,208,0.81,209,0.739,210,1.55,211,0.726,212,0.81,213,0.739,214,0.767,215,0.739,216,0.739,217,0.81,218,0.753,219,0.81,220,1.174,221,0.753,222,0.81,223,0.753,224,0.81,225,0.81,226,0.753,227,0.81,228,0.726,229,0.906,230,0.739,231,0.753,232,0.81,233,0.753,234,0.81,235,1.052,236,1.174,237,1.174,238,0.739,239,0.781,240,0.687,241,0.739,242,0.739,243,0.795,244,0.767,245,0.81,246,0.739,247,0.81,248,0.726,249,0.781,250,0.81,251,0.004,252,0.004,284,2.46,290,1.198,307,1.617,308,2.344,372,1.272,394,1.325,395,2.296,396,1.699,660,5.154,682,0.938,683,1.639,685,1.699,686,1.617,688,1.222,714,1.412,715,1.412,716,2.091,717,1.961,718,1.737,719,2.006,720,1.946,721,1.475,727,2.402,728,2.463,765,2.186,808,2.392,914,2.756,927,2.392,933,2.908,1221,4.285,1224,7.094,1248,2.392,1382,3.793,1664,4.079,1676,2.392,1677,2.392,1678,2.497,1696,3.134,1979,2.497,2084,7.73,2085,3.415,2086,6.55,2087,5.569,2088,6.55,2089,6.55,2090,7.183,2091,7.183,2092,7.183,2093,3.415,2094,5.569,2095,3.842,2096,3.842,2097,3.842,2098,3.842,2099,3.842,2100,3.842,2101,3.842,2102,3.842,2103,5.569,2104,5.569,2105,3.842,2106,3.842,2107,3.842,2108,3.842,2109,3.842,2110,4.95,2111,5.569]],["title/components/LandingPageComponent.html",[0,0.159,177,0.9]],["body/components/LandingPageComponent.html",[0,0.252,1,0.934,2,1.286,3,0.116,4,0.108,5,1.023,6,1.042,7,1.023,8,1.023,9,0.07,15,0.867,16,1.777,17,1.774,18,0.934,19,1.334,21,1.286,23,1.286,37,1.12,44,0.515,47,0.007,48,0.631,71,0.287,73,0.405,77,1.151,81,0.805,85,0.108,90,0.224,115,1.023,116,1.383,117,1.456,118,0.851,119,1.648,120,1.023,121,1.567,122,0.917,123,0.987,124,0.951,125,1.023,126,0.934,127,1.023,128,0.951,129,0.987,130,1.023,131,0.951,132,1.023,133,0.951,134,1.023,135,0.934,136,0.987,137,1.023,138,0.951,139,1.023,140,0.987,141,0.934,142,1.304,143,0.989,144,1.383,145,0.934,146,1.383,147,0.917,148,1.925,149,0.934,150,0.836,151,1.023,152,0.934,153,1.43,154,0.934,155,0.934,156,0.951,157,1.023,158,0.934,159,1.023,160,0.969,161,0.884,162,1.456,163,0.951,164,1.023,165,0.951,166,1.286,167,1.023,168,0.951,169,1.023,170,0.951,171,0.951,172,1.023,173,0.951,174,1.023,175,0.951,176,1.023,177,1.532,178,1.811,179,0.951,180,1.008,181,1.023,182,0.934,183,1.023,184,0.934,185,0.951,186,1.023,187,0.951,188,1.567,189,0.884,190,1.023,191,0.951,192,1.383,193,1.023,194,0.951,195,1.023,196,0.951,197,1.023,198,0.934,199,0.969,200,0.934,201,1.023,202,0.934,203,1.005,204,1.239,205,0.934,206,0.951,207,0.951,208,1.023,209,0.934,210,1.69,211,0.917,212,1.023,213,0.934,214,0.969,215,0.934,216,0.934,217,1.023,218,0.951,219,1.023,220,1.383,221,0.951,222,1.023,223,0.951,224,1.023,225,1.023,226,0.951,227,1.023,228,0.917,229,1.067,230,0.934,231,0.951,232,1.023,233,0.951,234,1.023,235,1.239,236,1.383,237,1.383,238,0.934,239,0.987,240,1.328,241,0.934,242,0.934,243,1.005,244,0.969,245,1.023,246,0.934,247,1.023,248,0.917,249,0.987,250,1.023,251,0.005,252,0.005,421,6.057,2112,5.831,2113,4.314,2114,7.43,2115,6.56,2116,4.853]],["title/interfaces/LetContext.html",[86,0.791,2117,3.561]],["body/interfaces/LetContext.html",[3,0.167,4,0.156,9,0.1,16,1.249,25,0.387,26,0.916,47,0.007,49,0.323,61,1.074,71,0.414,73,0.584,85,0.156,86,1.181,90,0.323,91,1.421,118,1.45,166,1.62,248,1.321,249,1.914,251,0.006,252,0.006,253,2.315,281,3.171,339,6.925,1106,3.345,2117,6.701,2118,5.702,2119,7.349,2120,7.349,2121,6.214,2122,6.214,2123,6.214,2124,6.214,2125,6.214,2126,6.214,2127,6.214]],["title/directives/LetDirective.html",[118,0.821,248,0.884]],["body/directives/LetDirective.html",[3,0.155,4,0.144,9,0.093,15,1.157,16,1.411,25,0.358,26,0.875,37,0.976,44,0.94,46,1.057,47,0.007,48,0.626,49,0.409,50,0.894,52,0.749,53,1.246,60,1.157,61,1.309,71,0.383,73,0.54,85,0.144,86,1.094,90,0.299,91,1.732,118,1.385,166,1.547,241,1.246,248,1.492,249,1.936,251,0.006,252,0.006,281,2.937,339,6.921,765,3.099,1069,4.122,1106,3.778,2117,6.483,2118,5.28,2119,7.883,2120,7.883,2121,7.572,2122,7.018,2123,7.572,2124,5.754,2125,5.754,2126,5.754,2127,5.754,2128,7.895,2129,6.473,2130,7.895,2131,6.473]],["title/components/ListGroupComponent.html",[0,0.159,179,0.917]],["body/components/ListGroupComponent.html",[0,0.244,1,0.876,2,1.231,3,0.109,4,0.101,5,0.96,6,0.978,7,0.96,8,0.96,9,0.065,13,1.713,14,2.586,15,0.814,16,1.773,17,1.77,18,0.876,19,1.277,21,1.231,23,1.231,25,0.252,32,0.807,36,2.788,37,1.084,44,0.762,47,0.007,48,0.614,49,0.21,52,0.527,53,0.876,71,0.27,73,0.38,77,1.102,81,0.755,85,0.101,90,0.21,110,1.366,113,1.315,114,1.393,115,0.96,116,1.325,117,1.409,118,0.799,119,1.74,120,0.96,121,1.516,122,0.86,123,0.926,124,0.893,125,0.96,126,0.876,127,0.96,128,0.893,129,0.926,130,0.96,131,0.893,132,0.96,133,0.893,134,0.96,135,0.876,136,0.926,137,0.96,138,0.893,139,0.96,140,0.926,141,0.876,142,1.261,143,0.947,144,1.325,145,0.876,146,1.325,147,0.86,148,1.901,149,0.876,150,0.784,151,0.96,152,0.876,153,1.384,154,0.876,155,0.876,156,0.893,157,0.96,158,0.876,159,0.96,160,0.909,161,0.829,162,1.409,163,0.893,164,0.96,165,0.893,166,1.519,167,0.96,168,0.893,169,0.96,170,0.893,171,0.893,172,0.96,173,0.893,174,0.96,175,0.893,176,0.96,177,0.876,178,0.926,179,1.519,180,1.369,181,0.96,182,0.876,183,0.96,184,0.876,185,0.893,186,0.96,187,0.893,188,1.516,189,0.829,190,0.96,191,0.893,192,1.325,193,0.96,194,0.893,195,0.96,196,0.893,197,0.96,198,0.876,199,0.909,200,0.876,201,0.96,202,0.876,203,0.943,204,1.187,205,0.876,206,0.893,207,0.893,208,0.96,209,0.876,210,1.653,211,0.86,212,0.96,213,0.876,214,0.909,215,0.876,216,0.876,217,0.96,218,0.893,219,0.96,220,1.325,221,0.893,222,0.96,223,0.893,224,0.96,225,0.96,226,0.893,227,0.96,228,0.86,229,1.022,230,0.876,231,0.893,232,0.96,233,0.893,234,0.96,235,1.187,236,1.325,237,1.325,238,0.876,239,0.926,240,0.814,241,0.876,242,0.876,243,0.943,244,0.909,245,0.96,246,0.876,247,0.96,248,0.86,249,0.926,250,0.96,251,0.005,252,0.005,305,1.042,395,2.076,396,2.778,593,1.674,682,1.112,690,1.393,691,4.69,721,1.748,727,1.965,745,1.71,752,2.627,755,2.726,765,2.466,910,3.385,1048,3.102,1978,3.76,2132,6.889,2133,6.322,2134,4.049,2135,7.19,2136,6.281,2137,6.281,2138,4.554,2139,4.554,2140,4.049,2141,4.049]],["title/guards/LoggedInUsersGuard.html",[429,3.561,2142,3.561]],["body/guards/LoggedInUsersGuard.html",[3,0.162,4,0.151,9,0.097,13,1.856,25,0.377,32,1.046,37,1.025,44,0.863,46,0.911,47,0.007,48,0.539,49,0.314,50,0.771,52,0.787,71,0.515,73,0.568,85,0.151,90,0.314,91,1.383,106,1.537,251,0.006,252,0.006,275,2.041,284,2.554,290,2.122,319,2.865,370,3.446,371,3.255,372,2.253,386,3.939,428,2.041,429,6.191,440,8.317,483,5.097,928,5.549,2143,6.047,2144,7.736,2145,6.047,2146,6.047,2147,6.803,2148,6.803,2149,5.177,2150,6.803]],["title/components/LoginPage.html",[0,0.159,182,0.9]],["body/components/LoginPage.html",[0,0.196,1,0.6,2,0.935,3,0.075,4,0.069,5,0.658,6,0.67,7,0.658,8,0.658,9,0.045,13,1.301,14,2.082,15,0.557,16,1.744,17,1.742,18,0.6,19,0.969,21,0.935,23,0.935,25,0.173,26,0.529,27,1.221,29,2.899,32,0.613,36,2.331,37,0.719,44,0.812,46,0.638,47,0.007,48,0.583,49,0.299,50,0.834,52,0.67,53,1.114,60,0.557,61,0.479,62,1.697,63,2.497,64,1.83,65,3.077,66,3.088,71,0.453,73,0.26,74,1.012,77,0.837,81,0.517,83,0.835,85,0.069,90,0.144,91,1.497,103,1.535,104,1.535,106,0.901,110,0.936,111,1.076,113,2.597,114,2.417,115,0.658,116,1.005,117,1.134,118,0.547,119,1.677,120,0.658,121,1.221,122,0.589,123,0.634,124,0.611,125,0.658,126,0.6,127,0.658,128,0.611,129,0.634,130,0.658,131,0.611,132,0.658,133,0.611,134,0.658,135,0.6,136,0.634,137,0.658,138,0.611,139,0.658,140,0.634,141,0.6,142,1.015,143,0.719,144,1.005,145,0.6,146,1.005,147,0.589,148,1.742,149,0.6,150,0.537,151,0.658,152,0.6,153,1.114,154,0.6,155,0.6,156,0.611,157,0.658,158,0.6,159,1.221,160,0.623,161,0.568,162,1.134,163,0.611,164,0.658,165,0.611,166,1.134,167,0.658,168,0.611,169,0.658,170,0.611,171,0.611,172,0.658,173,0.611,174,0.658,175,0.611,176,0.658,177,0.6,178,0.634,179,0.611,180,0.733,181,0.658,182,1.247,183,0.658,184,0.6,185,1.443,186,0.658,187,0.611,188,1.221,189,0.568,190,0.658,191,0.611,192,1.005,193,0.658,194,0.611,195,0.658,196,0.611,197,0.658,198,0.6,199,0.623,200,0.6,201,0.658,202,0.6,203,0.646,204,1.094,205,0.6,206,0.611,207,0.611,208,0.658,209,0.6,210,1.42,211,0.589,212,0.658,213,0.6,214,0.623,215,0.6,216,0.6,217,0.658,218,0.611,219,0.658,220,1.005,221,0.611,222,0.658,223,0.611,224,0.658,225,0.658,226,0.611,227,0.658,228,0.589,229,0.776,230,0.6,231,0.611,232,0.658,233,0.611,234,0.658,235,0.901,236,1.005,237,1.005,238,0.6,239,0.634,240,0.557,241,0.6,242,0.6,243,1.198,244,0.623,245,0.658,246,0.6,247,0.658,248,0.589,249,0.634,250,0.658,251,0.003,252,0.003,290,1.487,305,0.791,307,1.313,386,3.225,394,2.54,395,2.426,397,1.629,409,2.49,428,0.936,478,5.54,480,3.629,481,4.001,483,3.968,512,1.681,515,5.145,579,3.224,682,1.582,683,2.325,684,3.109,685,2.109,686,2.007,688,2.062,690,1.771,703,1.453,706,1.453,709,1.943,710,1.535,714,2.382,715,2.127,716,2.434,717,2.039,718,1.806,719,1.629,720,1.58,721,2.222,724,2.109,725,2.057,726,2.75,749,1.58,750,2.163,801,1.313,803,4.18,809,1.493,825,1.493,838,2.97,865,1.867,899,2.125,910,2.57,918,2.238,923,2.374,924,2.544,929,4.933,930,2.027,931,1.799,932,1.943,933,1.629,934,3.968,935,2.125,936,3.099,937,2.125,938,1.799,939,5.628,940,2.854,941,2.027,942,1.799,943,1.943,944,2.027,945,3.099,946,2.238,947,4.415,948,2.125,949,4.757,950,4.415,951,2.125,952,2.125,953,2.125,954,2.125,955,2.125,956,2.125,957,2.125,958,2.125,1000,1.122,1044,3.731,1132,3.89,1173,1.943,1282,3.248,1283,3.629,1284,2.347,1408,2.854,1517,2.544,1518,3.421,1521,2.544,1875,2.75,2151,2.773,2152,5.788,2153,4.768,2154,5.788,2155,4.238,2156,5.218,2157,3.119,2158,4.238,2159,3.119,2160,3.119,2161,3.119,2162,3.119,2163,3.119,2164,3.119,2165,2.544,2166,3.119,2167,4.768,2168,4.768,2169,3.119,2170,3.119,2171,2.773,2172,3.119,2173,3.119,2174,3.119,2175,1.943,2176,2.773,2177,3.119,2178,4.238,2179,2.773,2180,2.773,2181,3.119,2182,2.773,2183,3.119,2184,4.238,2185,4.238,2186,4.238,2187,4.238]],["title/modules/MainModule.html",[398,1.837,407,2.801]],["body/modules/MainModule.html",[2,1.462,3,0.1,4,0.093,9,0.06,47,0.007,71,0.583,73,0.348,74,1.354,76,2.598,85,0.153,90,0.317,93,1.117,117,1.158,122,1.116,131,1.158,133,1.158,138,1.158,156,1.158,163,1.158,168,1.158,170,1.158,171,1.158,184,1.137,185,1.344,189,1.076,191,1.158,194,1.158,196,1.158,207,1.158,218,1.158,221,1.158,223,1.158,231,1.158,233,1.158,242,1.137,244,0.833,246,1.137,248,1.116,251,0.004,252,0.004,255,0.946,272,2.178,290,1.301,320,2.993,334,4.023,364,3.403,365,3.175,398,3.091,400,3.236,401,4.02,407,4.893,408,3.536,409,2.178,410,1.943,412,4.465,413,3.767,415,3.375,424,3.84,426,3.536,428,1.251,433,3.175,434,3.708,454,2.598,461,3.679,462,2.598,463,4.023,536,3.708,546,2.68,585,3.708,829,1.799,857,3.708,979,2.324,987,3.291,995,3.291,1073,2.711,1074,2.993,1328,3.708,1454,2.711,1503,4.238,1555,3.403,1704,4.496,1737,4.238,1830,3.403,2043,3.403,2188,3.403,2189,5.907,2190,5.907,2191,4.819,2192,4.171,2193,5.907,2194,5.251,2195,5.251,2196,4.171,2197,5.251,2198,4.171,2199,5.251,2200,4.171,2201,5.251,2202,5.251,2203,8.175,2204,5.251,2205,5.251,2206,4.171,2207,5.251,2208,4.171,2209,6.096,2210,4.171,2211,5.251,2212,4.171,2213,6.096,2214,4.171,2215,5.251,2216,5.251,2217,4.171,2218,5.251,2219,4.171,2220,5.251,2221,4.171,2222,5.251,2223,4.171,2224,5.251,2225,4.171,2226,5.251,2227,4.171,2228,5.251,2229,4.171,2230,5.251,2231,4.171,2232,5.251,2233,4.171,2234,5.251,2235,3.708,2236,3.708,2237,4.171,2238,4.171,2239,4.171,2240,4.171,2241,4.171,2242,3.708,2243,4.171,2244,4.171,2245,4.171,2246,5.907,2247,3.403,2248,4.171,2249,3.403,2250,4.171,2251,4.171,2252,4.171,2253,4.171,2254,3.403,2255,5.907,2256,4.171,2257,3.403,2258,4.171,2259,4.171,2260,4.171,2261,4.171,2262,3.403,2263,4.171,2264,4.171,2265,4.171,2266,4.171,2267,4.171,2268,4.171,2269,4.171,2270,4.238,2271,4.171,2272,4.171,2273,4.171,2274,3.708,2275,3.403,2276,4.819,2277,3.708,2278,3.403,2279,3.708,2280,3.708,2281,3.708,2282,4.171,2283,4.171,2284,5.907,2285,4.171,2286,5.907,2287,4.171,2288,4.171,2289,4.171,2290,4.171]],["title/components/MainViewComponent.html",[0,0.159,184,0.9]],["body/components/MainViewComponent.html",[0,0.244,1,0.878,2,1.233,3,0.109,4,0.102,5,0.962,6,0.98,7,0.962,8,0.962,9,0.065,13,1.716,14,2.589,15,0.816,16,1.773,17,1.77,18,0.878,19,1.279,21,1.233,23,1.233,25,0.253,32,0.809,36,2.79,37,1.085,44,0.667,47,0.007,48,0.615,52,0.528,53,0.878,71,0.27,73,0.381,77,1.103,81,0.757,85,0.102,90,0.211,113,1.816,114,2.489,115,0.962,116,1.326,117,1.411,118,0.801,119,1.685,120,0.962,121,1.518,122,0.862,123,0.928,124,0.894,125,0.962,126,0.878,127,0.962,128,0.894,129,0.928,130,0.962,131,0.894,132,0.962,133,0.894,134,0.962,135,0.878,136,0.928,137,0.962,138,0.894,139,0.962,140,0.928,141,0.878,142,1.263,143,0.948,144,1.326,145,0.878,146,1.326,147,0.862,148,1.902,149,0.878,150,0.786,151,0.962,152,0.878,153,1.385,154,0.878,155,0.878,156,0.894,157,0.962,158,0.878,159,0.962,160,0.911,161,0.831,162,1.411,163,0.894,164,0.962,165,0.894,166,1.233,167,0.962,168,0.894,169,0.962,170,0.894,171,0.894,172,0.962,173,0.894,174,0.962,175,0.894,176,0.962,177,0.878,178,0.928,179,0.894,180,0.967,181,0.962,182,0.878,183,0.962,184,1.493,185,1.747,186,0.962,187,0.894,188,1.518,189,0.831,190,0.962,191,0.894,192,1.326,193,0.962,194,0.894,195,0.962,196,0.894,197,0.962,198,0.878,199,0.911,200,0.878,201,0.962,202,0.878,203,0.945,204,1.188,205,0.878,206,0.894,207,0.894,208,0.962,209,0.878,210,1.654,211,0.862,212,0.962,213,0.878,214,0.911,215,0.878,216,0.878,217,0.962,218,0.894,219,0.962,220,1.326,221,0.894,222,0.962,223,0.894,224,0.962,225,0.962,226,0.894,227,0.962,228,0.862,229,1.024,230,0.878,231,0.894,232,0.962,233,0.894,234,0.962,235,1.188,236,1.636,237,1.326,238,0.878,239,0.928,240,0.816,241,0.878,242,0.878,243,0.945,244,0.911,245,0.962,246,0.878,247,0.962,248,0.862,249,0.928,250,0.962,251,0.005,252,0.005,279,1.574,394,1.574,395,1.816,396,2.018,397,2.383,433,5.478,682,1.535,683,2.283,684,2.763,685,2.018,686,1.921,687,3.274,693,4.678,702,4.284,739,1.791,808,2.842,2029,3.473,2291,6.398,2292,4.056,2293,7.197,2294,6.289,2295,4.563,2296,4.563,2297,5.591,2298,4.056]],["title/components/MemberListComponent.html",[0,0.159,187,0.917]],["body/components/MemberListComponent.html",[0,0.226,1,0.762,2,1.115,3,0.095,4,0.088,5,0.835,6,0.85,7,0.835,8,0.835,9,0.057,13,1.552,14,2.396,15,0.708,16,1.763,17,1.76,18,0.762,19,1.802,21,1.115,23,1.115,25,0.219,26,0.631,27,1.332,32,0.732,36,2.62,37,0.597,44,0.898,46,0.762,47,0.007,48,0.671,49,0.404,50,0.645,52,0.659,53,1.095,60,0.708,61,0.608,64,2.796,68,1.923,71,0.457,73,0.33,77,0.998,81,0.656,83,1.06,85,0.088,87,1.751,88,1.485,89,3.099,90,0.183,91,0.805,93,1.06,115,0.835,116,1.2,117,1.306,118,0.694,119,1.508,120,0.835,121,1.405,122,0.748,123,0.805,124,0.776,125,0.835,126,0.762,127,0.835,128,0.776,129,0.805,130,0.835,131,0.776,132,0.835,133,0.776,134,0.835,135,0.762,136,0.805,137,0.835,138,0.776,139,0.835,140,0.805,141,0.762,142,1.354,143,0.858,144,1.2,145,0.762,146,1.2,147,0.748,148,1.846,149,0.762,150,1.147,151,0.835,152,0.762,153,1.593,154,0.762,155,0.762,156,0.776,157,0.835,158,0.762,159,0.835,160,0.79,161,0.721,162,1.306,163,0.776,164,0.835,165,0.776,166,1.575,167,0.835,168,0.776,169,0.835,170,0.776,171,0.776,172,0.835,173,0.776,174,0.835,175,0.776,176,0.835,177,0.762,178,0.805,179,0.776,180,1.119,181,0.835,182,0.762,183,0.835,184,0.762,185,0.776,186,0.835,187,1.428,188,1.405,189,0.721,190,0.835,191,0.776,192,1.2,193,0.835,194,0.776,195,0.835,196,0.776,197,0.835,198,0.762,199,0.79,200,0.762,201,0.835,202,0.762,203,0.82,204,1.075,205,0.762,206,0.776,207,0.776,208,0.835,209,0.762,210,1.569,211,0.748,212,0.835,213,0.762,214,0.79,215,0.762,216,0.762,217,0.835,218,0.776,219,0.835,220,1.2,221,0.776,222,0.835,223,0.776,224,0.835,225,0.835,226,0.776,227,0.835,228,0.748,229,0.926,230,0.762,231,0.776,232,0.835,233,0.776,234,0.835,235,1.075,236,1.2,237,1.2,238,0.762,239,0.805,240,0.708,241,0.762,242,0.762,243,0.82,244,0.79,245,0.835,246,0.762,247,0.835,248,0.748,249,0.805,250,0.835,251,0.004,252,0.004,305,0.944,372,1.311,428,1.188,511,3.406,512,3.925,543,3.961,548,4.634,586,3.711,587,2.573,588,2.465,590,2.573,606,2.205,607,2.283,673,2.37,744,1.211,757,4.331,765,2.234,1147,6.553,1182,3.229,1227,7.036,2299,7.667,2300,3.519,2301,6.662,2302,5.69,2303,5.69,2304,6.662,2305,3.959,2306,5.69,2307,3.959,2308,3.959,2309,5.69,2310,3.959,2311,3.959,2312,3.959,2313,3.959,2314,3.959,2315,3.959,2316,3.959,2317,5.69,2318,5.69,2319,5.69,2320,5.69]],["title/injectables/MemberService.html",[319,1.648,548,2.699]],["body/injectables/MemberService.html",[3,0.109,4,0.102,9,0.066,18,1.567,19,1.786,25,0.253,27,1.552,32,0.81,37,0.69,44,0.893,46,1.127,47,0.007,48,0.667,49,0.389,50,0.954,52,1.045,62,0.983,68,2.762,71,0.482,73,0.382,83,1.225,85,0.102,88,1.841,89,3.529,90,0.211,106,1.59,109,5.069,143,1.438,180,1.193,199,1.722,251,0.005,252,0.005,255,1.848,305,1.195,311,3.45,319,2.219,320,4.265,321,2.318,323,2.045,330,5.141,346,6.868,347,6.868,370,2.318,371,2.19,372,1.515,491,2.739,509,3.283,510,3.117,514,3.547,548,3.635,586,3.51,587,2.975,588,2.85,744,2.811,768,3.631,984,4.537,1154,3.925,1315,5.572,1973,6.903,2321,4.068,2322,8.418,2323,4.576,2324,4.576,2325,4.576,2326,6.302,2327,6.407,2328,6.302,2329,4.576,2330,5.141,2331,4.576,2332,5.141,2333,6.302,2334,4.576,2335,6.302,2336,4.576,2337,6.302,2338,6.302,2339,4.576,2340,4.576,2341,4.576,2342,3.733,2343,4.576,2344,4.576,2345,4.576,2346,4.068,2347,4.068,2348,4.068,2349,3.733]],["title/modules/MessagesModule.html",[398,1.837,2350,3.561]],["body/modules/MessagesModule.html",[3,0.17,4,0.159,9,0.102,47,0.007,71,0.526,73,0.596,85,0.159,90,0.329,251,0.006,252,0.006,400,2.933,401,4.51,408,5.009,409,3.726,410,3.323,412,4.271,413,4.005,415,4.119,461,5.212,462,4.444,2350,7.198,2351,6.343,2352,6.343,2353,6.786,2354,7.136,2355,7.136]],["title/modules/MessagesRoutingModule.html",[398,1.837,2353,3.357]],["body/modules/MessagesRoutingModule.html",[0,0.237,3,0.167,4,0.156,9,0.1,28,2.947,47,0.007,71,0.521,73,0.584,85,0.156,90,0.323,93,1.874,180,1.076,189,1.507,251,0.006,252,0.006,398,2.748,400,2.878,413,3.35,415,4.072,426,4.953,427,5.006,428,2.1,435,4.36,444,5.937,454,4.36,482,4.768,934,3.773,1250,5.328,1255,5.328,1256,5.328,2353,5.937,2356,7.001,2357,7.001]],["title/components/MockPage.html",[0,0.159,189,0.852]],["body/components/MockPage.html",[0,0.24,1,0.851,2,1.206,3,0.106,4,0.098,5,0.932,6,0.949,7,0.932,8,0.932,9,0.063,13,1.678,14,2.546,15,0.79,16,1.771,17,1.768,18,0.851,19,1.251,21,1.206,23,1.206,25,0.245,26,0.682,27,1.174,32,0.791,36,2.752,37,0.666,44,0.75,46,0.592,47,0.007,48,0.637,49,0.284,50,0.501,52,0.512,53,0.851,60,0.79,61,0.679,71,0.364,73,0.369,77,1.079,81,0.733,85,0.098,90,0.204,110,1.326,111,1.525,113,1.276,114,1.352,115,0.932,116,1.297,117,1.387,118,0.776,119,1.666,120,0.932,121,1.492,122,0.835,123,0.899,124,0.866,125,0.932,126,0.851,127,0.932,128,0.866,129,0.899,130,0.932,131,0.866,132,0.932,133,0.866,134,0.932,135,0.851,136,0.899,137,0.932,138,0.866,139,0.932,140,0.899,141,0.851,142,1.242,143,0.927,144,1.297,145,0.851,146,1.297,147,0.835,148,1.89,149,0.851,150,0.761,151,0.932,152,0.851,153,1.362,154,0.851,155,0.851,156,0.866,157,0.932,158,0.851,159,0.932,160,0.882,161,0.805,162,1.387,163,0.866,164,0.932,165,0.866,166,1.206,167,0.932,168,0.866,169,0.932,170,0.866,171,0.866,172,0.932,173,0.866,174,0.932,175,0.866,176,0.932,177,0.851,178,0.899,179,0.866,180,0.945,181,0.932,182,0.851,183,0.932,184,0.851,185,0.866,186,0.932,187,0.866,188,1.492,189,1.393,190,0.932,191,0.866,192,1.297,193,0.932,194,0.866,195,0.932,196,0.866,197,0.932,198,0.851,199,0.882,200,0.851,201,0.932,202,0.851,203,0.915,204,1.162,205,0.851,206,0.866,207,0.866,208,0.932,209,0.851,210,1.635,211,0.835,212,0.932,213,0.851,214,0.882,215,0.851,216,0.851,217,0.932,218,0.866,219,0.932,220,1.297,221,0.866,222,0.932,223,0.866,224,0.932,225,0.932,226,0.866,227,0.932,228,0.835,229,1.001,230,0.851,231,0.866,232,0.932,233,0.866,234,0.932,235,1.162,236,1.297,237,1.297,238,0.851,239,0.899,240,0.79,241,0.851,242,0.851,243,0.915,244,0.882,245,0.932,246,0.851,247,0.932,248,0.835,249,0.899,250,0.932,251,0.004,252,0.004,279,1.525,305,1.02,372,1.464,394,1.525,395,1.776,428,1.326,542,2.873,543,3.985,593,1.624,682,1.079,694,1.907,695,1.907,699,1.861,718,1.379,727,3.053,728,2.721,745,1.66,801,2.59,802,2.308,809,3.662,822,2.308,869,3.606,934,4.335,942,2.55,1048,3.011,2140,3.929,2141,3.929,2358,3.929,2359,5.469,2360,7.077,2361,6.153,2362,4.421,2363,4.421,2364,4.421,2365,4.421,2366,4.421,2367,4.421,2368,5.469,2369,4.421,2370,2.873,2371,3.172,2372,4.421]],["title/interfaces/ModifyUser.html",[86,0.791,2373,3.041]],["body/interfaces/ModifyUser.html",[3,0.16,4,0.149,9,0.096,25,0.371,26,0.894,47,0.007,48,0.739,49,0.414,64,2.575,85,0.2,86,1.517,88,1.665,251,0.006,252,0.006,253,2.221,305,1.64,481,4.795,511,5.583,512,4.347,647,3.321,744,2.468,1989,6.062,2373,5.243,2374,4.812,2375,4.569,2376,4.569,2377,4.36]],["title/components/NavElementComponent.html",[0,0.159,191,0.917]],["body/components/NavElementComponent.html",[0,0.211,1,0.677,2,1.023,3,0.084,4,0.078,5,0.742,6,0.756,7,0.742,8,0.742,9,0.05,13,1.424,15,0.629,16,1.754,17,1.752,18,0.677,19,1.061,21,1.023,23,1.023,25,0.195,26,0.579,27,1.511,32,0.671,37,0.938,44,0.916,47,0.007,48,0.546,49,0.34,50,0.591,52,0.797,53,1.416,57,1.684,60,1.113,61,0.957,62,1.121,71,0.408,73,0.294,77,0.916,81,0.583,83,0.942,85,0.078,90,0.162,110,2.066,113,1.797,114,2.441,115,0.742,116,1.101,117,1.511,118,0.617,119,1.652,120,0.742,121,1.313,122,0.665,123,0.715,124,0.69,125,0.742,126,0.677,127,0.742,128,0.69,129,0.715,130,0.742,131,0.69,132,0.742,133,0.69,134,0.742,135,0.677,136,0.715,137,0.742,138,0.69,139,0.742,140,0.715,141,0.677,142,1.092,143,0.787,144,1.101,145,0.677,146,1.101,147,0.665,148,1.796,149,0.677,150,0.606,151,0.742,152,0.677,153,1.198,154,0.677,155,0.677,156,0.69,157,0.742,158,0.677,159,0.742,160,0.702,161,0.641,162,1.22,163,0.69,164,0.742,165,0.69,166,1.442,167,0.742,168,0.69,169,0.742,170,0.69,171,0.69,172,0.742,173,0.69,174,0.742,175,0.69,176,0.742,177,0.677,178,0.715,179,0.69,180,0.957,181,0.742,182,0.677,183,0.742,184,0.677,185,0.69,186,0.742,187,0.69,188,1.313,189,0.641,190,0.742,191,1.35,192,1.765,193,0.742,194,0.69,195,0.742,196,0.69,197,0.742,198,0.677,199,0.702,200,0.677,201,0.742,202,0.677,203,0.729,204,0.986,205,0.677,206,0.69,207,0.69,208,0.742,209,0.677,210,1.496,211,0.665,212,0.742,213,0.677,214,0.702,215,0.677,216,0.677,217,0.742,218,0.69,219,0.742,220,1.101,221,0.69,222,0.742,223,0.69,224,0.742,225,0.742,226,0.69,227,0.742,228,0.665,229,0.85,230,0.677,231,0.69,232,0.742,233,0.69,234,0.742,235,0.986,236,1.101,237,1.101,238,0.677,239,0.715,240,0.629,241,0.677,242,0.677,243,0.729,244,0.702,245,0.742,246,0.677,247,0.742,248,0.665,249,0.715,250,0.742,251,0.004,252,0.004,257,1.413,275,2.066,279,1.214,284,2.338,290,1.097,305,0.866,306,2.524,307,1.481,308,1.481,336,2.814,394,1.214,395,2.304,396,1.556,410,1.639,592,1.518,593,1.293,594,1.481,595,2.252,682,2.079,683,2.464,684,2.824,685,1.556,686,1.481,687,2.524,690,2.507,693,2.287,698,1.783,699,1.481,702,3.556,703,1.639,706,1.639,714,2.832,715,2.832,716,3.199,717,2.591,718,2.295,719,1.837,720,1.783,724,2.309,725,2.252,739,1.381,745,1.321,749,1.783,750,1.596,752,3.591,765,2.05,800,1.96,808,2.191,814,1.96,815,1.96,848,3.591,852,2.191,853,2.287,878,2.396,880,4.582,933,1.837,938,2.03,1292,2.106,1324,3.877,1634,4.738,1636,5.242,1643,5.866,1923,3.974,1978,2.106,1979,2.287,2249,7.137,2298,3.128,2378,7.137,2379,3.128,2380,6.225,2381,5.221,2382,5.534,2383,5.534,2384,6.888,2385,6.888,2386,6.888,2387,5.534,2388,6.225,2389,5.221,2390,3.518,2391,3.518,2392,3.518,2393,3.518,2394,3.518,2395,3.518,2396,3.518,2397,4.641,2398,3.518,2399,3.518,2400,5.534,2401,3.518,2402,3.518,2403,3.128,2404,4.641,2405,3.128,2406,2.87,2407,3.128]],["title/components/NavElementWorkspaceComponent.html",[0,0.159,194,0.917]],["body/components/NavElementWorkspaceComponent.html",[0,0.172,1,0.487,2,0.794,3,0.06,4,0.056,5,0.534,6,0.544,7,0.534,8,0.534,9,0.036,13,1.105,15,0.452,16,1.724,17,1.719,18,0.487,19,0.823,21,0.794,23,0.794,25,0.14,26,0.449,27,1.426,32,0.521,37,0.61,44,0.939,46,0.948,47,0.007,48,0.63,49,0.374,50,0.86,52,0.965,53,1.623,57,1.211,60,1.034,61,0.889,62,0.87,71,0.461,73,0.211,77,1.509,81,0.42,83,0.678,85,0.056,90,0.117,91,1.176,110,1.898,113,1.826,114,2.432,115,0.534,116,0.854,117,1.882,118,0.444,119,1.702,120,0.534,121,1.067,122,0.478,123,0.515,124,0.496,125,0.534,126,0.487,127,0.534,128,0.496,129,0.515,130,0.534,131,0.496,132,0.534,133,0.496,134,0.534,135,0.487,136,0.515,137,0.534,138,0.496,139,0.534,140,0.515,141,0.487,142,1.184,143,1.401,144,0.854,145,0.487,146,0.854,147,0.478,148,1.641,149,0.487,150,1.089,151,0.534,152,0.487,153,1.461,154,0.487,155,0.487,156,0.496,157,0.534,158,0.487,159,0.534,160,0.505,161,0.461,162,0.992,163,0.496,164,0.534,165,0.496,166,1.24,167,0.534,168,0.496,169,0.534,170,0.496,171,0.496,172,0.534,173,0.496,174,0.534,175,0.496,176,0.534,177,0.487,178,0.515,179,0.496,180,0.622,181,0.534,182,0.487,183,0.534,184,0.487,185,0.496,186,0.534,187,0.496,188,1.067,189,0.461,190,0.534,191,0.496,192,1.6,193,0.534,194,1.134,195,0.534,196,0.496,197,0.534,198,0.487,199,1.01,200,0.487,201,0.534,202,0.487,203,0.524,204,0.765,205,0.487,206,0.496,207,0.496,208,0.534,209,0.487,210,1.286,211,0.478,212,0.534,213,0.487,214,0.505,215,0.487,216,0.487,217,0.534,218,0.496,219,0.534,220,0.854,221,0.496,222,0.534,223,0.496,224,0.534,225,0.534,226,0.496,227,0.534,228,0.478,229,0.659,230,0.487,231,0.496,232,0.534,233,0.496,234,0.534,235,0.765,236,0.854,237,0.854,238,0.487,239,0.515,240,0.452,241,0.487,242,0.487,243,0.524,244,0.505,245,0.534,246,0.487,247,0.534,248,0.478,249,0.515,250,0.534,251,0.003,252,0.003,257,1.017,275,1.215,279,0.873,284,1.901,290,2.105,305,0.672,306,1.816,307,1.705,336,2.182,386,2.982,394,2.444,395,2.46,396,2.797,397,1.322,410,1.886,428,0.759,546,3.214,547,3.486,592,1.092,593,0.93,594,1.066,595,2.183,682,2.007,683,2.34,684,2.825,690,2.515,698,1.283,699,1.066,702,2.758,703,1.886,706,1.886,714,2.789,715,2.789,716,3.087,717,2.376,718,2.105,719,2.115,720,2.052,724,1.791,725,1.747,727,2.495,728,2.558,739,1.987,743,1.577,744,1.239,745,0.951,749,2.052,750,1.837,752,2.92,756,2.336,765,1.59,800,1.41,814,1.41,815,1.41,848,2.92,852,1.577,853,1.645,878,1.724,880,2.522,938,2.336,1150,1.515,1151,3.229,1189,2.632,1286,3.303,1292,4.241,1324,3.152,1360,3.082,1408,3.787,1628,3.303,1634,3.852,1636,4.402,1643,5.135,1694,3.852,1784,3.6,1923,3.082,1978,2.424,1979,2.632,1983,3.303,2247,7.263,2274,2.25,2378,7.263,2382,4.499,2383,4.499,2387,4.499,2397,3.6,2403,2.25,2404,5.141,2405,3.6,2406,2.065,2407,2.25,2408,2.25,2409,5.061,2410,4.05,2411,5.061,2412,5.784,2413,5.784,2414,3.6,2415,5.141,2416,5.141,2417,4.05,2418,4.05,2419,4.05,2420,5.141,2421,4.05,2422,5.784,2423,5.784,2424,4.05,2425,2.531,2426,2.531,2427,2.531,2428,2.531,2429,3.6,2430,2.531,2431,2.531,2432,3.6,2433,2.531,2434,2.531,2435,2.531,2436,4.05,2437,2.531,2438,4.05,2439,2.531,2440,4.05,2441,2.531,2442,2.531,2443,4.05,2444,2.531,2445,2.531,2446,2.531,2447,2.531,2448,2.531,2449,2.531,2450,2.531,2451,2.25,2452,2.531,2453,2.25,2454,5.061,2455,2.531,2456,2.531,2457,6.326,2458,6.326,2459,6.326,2460,6.326,2461,3.6,2462,2.25,2463,2.25,2464,2.531,2465,2.531,2466,2.531,2467,2.531,2468,2.531,2469,2.531,2470,4.05,2471,4.05,2472,5.141,2473,5.141,2474,4.402,2475,4.05,2476,2.25,2477,2.531]],["title/components/OptionComponent.html",[0,0.159,196,0.917]],["body/components/OptionComponent.html",[0,0.244,1,0.88,2,1.234,3,0.109,4,0.102,5,0.964,6,0.982,7,0.964,8,0.964,9,0.065,15,0.817,16,1.773,17,1.77,18,0.88,19,1.28,21,1.234,23,1.234,25,0.253,26,0.698,27,0.758,37,0.689,44,0.863,46,0.612,47,0.007,48,0.645,49,0.333,50,0.518,60,0.817,61,1.193,71,0.373,73,0.382,77,1.105,81,0.758,85,0.102,90,0.211,106,0.864,115,0.964,116,1.328,117,1.412,118,0.802,119,1.607,120,0.964,121,1.519,122,0.864,123,0.929,124,0.896,125,0.964,126,0.88,127,0.964,128,0.896,129,0.929,130,0.964,131,0.896,132,0.964,133,0.896,134,0.964,135,0.88,136,0.929,137,0.964,138,0.896,139,0.964,140,0.929,141,0.88,142,1.264,143,0.949,144,1.328,145,0.88,146,1.328,147,0.864,148,1.903,149,0.88,150,0.787,151,0.964,152,0.88,153,1.386,154,0.88,155,0.88,156,0.896,157,0.964,158,0.88,159,0.964,160,0.913,161,0.832,162,1.412,163,0.896,164,0.964,165,0.896,166,1.596,167,0.964,168,0.896,169,0.964,170,0.896,171,0.896,172,0.964,173,0.896,174,0.964,175,0.896,176,0.964,177,0.88,178,0.929,179,0.896,180,0.968,181,0.964,182,0.88,183,0.964,184,0.88,185,0.896,186,0.964,187,0.896,188,1.519,189,0.832,190,0.964,191,0.896,192,1.328,193,0.964,194,0.896,195,0.964,196,1.522,197,0.964,198,0.88,199,0.913,200,0.88,201,0.964,202,0.88,203,0.947,204,1.19,205,0.88,206,0.896,207,0.896,208,0.964,209,0.88,210,1.655,211,0.864,212,0.964,213,0.88,214,0.913,215,0.88,216,0.88,217,0.964,218,0.896,219,0.964,220,1.328,221,0.896,222,0.964,223,0.896,224,0.964,225,0.964,226,0.896,227,0.964,228,0.864,229,1.025,230,0.88,231,0.896,232,0.964,233,0.896,234,0.964,235,1.19,236,1.328,237,1.328,238,0.88,239,0.929,240,0.817,241,0.88,242,0.88,243,0.947,244,0.913,245,0.964,246,0.88,247,0.964,248,0.864,249,0.929,250,0.964,251,0.005,252,0.005,305,1.195,372,1.514,592,1.972,593,1.68,594,1.925,595,1.972,698,3.65,765,2.472,835,5.877,848,4.478,1069,3.289,1578,4.289,1882,7.481,2478,4.064,2479,7.204,2480,6.298,2481,6.404,2482,4.572,2483,4.572,2484,6.298,2485,4.572,2486,4.572,2487,4.572,2488,4.572,2489,4.572,2490,4.572]],["title/classes/PersistentMap.html",[90,0.216,580,3.357]],["body/classes/PersistentMap.html",[3,0.14,4,0.131,9,0.084,25,0.325,26,0.823,32,0.955,37,1.119,44,0.957,46,1.091,47,0.007,48,0.646,49,0.395,50,0.923,52,0.943,53,1.568,60,1.048,61,1.358,85,0.165,86,0.991,90,0.271,91,1.835,93,1.988,106,1.539,150,1.279,251,0.005,252,0.005,275,2.228,281,3.369,305,1.231,343,3.995,580,5.327,581,7.363,768,3.126,960,3.553,1081,3.267,1106,3.899,1353,5.058,1455,6.987,1489,7.478,1494,6.987,1578,3.995,1617,5.296,1907,5.651,2491,7.478,2492,4.784,2493,7.243,2494,7.613,2495,7.613,2496,5.865,2497,6.518,2498,7.425,2499,5.865,2500,6.601,2501,5.865,2502,5.865,2503,6.601,2504,5.865,2505,5.214,2506,5.214,2507,7.613,2508,5.214,2509,6.601,2510,5.214,2511,5.214,2512,5.214,2513,5.214,2514,5.214,2515,5.214,2516,5.214,2517,3.995,2518,5.214]],["title/interfaces/PersistentMapOptions.html",[86,0.791,2497,3.561]],["body/interfaces/PersistentMapOptions.html",[3,0.156,4,0.146,9,0.094,25,0.362,26,0.881,37,0.986,47,0.007,49,0.302,53,1.259,61,1.221,85,0.177,86,1.106,90,0.302,91,1.616,93,2.128,106,1.617,251,0.006,252,0.006,253,2.167,275,1.963,305,1.419,580,4.695,581,7.781,768,2.755,960,3.131,1106,3.131,1455,6.483,1489,6.982,1494,6.483,1578,4.457,1617,5.563,1907,6.048,2491,5.338,2492,5.338,2493,5.817,2494,5.817,2495,5.817,2497,6.514,2500,5.817,2503,5.817,2505,5.817,2506,5.817,2507,7.913,2508,5.817,2509,7.064,2510,5.817,2511,5.817,2512,5.817,2513,5.817,2514,5.817,2515,5.817,2516,5.817,2517,4.457,2518,5.817]],["title/interfaces/Project.html",[86,0.791,143,0.705]],["body/interfaces/Project.html",[3,0.16,4,0.149,9,0.096,25,0.37,26,0.893,47,0.007,48,0.753,49,0.414,50,0.912,71,0.396,85,0.149,86,1.13,88,1.663,109,4.34,143,1.302,161,1.466,180,1.238,199,1.608,251,0.006,252,0.006,253,2.215,305,1.546,586,4.996,588,4.166,660,5.778,744,2.851,829,2.885,2519,5.946,2520,8.968,2521,8.968,2522,8.053,2523,8.968]],["title/interfaces/ProjectMember.html",[86,0.791,586,2.606]],["body/interfaces/ProjectMember.html",[3,0.171,4,0.159,9,0.103,25,0.396,26,0.929,47,0.007,48,0.567,49,0.423,64,2.747,85,0.159,86,1.209,88,1.764,251,0.006,252,0.006,253,2.37,305,1.55,499,5.018,511,4.284,512,3.857,586,4.67,647,3.52,744,2.189,1989,4.652,2376,6.245,2524,6.362,2525,6.362]],["title/injectables/ProjectService.html",[319,1.648,547,2.303]],["body/injectables/ProjectService.html",[3,0.111,4,0.104,9,0.067,18,1.228,25,0.258,27,1.575,32,0.82,37,0.702,44,0.919,46,1.133,47,0.007,48,0.687,49,0.407,50,0.959,52,1.058,62,1.37,68,2.615,71,0.501,73,0.389,77,1.571,78,2.596,83,1.248,85,0.104,87,2.061,88,1.786,89,3.4,90,0.215,106,1.637,142,1.12,143,1.471,150,1.348,180,1.301,199,1.453,251,0.005,252,0.005,255,1.859,272,3.332,305,0.773,311,3.323,319,2.247,320,4.289,321,2.361,323,2.071,325,4.289,330,5.151,346,6.893,347,6.893,370,2.361,371,2.23,372,1.543,491,2.79,499,3.82,509,3.344,510,3.174,514,3.14,547,3.14,649,4.857,744,2.394,768,1.962,1008,3.555,1012,3.55,1154,3.974,1315,4.578,1368,6.384,1380,4.148,1544,5.331,2526,4.143,2527,6.381,2528,4.66,2529,6.381,2530,4.66,2531,6.381,2532,6.381,2533,4.66,2534,5.205,2535,4.66,2536,4.578,2537,5.672,2538,4.66,2539,5.672,2540,4.66,2541,6.381,2542,4.66,2543,4.143,2544,4.66,2545,4.66,2546,4.66,2547,4.66,2548,4.66,2549,4.66,2550,4.143,2551,4.66,2552,4.66,2553,4.66]],["title/components/ProjectsListPage.html",[0,0.159,198,0.9]],["body/components/ProjectsListPage.html",[0,0.219,1,0.722,2,1.073,3,0.09,4,0.084,5,0.791,6,0.806,7,0.791,8,0.791,9,0.054,15,0.671,16,1.759,17,1.756,18,0.722,19,1.113,21,1.073,23,1.073,25,0.208,26,0.607,27,1.308,32,0.704,37,0.825,44,0.885,46,0.951,47,0.007,48,0.685,49,0.376,50,0.805,52,0.748,53,1.244,60,0.671,61,0.577,62,1.175,68,2.181,71,0.504,73,0.313,77,1.464,81,0.622,83,1.004,85,0.084,87,3.34,88,1.053,90,0.173,91,1.697,93,1.004,110,1.126,115,0.791,116,1.154,117,1.267,118,0.658,119,1.471,120,0.791,121,1.363,122,0.709,123,0.763,124,0.735,125,0.791,126,0.722,127,0.791,128,0.735,129,0.763,130,0.791,131,0.735,132,0.791,133,0.735,134,0.791,135,0.722,136,0.763,137,0.791,138,0.735,139,0.791,140,0.763,141,0.722,142,1.134,143,1.411,144,1.154,145,0.722,146,1.154,147,0.709,148,1.824,149,0.722,150,1.113,151,0.791,152,0.722,153,1.518,154,0.722,155,0.722,156,0.735,157,0.791,158,0.722,159,0.791,160,0.749,161,0.683,162,1.267,163,0.735,164,0.791,165,0.735,166,1.073,167,0.791,168,0.735,169,0.791,170,0.735,171,0.735,172,0.791,173,0.735,174,0.791,175,0.735,176,0.791,177,0.722,178,0.763,179,0.735,180,1.092,181,0.791,182,0.722,183,0.791,184,0.722,185,0.735,186,0.791,187,0.735,188,1.363,189,0.683,190,0.791,191,0.735,192,1.154,193,0.791,194,0.735,195,0.791,196,0.735,197,0.791,198,1.367,199,1.75,200,0.722,201,0.791,202,0.722,203,0.777,204,1.034,205,0.722,206,0.735,207,0.735,208,0.791,209,0.722,210,1.536,211,0.709,212,0.791,213,0.722,214,0.749,215,0.722,216,0.722,217,0.791,218,0.735,219,0.791,220,1.154,221,0.735,222,0.791,223,0.735,224,0.791,225,0.791,226,0.735,227,0.791,228,0.709,229,0.891,230,0.722,231,0.735,232,0.791,233,0.735,234,0.791,235,1.034,236,1.154,237,1.154,238,0.722,239,0.763,240,0.671,241,0.722,242,0.722,243,0.777,244,0.749,245,0.791,246,0.722,247,0.791,248,0.709,249,0.763,250,0.791,251,0.004,252,0.004,279,1.294,386,3.428,428,1.126,533,5.126,542,2.439,543,3.774,546,3.694,547,4.008,592,1.618,593,1.379,594,1.579,595,1.618,606,2.09,682,0.916,689,1.959,745,1.409,768,1.579,983,2.95,1012,2.483,1151,3.897,1174,2.555,1175,2.336,1176,4.2,1177,2.855,1178,3.06,1189,2.439,1203,4.465,1243,6.478,1360,4.166,1408,3.276,2414,4.865,2429,4.865,2432,4.865,2461,4.865,2462,3.335,2463,3.335,2543,3.335,2554,7.566,2555,2.855,2556,5.271,2557,4.465,2558,5.474,2559,5.474,2560,3.752,2561,3.752,2562,5.474,2563,3.335,2564,3.335,2565,3.752,2566,3.752,2567,3.06,2568,3.335,2569,3.752,2570,3.752,2571,3.752,2572,3.06,2573,3.06,2574,4.865,2575,4.865]],["title/classes/Random.html",[90,0.216,2576,3.561]],["body/classes/Random.html",[3,0.141,4,0.132,9,0.085,25,0.328,26,0.828,27,1.357,32,0.96,37,0.893,44,0.94,46,0.793,47,0.007,48,0.469,49,0.397,50,0.927,52,0.865,60,1.463,61,1.258,62,1.272,85,0.132,88,1.838,90,0.378,91,1.907,106,1.119,251,0.005,252,0.005,255,1.344,311,2.325,360,3.902,664,5.097,690,2.285,720,3.001,1081,3.299,2576,7.191,2577,5.265,2578,8.185,2579,8.185,2580,8.185,2581,7.472,2582,7.472,2583,8.595,2584,8.262,2585,8.185,2586,5.923,2587,8.185,2588,5.923,2589,7.472,2590,5.923,2591,5.923,2592,8.595,2593,8.595,2594,8.862,2595,5.923,2596,5.923,2597,5.923,2598,5.923,2599,5.923,2600,7.472,2601,6.642,2602,5.923,2603,5.923]],["title/components/RegisterPage.html",[0,0.159,200,0.9]],["body/components/RegisterPage.html",[0,0.185,1,0.545,2,0.868,3,0.068,4,0.063,5,0.598,6,0.609,7,0.598,8,0.598,9,0.041,15,0.507,16,1.735,17,1.733,18,0.545,19,0.9,21,0.868,23,0.868,25,0.157,26,0.491,27,1.305,29,2.829,32,0.569,37,0.427,44,0.853,46,0.593,47,0.007,48,0.607,49,0.309,50,0.867,52,0.713,53,1.185,60,0.974,61,0.837,62,1.872,63,2.351,64,2.365,65,3.469,66,3.819,71,0.466,73,0.237,74,0.92,77,0.777,81,0.47,83,0.759,85,0.063,90,0.131,91,1.252,103,1.395,104,1.395,106,0.837,110,0.85,111,0.978,113,2.573,114,2.407,115,0.598,116,0.934,117,1.068,118,0.497,119,1.63,120,0.598,121,1.149,122,0.535,123,0.576,124,0.556,125,0.598,126,0.545,127,0.598,128,0.556,129,0.576,130,0.598,131,0.556,132,0.598,133,0.556,134,0.598,135,0.545,136,0.576,137,0.598,138,0.556,139,0.598,140,0.576,141,0.545,142,0.956,143,0.667,144,0.934,145,0.545,146,0.934,147,0.535,148,1.697,149,0.545,150,0.488,151,0.598,152,0.545,153,1.049,154,0.545,155,0.545,156,0.556,157,0.598,158,0.545,159,0.598,160,0.566,161,0.516,162,1.068,163,0.556,164,0.598,165,0.556,166,1.068,167,0.598,168,0.556,169,0.598,170,0.556,171,0.556,172,0.598,173,0.556,174,0.598,175,0.556,176,0.598,177,0.545,178,0.576,179,0.556,180,0.68,181,0.598,182,0.545,183,0.598,184,0.545,185,1.388,186,0.598,187,0.556,188,1.149,189,0.516,190,0.598,191,0.556,192,0.934,193,0.598,194,0.556,195,0.598,196,0.556,197,0.598,198,0.545,199,0.566,200,1.185,201,0.598,202,0.545,203,0.587,204,1.164,205,0.545,206,0.556,207,0.556,208,0.598,209,0.545,210,1.359,211,0.535,212,0.598,213,0.545,214,0.566,215,0.545,216,0.545,217,0.598,218,0.556,219,0.598,220,0.934,221,0.556,222,0.598,223,0.556,224,0.598,225,0.598,226,0.556,227,0.598,228,0.535,229,0.721,230,0.545,231,0.556,232,0.598,233,0.556,234,0.598,235,0.837,236,0.934,237,0.934,238,0.545,239,0.576,240,0.507,241,0.545,242,0.545,243,1.128,244,0.566,245,0.598,246,0.545,247,0.598,248,0.535,249,0.576,250,0.598,251,0.003,252,0.003,260,2.312,275,0.85,284,1.064,290,0.884,301,1.765,305,0.904,307,1.193,372,0.939,386,3.115,394,2.443,395,2.368,397,1.48,428,0.85,478,2.878,480,6.506,481,2.846,483,3.817,511,2.651,512,2.937,579,3.036,647,1.7,682,1.729,683,2.369,684,3.021,685,1.958,686,1.864,688,1.734,690,1.667,703,1.32,706,1.32,709,1.765,710,1.395,714,2.263,715,2.002,716,2.313,717,2.169,718,1.921,719,2.312,720,2.243,721,1.7,724,1.958,725,1.91,726,2.554,749,1.436,750,2.009,801,1.193,803,4,809,1.356,825,2.608,838,2.758,865,1.697,899,1.93,903,5.086,904,4.844,905,3.936,906,3.936,907,3.936,908,3.936,910,2.386,913,2.519,915,2.157,916,2.519,917,2.519,918,2.033,923,2.157,924,2.312,927,1.765,929,3.37,930,1.842,931,1.635,932,1.765,933,1.48,934,3.817,935,1.93,936,2.878,937,1.93,938,1.635,939,5.482,940,2.651,941,1.842,942,1.635,943,1.765,944,1.842,945,1.842,946,2.033,947,4.196,948,1.93,949,4.552,950,4.196,951,1.93,952,1.93,953,1.93,954,1.93,955,1.93,956,1.93,957,1.93,958,1.93,979,1.579,1000,1.019,1044,3.589,1112,3.612,1132,3.612,1173,1.765,1283,3.37,1284,2.179,1408,1.697,1517,2.312,1518,3.177,1521,2.312,1649,3.612,1875,3.143,2155,3.936,2158,3.936,2171,2.519,2175,2.758,2176,2.519,2178,3.936,2180,6.296,2185,3.936,2186,3.936,2187,3.936,2604,2.312,2605,5.449,2606,4.428,2607,6.807,2608,5.449,2609,4.844,2610,6.16,2611,6.16,2612,2.834,2613,2.834,2614,2.834,2615,2.834,2616,2.834,2617,2.834,2618,4.445,2619,6.16,2620,2.834,2621,2.834,2622,2.834,2623,5.449,2624,2.834,2625,2.834,2626,2.519,2627,2.519,2628,4.428,2629,5.449,2630,2.834,2631,2.834,2632,2.834,2633,4.428,2634,2.834,2635,4.428,2636,2.834,2637,2.834,2638,2.834,2639,2.834,2640,6.16,2641,2.834,2642,2.834,2643,4.428,2644,3.612,2645,4.428,2646,4.428,2647,4.428]],["title/interfaces/RequestOptions.html",[86,0.791,337,3.561]],["body/interfaces/RequestOptions.html",[3,0.117,4,0.109,9,0.107,18,1.273,25,0.272,26,0.733,47,0.007,49,0.432,50,1.075,60,1.182,71,0.291,85,0.109,86,1.411,88,0.945,106,1.625,150,1.139,251,0.005,252,0.005,253,1.627,255,1.114,272,4.177,275,2.636,290,2.063,298,3.802,305,1.457,308,3.514,311,1.929,325,3.351,327,5.879,328,5.879,330,5.01,332,5.879,336,4.311,337,5.034,340,5.879,342,7.643,345,5.879,360,3.454,365,3.739,375,6.525,376,8.046,377,7.643,435,4.119,496,5.034,499,4.788,514,4.455,713,3.346,829,2.853,877,5.395,1045,5.034,1071,5.034,1373,4.745,1548,6.525,1649,5.395,1790,7.288,2008,4.299,2371,5.739,2517,4.505,2648,4.367,2649,4.367,2650,8.934,2651,7.014,2652,8.599,2653,7.998,2654,6.614,2655,4.745,2656,7.998,2657,7.998,2658,5.879,2659,7.998,2660,6.614,2661,6.614,2662,6.614,2663,6.614,2664,7.477,2665,8.787,2666,6.614,2667,5.395,2668,6.614,2669,6.614,2670,6.614,2671,6.614,2672,6.614,2673,7.998,2674,4.913]],["title/components/RestoreAccountPage.html",[0,0.159,202,0.9]],["body/components/RestoreAccountPage.html",[0,0.215,1,0.699,2,1.047,3,0.087,4,0.081,5,0.765,6,0.78,7,0.765,8,0.765,9,0.052,15,0.649,16,1.757,17,1.753,18,0.699,19,1.086,21,1.047,23,1.047,25,0.201,29,2.689,32,0.687,37,0.547,44,0.672,46,0.486,47,0.007,48,0.591,49,0.168,50,0.411,52,0.618,53,1.028,71,0.375,73,0.303,77,0.937,81,0.602,85,0.081,90,0.168,91,0.738,110,1.089,111,1.252,113,2.657,114,2.53,115,0.765,116,1.127,117,1.243,118,0.637,119,1.669,120,0.765,121,1.337,122,0.686,123,0.738,124,0.711,125,0.765,126,0.699,127,0.765,128,0.711,129,0.738,130,0.765,131,0.711,132,0.765,133,0.711,134,0.765,135,0.699,136,0.738,137,0.765,138,0.711,139,0.765,140,0.738,141,0.699,142,1.112,143,0.805,144,1.127,145,0.699,146,1.127,147,0.686,148,1.81,149,0.699,150,0.625,151,0.765,152,0.699,153,1.22,154,0.699,155,0.699,156,0.711,157,0.765,158,0.699,159,0.765,160,0.725,161,0.661,162,1.243,163,0.711,164,0.765,165,0.711,166,1.047,167,0.765,168,0.711,169,0.765,170,0.711,171,0.711,172,0.765,173,0.711,174,0.765,175,0.711,176,0.765,177,0.699,178,0.738,179,0.711,180,0.821,181,0.765,182,0.699,183,0.765,184,0.699,185,1.528,186,0.765,187,0.711,188,1.337,189,0.661,190,0.765,191,0.711,192,1.127,193,0.765,194,0.711,195,0.765,196,0.711,197,0.765,198,0.699,199,0.725,200,0.699,201,0.765,202,1.346,203,1.906,204,1.622,205,0.699,206,0.711,207,0.711,208,0.765,209,0.699,210,1.515,211,0.686,212,0.765,213,0.699,214,0.725,215,0.699,216,0.699,217,0.765,218,0.711,219,0.765,220,1.127,221,0.711,222,0.765,223,0.711,224,0.765,225,0.765,226,0.711,227,0.765,228,0.686,229,0.869,230,0.699,231,0.711,232,0.765,233,0.711,234,0.765,235,1.009,236,1.127,237,1.127,238,0.699,239,0.738,240,1.133,241,0.699,242,0.699,243,0.752,244,0.725,245,0.765,246,0.699,247,0.765,248,0.686,249,0.738,250,0.765,251,0.004,252,0.004,372,1.202,386,3.393,394,2.689,395,2.251,397,1.895,410,2.488,428,1.089,476,5.322,479,5.322,483,4.201,682,1.819,683,2.484,684,3.24,685,2.363,686,2.249,688,2.371,690,1.939,695,2.305,709,2.261,710,1.786,712,2.604,714,2.33,715,2.33,716,2.626,717,2.463,718,2.181,719,1.895,720,1.839,721,2.434,724,1.605,725,1.566,726,3.082,746,1.786,801,1.528,803,4.461,809,1.737,825,1.737,827,2.359,865,2.173,899,2.472,930,2.359,931,2.094,932,2.261,933,1.895,934,4.201,935,2.472,936,3.473,937,2.472,938,2.094,939,5.846,940,3.198,941,2.359,942,2.094,943,2.261,944,2.359,945,2.359,947,4.763,948,2.472,949,5.076,950,4.763,951,2.472,952,2.472,953,2.472,954,2.472,955,2.472,956,2.472,957,2.472,958,2.472,1270,2.763,1271,5.172,1272,4.358,1273,3.227,1276,3.227,1279,3.639,1282,3.639,2149,2.763,2675,6.216,2676,3.63,2677,2.961,2678,3.63,2679,5.343,2680,4.749,2681,4.749,2682,4.358,2683,3.227]],["title/injectables/RouterExtensionsService.html",[43,3.041,319,1.648]],["body/injectables/RouterExtensionsService.html",[3,0.165,4,0.154,9,0.099,25,0.383,27,1.148,37,1.043,43,5.342,44,0.871,46,0.927,47,0.007,48,0.548,49,0.319,50,0.784,71,0.486,73,0.578,85,0.154,90,0.319,106,1.307,251,0.006,252,0.006,319,2.894,321,3.506,370,3.506,371,3.312,372,2.291,386,3.954,428,2.076,1069,4.292,1790,5.645,1959,6.255,2146,6.151,2684,7.793,2685,6.151,2686,8.767,2687,6.92,2688,6.92,2689,6.92,2690,6.92,2691,6.92,2692,8.218,2693,6.92]],["title/components/SchedulePage.html",[0,0.159,205,0.9]],["body/components/SchedulePage.html",[0,0.204,1,0.641,2,0.983,3,0.08,4,0.074,5,0.703,6,0.716,7,0.703,8,0.703,9,0.048,13,1.368,14,2.168,15,0.596,16,1.75,17,1.746,18,0.641,19,1.019,21,0.983,23,0.983,25,0.185,26,0.556,27,1.488,32,0.645,36,2.168,37,0.502,44,0.855,46,0.446,47,0.007,48,0.57,49,0.332,50,0.378,52,0.386,53,0.641,60,1.077,61,0.926,68,2.076,71,0.488,73,0.278,77,0.88,81,0.553,83,0.892,85,0.074,88,1.16,90,0.154,93,1.342,110,1.808,111,1.73,112,2.54,113,2.328,114,2.524,115,0.703,116,1.057,117,1.181,118,0.585,119,1.871,120,0.703,121,1.271,122,0.63,123,0.678,124,0.653,125,0.703,126,0.641,127,0.703,128,0.653,129,0.678,130,0.703,131,0.653,132,0.703,133,0.653,134,0.703,135,0.641,136,0.678,137,0.703,138,0.653,139,0.703,140,0.678,141,0.641,142,1.057,143,1.139,144,1.057,145,0.641,146,1.057,147,0.63,148,1.773,149,0.641,150,0.574,151,0.703,152,0.641,153,1.16,154,0.641,155,0.641,156,0.653,157,0.703,158,0.641,159,0.703,160,0.665,161,0.607,162,1.181,163,0.653,164,0.703,165,0.653,166,0.983,167,0.703,168,0.653,169,0.703,170,0.653,171,1.409,172,0.703,173,0.653,174,0.703,175,0.653,176,0.703,177,0.641,178,0.678,179,0.653,180,0.771,181,0.703,182,0.641,183,0.703,184,0.641,185,0.653,186,0.703,187,0.653,188,1.271,189,0.607,190,0.703,191,0.653,192,1.057,193,0.703,194,0.653,195,0.703,196,0.653,197,0.703,198,0.641,199,0.665,200,0.641,201,0.703,202,0.641,203,0.69,204,0.947,205,1.29,206,1.581,207,0.653,208,0.703,209,0.641,210,1.462,211,0.63,212,0.703,213,0.641,214,0.665,215,0.641,216,0.641,217,0.703,218,0.653,219,0.703,220,1.057,221,0.653,222,0.703,223,0.653,224,0.703,225,0.703,226,0.653,227,0.703,228,0.63,229,0.981,230,0.641,231,0.653,232,0.703,233,0.653,234,0.703,235,0.947,236,1.057,237,1.057,238,0.641,239,0.678,240,1.077,241,0.641,242,0.641,243,0.69,244,0.665,245,0.703,246,0.641,247,0.703,248,0.63,249,0.678,250,0.703,251,0.004,252,0.004,257,2.014,279,1.15,308,2.823,394,2.313,395,2.609,396,3.18,428,1,514,1.64,543,3.441,544,3.735,547,3.539,553,5.47,589,1.796,591,2.537,593,2.215,680,3.816,682,1.968,683,2.512,684,3.096,685,1.474,686,1.403,687,2.391,688,1.06,689,1.74,690,2.199,693,2.167,694,1.438,695,1.438,699,1.403,713,4.106,714,1.843,715,1.843,716,2.518,717,1.766,718,1.564,724,3.341,726,2.892,727,3.626,728,3.466,739,2.366,743,3.123,745,1.252,746,2.468,755,3.608,756,2.892,757,6.138,781,2.27,782,3.259,800,1.857,809,1.595,814,3.735,815,3.735,816,2.963,817,2.963,843,3.259,865,1.995,910,3.248,932,2.076,1069,2.618,1979,3.918,1989,2.167,2029,2.537,2297,2.963,2327,2.963,2476,2.963,2694,2.963,2695,6.028,2696,5.014,2697,6.705,2698,6.705,2699,6.705,2700,3.333,2701,3.333,2702,3.333,2703,5.014,2704,3.333,2705,5.014,2706,3.333,2707,3.333,2708,3.333,2709,3.333,2710,3.333,2711,3.333,2712,2.963,2713,3.333,2714,5.014,2715,3.333,2716,3.333,2717,3.333,2718,3.816,2719,3.333,2720,5.96,2721,3.333,2722,5.358,2723,6.028,2724,2.963,2725,3.333,2726,3.333,2727,3.333,2728,2.963,2729,3.333,2730,3.333,2731,3.333]],["title/components/SelectComponent.html",[0,0.159,207,0.917]],["body/components/SelectComponent.html",[0,0.197,1,0.605,2,0.94,3,0.075,4,0.07,5,0.663,6,0.675,7,0.663,8,0.663,9,0.045,13,1.309,14,2.092,15,0.562,16,1.745,17,1.74,18,0.605,19,0.975,21,0.94,23,0.94,25,0.174,26,0.532,27,0.795,29,2.006,32,0.617,36,2.341,44,0.974,46,0.871,47,0.007,48,0.628,49,0.399,50,0.938,52,0.958,53,1.643,57,1.504,60,1.416,61,1.365,62,1.701,64,1.207,68,1.679,71,0.385,73,0.262,77,0.842,81,0.521,83,0.842,85,0.07,90,0.145,91,1.712,93,1.284,106,0.906,115,0.663,116,1.011,117,1.374,118,0.842,119,1.347,120,0.663,121,1.226,122,0.594,123,0.639,124,0.616,125,0.663,126,0.605,127,0.663,128,0.616,129,0.639,130,0.663,131,0.616,132,0.663,133,0.616,134,0.663,135,0.605,136,0.639,137,0.663,138,0.616,139,0.663,140,1.806,141,0.605,142,1.02,143,0.723,144,1.011,145,0.605,146,1.011,147,0.594,148,1.746,149,0.605,150,0.541,151,0.663,152,0.605,153,1.119,154,0.605,155,0.605,156,0.616,157,0.663,158,0.605,159,0.663,160,0.628,161,0.572,162,1.14,163,0.616,164,0.663,165,0.616,166,1.276,167,0.663,168,0.616,169,0.663,170,0.616,171,0.616,172,0.663,173,0.616,174,0.663,175,0.616,176,0.663,177,0.605,178,0.639,179,0.616,180,0.737,181,0.663,182,0.605,183,0.663,184,0.605,185,0.616,186,0.663,187,0.616,188,1.226,189,0.572,190,0.663,191,0.616,192,1.011,193,0.663,194,0.616,195,0.663,196,0.94,197,0.663,198,0.605,199,0.628,200,0.605,201,0.663,202,0.605,203,0.651,204,0.906,205,0.605,206,0.616,207,1.276,208,0.663,209,0.605,210,1.425,211,0.594,212,0.663,213,0.605,214,0.628,215,0.605,216,0.605,217,0.663,218,0.616,219,0.663,220,1.011,221,0.616,222,0.663,223,0.616,224,0.663,225,0.663,226,0.616,227,0.663,228,0.594,229,0.781,230,0.605,231,0.616,232,0.663,233,0.616,234,0.663,235,0.906,236,1.478,237,1.011,238,0.605,239,0.639,240,0.562,241,0.605,242,0.605,243,0.651,244,0.628,245,0.663,246,0.605,247,0.663,248,0.594,249,0.639,250,0.663,251,0.004,252,0.004,255,1.476,274,1.694,275,2.102,281,2.952,284,2.444,290,1.496,298,2.121,305,0.795,323,1.02,325,2.947,336,3.507,358,3.134,362,1.694,540,3.134,647,1.841,651,2.361,698,1.593,748,2.672,751,1.547,765,1.883,768,2.74,829,1.356,853,2.043,873,1.504,960,2.295,964,2.871,965,2.871,966,3.754,967,4.195,968,3.482,969,3.482,970,2.871,971,2.871,972,2.871,973,2.871,974,2.871,976,5.318,977,1.958,978,1.882,979,2.672,980,1.882,981,1.882,982,1.813,983,1.694,984,1.694,985,1.958,986,4.462,987,2.672,988,1.751,989,1.958,990,1.813,991,1.751,992,1.958,993,4.195,994,1.882,995,1.751,996,1.813,997,1.813,998,1.882,999,1.882,1000,1.131,1001,2.871,1002,1.882,1003,1.958,1004,2.871,1005,2.295,1006,4.421,1007,1.882,1008,3.24,1009,1.813,1010,3.355,1011,2.871,1012,2.176,1013,3.896,1014,1.751,1015,1.882,1016,2.871,1017,1.882,1018,1.958,1019,1.882,1020,1.882,1021,1.958,1022,2.871,1023,1.882,1024,1.882,1025,2.043,1026,1.958,1027,1.958,1028,1.958,1029,1.958,1030,1.958,1031,1.882,1032,4.279,1033,1.958,1034,2.871,1035,2.564,1036,2.393,1037,1.958,1038,2.043,1039,1.958,1069,2.505,1353,3.267,1578,3.962,1634,4.427,1636,4.953,1910,3.913,1998,5.334,2481,2.794,2732,2.794,2733,5.816,2734,4.797,2735,5.816,2736,5.816,2737,8.116,2738,6.508,2739,3.144,2740,3.144,2741,3.144,2742,3.144,2743,3.144,2744,3.144,2745,5.816,2746,4.797,2747,3.144,2748,3.144,2749,3.144,2750,3.144,2751,3.144,2752,3.144,2753,3.144,2754,3.144,2755,3.144,2756,3.144,2757,3.144,2758,3.144,2759,3.144,2760,3.144,2761,3.144,2762,3.144,2763,3.144,2764,3.144,2765,4.797,2766,3.144,2767,4.797,2768,3.144,2769,3.144,2770,3.144,2771,3.144,2772,3.144,2773,3.144,2774,3.144,2775,4.797,2776,4.797]],["title/injectables/SessionsService.html",[319,1.648,2777,3.561]],["body/injectables/SessionsService.html",[3,0.16,4,0.149,9,0.096,25,0.37,27,1.546,32,1.035,37,1.008,44,0.916,46,1.078,47,0.007,48,0.638,49,0.372,50,0.912,52,0.932,68,2.495,71,0.531,73,0.558,83,1.791,85,0.149,88,1.663,90,0.309,106,1.521,150,1.387,180,1.378,251,0.006,252,0.006,319,2.836,320,4.722,321,3.389,370,3.389,371,3.201,372,2.215,491,4.004,510,4.556,744,2.046,2777,6.129,2778,5.946,2779,6.689,2780,7.159,2781,6.689,2782,6.689,2783,4.799,2784,6.689,2785,6.689,2786,6.689]],["title/components/SettingsAccountPage.html",[0,0.159,209,0.9]],["body/components/SettingsAccountPage.html",[0,0.218,1,0.715,2,1.065,3,0.089,4,0.083,5,0.783,6,0.798,7,0.783,8,0.783,9,0.053,13,1.482,14,2.311,15,0.664,16,1.758,17,1.755,18,0.715,19,1.105,21,1.065,23,1.065,25,0.206,26,0.602,27,1.065,29,2.216,32,0.698,36,2.543,37,0.56,44,0.833,46,0.497,47,0.007,48,0.643,49,0.171,50,0.421,52,0.818,53,1.36,60,0.664,61,0.571,62,1.853,63,2.771,64,2.086,65,3.41,66,3.755,71,0.445,73,0.31,74,1.205,77,0.953,81,0.616,85,0.083,90,0.171,91,0.755,103,1.828,104,1.828,105,2.069,106,0.702,113,1.569,114,1.662,115,0.783,116,1.146,117,1.259,118,0.652,119,1.464,120,0.783,121,1.355,122,0.702,123,0.755,124,0.728,125,0.783,126,0.715,127,0.783,128,0.728,129,0.755,130,0.783,131,0.728,132,0.783,133,0.728,134,0.783,135,0.715,136,1.65,137,0.783,138,0.728,139,0.783,140,0.755,141,0.715,142,1.127,143,0.819,144,1.146,145,0.715,146,1.146,147,0.702,148,1.82,149,0.715,150,1.398,151,0.783,152,0.715,153,1.236,154,0.715,155,0.715,156,0.728,157,0.783,158,0.715,159,0.783,160,0.741,161,0.676,162,1.259,163,0.728,164,0.783,165,0.728,166,1.065,167,0.783,168,0.728,169,0.783,170,0.728,171,0.728,172,0.783,173,0.728,174,0.783,175,0.728,176,0.783,177,0.715,178,0.755,179,0.728,180,0.835,181,0.783,182,0.715,183,0.783,184,0.715,185,0.728,186,0.783,187,0.728,188,1.355,189,0.676,190,0.783,191,0.728,192,1.146,193,0.783,194,0.728,195,0.783,196,0.728,197,0.783,198,0.715,199,1.283,200,0.715,201,0.783,202,0.715,203,0.769,204,1.744,205,0.715,206,0.728,207,0.728,208,0.783,209,1.36,210,1.798,211,0.702,212,0.783,213,0.715,214,0.741,215,0.715,216,0.715,217,0.783,218,0.728,219,0.783,220,1.146,221,0.728,222,0.783,223,0.728,224,0.783,225,0.783,226,0.728,227,0.783,228,0.702,229,0.884,230,0.715,231,0.728,232,0.783,233,0.728,234,0.783,235,1.027,236,1.146,237,1.146,238,0.715,239,0.755,240,1.148,241,0.715,242,0.715,243,0.769,244,0.741,245,0.783,246,0.715,247,0.783,248,0.702,249,0.755,250,0.783,251,0.004,252,0.004,279,1.281,372,1.23,481,4.104,483,4.375,489,5.767,511,3.252,512,2.928,682,1.326,683,1.599,688,1.182,689,1.939,717,1.308,718,1.159,721,1.426,745,1.395,825,1.777,827,2.414,841,5.381,914,2.665,1012,2.465,1270,2.827,1271,5.241,1272,4.432,1275,3.301,1279,3.701,1282,3.701,1284,1.828,1672,5.529,1758,2.827,1761,4.83,2045,4.83,2149,2.827,2156,5.353,2165,3.03,2517,3.701,2677,4.432,2680,5.711,2681,6.284,2682,4.432,2787,6.178,2788,7.07,2789,3.714,2790,3.714,2791,3.714,2792,3.714,2793,3.714,2794,3.714,2795,3.714,2796,3.714,2797,3.714,2798,3.714,2799,3.714,2800,3.714,2801,3.714,2802,3.714,2803,6.425,2804,3.714,2805,3.714,2806,3.714,2807,3.714,2808,3.714,2809,3.714,2810,3.714,2811,3.714,2812,5.433,2813,3.714,2814,3.714,2815,3.714,2816,3.714,2817,3.714,2818,3.714,2819,3.714,2820,3.714,2821,3.714,2822,3.714,2823,4.83,2824,4.83,2825,4.83,2826,4.83,2827,5.433,2828,5.433,2829,5.433,2830,4.83,2831,4.432,2832,5.433,2833,5.433,2834,5.433,2835,3.714]],["title/components/SettingsIntegrationsPage.html",[0,0.159,211,0.884]],["body/components/SettingsIntegrationsPage.html",[0,0.229,1,0.782,2,1.137,3,0.097,4,0.091,5,0.857,6,0.873,7,0.857,8,0.857,9,0.058,13,1.582,14,2.432,15,0.727,16,1.765,17,1.762,18,0.782,19,1.179,21,1.137,23,1.137,25,0.225,26,0.643,27,1.493,32,0.746,36,2.652,37,0.613,44,0.86,46,0.905,47,0.007,48,0.661,49,0.34,50,0.766,52,0.853,53,1.5,68,2.34,71,0.436,73,0.339,77,1.018,81,0.674,83,1.089,85,0.091,86,0.687,90,0.188,106,1.278,111,1.402,115,0.857,116,1.223,117,1.325,118,0.713,119,1.527,120,0.857,121,1.426,122,0.768,123,0.827,124,0.797,125,0.857,126,0.782,127,0.857,128,0.797,129,0.827,130,0.857,131,0.797,132,0.857,133,0.797,134,0.857,135,0.782,136,0.827,137,0.857,138,0.797,139,0.857,140,0.827,141,0.782,142,1.186,143,0.874,144,1.223,145,0.782,146,1.223,147,0.768,148,1.857,149,0.782,150,0.7,151,0.857,152,0.782,153,1.301,154,0.782,155,0.782,156,0.797,157,0.857,158,0.782,159,0.857,160,0.812,161,0.74,162,1.325,163,0.797,164,0.857,165,0.797,166,1.137,167,0.857,168,0.797,169,0.857,170,0.797,171,0.797,172,0.857,173,0.797,174,0.857,175,0.797,176,0.857,177,0.782,178,0.827,179,0.797,180,1.039,181,0.857,182,0.782,183,0.857,184,0.782,185,0.797,186,0.857,187,0.797,188,1.426,189,0.74,190,0.857,191,0.797,192,1.223,193,0.857,194,0.797,195,0.857,196,0.797,197,0.857,198,0.782,199,0.812,200,0.782,201,0.857,202,0.782,203,0.842,204,1.531,205,0.782,206,0.797,207,0.797,208,0.857,209,0.782,210,1.83,211,1.393,212,0.857,213,0.782,214,0.812,215,0.782,216,0.782,217,0.857,218,0.797,219,0.857,220,1.223,221,0.797,222,0.857,223,0.797,224,0.857,225,0.857,226,0.797,227,0.857,228,0.768,229,0.944,230,0.782,231,0.797,232,0.857,233,0.797,234,0.857,235,1.096,236,1.223,237,1.223,238,0.782,239,0.827,240,0.727,241,0.782,242,0.782,243,0.842,244,0.812,245,0.857,246,0.782,247,0.857,248,0.768,249,0.827,250,0.857,251,0.004,252,0.004,372,1.346,682,0.992,688,1.293,695,1.754,745,1.527,768,1.712,1221,4.368,1248,2.532,1284,2.001,1659,4.92,1671,3.094,1672,5.682,1673,5.986,1674,3.316,1675,5.156,1676,2.532,1677,2.532,1678,2.643,1679,2.643,1680,5.612,1681,5.156,1682,6.011,1683,6.011,1684,3.614,1685,6.554,1686,3.614,1687,3.614,1688,3.316,1689,3.316,1690,3.614,1691,5.156,1692,3.614,1693,3.614,1694,3.094,1695,5.156,1696,3.316,1697,3.316,1698,3.614,1699,3.614,1700,3.614,2074,5.156,2093,3.614,2836,5.8,2837,5.8,2838,4.066,2839,4.066,2840,4.066,2841,4.066]],["title/components/SettingsLocalizationPage.html",[0,0.159,213,0.9]],["body/components/SettingsLocalizationPage.html",[0,0.225,1,0.754,2,1.107,3,0.094,4,0.087,5,0.827,6,0.842,7,0.827,8,0.827,9,0.056,13,1.541,14,2.383,15,0.701,16,1.762,17,1.759,18,0.754,19,1.149,21,1.107,23,1.107,25,0.217,26,0.626,27,1.099,29,2.285,32,0.726,36,2.608,37,0.999,44,0.849,47,0.007,48,0.737,49,0.181,52,0.767,53,1.275,60,1.01,61,0.868,62,1.557,63,2.858,65,2.661,66,2.93,71,0.392,73,0.327,74,1.272,77,0.991,81,0.65,85,0.087,90,0.181,113,1.631,114,1.728,115,0.827,116,1.192,117,1.299,118,0.688,119,1.501,120,0.827,121,1.397,122,0.741,123,0.797,124,0.768,125,0.827,126,0.754,127,0.827,128,0.768,129,0.797,130,0.827,131,0.768,132,0.827,133,0.768,134,0.827,135,0.754,136,0.797,137,0.827,138,0.768,139,0.827,140,0.797,141,0.754,142,1.162,143,0.852,144,1.192,145,0.754,146,1.192,147,0.741,148,1.842,149,0.754,150,0.675,151,0.827,152,0.754,153,1.275,154,0.754,155,0.754,156,0.768,157,0.827,158,0.754,159,0.827,160,0.782,161,0.714,162,1.299,163,0.768,164,0.827,165,0.768,166,1.107,167,0.827,168,0.768,169,0.827,170,0.768,171,0.768,172,0.827,173,0.768,174,0.827,175,0.768,176,0.827,177,0.754,178,0.797,179,0.768,180,0.868,181,0.827,182,0.754,183,0.827,184,0.754,185,0.768,186,0.827,187,0.768,188,1.397,189,0.714,190,0.827,191,0.768,192,1.192,193,0.827,194,0.768,195,0.827,196,0.768,197,0.827,198,0.754,199,0.782,200,0.754,201,0.827,202,0.754,203,0.812,204,1.068,205,0.754,206,0.768,207,0.768,208,0.827,209,0.754,210,1.848,211,0.741,212,0.827,213,1.395,214,1.534,215,0.754,216,0.754,217,0.827,218,0.768,219,0.827,220,1.192,221,0.768,222,0.827,223,0.768,224,0.827,225,0.827,226,0.768,227,0.827,228,0.741,229,0.92,230,0.754,231,0.768,232,0.827,233,0.768,234,0.827,235,1.068,236,1.192,237,1.192,238,0.754,239,0.797,240,1.184,241,0.754,242,0.754,243,0.812,244,0.782,245,0.827,246,0.754,247,0.827,248,0.741,249,0.797,250,0.827,251,0.004,252,0.004,279,1.352,682,1.379,683,1.663,688,1.247,695,1.691,717,1.381,718,1.223,721,1.505,745,1.472,825,1.876,827,2.548,841,5.519,914,2.812,1204,3.673,1672,5.621,2474,6.918,2842,6.281,2843,3.484,2844,6.625,2845,5.65,2846,5.889,2847,7.251,2848,3.92,2849,3.92,2850,3.92,2851,3.92,2852,5.023,2853,3.92,2854,6.445,2855,5.65,2856,6.445,2857,5.023,2858,6.445,2859,5.65,2860,6.445,2861,5.65,2862,5.65,2863,6.445,2864,5.65,2865,5.65,2866,5.023,2867,4.3,2868,3.92,2869,3.92,2870,3.92,2871,5.65]],["title/modules/SettingsModule.html",[398,1.837,2872,3.561]],["body/modules/SettingsModule.html",[3,0.144,4,0.134,9,0.086,47,0.007,71,0.567,73,0.503,74,1.954,85,0.134,90,0.278,173,1.781,179,1.781,209,1.748,211,1.717,213,1.748,215,1.748,216,1.748,251,0.006,252,0.006,400,2.475,401,4.068,407,5.439,408,4.518,409,3.143,410,2.804,412,4.518,413,3.612,415,3.715,461,4.701,462,3.749,463,5.141,470,4.319,1223,5.351,1673,4.319,2069,4.91,2133,4.91,2787,4.581,2842,4.581,2872,7.469,2873,5.351,2874,5.351,2875,5.351,2876,6.519,2877,6.019,2878,6.019,2879,6.019,2880,6.019,2881,6.019,2882,6.019,2883,7.685,2884,5.351,2885,5.351,2886,4.581,2887,5.351,2888,6.019]],["title/components/SettingsPage.html",[0,0.159,215,0.9]],["body/components/SettingsPage.html",[0,0.23,1,0.786,2,1.141,3,0.098,4,0.091,5,0.862,6,0.878,7,0.862,8,0.862,9,0.059,13,1.588,14,2.439,15,0.73,16,1.765,17,1.763,18,0.786,19,1.184,21,1.141,23,1.141,25,0.226,26,0.645,32,0.748,36,2.658,37,1.022,44,0.861,47,0.007,48,0.586,52,0.473,53,0.786,60,1.321,61,1.136,71,0.401,73,0.341,77,1.021,81,0.678,85,0.091,90,0.189,110,2.034,111,1.41,112,2.949,113,2.134,114,1.781,115,0.862,116,1.228,117,1.329,118,0.717,119,1.825,120,0.862,121,1.43,122,0.772,123,0.831,124,0.801,125,0.862,126,0.786,127,0.862,128,0.801,129,0.831,130,0.862,131,0.801,132,0.862,133,0.801,134,0.862,135,0.786,136,0.831,137,0.862,138,0.801,139,0.862,140,0.831,141,0.786,142,1.19,143,0.877,144,1.228,145,0.786,146,1.228,147,0.772,148,1.859,149,0.786,150,0.704,151,0.862,152,0.786,153,1.305,154,0.786,155,0.786,156,0.801,157,0.862,158,0.786,159,0.862,160,0.816,161,0.744,162,1.329,163,0.801,164,0.862,165,0.801,166,1.141,167,0.862,168,0.801,169,0.862,170,0.801,171,0.801,172,0.862,173,0.801,174,0.862,175,0.801,176,0.862,177,0.786,178,0.831,179,0.801,180,0.895,181,0.862,182,0.786,183,0.862,184,0.786,185,0.801,186,0.862,187,0.801,188,1.43,189,0.744,190,0.862,191,0.801,192,1.228,193,0.862,194,0.801,195,0.862,196,0.801,197,0.862,198,0.786,199,0.816,200,0.786,201,0.862,202,0.786,203,0.846,204,1.396,205,0.786,206,0.801,207,0.801,208,0.862,209,0.786,210,1.699,211,0.772,212,0.862,213,0.786,214,1.354,215,1.422,216,0.786,217,0.862,218,0.801,219,1.228,220,1.228,221,0.801,222,0.862,223,0.801,224,0.862,225,0.862,226,0.801,227,0.862,228,0.772,229,0.947,230,0.786,231,0.801,232,0.862,233,0.801,234,0.862,235,1.1,236,1.228,237,1.228,238,0.786,239,0.831,240,1.212,241,0.786,242,0.786,243,0.846,244,0.816,245,0.862,246,0.786,247,0.862,248,0.772,249,0.831,250,0.862,251,0.004,252,0.004,308,1.72,394,2.549,395,2.509,396,2.574,397,2.134,410,1.903,514,2.011,592,1.763,593,1.502,594,1.72,595,1.763,682,1.421,683,1.713,684,2.235,688,1.852,694,1.763,695,1.763,698,2.07,703,1.903,704,2.932,706,1.903,714,1.502,715,1.502,716,2.186,717,1.439,718,2.115,721,1.569,727,3.188,728,3.268,743,3.625,746,2.011,749,2.07,750,1.854,756,3.358,800,2.276,801,2.451,802,2.134,807,3.11,808,2.545,814,2.276,815,2.276,822,2.134,843,2.656,869,3.333,873,1.955,880,2.545,1680,4.431,1986,3.333,2889,3.632,2890,6.781,2891,5.821,2892,8.12,2893,8.12,2894,8.12,2895,7.218,2896,5.821,2897,4.086,2898,4.086,2899,4.086,2900,4.086,2901,4.749,2902,4.086,2903,4.086,2904,4.086,2905,4.086]],["title/modules/SettingsRoutingModule.html",[398,1.837,2876,3.357]],["body/modules/SettingsRoutingModule.html",[0,0.309,3,0.156,4,0.146,9,0.094,47,0.007,71,0.555,73,0.546,85,0.146,90,0.302,93,1.752,180,1.006,204,1.236,209,1.529,211,1.501,213,1.529,214,1.306,215,1.529,216,1.529,251,0.006,252,0.006,398,2.569,400,2.69,413,3.131,415,3.911,426,4.757,427,4.915,428,1.963,435,5.68,441,5.338,444,5.701,454,4.075,470,4.695,482,4.457,1673,4.695,1680,4.98,2787,4.98,2842,4.98,2876,5.701,2883,7.913,2884,5.817,2885,5.817,2886,4.98,2887,5.817,2901,5.338,2906,6.543,2907,6.543]],["title/components/SettingsSessionsPage.html",[0,0.159,216,0.9]],["body/components/SettingsSessionsPage.html",[0,0.214,1,0.692,2,1.04,3,0.086,4,0.08,5,0.758,6,0.772,7,0.758,8,0.758,9,0.051,13,1.447,14,2.268,15,0.642,16,1.756,17,1.752,18,0.692,19,1.078,21,1.04,23,1.04,25,0.199,26,0.588,27,1.045,32,0.682,36,2.503,37,0.542,44,0.824,46,0.932,47,0.007,48,0.653,49,0.381,50,0.788,52,0.806,53,1.021,62,0.772,68,1.82,71,0.46,73,0.3,77,0.931,81,0.596,83,0.962,85,0.08,88,1.495,90,0.166,106,1.468,110,1.591,111,1.24,113,1.038,114,1.1,115,0.758,116,1.119,117,1.236,118,0.631,119,1.664,120,0.758,121,1.329,122,0.679,123,0.731,124,0.705,125,0.758,126,0.692,127,0.758,128,0.705,129,0.731,130,0.758,131,0.705,132,0.758,133,0.705,134,0.758,135,0.692,136,0.731,137,0.758,138,0.705,139,0.758,140,0.731,141,0.692,142,1.106,143,0.8,144,1.119,145,0.692,146,1.119,147,0.679,148,1.806,149,0.692,150,0.619,151,0.758,152,0.692,153,1.213,154,0.692,155,0.692,156,0.705,157,0.758,158,0.692,159,0.758,160,0.718,161,0.655,162,1.236,163,0.705,164,0.758,165,0.705,166,1.04,167,0.758,168,0.705,169,0.758,170,0.705,171,1.04,172,0.758,173,0.705,174,0.758,175,0.705,176,0.758,177,0.692,178,0.731,179,0.705,180,0.969,181,0.758,182,0.692,183,0.758,184,0.692,185,0.705,186,0.758,187,0.705,188,1.329,189,0.655,190,0.758,191,0.705,192,1.119,193,0.758,194,0.705,195,0.758,196,0.705,197,0.758,198,0.692,199,0.718,200,0.692,201,0.758,202,0.692,203,0.744,204,1.002,205,0.692,206,0.705,207,0.705,208,0.758,209,0.692,210,1.787,211,0.679,212,0.758,213,0.692,214,0.718,215,0.692,216,1.339,217,0.758,218,0.705,219,0.758,220,1.119,221,0.705,222,0.758,223,0.705,224,0.758,225,0.758,226,0.705,227,0.758,228,0.679,229,0.863,230,0.692,231,0.705,232,0.758,233,0.705,234,0.758,235,1.002,236,1.119,237,1.119,238,0.692,239,0.731,240,0.642,241,0.692,242,0.692,243,0.744,244,0.718,245,0.758,246,0.692,247,0.758,248,0.679,249,0.731,250,0.758,251,0.004,252,0.004,255,0.815,305,1.288,372,1.19,394,1.24,395,2.009,396,1.59,410,2.471,593,1.321,682,1.896,683,2.286,685,1.59,686,1.513,688,2.006,690,1.928,694,2.288,695,1.551,710,2.611,714,1.321,715,1.321,716,1.35,717,1.266,718,1.121,719,1.877,720,1.821,721,1.38,727,2.719,728,2.346,733,2.002,739,1.411,744,1.1,745,2.367,747,2.448,755,2.152,763,4.037,772,4.037,782,4.098,791,2.736,792,2.736,827,2.337,880,3.304,892,2.736,1282,3.613,1628,4.327,1672,5.472,1707,5.65,1825,4.715,1978,3.175,1987,2.932,2029,2.736,2031,3.195,2065,3.195,2083,2.736,2184,3.195,2191,2.932,2276,2.932,2718,2.736,2777,5.297,2783,2.579,2867,2.736,2886,6.115,2901,6.055,2908,3.195,2909,6.304,2910,5.304,2911,6.304,2912,5.304,2913,5.304,2914,3.595,2915,5.304,2916,5.304,2917,5.304,2918,6.96,2919,3.595,2920,3.595,2921,5.304,2922,3.595,2923,3.595,2924,5.304,2925,3.195,2926,3.595,2927,3.595,2928,3.595,2929,3.595,2930,3.595,2931,3.595,2932,3.595,2933,3.595,2934,3.595,2935,3.595,2936,3.595,2937,3.595,2938,3.595,2939,3.595,2940,3.595,2941,6.304,2942,3.595,2943,3.595,2944,3.595,2945,3.595,2946,5.304,2947,6.96,2948,5.304,2949,5.304,2950,5.304,2951,5.304,2952,2.932]],["title/components/SidebarNavigationComponent.html",[0,0.159,218,0.917]],["body/components/SidebarNavigationComponent.html",[0,0.232,1,0.8,2,1.155,3,0.099,4,0.093,5,0.877,6,0.893,7,0.877,8,0.877,9,0.06,15,0.743,16,1.767,17,1.764,18,0.8,19,1.198,21,1.155,23,1.155,25,0.23,26,0.653,27,1.235,31,4.45,32,0.758,37,0.627,44,0.79,46,0.557,47,0.007,48,0.623,49,0.316,50,0.775,52,0.481,53,0.8,68,1.976,71,0.465,73,0.347,77,1.379,81,0.689,85,0.093,90,0.192,91,0.845,112,2.106,113,1.701,114,1.272,115,0.877,116,1.243,117,1.342,118,0.729,119,1.628,120,0.877,121,1.444,122,0.785,123,0.845,124,0.815,125,0.877,126,0.8,127,0.877,128,0.815,129,0.845,130,0.877,131,0.815,132,0.877,133,0.815,134,0.877,135,0.8,136,0.845,137,0.877,138,0.815,139,0.877,140,0.845,141,0.8,142,1.433,143,0.888,144,1.243,145,0.8,146,1.243,147,0.785,148,1.866,149,0.8,150,0.716,151,0.877,152,0.8,153,1.317,154,0.8,155,0.8,156,0.815,157,0.877,158,0.8,159,0.877,160,0.83,161,0.757,162,1.342,163,0.815,164,0.877,165,0.815,166,1.46,167,0.877,168,0.815,169,0.877,170,0.815,171,0.815,172,0.877,173,0.815,174,0.877,175,0.815,176,0.877,177,0.8,178,0.845,179,0.815,180,0.906,181,0.877,182,0.8,183,0.877,184,0.8,185,0.815,186,0.877,187,0.815,188,1.444,189,0.757,190,0.877,191,0.815,192,1.243,193,0.877,194,0.815,195,0.877,196,0.815,197,0.877,198,0.8,199,0.83,200,0.8,201,0.877,202,0.8,203,0.861,204,1.113,205,0.8,206,0.815,207,0.815,208,0.877,209,0.8,210,1.598,211,0.785,212,0.877,213,0.8,214,0.83,215,0.8,216,0.8,217,0.877,218,1.46,219,1.809,220,1.243,221,0.815,222,0.877,223,0.815,224,0.877,225,0.877,226,0.815,227,0.877,228,0.785,229,0.959,230,0.8,231,0.815,232,0.877,233,0.815,234,0.877,235,1.113,236,1.243,237,1.243,238,0.8,239,1.598,240,0.743,241,0.8,242,0.8,243,0.861,244,0.83,245,0.877,246,0.8,247,0.877,248,0.785,249,0.845,250,0.877,251,0.004,252,0.004,279,1.434,305,0.977,372,1.376,386,3.535,394,2.569,395,1.701,396,1.838,428,1.247,444,2.982,682,1.015,683,2.015,684,2.262,685,1.838,686,1.75,688,1.323,690,2.094,698,3.468,699,2.882,703,1.936,706,1.936,724,1.838,725,1.793,726,2.398,749,2.106,750,1.886,765,2.313,801,1.75,809,2.82,865,2.488,870,3.695,930,2.702,931,2.398,932,2.589,933,2.171,934,2.24,936,3.83,984,2.24,1150,2.488,1151,3.908,1254,5.238,1286,4.807,1346,4.485,1390,2.831,1408,2.488,2254,6.414,2451,3.695,2453,3.695,2718,3.164,2953,6.989,2954,3.391,2955,5.238,2956,6.085,2957,5.238,2958,7.447,2959,4.157,2960,4.157,2961,4.157,2962,3.695,2963,4.157,2964,3.391,2965,3.391,2966,4.157,2967,4.157,2968,4.157,2969,4.157]],["title/interfaces/SinglePersonSchedule.html",[86,0.791,2970,3.561]],["body/interfaces/SinglePersonSchedule.html",[3,0.172,4,0.161,9,0.103,25,0.4,26,0.934,47,0.007,49,0.412,71,0.427,85,0.188,86,1.22,206,1.415,251,0.006,252,0.006,253,2.391,647,3.53,681,5.304,768,3.757,2377,5.977,2970,6.792,2971,5.891,2972,6.419]],["title/components/SnackbarComponent.html",[0,0.159,221,0.917]],["body/components/SnackbarComponent.html",[0,0.214,1,0.693,2,1.041,3,0.086,4,0.08,5,0.76,6,0.774,7,0.76,8,0.76,9,0.052,13,1.449,14,2.27,15,0.644,16,1.756,17,1.753,18,0.693,19,1.08,21,1.041,23,1.041,25,0.2,26,0.589,27,1.368,32,0.683,36,2.506,37,0.543,44,0.932,46,0.711,47,0.007,48,0.697,49,0.343,50,0.602,52,0.731,53,1.215,57,1.724,60,1.328,61,1.142,71,0.412,73,0.301,77,0.932,81,0.597,85,0.08,90,0.166,106,1.004,110,1.081,111,1.833,113,1.534,115,0.76,116,1.12,117,1.237,118,0.632,119,1.744,120,0.76,121,1.331,122,0.681,123,0.732,124,0.706,125,0.76,126,0.693,127,0.76,128,0.706,129,0.732,130,0.76,131,0.706,132,0.76,133,0.706,134,0.76,135,0.693,136,0.732,137,0.76,138,0.706,139,0.76,140,0.732,141,0.693,142,1.107,143,0.801,144,1.12,145,0.693,146,1.12,147,0.681,148,1.807,149,0.693,150,0.62,151,0.76,152,0.693,153,1.215,154,0.693,155,0.693,156,0.706,157,0.76,158,0.693,159,0.76,160,0.719,161,0.656,162,1.237,163,0.706,164,0.76,165,0.706,166,1.576,167,0.76,168,0.706,169,0.76,170,0.706,171,0.706,172,0.76,173,0.706,174,0.76,175,0.706,176,0.76,177,0.693,178,0.732,179,0.706,180,0.817,181,0.76,182,0.693,183,0.76,184,0.693,185,0.706,186,0.76,187,0.706,188,1.331,189,0.656,190,0.76,191,0.706,192,1.12,193,0.76,194,0.706,195,0.76,196,0.706,197,0.76,198,0.693,199,0.719,200,0.693,201,0.76,202,0.693,203,0.746,204,1.004,205,0.693,206,0.706,207,0.706,208,0.76,209,0.693,210,1.511,211,0.681,212,0.76,213,0.693,214,0.719,215,0.693,216,0.693,217,0.76,218,0.706,219,0.76,220,1.12,221,1.366,222,0.76,223,0.706,224,1.331,225,0.76,226,0.706,227,0.76,228,0.681,229,0.865,230,0.693,231,0.706,232,0.76,233,0.706,234,0.76,235,1.004,236,1.12,237,1.12,238,0.693,239,0.732,240,0.644,241,0.693,242,0.693,243,0.746,244,0.719,245,0.76,246,0.693,247,0.76,248,0.681,249,0.732,250,0.76,251,0.004,252,0.004,258,3.438,266,4.044,279,1.243,297,2.585,305,1.397,307,1.517,308,2.657,372,1.193,394,1.833,395,2.508,410,1.678,592,1.554,593,1.324,594,1.517,595,1.554,682,1.541,683,1.06,684,2.04,688,1.69,690,1.931,693,2.342,694,1.554,695,2.292,699,3.273,703,1.678,706,2.475,718,1.657,724,1.593,725,1.554,727,2.723,728,2.791,733,3.881,739,2.086,745,1.995,746,1.773,755,2.157,756,2.078,765,2.086,801,2.237,802,1.881,809,2.543,822,1.881,853,3.454,862,4.334,872,2.742,873,2.543,940,4.171,1069,2.775,1292,4.448,1332,4.804,1826,5.577,1875,3.065,1960,2.939,1975,2.742,2175,2.244,2973,3.203,2974,6.312,2975,5.313,2976,6.312,2977,7.774,2978,5.313,2979,5.149,2980,5.313,2981,6.312,2982,3.203,2983,5.295,2984,3.603,2985,3.603,2986,4.723,2987,3.603,2988,3.603,2989,3.603,2990,5.313,2991,3.603,2992,3.603,2993,5.313,2994,3.603,2995,5.313,2996,3.603,2997,3.603,2998,3.603,2999,2.939,3000,2.454,3001,3.603,3002,3.603,3003,3.603,3004,3.603,3005,3.603,3006,2.939,3007,3.603,3008,3.603,3009,3.603,3010,3.603,3011,3.603,3012,3.603,3013,3.603,3014,3.603,3015,3.603,3016,3.603,3017,3.203,3018,3.603,3019,3.603,3020,3.603,3021,5.313,3022,5.313,3023,5.313]],["title/interfaces/SnackbarData.html",[86,0.791,3000,3.187]],["body/interfaces/SnackbarData.html",[3,0.171,4,0.16,9,0.103,25,0.397,26,0.93,47,0.007,49,0.411,85,0.16,86,1.211,88,1.712,251,0.006,252,0.006,253,2.373,258,4.056,305,1.475,395,2.648,940,5.325,2979,7.483,3000,5.715,3006,7.257,3024,6.371]],["title/components/SnackbarOutletComponent.html",[0,0.159,223,0.917]],["body/components/SnackbarOutletComponent.html",[0,0.239,1,0.844,2,1.199,3,0.105,4,0.098,5,0.925,6,0.942,7,0.925,8,0.925,9,0.063,15,0.784,16,1.77,17,1.768,18,0.844,19,1.244,21,1.199,23,1.199,25,0.339,26,0.678,27,1.168,32,0.786,37,0.661,44,0.747,46,0.819,47,0.007,48,0.658,49,0.282,50,0.693,52,0.508,60,0.784,61,0.674,71,0.417,73,0.366,77,1.073,81,0.727,85,0.098,88,1.356,90,0.202,106,0.828,110,1.315,111,1.512,112,2.221,115,0.925,116,1.29,117,1.381,118,0.769,119,1.579,120,0.925,121,1.486,122,0.828,123,0.891,124,0.859,125,0.925,126,0.844,127,0.925,128,0.859,129,0.891,130,0.925,131,0.859,132,0.925,133,0.859,134,0.925,135,0.844,136,0.891,137,0.925,138,0.859,139,0.925,140,0.891,141,0.844,142,1.236,143,0.922,144,1.29,145,0.844,146,1.29,147,0.828,148,1.887,149,0.844,150,0.755,151,0.925,152,0.844,153,1.356,154,0.844,155,0.844,156,0.859,157,0.925,158,0.844,159,0.925,160,0.875,161,0.798,162,1.381,163,0.859,164,0.925,165,0.859,166,1.199,167,0.925,168,0.859,169,0.925,170,0.859,171,0.859,172,0.925,173,0.859,174,0.925,175,0.859,176,0.925,177,0.844,178,0.891,179,0.859,180,0.94,181,0.925,182,0.844,183,0.925,184,0.844,185,0.859,186,0.925,187,0.859,188,1.486,189,0.798,190,0.925,191,0.859,192,1.29,193,0.925,194,0.859,195,0.925,196,0.859,197,0.925,198,0.844,199,0.875,200,0.844,201,0.925,202,0.844,203,0.908,204,1.156,205,0.844,206,0.859,207,0.859,208,0.925,209,0.844,210,1.63,211,0.828,212,0.925,213,0.844,214,0.875,215,0.844,216,0.844,217,0.925,218,0.859,219,0.925,220,1.29,221,0.859,222,0.925,223,1.494,224,1.834,225,0.925,226,0.859,227,0.925,228,0.828,229,0.996,230,0.844,231,0.859,232,0.925,233,0.859,234,0.925,235,1.156,236,1.29,237,1.29,238,0.844,239,0.891,240,0.784,241,0.844,242,0.844,243,0.908,244,0.875,245,0.925,246,0.844,247,0.925,248,0.828,249,0.891,250,0.925,251,0.004,252,0.004,279,1.512,305,1.264,372,1.452,387,5.438,682,1.07,683,2.074,685,1.939,686,1.846,688,1.395,690,1.341,693,2.85,702,2.986,710,2.158,712,3.146,714,1.611,715,1.611,721,1.683,746,3.011,801,1.846,809,2.098,822,2.289,825,2.098,1332,4.656,1888,3.146,1945,3.337,2257,6.22,2982,3.897,2983,5.658,2999,3.576,3000,5.193,3025,6.777,3026,3.897,3027,7.046,3028,6.117,3029,6.263,3030,6.117,3031,6.117,3032,6.117,3033,4.384,3034,4.384,3035,6.117,3036,4.384,3037,3.897,3038,4.384,3039,4.384]],["title/injectables/SnackbarService.html",[319,1.648,2983,3.187]],["body/injectables/SnackbarService.html",[3,0.142,4,0.133,9,0.085,25,0.33,26,0.831,27,1.586,28,3.158,32,0.964,37,1.237,44,0.941,46,1.004,47,0.007,48,0.594,49,0.346,50,0.85,52,0.95,53,1.58,60,1.341,61,1.153,62,1.611,71,0.525,73,0.498,83,1.596,85,0.133,88,1.58,90,0.275,93,2.306,251,0.005,252,0.005,258,3.317,305,1.503,319,2.642,321,3.019,323,2.434,370,3.019,371,2.852,395,2.487,509,4.276,768,3.738,940,5.314,1289,7.658,1324,3.712,1326,5.298,1327,6.696,1332,5.709,1826,5.381,2979,7.027,2983,5.109,2986,6.667,3000,4.059,3006,6.696,3029,7.296,3040,5.298,3041,7.501,3042,5.96,3043,7.501,3044,5.96,3045,5.96,3046,7.501,3047,5.96,3048,7.501,3049,5.96,3050,5.96,3051,7.501,3052,5.96,3053,5.96,3054,5.96,3055,5.96]],["title/interfaces/Status.html",[81,0.776,86,0.791]],["body/interfaces/Status.html",[3,0.142,4,0.133,9,0.085,25,0.33,26,0.831,47,0.007,48,0.718,49,0.41,71,0.444,81,1.603,85,0.167,86,1.5,88,1.58,111,2.587,229,1.548,251,0.005,252,0.005,253,1.973,255,1.352,275,2.719,290,2.34,298,4.008,304,5.709,305,1.361,394,2.587,395,2.73,576,4.059,681,4.327,682,1.831,686,2.509,701,6.119,713,5.109,744,2.772,960,2.852,2083,6.556,2370,4.876,2371,5.381,3056,4.862,3057,6.667,3058,8.272,3059,8.056,3060,6.556,3061,5.381,3062,6.119,3063,5.709,3064,5.709,3065,5.709,3066,5.298,3067,5.298]],["title/pipes/StatusColorPipe.html",[1000,1.683,3068,3.357]],["body/pipes/StatusColorPipe.html",[3,0.163,4,0.152,9,0.098,13,1.866,15,1.223,32,0.879,44,0.725,46,0.916,47,0.007,48,0.691,49,0.316,50,0.775,52,0.792,60,1.223,61,1.254,71,0.483,73,0.571,81,1.135,82,4.447,85,0.152,90,0.316,106,1.707,251,0.006,252,0.006,699,2.88,753,5.207,1000,2.936,1875,5.404,1945,6.64,2175,4.261,2368,6.081,2371,5.856,3062,6.659,3068,5.856,3069,4.261,3070,7.256,3071,6.081,3072,8.163,3073,5.56,3074,6.841,3075,5.56,3076,6.841,3077,8.163]],["title/components/StatusLabelComponent.html",[0,0.159,226,0.917]],["body/components/StatusLabelComponent.html",[0,0.177,1,0.509,2,0.822,3,0.063,4,0.059,5,0.558,6,0.568,7,0.558,8,0.558,9,0.038,15,0.473,16,1.728,17,1.723,18,0.509,19,0.853,21,0.822,23,0.822,25,0.147,26,0.465,27,1.487,29,1.798,32,0.539,37,0.399,44,0.978,46,1.001,47,0.007,48,0.649,49,0.401,50,0.847,52,0.962,53,1.6,57,1.267,60,1.464,61,1.277,62,1.729,64,1.016,68,1.505,71,0.443,73,0.221,74,0.859,77,0.736,81,1.47,82,1.721,83,0.709,85,0.059,88,1.324,89,2.094,90,0.122,91,1.665,106,1.121,110,1.94,113,1.713,114,1.595,115,0.558,116,0.885,117,1.268,118,0.736,119,1.667,120,0.558,121,1.099,122,0.5,123,0.538,124,0.519,125,0.558,126,0.509,127,0.558,128,0.519,129,0.538,130,0.558,131,0.519,132,0.558,133,0.519,134,0.558,135,0.509,136,0.538,137,0.558,138,0.519,139,0.558,140,1.748,141,0.509,142,0.915,143,0.633,144,0.885,145,0.509,146,0.885,147,0.5,148,1.664,149,0.509,150,0.456,151,0.558,152,0.509,153,1.003,154,0.509,155,0.509,156,0.519,157,0.558,158,0.509,159,0.558,160,0.528,161,0.482,162,1.022,163,0.519,164,0.558,165,0.519,166,1.466,167,0.558,168,0.519,169,0.558,170,0.519,171,0.519,172,0.558,173,0.519,174,0.558,175,0.519,176,0.558,177,0.509,178,0.538,179,0.519,180,0.645,181,0.558,182,0.509,183,0.558,184,0.509,185,0.519,186,0.558,187,0.519,188,1.099,189,0.482,190,0.558,191,0.519,192,0.885,193,0.558,194,0.519,195,0.558,196,0.519,197,0.558,198,0.509,199,0.528,200,0.509,201,0.558,202,0.509,203,0.548,204,0.793,205,0.509,206,0.519,207,0.519,208,0.558,209,0.509,210,1.315,211,0.5,212,0.558,213,0.509,214,0.528,215,0.509,216,0.509,217,0.558,218,0.519,219,0.558,220,0.885,221,0.519,222,0.558,223,0.519,224,0.558,225,0.558,226,1.163,227,0.558,228,0.5,229,0.683,230,0.509,231,0.519,232,0.558,233,0.519,234,0.558,235,0.793,236,1.364,237,0.885,238,0.509,239,0.538,240,0.473,241,0.509,242,0.509,243,0.869,244,0.528,245,0.558,246,0.509,247,0.558,248,0.5,249,0.538,250,0.558,251,0.003,252,0.003,255,1.346,257,1.063,274,1.427,275,2.064,279,0.913,281,3.122,284,0.994,290,0.826,293,2.641,298,1.171,308,1.767,323,0.859,325,2.641,358,2.809,362,1.427,394,2.231,395,2.325,396,2.623,424,2.728,540,2.809,544,4.016,560,3.121,607,1.527,647,1.611,651,2.065,673,1.585,678,3.423,682,1.272,683,1.235,684,2.001,687,3.011,688,0.842,690,1.595,691,2.421,695,2.559,699,1.114,703,1.233,704,1.899,706,1.233,710,2.065,714,1.542,715,1.542,716,1.958,717,0.932,718,0.826,724,1.171,725,1.142,727,2.559,728,2.623,743,1.649,745,0.994,748,2.337,750,1.201,751,1.303,756,2.421,765,1.647,768,2.195,781,1.803,800,1.475,814,1.475,815,1.475,829,1.142,848,3.007,852,1.649,853,1.721,872,2.015,873,1.267,927,1.649,960,2.008,964,2.512,965,2.512,966,4.725,967,3.871,968,3.121,969,3.121,970,2.512,971,2.512,972,2.512,973,2.512,974,2.512,976,5.101,977,1.649,978,1.585,979,2.337,980,1.585,981,1.585,982,1.527,983,1.427,984,1.427,985,1.649,986,4.252,987,2.337,988,1.475,989,1.649,990,1.527,991,1.475,992,1.649,993,3.871,994,1.585,995,1.475,996,1.527,997,1.527,998,1.585,999,1.585,1000,1.509,1001,2.512,1002,1.585,1003,1.649,1004,2.512,1005,2.008,1006,4.119,1007,1.585,1008,2.904,1009,1.527,1010,3.007,1011,2.512,1012,1.904,1013,3.551,1014,1.475,1015,1.585,1016,2.512,1017,1.585,1018,1.649,1019,1.585,1020,1.585,1021,1.649,1022,2.512,1023,1.585,1024,1.585,1025,1.721,1026,1.649,1027,1.649,1028,1.649,1029,1.649,1030,1.649,1031,1.585,1032,2.337,1033,1.649,1034,2.512,1037,1.649,1038,1.721,1039,1.649,1069,2.191,1073,2.728,1074,3.011,1075,3.551,1077,1.803,1107,2.159,1108,1.803,1109,2.159,1292,3.551,1324,3.247,1325,1.475,1350,4.515,1497,2.159,1616,1.899,1617,1.721,1618,1.899,1679,1.721,1728,3.74,1788,2.015,1826,4.256,1907,3.968,1908,6.116,1909,4.839,1910,3.423,1923,3.194,1927,3.73,1933,2.353,1935,2.353,1937,2.159,1940,2.159,1954,2.353,1955,2.353,1956,2.353,1957,2.159,1958,2.353,1959,2.015,1960,4.253,1961,2.353,1962,2.353,1963,2.353,1964,2.353,1965,3.73,1974,3.011,1975,2.015,1983,2.159,2349,2.159,2728,2.353,2965,2.159,3017,2.353,3078,7.774,3079,7.134,3080,2.353,3081,5.213,3082,4.196,3083,6.846,3084,5.213,3085,4.196,3086,2.647,3087,4.196,3088,2.647,3089,2.647,3090,4.634,3091,2.647,3092,2.647,3093,2.647,3094,4.196,3095,2.647,3096,2.647,3097,2.647,3098,2.647,3099,2.647,3100,2.647,3101,2.647,3102,2.647,3103,2.647,3104,2.647,3105,2.647,3106,2.647,3107,2.647,3108,2.647,3109,2.647,3110,2.647,3111,4.196]],["title/injectables/StatusService.html",[319,1.648,545,3.041]],["body/injectables/StatusService.html",[3,0.097,4,0.09,9,0.058,25,0.224,27,1.566,32,0.743,37,0.609,44,0.903,46,1.14,47,0.007,48,0.675,49,0.393,50,0.965,52,1.041,62,1.24,68,2.755,71,0.479,73,0.337,81,1.637,83,1.082,85,0.09,88,1.832,89,3.611,90,0.187,91,0.822,93,1.969,106,1.638,129,1.495,142,1.577,143,1.326,150,1.266,180,1.243,229,1.097,251,0.004,252,0.004,255,1.764,305,0.958,311,3.403,319,2.034,320,4.099,321,2.048,330,4.74,370,2.048,371,1.934,372,1.338,491,2.419,510,2.753,514,2.843,544,4.639,545,3.754,560,4.402,576,5.009,602,3.593,619,5.498,638,5.134,681,4.487,744,2.795,768,1.701,838,4.58,1012,3.336,1154,3.597,1380,3.754,1588,3.297,1592,3.593,2330,4.712,2534,4.712,2536,4.144,2537,5.134,3083,6.914,3112,3.593,3113,5.776,3114,4.042,3115,5.776,3116,4.042,3117,5.134,3118,4.042,3119,7.992,3120,4.712,3121,4.042,3122,4.042,3123,4.042,3124,5.776,3125,4.042,3126,5.134,3127,4.042,3128,5.134,3129,3.593,3130,4.042,3131,4.042,3132,4.042,3133,4.042,3134,4.042,3135,4.042,3136,5.776,3137,5.776,3138,5.776,3139,4.042,3140,4.042,3141,4.042,3142,4.042,3143,4.042,3144,5.776,3145,4.042,3146,4.042,3147,4.042,3148,4.042,3149,4.042,3150,5.776,3151,4.042,3152,4.042]],["title/interfaces/StatusWithTasks.html",[86,0.791,576,3.187]],["body/interfaces/StatusWithTasks.html",[3,0.153,4,0.143,9,0.092,25,0.356,26,0.871,47,0.007,48,0.622,49,0.296,71,0.465,81,1.601,85,0.175,86,1.533,88,1.236,111,2.215,229,1.557,251,0.006,252,0.006,253,2.126,255,1.457,275,2.357,290,2.003,298,3.754,304,4.887,305,1.065,394,2.215,395,2.553,576,5.351,681,5.325,682,1.567,686,3.307,701,5.238,713,4.374,744,2.403,960,3.759,2083,5.979,2370,4.174,2371,4.607,3056,5.238,3057,5.708,3058,7.545,3059,6.983,3060,5.979,3061,4.607,3062,5.238,3063,4.887,3064,4.887,3065,4.887,3066,5.708,3067,5.708]],["title/interfaces/Task.html",[86,0.791,229,0.761]],["body/interfaces/Task.html",[3,0.116,4,0.108,9,0.07,25,0.27,26,0.729,47,0.007,48,0.68,49,0.429,50,1.093,62,1.045,71,0.288,77,0.854,81,1.09,85,0.146,86,1.406,87,2.153,88,1.798,89,1.955,143,1.293,161,1.645,171,1.747,180,1.225,229,1.583,251,0.005,252,0.005,253,1.612,255,1.989,275,2.573,305,1.572,330,4.011,560,4.77,646,6.276,647,2.523,658,3.705,659,5.362,744,2.839,787,5.18,821,5.841,960,2.33,1068,3.971,1080,3.971,1284,3.922,1461,3.493,1544,4.477,1590,6.065,1668,3.542,1669,3.542,1676,3.032,1677,3.032,1729,5.687,2370,4.273,2655,4.716,3060,5.664,3063,6.065,3064,6.065,3065,5.003,3153,3.971,3154,6.065,3155,7.083,3156,6.995,3157,5.843,3158,5.843,3159,5.843,3160,5.362,3161,3.493,3162,4.327,3163,7.083,3164,3.705,3165,4.327,3166,3.971,3167,3.705,3168,3.705]],["title/components/TaskDialog.html",[0,0.159,228,0.884]],["body/components/TaskDialog.html",[0,0.179,1,0.52,2,0.836,3,0.065,4,0.06,5,0.57,6,0.58,7,0.57,8,0.57,9,0.039,13,1.163,14,1.901,15,0.483,16,1.73,17,1.725,18,0.52,19,0.867,20,2.298,21,0.836,23,0.836,25,0.15,26,0.473,27,1.549,28,2.526,29,2.07,30,3.599,31,3.434,32,0.548,34,4.728,35,4.567,36,2.158,37,0.643,38,2.204,40,3.599,41,3.737,42,4.021,43,3.9,44,0.943,46,0.707,47,0.007,48,0.614,49,0.38,50,0.599,52,0.841,53,1.399,57,1.293,58,2.905,60,1.299,61,1.158,62,2.039,63,2.279,65,2.623,66,3.694,68,2.338,71,0.516,72,1.84,73,0.226,74,0.877,75,1.756,76,1.683,77,0.927,78,1.505,79,2.057,80,2.057,81,0.707,82,1.756,83,0.723,84,2.057,85,0.118,86,0.457,87,3.331,88,1.45,89,3.026,90,0.125,91,1.328,92,2.057,93,1.607,94,2.057,95,3.791,96,2.057,97,3.246,98,1.939,99,3.246,100,1.939,101,2.057,102,2.057,103,1.33,104,1.33,105,1.505,106,0.806,108,1.84,113,0.78,114,0.827,115,0.57,116,0.899,117,1.036,118,0.474,119,1.242,120,0.57,121,1.114,122,0.51,123,0.549,124,0.53,125,0.57,126,0.52,127,0.57,128,0.53,129,0.549,130,0.57,131,0.53,132,0.57,133,0.53,134,0.57,135,0.52,136,0.549,137,0.57,138,0.53,139,0.57,140,0.549,141,0.52,142,1.484,143,0.796,144,0.899,145,0.52,146,0.899,147,0.51,148,1.674,149,0.52,150,0.465,151,0.57,152,0.52,153,1.399,154,0.52,155,0.52,156,0.53,157,0.57,158,0.52,159,0.57,160,0.539,161,1.412,162,1.424,163,0.53,164,0.57,165,0.53,166,0.836,167,0.57,168,0.53,169,0.57,170,0.53,171,0.53,172,0.57,173,0.53,174,0.57,175,0.53,176,0.57,177,0.52,178,0.549,179,0.53,180,0.655,181,0.57,182,0.52,183,0.57,184,0.52,185,0.53,186,0.57,187,0.53,188,1.114,189,0.492,190,0.57,191,0.53,192,0.899,193,0.57,194,0.53,195,0.57,196,0.53,197,0.57,198,0.52,199,0.539,200,0.52,201,0.57,202,0.52,203,0.559,204,0.806,205,0.52,206,0.53,207,0.53,208,0.57,209,0.52,210,1.328,211,0.51,212,0.57,213,0.52,214,0.539,215,0.52,216,0.52,217,0.57,218,0.53,219,0.57,220,0.899,221,0.53,222,0.57,223,0.53,224,0.57,225,0.57,226,0.53,227,0.57,228,1.134,229,1.318,230,0.52,231,0.53,232,0.57,233,0.53,234,0.57,235,0.806,236,0.899,237,0.899,238,0.52,239,0.549,240,0.483,241,0.52,242,0.52,243,0.559,244,0.539,245,0.57,246,0.52,247,0.57,248,0.51,249,0.549,250,0.57,251,0.003,252,0.003,255,0.967,265,3.9,275,1.585,284,2.453,290,0.843,293,1.369,301,2.656,330,2.298,545,4.724,560,3.91,589,1.456,599,4.246,600,4.526,603,1.939,612,2.057,646,4.728,678,3.479,744,1.305,768,1.138,786,3.291,787,2.772,821,2.905,991,3.343,1008,2.376,1106,1.293,1151,3.478,1204,2.772,1221,3.917,1248,1.683,1324,4.068,1345,3.246,1346,3.246,1373,4.305,1382,5.979,1390,1.84,1668,1.456,1669,1.456,1676,1.683,1677,1.683,1678,1.756,1729,4.323,2110,3.791,2342,4.31,2572,2.204,2573,2.204,2655,3.06,2964,2.204,3154,3.246,3164,4.021,3167,4.021,3168,3.246,3169,2.057,3170,4.697,3171,3.791,3172,4.697,3173,4.697,3174,4.697,3175,4.697,3176,4.697,3177,4.697,3178,5.334,3179,4.265,3180,4.265,3181,2.702,3182,2.702,3183,2.702,3184,2.702,3185,2.702,3186,2.702,3187,3.791,3188,2.702,3189,3.791,3190,2.702,3191,2.702,3192,3.791,3193,4.305,3194,3.791,3195,6.171,3196,2.702,3197,2.702,3198,2.702,3199,2.702,3200,2.702,3201,2.702,3202,3.791,3203,2.702,3204,2.702,3205,3.791,3206,2.702,3207,3.791,3208,2.702,3209,2.702,3210,2.204,3211,2.402,3212,4.021,3213,3.791,3214,2.402,3215,2.204,3216,4.021,3217,2.402,3218,2.204,3219,2.402,3220,2.402,3221,2.402,3222,2.402,3223,2.402,3224,2.402,3225,3.791,3226,2.402,3227,2.402,3228,2.402,3229,2.204,3230,2.402,3231,2.402,3232,2.402,3233,2.402,3234,2.402,3235,3.791,3236,3.791,3237,2.402,3238,3.791,3239,2.402,3240,2.402,3241,2.402,3242,2.402,3243,3.791,3244,2.402,3245,2.402,3246,4.265,3247,4.265,3248,4.265,3249,4.265,3250,4.265,3251,2.702]],["title/interfaces/TaskDialogData.html",[86,0.791,599,3.041]],["body/interfaces/TaskDialogData.html",[0,0.207,3,0.104,4,0.097,9,0.063,13,1.191,14,2.193,16,0.78,17,0.78,20,2.352,21,0.855,23,0.855,25,0.242,26,0.676,27,1.498,28,1.837,29,1.505,30,2.973,31,2.837,34,2.973,35,3.322,36,1.57,37,0.658,40,2.973,41,3.798,42,3.322,43,3.964,47,0.007,48,0.346,49,0.383,50,0.94,58,2.973,61,0.671,62,2.038,63,2.63,65,2.823,66,3.765,68,2.395,71,0.556,72,2.973,73,0.364,74,1.416,75,2.837,76,2.718,77,0.766,78,2.431,79,3.322,80,3.322,81,0.724,82,2.837,83,1.169,84,3.322,85,0.156,86,0.738,87,3.902,88,1.671,89,3.544,90,0.201,91,1.628,92,3.322,93,2.037,94,3.322,95,5.043,96,3.322,97,4.641,98,3.131,99,4.641,100,3.131,101,3.322,102,3.322,103,2.148,104,2.148,105,2.431,106,1.152,108,2.973,142,1.07,143,0.658,153,1.173,161,1.11,162,1.195,228,0.825,229,1.413,251,0.004,252,0.004,253,1.445,255,0.99,265,2.837,275,2.283,284,2.857,290,1.361,293,3.855,301,3.798,545,4.569,560,4.555,589,2.352,599,4.569,600,5.166,603,3.131,612,3.322,646,4.154,744,1.335,768,1.837,786,4.739,787,2.837,821,2.973,991,3.397,1106,2.089,1151,3.364,1221,3.788,1248,2.718,1324,4.739,1382,6.011,1390,2.973,1668,2.352,1669,2.352,1676,2.718,1677,2.718,1678,2.837,1729,3.798,2342,3.56,2572,3.56,2573,3.56,2655,3.131,2964,3.56,3154,3.322,3164,4.641,3167,4.641,3168,3.322,3169,3.322,3170,3.88,3171,3.88,3172,3.88,3173,3.88,3174,3.88,3175,3.88,3176,3.88,3177,3.88,3178,3.88,3187,3.88,3189,3.88,3192,3.88,3193,3.131,3194,3.88,3195,6.248,3202,3.88,3205,3.88,3207,3.88,3210,3.56,3211,3.88,3212,3.322,3213,5.421,3214,3.88,3215,3.56,3216,3.322,3217,3.88,3218,3.56,3219,6.248,3220,3.88,3221,3.88,3222,3.88,3223,3.88,3224,3.88,3225,5.421,3226,3.88,3227,3.88,3228,3.88,3229,3.56,3230,3.88,3231,3.88,3232,3.88,3233,3.88,3234,3.88,3235,5.421,3236,5.421,3237,3.88,3238,5.421,3239,3.88,3240,3.88,3241,3.88,3242,3.88,3243,5.421,3244,3.88,3245,3.88]],["title/components/TaskListPage.html",[0,0.159,230,0.9]],["body/components/TaskListPage.html",[0,0.163,1,0.451,2,0.745,3,0.056,4,0.052,5,0.494,6,0.503,7,0.494,8,0.494,9,0.034,15,0.419,16,1.715,17,1.71,18,0.451,19,1.124,21,0.745,23,0.745,25,0.13,26,0.422,27,1.511,30,4.436,32,0.489,37,0.573,44,0.947,46,0.957,47,0.007,48,0.628,49,0.382,50,0.81,52,0.828,53,1.064,60,1.389,61,1.194,62,1.474,65,1.929,68,2.134,71,0.517,73,0.195,74,0.76,77,0.667,81,1.138,82,1.522,83,0.627,85,0.052,87,1.036,88,1.422,89,2.616,90,0.108,91,1.395,93,1.48,106,1.296,109,2.588,110,1.824,111,1.312,112,1.186,113,2.064,114,1.86,115,0.494,116,0.802,117,1.276,118,0.411,119,1.48,120,0.494,121,1.013,122,0.442,123,0.476,124,0.459,125,0.494,126,0.451,127,0.494,128,0.459,129,0.476,130,0.494,131,0.459,132,0.494,133,0.459,134,0.494,135,0.451,136,0.476,137,0.494,138,0.459,139,0.494,140,0.476,141,0.451,142,1.204,143,0.982,144,0.802,145,0.451,146,0.802,147,0.442,148,1.602,149,0.451,150,1.047,151,0.494,152,0.451,153,1.32,154,0.451,155,0.451,156,0.459,157,0.494,158,0.451,159,0.494,160,0.467,161,0.426,162,0.941,163,0.459,164,0.494,165,0.459,166,0.745,167,0.494,168,0.459,169,0.494,170,0.459,171,1.276,172,0.494,173,0.459,174,0.494,175,0.459,176,0.494,177,0.451,178,0.476,179,0.459,180,0.934,181,0.494,182,0.451,183,0.494,184,0.451,185,0.459,186,0.494,187,0.459,188,1.013,189,0.426,190,0.494,191,0.459,192,0.802,193,0.494,194,0.459,195,0.494,196,0.459,197,0.494,198,0.451,199,0.467,200,0.451,201,0.494,202,0.451,203,0.485,204,0.718,205,0.451,206,0.459,207,0.459,208,0.494,209,0.451,210,1.236,211,0.442,212,0.494,213,0.451,214,0.467,215,0.451,216,0.451,217,0.494,218,0.459,219,0.494,220,0.802,221,0.459,222,0.494,223,0.459,224,0.494,225,0.494,226,0.459,227,0.494,228,0.718,229,1.523,230,1.064,231,0.459,232,0.494,233,0.459,234,0.494,235,0.718,236,0.802,237,0.802,238,0.451,239,0.476,240,0.419,241,0.451,242,0.451,243,0.485,244,0.467,245,0.494,246,0.451,247,0.494,248,0.442,249,0.476,250,0.494,251,0.003,252,0.003,257,2.616,272,1.223,279,0.808,290,1.186,293,1.186,305,0.388,323,1.558,343,1.595,358,2.588,360,1.223,394,1.312,395,1.88,396,2.124,428,0.703,529,5.313,530,5.789,531,5.313,532,5.313,533,4.233,542,1.522,543,3.117,544,3.822,545,4.46,546,3.113,547,3.377,548,3.958,555,4.269,560,1.402,586,2.118,587,1.522,588,1.458,589,1.262,590,1.522,591,1.782,592,1.01,593,1.397,594,0.986,595,1.01,600,1.458,606,1.304,607,2.194,608,1.782,609,2.082,612,2.894,616,2.082,618,2.082,619,1.91,649,2.894,654,1.458,668,1.68,669,1.68,670,1.402,671,1.91,673,2.874,679,3.917,680,2.894,681,2.194,682,1.745,683,1.627,684,2.634,688,2.183,689,1.223,690,1.992,693,1.522,694,2.96,695,3.084,697,2.082,698,1.927,699,1.601,700,1.91,702,1.595,703,2.237,704,3.445,705,2.082,706,2.237,710,1.152,712,1.68,714,1.397,715,1.397,716,1.803,717,0.825,718,1.186,721,1.46,724,1.682,725,1.64,727,2.809,728,2.124,733,3.628,739,0.919,743,1.458,744,1.163,745,2.076,746,2.721,747,3.765,748,1.304,749,1.186,750,1.062,751,1.152,752,1.351,753,1.782,757,4.207,763,2.894,764,3.381,768,2.022,772,2.894,779,1.402,780,1.782,781,1.595,782,2.472,783,2.082,785,2.082,786,4.453,787,1.522,789,2.082,790,4.269,791,1.782,792,1.782,793,1.91,794,1.782,795,1.782,796,2.082,798,3.381,800,1.304,801,2.022,802,1.986,809,1.121,811,3.102,814,1.304,815,1.304,821,2.59,822,1.223,873,1.121,881,2.728,931,1.351,942,1.351,983,1.262,1325,2.675,1347,3.655,1382,2.59,1581,3.786,1587,1.68,1588,1.91,1728,1.68,1974,3.445,1975,1.782,2156,4.674,2165,1.91,2346,2.082,2347,2.082,2348,2.082,2349,1.91,2555,1.782,2556,3.917,2557,3.102,2563,2.082,2683,2.082,2720,2.082,2965,1.91,3156,1.91,3218,1.91,3229,1.91,3252,7.974,3253,6.828,3254,4.802,3255,4.802,3256,4.269,3257,4.802,3258,5.528,3259,3.803,3260,3.803,3261,3.803,3262,3.803,3263,5.528,3264,3.803,3265,3.381,3266,2.342,3267,3.803,3268,2.342,3269,4.802,3270,3.803,3271,2.342,3272,3.803,3273,2.342,3274,3.803,3275,2.342,3276,3.803,3277,2.342,3278,2.342,3279,3.803,3280,2.342,3281,2.342,3282,2.342,3283,2.342,3284,2.342,3285,2.082,3286,2.342,3287,2.342,3288,2.342,3289,2.342,3290,2.342,3291,2.342,3292,2.342,3293,2.342,3294,2.082,3295,2.342,3296,2.342,3297,2.342,3298,2.342,3299,2.342,3300,3.803,3301,3.803,3302,2.342,3303,2.342,3304,2.342,3305,2.342,3306,2.342,3307,3.803,3308,2.342,3309,2.342,3310,2.342,3311,2.342,3312,2.342,3313,2.342,3314,2.342,3315,2.342,3316,2.342,3317,2.342,3318,3.803,3319,3.803,3320,3.803,3321,3.381,3322,2.342,3323,2.342,3324,3.803,3325,2.342]],["title/pipes/TaskPriorityIconPipe.html",[1000,1.683,3326,3.357]],["body/pipes/TaskPriorityIconPipe.html",[3,0.166,4,0.154,9,0.099,13,1.89,15,1.239,32,0.891,44,0.735,46,0.928,47,0.007,48,0.695,49,0.32,50,0.785,52,0.802,61,1.264,71,0.41,73,0.579,85,0.154,90,0.32,106,1.75,251,0.006,252,0.006,699,2.917,1000,2.959,1875,5.344,2175,4.316,3069,4.316,3073,5.603,3075,5.603,3193,5.901,3326,5.901,3327,5.901,3328,5.653,3329,8.225,3330,6.16,3331,5.653,3332,6.93,3333,5.653,3334,6.93,3335,5.653,3336,6.93,3337,5.653,3338,6.93,3339,5.653,3340,6.93]],["title/pipes/TaskPriorityPipe.html",[1000,1.683,3341,3.357]],["body/pipes/TaskPriorityPipe.html",[3,0.166,4,0.155,9,0.1,13,1.896,15,1.242,32,0.893,44,0.737,46,0.931,47,0.007,48,0.696,49,0.321,50,0.787,52,0.805,61,1.266,71,0.411,73,0.58,85,0.155,90,0.321,106,1.752,251,0.006,252,0.006,699,2.926,1000,2.964,1875,5.348,2175,4.328,3069,4.328,3073,5.612,3075,5.612,3212,6.271,3327,5.911,3331,5.669,3333,5.669,3335,5.669,3337,5.669,3339,5.669,3341,5.911,3342,6.178,3343,6.95,3344,6.95,3345,6.95,3346,6.95,3347,6.95,3348,6.95]],["title/injectables/TaskService.html",[319,1.648,544,2.606]],["body/injectables/TaskService.html",[3,0.059,4,0.055,9,0.036,20,4.574,25,0.138,26,0.442,27,1.535,32,0.513,37,0.862,44,0.868,46,1.059,47,0.007,48,0.627,49,0.365,50,0.896,52,1.028,60,0.893,61,0.382,62,1.662,68,2.672,71,0.507,73,0.207,81,1.212,83,0.665,85,0.055,88,1.822,89,3.648,90,0.115,91,1.533,93,1.532,106,1.722,109,2.694,136,1.486,142,1.358,143,1.345,150,1.409,153,0.768,180,1.123,206,1.55,228,0.469,229,1.598,251,0.003,252,0.003,255,1.794,257,0.998,258,1.099,263,1.782,265,1.615,272,3.817,277,1.891,290,1.559,293,2.899,309,1.782,310,1.692,311,3.465,319,1.405,320,3.821,321,1.259,330,3.939,334,2.717,343,1.692,370,1.259,371,1.189,491,1.487,514,2.816,544,2.222,546,3.19,547,3.46,548,4.056,560,2.992,586,2.222,587,1.615,588,1.547,589,1.339,590,1.615,591,1.891,599,2.593,600,1.547,603,1.782,647,3.185,652,3.546,654,3.564,655,2.027,656,2.027,662,2.027,668,3.586,669,2.862,670,2.992,680,3.036,681,4.562,744,2.743,768,2.409,779,1.487,780,1.891,782,2.593,786,4.697,787,1.615,794,1.891,795,1.891,1000,2.529,1012,3.654,1032,3.187,1045,1.891,1106,2.999,1154,2.484,1158,4.552,1221,3.789,1248,1.547,1279,2.717,1300,5.963,1325,3.187,1344,3.546,1373,2.862,1380,2.593,1518,5.871,1581,3.113,1587,1.782,1590,1.891,1593,2.208,1678,1.615,1679,1.615,1728,5.779,2330,3.254,2332,4.077,2534,3.254,2536,2.862,2712,2.208,2983,4.789,2999,2.027,3117,3.546,3119,7.682,3120,5.735,3126,3.546,3128,6.498,3129,3.546,3160,3.254,3161,5.244,3349,2.208,3350,7.739,3351,3.989,3352,3.989,3353,5.722,3354,3.989,3355,3.989,3356,3.989,3357,3.546,3358,3.989,3359,2.484,3360,6.879,3361,4.998,3362,3.989,3363,3.989,3364,2.484,3365,2.484,3366,2.484,3367,3.989,3368,2.484,3369,7.31,3370,2.484,3371,2.484,3372,3.989,3373,5.722,3374,2.484,3375,3.989,3376,2.484,3377,3.989,3378,2.484,3379,3.989,3380,3.989,3381,2.484,3382,2.484,3383,2.027,3384,2.484,3385,2.484,3386,4.998,3387,2.484,3388,3.989,3389,2.484,3390,2.484,3391,2.484,3392,2.484,3393,2.484,3394,2.484,3395,2.484,3396,2.484,3397,6.266,3398,3.989,3399,3.989,3400,5.722,3401,5.722,3402,3.989,3403,4.998,3404,3.989,3405,2.484,3406,2.484,3407,2.484,3408,2.484,3409,2.484,3410,2.208,3411,2.484,3412,2.484,3413,2.484,3414,2.484,3415,2.484,3416,2.484,3417,2.484,3418,3.989,3419,2.484,3420,2.484,3421,2.484,3422,2.484,3423,3.989,3424,2.484,3425,2.484,3426,2.484,3427,2.484,3428,3.989,3429,2.484,3430,2.484,3431,2.484,3432,2.484,3433,2.484,3434,2.484,3435,2.484,3436,2.484,3437,2.484,3438,3.989]],["title/pipes/TaskTypeIconPipe.html",[1000,1.683,3439,3.357]],["body/pipes/TaskTypeIconPipe.html",[3,0.166,4,0.154,9,0.099,13,1.89,15,1.239,32,0.891,44,0.735,46,0.928,47,0.007,48,0.695,49,0.405,50,0.785,52,0.802,61,1.264,71,0.41,73,0.579,85,0.154,90,0.32,106,1.75,229,1.128,251,0.006,252,0.006,699,2.917,786,4.316,1000,2.959,1729,4.316,1875,5.344,2175,4.316,3069,4.316,3073,5.603,3075,5.603,3327,5.901,3328,5.653,3330,6.16,3439,5.901,3440,8.225,3441,6.93,3442,6.93,3443,5.653,3444,6.93,3445,5.653,3446,6.93,3447,6.93]],["title/pipes/TaskTypePipe.html",[1000,1.683,3448,3.357]],["body/pipes/TaskTypePipe.html",[3,0.164,4,0.153,9,0.098,13,1.874,15,1.228,32,0.883,44,0.729,46,0.92,47,0.007,48,0.693,49,0.378,50,0.778,52,0.795,60,1.228,61,1.39,71,0.407,73,0.574,85,0.153,90,0.317,106,1.772,229,1.332,251,0.006,252,0.006,699,2.892,786,4.279,1000,2.944,1729,4.279,1875,5.332,2175,4.279,2179,6.107,3069,4.279,3073,5.574,3075,5.574,3216,6.228,3327,5.871,3443,5.605,3445,5.605,3448,5.871,3449,6.107,3450,6.871,3451,6.871,3452,6.871,3453,6.871,3454,6.871,3455,6.871,3456,6.871]],["title/interfaces/TaskWithAdditionalData.html",[86,0.791,3161,3.357]],["body/interfaces/TaskWithAdditionalData.html",[3,0.123,4,0.115,9,0.074,25,0.285,26,0.757,47,0.007,48,0.541,49,0.411,50,0.924,62,1.467,71,0.305,77,1.198,81,0.855,85,0.152,86,1.434,87,3.606,88,1.711,89,3.275,143,1.314,161,1.705,171,1.501,180,1.05,229,1.577,251,0.005,252,0.005,253,1.707,255,1.737,275,2.852,305,1.498,330,4.128,560,3.086,646,6.336,647,1.979,658,5.198,659,4.205,744,2.595,787,3.351,821,4.652,960,3.268,1068,5.571,1080,5.571,1284,3.361,1461,4.9,1544,5.554,1590,3.923,1668,4.395,1669,4.395,1676,3.21,1677,3.21,1729,5.833,2370,3.351,2655,3.698,3060,6.635,3063,5.198,3064,5.198,3065,3.923,3153,4.205,3154,3.923,3155,4.582,3156,5.571,3157,4.582,3158,4.582,3159,4.582,3160,4.205,3161,4.9,3162,6.071,3163,8.027,3164,6.206,3165,6.071,3166,5.571,3167,6.206,3168,6.206]],["title/modules/TasksModule.html",[398,1.837,3457,3.561]],["body/modules/TasksModule.html",[3,0.131,4,0.122,9,0.079,47,0.007,49,0.254,71,0.572,73,0.459,74,1.784,85,0.122,90,0.254,126,1.708,128,1.739,165,1.739,205,1.708,226,1.739,228,1.676,230,1.708,235,1.346,251,0.005,252,0.005,400,2.26,401,3.839,407,5.312,408,4.264,409,2.87,410,2.56,412,4.264,413,3.409,415,3.506,423,4.183,461,4.436,462,3.423,463,4.852,601,4.886,759,4.484,1229,4.886,1230,3.944,1231,4.886,1244,4.183,1901,4.484,2242,4.886,3068,6.366,3079,4.484,3193,3.944,3253,4.183,3326,6.366,3341,6.366,3439,6.366,3448,6.366,3457,7.503,3458,4.886,3459,4.886,3460,4.886,3461,6.366,3462,5.497,3463,5.497,3464,5.497,3465,5.497,3466,5.497,3467,5.497,3468,4.886,3469,4.886,3470,4.886,3471,5.497,3472,5.497,3473,8.36,3474,7.123,3475,5.497,3476,5.497,3477,5.497]],["title/modules/TasksRoutingModule.html",[398,1.837,3461,3.357]],["body/modules/TasksRoutingModule.html",[0,0.303,3,0.158,4,0.147,9,0.095,28,2.781,47,0.007,71,0.55,73,0.552,85,0.147,90,0.305,93,1.769,126,1.538,129,1.625,180,1.228,189,1.455,205,1.538,206,1.295,230,1.538,251,0.006,252,0.006,398,2.594,400,2.716,413,3.161,415,3.934,426,4.785,427,4.928,428,1.982,435,5.695,454,4.114,482,4.5,681,4.611,934,3.56,1244,5.028,1250,5.028,1255,5.028,1256,5.028,1261,5.872,3253,5.028,3461,5.735,3468,5.872,3469,5.872,3470,5.872,3478,6.606,3479,5.872,3480,6.606]],["title/classes/TestNgControl.html",[90,0.216,1075,3.187]],["body/classes/TestNgControl.html",[3,0.161,4,0.15,9,0.096,25,0.373,26,0.896,32,1.039,44,0.918,46,0.901,47,0.007,48,0.533,49,0.311,50,0.762,52,0.779,53,1.555,60,1.202,61,1.034,62,1.735,65,3.479,71,0.398,74,2.183,85,0.15,90,0.311,91,1.761,106,1.271,251,0.006,252,0.006,960,3.867,966,4.996,986,5.086,1069,4.219,1075,5.504,1081,3.747,1099,5.487,1106,3.219,1108,6.12,3481,7.987,3482,5.487,3483,8.661,3484,8.08,3485,6.726,3486,8.08,3487,6.726,3488,8.08,3489,6.726,3490,8.08,3491,8.08]],["title/components/TextareaComponent.html",[0,0.159,231,0.917]],["body/components/TextareaComponent.html",[0,0.204,1,0.642,2,0.983,3,0.08,4,0.074,5,0.703,6,0.716,7,0.703,8,0.703,9,0.048,15,0.596,16,1.75,17,1.746,18,0.642,19,1.02,21,0.983,23,0.983,25,0.185,26,0.556,27,0.832,29,2.08,32,0.645,44,0.964,46,0.898,47,0.007,48,0.639,49,0.404,50,0.76,52,0.907,53,1.509,60,1.401,61,1.329,62,1.44,64,1.28,68,1.741,71,0.297,73,0.278,77,0.88,81,0.553,85,0.074,88,1.291,90,0.154,91,1.736,115,0.703,116,1.058,117,1.41,118,0.88,119,1.389,120,0.703,121,1.272,122,0.63,123,0.678,124,0.654,125,0.703,126,0.642,127,0.703,128,0.654,129,0.678,130,0.703,131,0.654,132,0.703,133,0.654,134,0.703,135,0.642,136,0.678,137,0.703,138,0.654,139,0.703,140,1.825,141,0.642,142,1.058,143,0.756,144,1.058,145,0.642,146,1.058,147,0.63,148,1.773,149,0.642,150,0.574,151,0.703,152,0.642,153,1.16,154,0.642,155,0.642,156,0.654,157,0.703,158,0.642,159,0.703,160,0.666,161,0.607,162,1.182,163,0.654,164,0.703,165,0.654,166,1.746,167,0.703,168,0.654,169,0.703,170,0.654,171,0.654,172,0.703,173,0.654,174,0.703,175,0.654,176,0.703,177,0.642,178,0.678,179,0.654,180,0.771,181,0.703,182,0.642,183,0.703,184,0.642,185,0.654,186,0.703,187,0.654,188,1.272,189,0.607,190,0.703,191,0.654,192,1.058,193,0.703,194,0.654,195,0.703,196,0.654,197,0.703,198,0.642,199,0.666,200,0.642,201,0.703,202,0.642,203,0.691,204,0.948,205,0.642,206,0.654,207,0.654,208,0.703,209,0.642,210,1.462,211,0.63,212,0.703,213,0.642,214,0.666,215,0.642,216,0.642,217,0.703,218,0.654,219,0.703,220,1.058,221,0.654,222,0.703,223,0.654,224,0.703,225,0.703,226,0.654,227,0.703,228,0.63,229,0.816,230,0.642,231,1.315,232,0.703,233,0.654,234,0.703,235,0.948,236,1.517,237,1.058,238,0.642,239,0.678,240,0.596,241,0.642,242,0.642,243,0.691,244,0.666,245,0.703,246,0.642,247,0.703,248,0.63,249,0.678,250,0.703,251,0.004,252,0.004,255,1.522,274,1.798,275,1.809,281,3.043,284,1.252,290,1.04,298,2.219,305,1.338,308,3.181,323,1.082,325,3.055,358,3.25,360,2.62,362,1.798,540,3.25,647,1.926,651,2.469,682,1.844,691,3.869,732,5.474,748,2.795,751,1.641,765,1.969,809,2.401,829,1.439,838,3.124,873,1.596,960,2.401,964,3.003,965,3.003,966,3.869,967,4.305,968,3.61,969,3.61,970,3.003,971,3.003,972,3.003,973,3.003,974,3.003,976,5.388,977,2.077,978,1.997,979,2.795,980,1.997,981,1.997,982,1.924,983,1.798,984,1.798,985,2.077,986,4.531,987,2.795,988,1.858,989,2.077,990,1.924,991,1.858,992,2.077,993,4.305,994,1.997,995,1.858,996,1.924,997,1.924,998,1.997,999,1.997,1000,1.2,1001,3.003,1002,1.997,1003,2.077,1004,3.003,1005,2.401,1006,4.523,1007,1.997,1008,3.359,1009,1.924,1010,3.478,1011,3.003,1012,2.276,1013,4.015,1014,1.858,1015,1.997,1016,3.003,1017,1.997,1018,2.077,1019,1.997,1020,1.997,1021,2.077,1022,3.003,1023,1.997,1024,1.997,1025,2.168,1026,2.077,1027,2.077,1028,2.077,1029,2.077,1030,2.077,1031,1.997,1032,2.795,1033,2.077,1034,3.003,1035,2.721,1036,2.539,1037,2.077,1038,2.168,1039,2.077,1041,3.261,1073,3.261,1454,3.261,1998,5.474,1999,6.969,2000,6.393,2005,4.459,2007,4.459,2008,3.261,2724,5.36,3492,2.965,3493,5.017,3494,6.03,3495,5.017,3496,6.03,3497,3.335,3498,3.335,3499,3.335,3500,3.335,3501,4.459,3502,3.335,3503,3.335,3504,5.017]],["title/components/UpperNavigationComponent.html",[0,0.159,233,0.917]],["body/components/UpperNavigationComponent.html",[0,0.194,1,0.591,2,0.924,3,0.073,4,0.068,5,0.648,6,0.66,7,0.648,8,0.648,9,0.044,13,1.286,14,2.063,15,0.549,16,1.743,17,1.742,18,0.591,19,0.958,21,0.924,23,0.924,25,0.261,26,0.523,27,1.488,32,0.606,36,2.313,37,0.711,44,0.931,46,0.411,47,0.007,48,0.55,49,0.265,50,0.348,52,0.882,53,1.409,57,1.471,60,1.308,61,1.125,62,1.012,71,0.477,73,0.257,77,0.827,81,0.51,83,0.823,85,0.068,90,0.142,91,1.41,106,0.581,110,1.721,111,1.06,112,2.906,113,1.656,114,1.442,115,0.648,116,0.994,117,1.124,118,0.539,119,1.734,120,0.648,121,1.209,122,0.581,123,0.625,124,0.602,125,0.648,126,0.591,127,0.648,128,0.602,129,0.625,130,0.648,131,0.602,132,0.648,133,0.602,134,0.648,135,0.591,136,0.625,137,0.648,138,0.602,139,0.648,140,0.625,141,0.591,142,1.006,143,0.711,144,0.994,145,0.591,146,0.994,147,0.581,148,1.736,149,0.591,150,0.529,151,0.648,152,0.591,153,1.104,154,0.591,155,0.591,156,0.602,157,0.648,158,0.591,159,0.648,160,0.613,161,0.56,162,1.124,163,0.602,164,0.648,165,0.602,166,0.924,167,0.648,168,0.602,169,0.648,170,0.602,171,0.602,172,0.648,173,0.602,174,0.648,175,0.602,176,0.648,177,0.591,178,0.625,179,0.602,180,0.724,181,0.648,182,0.591,183,0.648,184,0.591,185,0.602,186,0.648,187,0.602,188,1.209,189,0.56,190,0.648,191,0.602,192,0.994,193,0.648,194,0.602,195,0.648,196,0.602,197,0.648,198,0.591,199,0.613,200,0.591,201,0.648,202,0.591,203,0.636,204,0.891,205,0.591,206,0.602,207,0.602,208,0.648,209,0.591,210,1.55,211,0.581,212,0.648,213,0.591,214,0.613,215,0.591,216,0.591,217,0.648,218,0.602,219,0.648,220,0.994,221,0.602,222,0.648,223,0.602,224,0.648,225,0.648,226,0.602,227,0.648,228,0.891,229,1.047,230,0.591,231,0.602,232,0.648,233,1.261,234,1.658,235,0.891,236,0.994,237,0.994,238,0.591,239,0.625,240,0.549,241,0.591,242,0.591,243,0.976,244,0.613,245,0.648,246,0.591,247,0.648,248,0.581,249,0.625,250,0.648,251,0.003,252,0.003,275,1.721,279,1.06,284,2.605,290,2.006,293,1.557,306,2.205,307,1.294,308,2.414,336,1.656,386,3.208,394,2.219,395,2.483,396,2.536,410,2.671,428,0.922,436,2.507,478,1.998,479,4.895,483,4.107,544,4.246,546,3.321,592,1.326,593,1.129,594,1.294,595,1.326,599,3.064,600,1.914,654,1.914,663,2.205,664,1.914,668,2.205,669,2.205,670,1.84,672,2.732,673,1.84,682,1.86,683,2.243,684,2.202,688,1.825,689,1.605,690,2.331,694,1.326,695,1.326,698,2.389,699,1.294,703,1.431,706,1.431,714,2.549,715,2.549,716,2.749,717,1.082,718,0.959,724,2.085,725,2.034,726,1.773,727,2.034,728,2.085,739,1.207,745,1.154,746,3.165,749,1.557,750,1.394,756,1.773,766,2.507,768,1.294,779,1.84,780,2.339,781,2.093,801,2.92,802,1.605,820,2.205,822,2.995,825,1.471,848,3.308,852,1.914,878,2.093,880,4.32,927,1.914,933,1.605,1049,2.507,1151,3.647,1282,3.211,1292,1.84,1408,1.84,1643,5.572,1679,1.998,1788,2.339,1888,2.205,1940,2.507,1957,2.507,1979,1.998,2149,2.339,2262,7.219,2400,5.098,2406,2.507,2550,2.732,2677,2.507,2718,2.339,2823,5.098,2895,6.507,2954,2.507,2955,4.191,2956,5.098,2957,4.191,2962,2.732,3210,2.507,3505,7.866,3506,5.735,3507,7.32,3508,7.32,3509,5.735,3510,6.432,3511,6.432,3512,6.432,3513,6.432,3514,6.432,3515,3.073,3516,3.073,3517,3.073,3518,3.073,3519,3.073,3520,3.073,3521,3.073,3522,3.073,3523,3.073,3524,3.073,3525,3.073,3526,3.073,3527,3.073,3528,4.714,3529,3.073,3530,3.073,3531,3.073,3532,3.073,3533,6.432,3534,3.073,3535,3.073,3536,3.073,3537,3.073,3538,4.714,3539,3.073,3540,5.735,3541,4.191]],["title/interfaces/User.html",[86,0.791,647,1.796]],["body/interfaces/User.html",[3,0.156,4,0.145,9,0.093,25,0.361,26,0.879,47,0.007,48,0.734,49,0.433,64,3.412,85,0.198,86,1.502,88,1.753,251,0.006,252,0.006,253,2.158,305,1.643,481,4.757,511,5.545,512,4.91,647,3.412,744,2.787,1989,6.022,2373,4.236,2374,4.676,2375,4.439,2376,4.439,2377,4.236]],["title/interfaces/UserData.html",[86,0.791,2377,3.041]],["body/interfaces/UserData.html",[3,0.159,4,0.148,9,0.095,25,0.368,26,0.889,47,0.007,48,0.737,49,0.423,64,2.55,85,0.199,86,1.512,88,1.762,251,0.006,252,0.006,253,2.2,305,1.639,481,4.188,511,5.57,512,4.936,647,3.307,744,2.802,1989,6.049,2373,4.318,2374,4.766,2375,4.525,2376,4.525,2377,5.213]],["title/injectables/UserService.html",[319,1.648,2156,3.187]],["body/injectables/UserService.html",[3,0.159,4,0.148,9,0.095,25,0.368,27,1.544,32,1.032,37,1.003,44,0.914,46,1.075,47,0.007,48,0.636,49,0.371,50,0.909,52,0.929,68,2.489,71,0.53,73,0.555,83,1.781,85,0.148,90,0.307,106,1.516,251,0.006,252,0.006,319,2.827,320,4.716,321,3.37,370,3.37,371,3.183,372,2.203,491,3.982,514,3.274,1012,3.641,1771,5.913,2156,5.467,2373,5.818,2972,5.913,3542,5.913,3543,8.951,3544,6.652,3545,6.652,3546,8.026,3547,6.652,3548,8.026,3549,6.652,3550,6.652]],["title/interfaces/UserSession.html",[86,0.791,2783,3.357]],["body/interfaces/UserSession.html",[3,0.162,4,0.151,9,0.097,25,0.376,26,0.901,47,0.007,49,0.443,85,0.151,86,1.148,88,1.8,251,0.006,252,0.006,253,2.249,275,2.806,305,1.581,499,4.866,744,2.757,2783,5.832,3551,6.038,3552,8.013,3553,9.014,3554,9.014,3555,9.014,3556,9.014,3557,9.014,3558,6.793,3559,6.793]],["title/classes/UserUtils.html",[90,0.216,1938,3.561]],["body/classes/UserUtils.html",[3,0.15,4,0.139,9,0.09,25,0.347,27,1.283,32,0.994,44,0.82,46,1.036,47,0.007,48,0.613,49,0.357,50,0.876,52,0.895,62,1.661,71,0.458,85,0.139,88,1.687,90,0.289,93,2.457,106,1.462,251,0.006,252,0.006,305,1.392,395,2.649,512,4.169,690,1.916,744,1.916,807,4.766,1081,3.488,1454,5.964,1938,5.888,2576,6.389,3560,5.567,3561,7.736,3562,7.736,3563,7.736,3564,6.262,3565,7.736,3566,6.262,3567,6.262,3568,6.262,3569,8.768,3570,7.736,3571,7.736,3572,7.736,3573,7.736,3574,7.736,3575,7.736,3576,6.262,3577,8.394,3578,5.567,3579,6.262,3580,6.262,3581,6.262,3582,7.736,3583,6.262,3584,5.567,3585,5.567,3586,6.262,3587,5.567,3588,6.262,3589,6.262,3590,6.262]],["title/interfaces/UserWithPrivileges.html",[86,0.791,2375,3.187]],["body/interfaces/UserWithPrivileges.html",[3,0.163,4,0.152,9,0.098,25,0.379,26,0.905,47,0.007,48,0.691,49,0.377,64,2.626,85,0.201,86,1.527,88,1.777,251,0.006,252,0.006,253,2.265,305,1.622,481,4.262,511,5.222,512,4.399,647,3.664,744,2.497,1989,5.671,2373,4.447,2374,4.908,2375,5.56,2376,6.154,2377,4.447]],["title/classes/Utils.html",[90,0.216,1880,3.561]],["body/classes/Utils.html",[3,0.119,4,0.111,9,0.071,25,0.465,26,0.892,27,1.335,32,0.969,44,0.853,46,1.078,47,0.007,48,0.638,49,0.372,50,0.978,52,1.038,60,0.892,61,0.767,85,0.111,88,1.45,90,0.309,93,1.336,106,1.715,119,1.033,251,0.005,252,0.005,255,1.904,272,4.681,275,2.005,284,3.022,290,2.35,303,5.086,305,1.614,311,3.463,690,2.462,711,5.775,739,1.959,751,4.251,801,2.813,1005,3.198,1081,2.779,1158,4.162,1353,3.398,1454,6.057,1457,7.842,1470,5.94,1547,5.94,1756,5.451,1811,6.698,1842,7.046,1880,5.086,3037,4.435,3578,4.435,3591,4.435,3592,4.989,3593,4.989,3594,4.07,3595,4.989,3596,6.683,3597,6.683,3598,6.683,3599,6.683,3600,4.989,3601,6.683,3602,6.683,3603,4.989,3604,8.637,3605,6.683,3606,8.392,3607,6.683,3608,8.965,3609,8.392,3610,4.989,3611,6.683,3612,6.683,3613,6.683,3614,6.683,3615,4.989,3616,6.683,3617,6.683,3618,6.683,3619,8.049,3620,7.535,3621,6.683,3622,8.049,3623,4.989,3624,4.989,3625,4.989,3626,4.989,3627,6.683,3628,4.989,3629,4.989,3630,4.989]],["title/interfaces/ValidationError.html",[86,0.791,1041,3.041]],["body/interfaces/ValidationError.html",[3,0.164,4,0.153,9,0.098,25,0.381,26,0.907,29,2.37,47,0.007,49,0.441,64,3.141,85,0.153,86,1.383,251,0.006,252,0.006,253,2.275,255,1.559,258,4.147,298,3.038,299,5.229,305,1.555,829,3.53,987,4.559,988,3.827,1041,5.319,1044,4.683,1071,6.228,1076,5.605,3631,6.107,3632,6.107,3633,6.107,3634,6.871,3635,6.871,3636,6.676,3637,6.676,3638,8.183,3639,8.183,3640,8.183]],["title/pipes/ValidationErrorPipe.html",[1000,1.683,2270,3.357]],["body/pipes/ValidationErrorPipe.html",[3,0.162,4,0.151,9,0.097,13,1.85,15,1.212,32,0.872,44,0.719,46,0.908,47,0.007,48,0.689,49,0.313,50,0.768,52,0.94,61,1.385,71,0.401,73,0.566,85,0.151,90,0.313,106,1.282,251,0.006,252,0.006,255,1.842,258,3.591,305,1.347,311,2.663,699,3.66,1000,3.241,1041,5.279,1044,4.115,1076,6.625,1106,3.246,2270,5.827,3069,4.225,3073,5.532,3075,5.532,3633,8.009,3636,6.625,3637,6.625,3641,7.219,3642,6.03,3643,6.783,3644,8.121,3645,6.783]],["title/components/ViewOptionsComponent.html",[0,0.159,235,0.884]],["body/components/ViewOptionsComponent.html",[0,0.224,1,0.752,2,1.105,3,0.093,4,0.087,5,0.824,6,0.839,7,0.824,8,0.824,9,0.056,15,0.698,16,1.762,17,1.759,18,0.752,19,1.146,21,1.105,23,1.105,25,0.216,26,0.625,27,1.326,37,0.589,44,0.874,46,0.523,47,0.007,48,0.634,49,0.354,50,0.443,60,1.008,61,0.866,71,0.428,73,0.326,77,0.989,81,0.648,85,0.087,87,3.395,88,1.393,89,3.083,90,0.18,93,1.046,109,3.902,110,1.691,112,4.052,113,1.628,114,1.195,115,0.824,116,1.189,117,1.296,118,0.685,119,1.807,120,0.824,121,1.395,122,0.738,123,0.794,124,0.766,125,0.824,126,0.752,127,0.824,128,0.766,129,0.794,130,0.824,131,0.766,132,0.824,133,0.766,134,0.824,135,0.752,136,0.794,137,0.824,138,0.766,139,0.824,140,0.794,141,0.752,142,1.16,143,1.296,144,1.189,145,0.752,146,1.189,147,0.738,148,1.841,149,0.752,150,0.673,151,0.824,152,0.752,153,1.273,154,0.752,155,0.752,156,0.766,157,0.824,158,0.752,159,0.824,160,0.78,161,0.711,162,1.296,163,0.766,164,0.824,165,0.766,166,1.505,167,0.824,168,0.766,169,0.824,170,0.766,171,0.766,172,0.824,173,0.766,174,0.824,175,0.766,176,0.824,177,0.752,178,0.794,179,0.766,180,0.866,181,0.824,182,0.752,183,0.824,184,0.752,185,0.766,186,0.824,187,0.766,188,1.395,189,0.711,190,0.824,191,0.766,192,1.189,193,0.824,194,0.766,195,0.824,196,0.766,197,0.824,198,0.752,199,0.78,200,0.752,201,0.824,202,0.752,203,0.809,204,1.065,205,0.752,206,0.766,207,0.766,208,0.824,209,0.752,210,1.561,211,0.738,212,0.824,213,0.752,214,0.78,215,0.752,216,0.752,217,0.824,218,0.766,219,0.824,220,1.189,221,0.766,222,0.824,223,0.766,224,0.824,225,0.824,226,0.766,227,0.824,228,0.738,229,0.917,230,0.752,231,0.766,232,0.824,233,0.766,234,0.824,235,1.45,236,1.813,237,1.189,238,0.752,239,0.794,240,0.698,241,0.752,242,0.752,243,0.809,244,0.78,245,0.824,246,0.752,247,0.824,248,0.738,249,0.794,250,0.824,251,0.004,252,0.004,257,3.311,279,1.348,305,0.935,308,2.784,336,3.038,372,1.294,394,1.348,395,2.52,397,2.04,428,1.172,542,2.54,543,3.827,589,2.106,592,1.685,593,1.436,594,1.645,595,1.685,606,2.176,607,2.254,682,1.767,683,1.946,684,1.5,688,2.104,694,1.685,695,1.685,714,2.071,715,2.071,716,2.117,718,1.219,721,2.164,724,1.728,725,1.685,727,2.432,728,2.493,745,1.467,746,2.774,750,1.773,752,2.254,765,2.213,801,2.784,802,2.944,808,2.433,822,2.04,843,2.54,873,1.87,880,2.433,881,2.803,931,2.254,938,2.254,1176,2.54,1230,6.055,1325,3.684,1345,4.29,1978,2.339,3646,7.502,3647,3.187,3648,5.879,3649,5.011,3650,5.879,3651,5.637,3652,3.473,3653,5.879,3654,3.907,3655,5.879,3656,3.907,3657,3.473,3658,3.473,3659,7.24,3660,3.473]],["title/components/ViewOptionsComponent-1.html",[0,0.132,235,0.737,739,1.532]],["body/components/ViewOptionsComponent-1.html",[0,0.208,1,0.662,2,1.006,3,0.082,4,0.077,5,0.725,6,0.739,7,0.725,8,0.725,9,0.049,15,0.615,16,1.752,17,1.75,18,0.662,19,1.044,21,1.006,23,1.006,25,0.284,26,0.569,27,1.405,37,0.519,44,0.898,46,0.461,47,0.007,48,0.606,49,0.353,50,0.39,60,1.366,61,1.175,62,1.103,65,2.467,71,0.469,73,0.287,74,1.117,77,0.901,81,0.571,85,0.077,87,3.223,88,1.311,89,2.927,90,0.159,93,0.921,110,2.293,112,4.293,113,1.774,114,1.571,115,0.725,116,1.083,117,1.335,118,0.604,119,1.84,120,0.725,121,1.295,122,0.65,123,0.699,124,0.674,125,0.725,126,0.662,127,0.725,128,0.674,129,1.249,130,0.725,131,0.674,132,0.725,133,0.674,134,0.725,135,0.662,136,0.699,137,0.725,138,0.674,139,0.725,140,0.699,141,0.662,142,1.078,143,1.254,144,1.083,145,0.662,146,1.083,147,0.65,148,1.787,149,0.662,150,0.592,151,0.725,152,0.662,153,1.402,154,0.662,155,0.662,156,0.674,157,0.725,158,0.662,159,0.725,160,0.687,161,0.626,162,1.204,163,0.674,164,0.725,165,0.674,166,1.498,167,0.725,168,0.674,169,0.725,170,0.674,171,0.674,172,0.725,173,0.674,174,0.725,175,0.674,176,0.725,177,0.662,178,0.699,179,0.674,180,1.047,181,0.725,182,0.662,183,0.725,184,0.662,185,0.674,186,0.725,187,0.674,188,1.295,189,0.626,190,0.725,191,0.674,192,1.083,193,0.725,194,0.674,195,0.725,196,0.674,197,0.725,198,0.662,199,0.687,200,0.662,201,0.725,202,0.662,203,0.712,204,0.97,205,0.662,206,1.204,207,0.674,208,0.725,209,0.662,210,1.482,211,0.65,212,0.725,213,0.662,214,0.687,215,0.662,216,0.662,217,0.725,218,0.674,219,0.725,220,1.083,221,0.674,222,0.725,223,0.674,224,0.725,225,0.725,226,0.674,227,0.725,228,0.65,229,0.836,230,0.662,231,0.674,232,0.725,233,0.674,234,0.725,235,1.377,236,1.755,237,1.083,238,0.662,239,0.699,240,0.615,241,0.662,242,0.662,243,0.712,244,0.687,245,0.725,246,0.662,247,0.725,248,0.65,249,0.699,250,0.725,251,0.004,252,0.004,279,1.187,284,1.928,308,2.868,336,3.671,372,1.139,394,1.771,395,2.605,396,1.521,397,1.797,428,1.032,542,2.236,543,3.658,589,1.854,592,2.215,593,1.264,594,2.162,595,2.215,606,1.916,607,1.985,682,1.933,683,2.25,684,1.971,688,2.167,690,1.879,694,2.215,695,2.65,698,1.743,699,1.448,714,2.678,715,2.678,716,2.737,717,1.212,718,1.602,719,1.797,720,1.743,721,2.358,724,2.271,725,2.215,727,2.938,728,3.012,739,1.351,745,1.292,746,3.352,750,2.329,752,1.985,765,2.016,801,3.068,802,3.208,808,2.143,822,2.681,843,2.236,873,1.646,880,2.143,881,2.468,892,2.618,931,1.985,938,2.962,1176,2.236,1230,6.17,1325,4.258,1345,3.908,1581,4.539,1587,2.468,1888,2.468,1909,2.806,1978,3.074,1979,2.236,3256,5.461,3479,4.564,3541,3.058,3647,2.806,3648,5.461,3649,4.564,3650,5.461,3652,3.058,3653,5.461,3655,5.461,3657,3.058,3658,3.058,3660,3.058,3661,7.644,3662,7.644,3663,6.143,3664,5.135,3665,3.44,3666,3.44,3667,3.44,3668,3.44,3669,3.44,3670,3.058,3671,5.135,3672,3.44,3673,3.44]],["title/interfaces/Workspace.html",[77,0.821,86,0.791]],["body/interfaces/Workspace.html",[3,0.162,4,0.151,9,0.097,25,0.377,26,0.902,47,0.007,48,0.741,49,0.426,71,0.403,77,1.673,85,0.151,86,1.471,88,1.735,143,1.312,185,1.594,251,0.006,252,0.006,253,2.253,255,1.543,305,1.443,499,4.87,744,2.862,2376,4.633,3674,6.047,3675,8.135,3676,8.135,3677,8.135,3678,9.018,3679,6.803]],["title/injectables/WorkspaceService.html",[319,1.648,1151,2.239]],["body/injectables/WorkspaceService.html",[3,0.11,4,0.103,9,0.066,25,0.255,26,0.702,27,1.554,32,0.814,37,1.09,44,0.933,46,1.129,47,0.007,48,0.668,49,0.389,50,0.956,52,1.056,57,2.205,60,1.293,61,0.708,62,1.673,68,2.763,71,0.483,73,0.385,77,1.705,83,1.233,85,0.103,88,1.623,90,0.213,91,1.471,106,1.542,142,1.111,150,1.406,180,1.328,239,1.66,251,0.005,252,0.005,255,1.913,272,3.306,305,1.2,311,3.205,319,2.23,320,4.524,321,2.334,323,2.528,325,4.459,330,5.144,334,4.312,346,6.877,347,6.877,370,2.334,371,2.205,372,1.525,491,2.758,510,3.138,514,3.116,744,2.732,1012,3.533,1032,4.029,1151,3.03,1154,3.943,1279,3.138,1380,4.115,1518,4.542,1544,5.561,1945,4.818,1974,3.305,2182,4.095,2332,5.164,2536,4.542,2539,5.628,2567,3.758,2780,5.628,3594,5.164,3680,4.095,3681,5.628,3682,5.628,3683,6.331,3684,6.331,3685,4.607,3686,6.331,3687,4.607,3688,6.331,3689,4.607,3690,4.607,3691,6.331,3692,4.607,3693,6.331,3694,4.607,3695,4.607,3696,5.164,3697,4.607,3698,4.607,3699,4.607,3700,4.607,3701,4.607,3702,4.607,3703,4.607,3704,6.331,3705,4.607]],["title/components/WorkspacesListPage.html",[0,0.159,238,0.9]],["body/components/WorkspacesListPage.html",[0,0.246,1,0.659,2,1.003,3,0.082,4,0.076,5,1.292,6,0.735,7,0.722,8,0.722,9,0.049,13,1.395,14,2.203,15,0.612,16,1.752,17,1.748,18,1.179,19,1.04,20,3.662,21,1.003,23,1.003,25,0.19,26,0.567,27,1.265,32,0.658,36,2.444,37,1.024,44,0.862,46,0.91,47,0.007,48,0.671,49,0.336,50,0.864,52,0.842,53,1.4,60,1.095,61,0.526,62,1.099,68,2.1,71,0.492,73,0.286,77,1.686,81,0.568,83,0.917,85,0.076,90,0.158,91,1.382,110,1.027,115,0.722,116,1.079,117,1.2,118,0.601,119,1.407,120,0.722,121,1.292,122,0.647,123,1.245,124,0.671,125,0.722,126,0.659,127,0.722,128,0.671,129,0.696,130,0.722,131,0.671,132,0.722,133,0.671,134,0.722,135,0.659,136,0.696,137,0.722,138,0.671,139,0.722,140,0.696,141,0.659,142,1.075,143,0.771,144,1.079,145,0.659,146,1.079,147,0.647,148,1.784,149,0.659,150,1.252,151,0.722,152,0.659,153,1.628,154,0.659,155,0.659,156,0.671,157,0.722,158,0.659,159,0.722,160,0.683,161,0.623,162,1.2,163,0.671,164,0.722,165,0.671,166,1.003,167,0.722,168,0.671,169,0.722,170,0.671,171,0.671,172,0.722,173,0.671,174,0.722,175,0.671,176,0.722,177,0.659,178,0.696,179,0.671,180,1.3,181,0.722,182,0.659,183,0.722,184,0.659,185,0.671,186,0.722,187,0.671,188,1.292,189,0.623,190,0.722,191,0.671,192,1.079,193,0.722,194,0.671,195,0.722,196,0.671,197,0.722,198,0.659,199,0.683,200,0.659,201,0.722,202,0.659,203,0.709,204,0.966,205,0.659,206,0.671,207,0.671,208,0.722,209,0.659,210,1.479,211,0.647,212,0.722,213,0.659,214,0.683,215,0.659,216,0.659,217,0.722,218,0.671,219,0.722,220,1.079,221,0.671,222,0.722,223,0.671,224,0.722,225,0.722,226,0.671,227,0.722,228,0.647,229,0.832,230,0.659,231,0.671,232,0.722,233,0.671,234,0.722,235,0.966,236,1.079,237,1.079,238,1.308,239,1.882,240,1.535,241,0.659,242,0.659,243,0.709,244,0.683,245,0.722,246,0.659,247,0.722,248,0.647,249,0.696,250,0.722,251,0.004,252,0.004,255,1.541,265,3.325,279,1.181,307,2.154,311,2.855,323,2.638,334,3.484,360,2.671,386,3.562,428,1.027,533,4.96,546,3.688,547,3.892,592,1.477,593,1.258,594,1.441,595,1.477,682,1.495,689,1.788,698,2.592,745,1.285,941,3.325,983,2.757,1012,2.321,1150,2.049,1151,3.784,1156,3.325,1174,2.332,1175,2.132,1189,2.225,1212,3.043,1246,6.325,1316,4.547,1371,3.893,1374,3.893,1375,3.893,1390,2.332,1408,3.062,1429,4.547,2415,4.547,2416,4.547,2420,4.547,2536,3.67,2555,2.605,2556,4.996,2557,4.173,2564,3.043,2567,2.792,2568,3.043,2574,4.547,2575,4.547,2682,4.173,3265,3.043,3285,3.043,3294,3.043,3357,4.547,3410,4.547,3706,7.388,3707,6.795,3708,5.115,3709,3.423,3710,5.115,3711,5.115,3712,3.423,3713,3.423,3714,5.115,3715,3.423,3716,5.115,3717,5.115,3718,3.423,3719,3.423,3720,3.423]],["title/coverage.html",[3721,5.688]],["body/coverage.html",[0,0.329,1,0.573,9,0.043,10,3.752,11,2.99,12,3.752,20,1.604,39,2.135,43,1.935,47,0.007,49,0.212,62,0.639,63,1.284,66,1.316,77,0.522,81,0.494,86,1.583,90,0.359,114,2.885,117,0.901,118,0.986,122,0.562,124,0.583,126,0.573,128,0.583,131,0.583,133,0.583,135,0.573,138,0.583,140,0.605,141,0.573,143,1.03,145,0.573,147,0.562,149,0.573,152,0.573,154,0.573,155,0.573,156,0.583,158,0.573,160,0.594,163,0.583,165,0.583,168,0.583,170,0.583,171,0.901,173,0.583,175,0.583,177,0.573,179,0.583,182,0.573,184,0.573,187,0.583,189,0.542,191,0.583,194,0.583,196,0.583,198,0.573,200,0.573,202,0.573,205,0.573,207,0.583,209,0.573,211,0.562,213,0.573,215,0.573,216,0.573,218,0.583,221,0.583,223,0.583,226,0.583,228,0.562,229,0.484,230,0.573,231,0.583,233,0.583,235,0.869,238,0.573,240,0.532,242,0.573,244,0.594,246,0.573,248,0.562,251,0.003,252,0.003,254,3.501,268,2.135,301,1.854,319,3.008,320,1.508,322,2.646,323,0.966,337,2.265,363,3.501,383,2.646,421,3.501,429,2.265,433,2.265,466,2.265,469,2.265,472,2.265,476,2.265,483,1.604,484,2.646,525,2.646,544,1.658,545,1.935,546,1.35,547,1.465,548,1.717,576,2.027,580,2.135,586,1.658,599,1.935,647,1.143,690,3.002,758,2.646,759,2.428,760,2.646,809,2.69,828,2.646,882,2.646,894,2.646,895,3.752,903,2.265,915,2.265,959,2.646,986,1.604,1000,2.599,1005,4.243,1041,1.935,1050,2.646,1051,2.646,1065,2.646,1066,2.646,1075,2.027,1108,3.133,1141,4.278,1142,2.265,1143,3.752,1151,1.424,1170,1.854,1191,2.265,1192,3.752,1205,2.265,1206,3.752,1221,1.604,1224,2.428,1227,2.428,1230,3.3,1239,2.265,1240,2.265,1241,2.265,1243,2.265,1246,2.265,1252,2.428,1269,2.646,1270,4.278,1285,2.646,1347,2.265,1348,2.646,1349,2.646,1357,4.278,1450,2.646,1464,2.265,1502,2.646,1503,2.135,1505,2.646,1533,2.265,1534,3.752,1535,3.752,1544,2.027,1554,2.265,1575,2.135,1576,2.428,1581,1.854,1582,2.646,1595,2.646,1632,2.646,1633,2.646,1642,2.646,1653,2.646,1659,1.717,1660,4.656,1661,4.656,1664,1.854,1666,1.854,1668,1.604,1669,1.604,1671,2.265,1672,4.656,1673,3.3,1674,3.752,1701,2.646,1702,2.646,1815,2.646,1816,2.646,1828,2.646,1853,6.349,1880,2.265,1900,2.646,1901,2.428,1902,2.646,1938,2.265,1986,2.428,1992,2.646,2042,2.646,2043,2.428,2044,2.646,2068,2.646,2069,2.428,2070,2.646,2084,2.646,2085,2.646,2112,2.646,2113,2.646,2117,2.265,2118,3.752,2132,2.646,2133,2.428,2134,2.646,2142,2.265,2144,2.646,2145,2.646,2151,2.646,2156,2.027,2188,2.428,2247,2.428,2249,2.428,2254,2.428,2257,2.428,2262,2.428,2270,2.135,2275,2.428,2291,2.646,2292,2.646,2299,2.646,2300,2.646,2321,2.646,2358,2.646,2373,1.935,2374,4.537,2375,2.027,2377,1.935,2378,3.752,2379,2.646,2408,2.646,2478,2.646,2491,3.752,2492,3.752,2497,2.265,2519,2.646,2524,2.646,2525,2.646,2526,2.646,2554,2.646,2555,4.278,2576,2.265,2577,2.646,2601,4.088,2604,2.428,2618,2.428,2648,2.646,2649,2.646,2651,2.428,2675,2.646,2684,2.646,2685,2.646,2694,2.646,2732,2.646,2777,2.265,2778,2.646,2783,2.135,2787,2.265,2842,2.265,2843,2.646,2886,2.265,2889,2.646,2908,2.646,2953,2.646,2954,3.752,2970,2.265,2971,2.428,2973,2.646,2983,2.027,3000,2.027,3024,2.646,3025,2.646,3026,2.646,3040,2.646,3056,3.752,3068,2.135,3070,2.646,3071,2.646,3078,2.646,3079,2.428,3080,2.646,3112,2.646,3153,3.752,3161,2.135,3169,3.501,3193,2.135,3252,2.646,3253,2.265,3321,2.646,3326,2.135,3327,4.537,3328,3.752,3341,2.135,3342,2.646,3349,2.646,3383,2.428,3439,2.135,3448,2.135,3449,2.646,3481,2.646,3482,3.752,3492,2.646,3505,2.646,3542,2.646,3551,2.646,3560,2.646,3591,2.646,3631,2.646,3632,2.646,3641,2.646,3642,2.646,3646,2.646,3647,3.752,3661,2.646,3674,2.646,3680,2.646,3696,2.428,3706,2.646,3721,2.646,3722,2.265,3723,2.976,3724,8.982,3725,2.976,3726,7.534,3727,5.621,3728,7.534,3729,4.599,3730,5.621,3731,2.976,3732,8.541,3733,4.599,3734,2.976,3735,2.976,3736,5.621,3737,2.976,3738,2.976,3739,2.976,3740,4.599,3741,5.621,3742,5.621,3743,2.976,3744,2.976,3745,8.431,3746,2.646,3747,2.976,3748,2.976,3749,2.646,3750,2.646,3751,8.541,3752,2.646,3753,2.646,3754,4.599,3755,4.599,3756,6.324,3757,4.599,3758,2.646,3759,2.646,3760,2.646,3761,2.646,3762,2.646,3763,2.976,3764,2.976,3765,2.646,3766,2.646,3767,2.646,3768,2.646,3769,2.646,3770,2.646,3771,2.646,3772,2.976,3773,2.976,3774,7.227,3775,2.976,3776,2.976,3777,2.976,3778,2.976,3779,2.976,3780,2.976,3781,4.599,3782,4.599,3783,4.599,3784,2.976,3785,4.599,3786,2.976,3787,6.324,3788,4.599,3789,2.976,3790,2.976,3791,2.976,3792,2.976,3793,2.976,3794,2.976,3795,2.976,3796,2.976,3797,2.976,3798,2.976,3799,2.976,3800,2.976,3801,2.976,3802,2.976,3803,4.599,3804,2.976,3805,2.976,3806,2.976,3807,2.976,3808,2.976,3809,2.976,3810,2.646,3811,2.646,3812,2.646,3813,4.088,3814,2.646,3815,4.088,3816,2.646,3817,4.088,3818,2.646,3819,2.646,3820,2.646,3821,2.646,3822,4.088,3823,4.088,3824,2.646,3825,2.646,3826,4.088,3827,2.646,3828,2.976]],["title/dependencies.html",[401,3.035,3829,3.468]],["body/dependencies.html",[47,0.007,73,0.56,74,2.177,83,1.796,251,0.006,252,0.006,395,1.937,401,3.615,417,7.171,428,2.012,462,4.177,592,3.732,593,2.465,594,3.779,595,3.732,782,4.36,1327,5.472,1707,6.14,1878,5.963,1879,5.963,2191,5.472,2235,5.963,2236,5.963,2867,5.105,2925,5.963,3670,5.963,3830,6.708,3831,9.512,3832,6.708,3833,8.067,3834,6.708,3835,6.708,3836,6.708,3837,6.708,3838,6.708,3839,6.708,3840,8.976,3841,6.708,3842,6.708,3843,6.708,3844,6.708,3845,6.708,3846,5.963,3847,6.708,3848,6.708,3849,6.708,3850,6.708,3851,6.708,3852,6.708,3853,6.708,3854,6.708]],["title/miscellaneous/enumerations.html",[3855,2.43,3856,5.005]],["body/miscellaneous/enumerations.html",[20,4.329,25,0.369,47,0.007,49,0.308,60,1.436,61,1.499,142,1.409,153,1.546,229,1.084,251,0.006,252,0.006,254,5.07,263,5.763,264,5.222,293,3.375,298,3.552,299,5.07,300,5.434,600,5.003,739,3.154,786,4.149,820,4.779,1464,5.07,1729,5.003,2604,5.434,2607,7.141,2626,5.921,2627,5.921,3169,5.07,3212,6.114,3215,6.553,3216,6.114,3331,6.553,3333,6.553,3335,6.553,3337,6.553,3339,6.553,3443,5.434,3445,5.434,3501,5.921,3855,4.149,3856,5.921,3857,6.661,3858,6.661,3859,8.625,3860,8.625,3861,6.661,3862,8.033,3863,8.033]],["title/miscellaneous/functions.html",[1452,4.286,3855,2.43]],["body/miscellaneous/functions.html",[0,0.237,9,0.1,16,0.957,17,0.957,21,1.05,23,1.05,25,0.297,28,2.255,46,1.233,47,0.007,48,0.73,49,0.42,50,1.043,52,0.994,61,0.823,64,2.056,66,3.451,85,0.119,88,1.502,90,0.323,118,0.94,142,0.94,147,1.012,239,1.089,240,1.575,251,0.005,252,0.005,255,1.589,258,3.451,305,1.461,323,2.686,343,3.648,362,2.886,427,3.774,481,3.657,751,4.227,829,2.31,903,5.94,915,5.331,1005,3.735,1079,4.369,1128,7.007,1157,5.073,1170,4.362,1452,4.076,1533,5.94,1534,4.369,1535,5.713,1538,4.761,1581,3.336,1656,4.369,1853,4.369,1937,5.713,2517,3.648,2584,4.761,2618,6.366,2667,7.579,2831,5.713,2952,5.713,3383,5.713,3696,5.713,3749,4.761,3750,6.937,3752,4.761,3753,4.761,3758,4.761,3759,6.226,3760,4.761,3761,6.226,3762,6.226,3765,4.761,3766,4.761,3767,6.226,3768,4.761,3769,4.761,3770,4.761,3771,6.226,3812,6.226,3813,7.832,3814,6.226,3817,4.761,3818,6.226,3819,6.226,3822,4.761,3823,6.937,3824,6.226,3825,6.226,3846,6.226,3855,3.336,3864,5.356,3865,5.356,3866,5.356,3867,5.356,3868,7.004,3869,5.356,3870,5.356,3871,5.356,3872,5.356,3873,5.356,3874,5.356,3875,5.356,3876,5.356,3877,5.356,3878,7.004,3879,5.356,3880,5.356,3881,8.59,3882,5.356,3883,5.356,3884,4.369,3885,4.761,3886,8.277,3887,5.356,3888,5.356,3889,4.761,3890,4.761,3891,5.356,3892,7.004,3893,5.356,3894,5.356,3895,6.226,3896,5.356,3897,5.356,3898,5.356,3899,5.356,3900,5.356,3901,5.356,3902,5.356,3903,5.356,3904,5.356]],["title/index.html",[25,0.216,1386,2.657,3061,2.799]],["body/index.html",[4,0.142,17,1.512,47,0.006,136,1.295,143,0.96,161,1.16,204,1.203,229,1.037,251,0.006,252,0.006,360,3.326,391,6.949,400,2.619,444,4.57,451,5.662,660,5.609,681,3.674,711,4.57,825,4.221,996,3.674,997,3.674,1114,4.848,1283,5.95,1386,4.339,1473,6.713,1704,7.012,1758,4.848,1959,4.848,2370,5.082,2667,6.9,2824,5.662,2825,6.949,2830,5.662,3061,4.57,3166,5.196,3681,6.949,3722,6.713,3905,6.37,3906,6.37,3907,6.37,3908,6.37,3909,6.37,3910,6.949,3911,8.458,3912,6.37,3913,8.82,3914,6.37,3915,6.37,3916,6.37,3917,5.662,3918,6.37,3919,6.37,3920,6.37,3921,8.441,3922,6.37,3923,6.37,3924,6.37,3925,6.37,3926,6.37,3927,5.196,3928,6.713,3929,6.37,3930,6.37,3931,6.37,3932,6.37,3933,5.196,3934,6.949,3935,7.818,3936,7.818,3937,8.458,3938,5.662,3939,6.37,3940,6.37,3941,6.37,3942,5.662,3943,6.37,3944,6.37,3945,6.37,3946,4.848,3947,6.37,3948,6.37,3949,6.37,3950,6.37,3951,6.37,3952,6.37,3953,6.37]],["title/license.html",[1386,2.657,2644,3.182,3061,2.799]],["body/license.html",[47,0.006,251,0.006,252,0.006,384,6.829,2644,6.267]],["title/modules.html",[400,2.63]],["body/modules.html",[47,0.006,251,0.006,252,0.006,399,5.282,400,2.853,406,4.979,407,4.154,455,5.282,459,4.979,594,4.028,1215,5.282,1220,4.979,1442,5.282,1445,4.979,1707,7.283,1783,8.506,2350,5.282,2353,4.979,2872,5.282,2876,4.979,3457,5.282,3461,4.979,3594,7.746,3954,9.817,3955,9.496]],["title/overview.html",[3956,5.688]],["body/overview.html",[1,1.428,2,0.948,47,0.007,124,1.716,126,1.428,128,1.454,135,1.428,141,1.428,145,1.428,147,1.402,149,1.428,152,1.428,154,1.428,155,1.428,158,1.428,165,1.454,173,1.454,175,1.454,177,1.428,179,1.454,182,1.428,187,1.454,198,1.428,200,1.428,202,1.428,205,1.428,209,1.428,211,1.402,213,1.428,215,1.428,216,1.428,226,1.454,228,1.402,230,1.428,235,1.402,238,1.428,241,0.931,251,0.005,252,0.005,253,1.602,321,2.451,399,7.005,400,1.989,401,3.528,402,4.301,403,4.301,404,4.301,405,4.301,406,5.323,407,5.239,408,3.919,409,2.527,410,2.254,427,2.608,455,7.26,456,4.301,457,4.301,458,4.301,459,5.323,739,1.9,1081,2.695,1215,7.446,1216,4.301,1217,4.301,1218,4.301,1219,4.301,1220,5.323,1221,3.998,1442,6.05,1443,4.301,1444,4.301,1445,5.323,1464,3.683,2142,3.683,2350,6.05,2351,4.301,2352,4.301,2353,5.323,2826,4.301,2872,7.301,2873,4.301,2874,4.301,2875,4.301,2876,5.323,3068,5.323,3069,3.013,3326,5.323,3341,5.323,3439,5.323,3448,5.323,3457,7.43,3458,4.301,3459,4.301,3460,4.301,3461,5.323,3584,4.301,3746,4.301,3956,4.301,3957,4.839,3958,4.839,3959,4.839,3960,4.839]],["title/properties.html",[26,0.624,3829,3.468]],["body/properties.html",[26,0.849,47,0.007,251,0.006,252,0.006,3885,6.807,3961,7.658]],["title/routes.html",[427,3.448]],["body/routes.html",[47,0.006,251,0.006,252,0.006,427,4.147]],["title/miscellaneous/typealiases.html",[3855,2.43,3962,5.631]],["body/miscellaneous/typealiases.html",[25,0.412,47,0.006,49,0.344,88,1.433,206,1.681,251,0.006,252,0.006,395,2.476,1325,4.778,1575,5.341,1576,6.073,1580,7.625,2970,5.666,2971,6.073,3855,4.637,3963,7.445,3964,7.445,3965,8.577,3966,7.445,3967,7.445]],["title/miscellaneous/variables.html",[3855,2.43,3968,5.005]],["body/miscellaneous/variables.html",[2,1.328,9,0.073,17,0.911,20,3.652,25,0.282,28,3.206,29,1.757,41,3.173,47,0.007,49,0.416,60,1.585,61,1.363,75,3.312,81,1.124,122,0.963,131,0.999,133,0.999,138,0.999,156,0.999,163,0.999,168,0.999,170,0.999,184,0.98,185,0.999,189,0.928,191,0.999,194,0.999,196,0.999,207,0.999,218,0.999,221,0.999,223,0.999,231,0.999,233,0.999,242,0.98,246,0.98,248,0.963,251,0.005,252,0.005,258,2.997,272,4.761,284,2.545,290,2.532,293,2.581,298,2.997,320,2.581,325,3.858,326,6.024,330,3.652,341,3.312,362,4.104,363,6.613,364,5.528,398,2,400,2.786,401,3.652,412,3.05,413,2.438,424,3.312,426,3.05,461,3.173,463,3.47,499,3.05,514,3.748,546,2.311,718,1.589,855,4.529,995,3.775,1073,4.95,1074,3.655,1108,4.616,1111,4.529,1473,5.158,1478,6.024,1503,3.655,1548,5.528,1554,6.177,1656,5.528,1737,3.655,1756,4.156,1830,4.156,1974,3.655,2188,4.156,2194,4.529,2195,4.529,2197,4.529,2199,4.529,2201,4.529,2202,4.529,2204,4.529,2205,4.529,2207,4.529,2209,6.024,2211,4.529,2213,6.024,2215,6.024,2216,4.529,2218,4.529,2220,4.529,2222,4.529,2224,4.529,2226,4.529,2228,4.529,2230,4.529,2232,4.529,2234,4.529,2270,3.655,2275,5.528,2276,5.528,2277,4.529,2278,4.156,2279,4.529,2280,4.529,2281,4.529,2359,6.024,2651,6.621,3360,4.529,3482,5.528,3810,4.529,3811,4.529,3815,4.529,3816,6.024,3820,4.529,3821,6.024,3826,4.529,3827,6.024,3855,3.173,3884,6.621,3910,4.529,3928,3.878,3934,4.529,3938,4.529,3968,4.529,3969,6.777,3970,5.095,3971,5.095,3972,5.095,3973,5.095,3974,6.777,3975,5.095,3976,5.095,3977,5.095,3978,5.095,3979,6.777,3980,5.095,3981,5.095,3982,5.095,3983,5.095,3984,5.095,3985,5.095,3986,5.095,3987,6.777,3988,4.529,3989,5.095,3990,5.095,3991,5.095]],["title/additional-documentation/architecture.html",[240,0.697,2008,2.536,3992,3.468]],["body/additional-documentation/architecture.html",[0,0.295,2,1.704,9,0.137,17,0.912,18,1.305,28,3.207,47,0.006,48,0.404,49,0.235,57,3.886,61,0.784,90,0.235,118,1.425,142,0.895,143,0.769,185,1,241,1.563,251,0.005,252,0.005,253,2.523,264,3.315,272,2.663,294,4.16,298,4.135,323,1.655,324,4.16,398,3.188,400,3.338,427,2.749,647,1.958,682,1.245,699,2.147,719,4.539,720,2.584,829,3.286,838,3.176,986,2.749,988,4.244,1000,2.74,1010,2.942,1014,2.841,1046,8.008,1067,4.534,1081,4.523,1096,4.534,1114,6.941,1128,4.16,1287,7.515,1451,4.534,1452,3.882,1461,5.826,1737,4.865,1758,7.226,1759,6.772,1875,2.942,2008,4.952,2142,5.161,2143,7.218,2474,3.882,2658,4.534,2722,6.028,2952,5.532,3069,5.057,3682,4.534,3722,6.751,3890,4.534,3895,7.218,3933,7.575,3942,4.534,3946,5.161,3988,4.534,3992,6.772,3993,5.1,3994,6.782,3995,8.008,3996,9.009,3997,5.1,3998,5.1,3999,8.501,4000,4.16,4001,5.1,4002,5.1,4003,5.1,4004,5.1,4005,5.1,4006,5.1,4007,4.534,4008,5.1,4009,8.12,4010,6.782,4011,5.1,4012,5.1,4013,5.1,4014,5.1,4015,5.1,4016,4.534,4017,7.515,4018,5.1,4019,8.87,4020,5.1,4021,5.1,4022,5.1,4023,5.1,4024,5.1,4025,5.1,4026,5.1,4027,5.1,4028,5.1,4029,6.782,4030,5.1,4031,6.215,4032,5.1,4033,7.619,4034,5.1,4035,5.1,4036,5.1,4037,5.1,4038,5.1,4039,5.1,4040,5.1,4041,5.1,4042,5.1,4043,7.619,4044,5.1,4045,5.1,4046,5.1]],["title/additional-documentation/localization.html",[214,0.779,240,0.697,2008,2.536]],["body/additional-documentation/localization.html",[9,0.119,17,1.556,47,0.007,60,1.098,62,1.642,86,1.038,117,1.204,143,0.926,153,1.182,180,0.944,214,1.226,251,0.006,252,0.006,298,2.716,308,2.586,360,3.207,711,4.407,808,3.825,829,3.59,873,3.658,1009,3.543,1114,5.818,1292,4.576,1704,4.675,1842,5.011,2278,5.011,2370,3.993,2472,5.46,2473,5.46,2474,4.675,2517,5.206,2609,5.46,2846,5.46,2852,8.117,2854,6.795,2856,6.795,2857,5.46,2858,6.795,2860,6.795,2863,7.741,2866,5.46,2867,4.675,3120,5.011,3552,5.46,3585,5.46,3587,5.46,3636,5.011,3637,5.011,3889,5.46,3917,6.795,3921,5.46,3927,5.011,3928,4.675,3946,5.818,3995,7.397,3999,5.46,4000,5.011,4007,7.397,4016,5.46,4017,6.795,4031,5.011,4047,6.142,4048,6.142,4049,6.142,4050,6.142,4051,6.142,4052,7.644,4053,6.142,4054,6.142,4055,6.142,4056,6.142,4057,6.142,4058,6.142,4059,7.644,4060,6.142,4061,6.142,4062,6.142,4063,6.142,4064,8.708,4065,6.142,4066,6.142,4067,7.644,4068,7.644,4069,7.644,4070,6.142,4071,7.644,4072,6.142,4073,6.142,4074,8.708,4075,6.142,4076,7.644,4077,6.142,4078,6.142,4079,6.142,4080,6.142,4081,8.322,4082,6.142,4083,6.142,4084,6.142,4085,6.142,4086,6.142,4087,6.142]],["title/additional-documentation/continuos-integration.html",[162,0.656,240,0.598,2008,2.174,4088,2.974]],["body/additional-documentation/continuos-integration.html",[9,0.101,47,0.006,142,1.241,161,1.288,162,1.386,240,1.264,251,0.006,252,0.006,360,3.693,363,5.383,371,3.385,827,5.411,1461,5.074,1473,5.383,1670,4.817,1737,5.973,2831,6.791,3090,6.287,3722,6.336,3884,5.769,3927,5.769,3928,5.383,3933,6.791,3946,6.336,4000,7.217,4031,6.791,4088,6.287,4089,7.073,4090,8.325,4091,7.073,4092,7.073,4093,7.073,4094,7.073,4095,8.325,4096,7.073,4097,7.073,4098,7.073,4099,7.073,4100,7.073,4101,7.073,4102,7.073,4103,7.073,4104,7.073,4105,7.073,4106,7.073,4107,7.073,4108,7.073,4109,7.073]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["0",{"_index":690,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["0.0.1",{"_index":3961,"title":{},"body":{"properties.html":{}}}],["0.01rem",{"_index":805,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0.1",{"_index":1982,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["0.1.43",{"_index":3847,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":3839,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":3854,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":879,"title":{},"body":{"components/ButtonComponent.html":{}}}],["0.2",{"_index":738,"title":{},"body":{"components/BoardPage.html":{}}}],["0.25rem",{"_index":3017,"title":{},"body":{"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["0.2rem",{"_index":2024,"title":{},"body":{"components/InputComponent.html":{}}}],["0.2s",{"_index":749,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["0.35rem",{"_index":2904,"title":{},"body":{"components/SettingsPage.html":{}}}],["0.4rem",{"_index":2022,"title":{},"body":{"components/InputComponent.html":{}}}],["0.4s",{"_index":1975,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["0.5",{"_index":747,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["0.5rem",{"_index":710,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["0.5s",{"_index":826,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0.7",{"_index":893,"title":{},"body":{"components/CardComponent.html":{}}}],["0.75",{"_index":1827,"title":{},"body":{"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{}}}],["0.75em",{"_index":2033,"title":{},"body":{"components/InputComponent.html":{}}}],["0.75rem",{"_index":872,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["0.8125rem",{"_index":867,"title":{},"body":{"components/ButtonComponent.html":{}}}],["0.8rem",{"_index":2041,"title":{},"body":{"components/InputComponent.html":{}}}],["0/1",{"_index":3751,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3782,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3781,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3741,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3748,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3726,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":3804,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3740,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3732,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3745,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3742,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3756,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3728,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3774,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3783,"title":{},"body":{"coverage.html":{}}}],["00b300",{"_index":3007,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["0a95d0",{"_index":818,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["0xffffffff",{"_index":2589,"title":{},"body":{"classes/Random.html":{}}}],["1",{"_index":739,"title":{"components/ViewOptionsComponent-1.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0",{"_index":2596,"title":{},"body":{"classes/Random.html":{}}}],["1.0.2",{"_index":3851,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":3838,"title":{},"body":{"dependencies.html":{}}}],["1.11.2",{"_index":3845,"title":{},"body":{"dependencies.html":{}}}],["1.22.17",{"_index":3951,"title":{},"body":{"index.html":{}}}],["1.25rem",{"_index":868,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1.5",{"_index":876,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1.5em",{"_index":1845,"title":{},"body":{"components/IconComponent.html":{}}}],["1.5rem",{"_index":945,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["1/1",{"_index":3724,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":3780,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3805,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":3807,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3729,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":3776,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":3778,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":807,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SettingsPage.html":{},"classes/UserUtils.html":{}}}],["10/20",{"_index":3737,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":114,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["1000",{"_index":3011,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["10000000",{"_index":3589,"title":{},"body":{"classes/UserUtils.html":{}}}],["100px",{"_index":2725,"title":{},"body":{"components/SchedulePage.html":{}}}],["100vh",{"_index":937,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["10px",{"_index":112,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["11/19",{"_index":3735,"title":{},"body":{"coverage.html":{}}}],["11/27",{"_index":3803,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":3777,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":3733,"title":{},"body":{"coverage.html":{}}}],["12/22",{"_index":3744,"title":{},"body":{"coverage.html":{}}}],["123456789",{"_index":2585,"title":{},"body":{"classes/Random.html":{}}}],["1240px",{"_index":956,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["12px",{"_index":1049,"title":{},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["13",{"_index":3959,"title":{},"body":{"overview.html":{}}}],["13.2.0",{"_index":3831,"title":{},"body":{"dependencies.html":{}}}],["13.2.5",{"_index":3953,"title":{},"body":{"index.html":{}}}],["13.3.0",{"_index":3833,"title":{},"body":{"dependencies.html":{}}}],["13/13",{"_index":3806,"title":{},"body":{"coverage.html":{}}}],["130px",{"_index":2721,"title":{},"body":{"components/SchedulePage.html":{}}}],["14",{"_index":3775,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":3725,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":3957,"title":{},"body":{"overview.html":{}}}],["150",{"_index":3672,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["15px",{"_index":892,"title":{},"body":{"components/CardComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{}}}],["16",{"_index":2601,"title":{},"body":{"classes/Random.html":{},"coverage.html":{}}}],["16.13.0",{"_index":3950,"title":{},"body":{"index.html":{}}}],["16/19",{"_index":3747,"title":{},"body":{"coverage.html":{}}}],["16}px",{"_index":677,"title":{},"body":{"components/BoardPage.html":{}}}],["17/24",{"_index":3739,"title":{},"body":{"coverage.html":{}}}],["18000",{"_index":2602,"title":{},"body":{"classes/Random.html":{}}}],["1em",{"_index":722,"title":{},"body":{"components/BoardPage.html":{}}}],["1px",{"_index":755,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{}}}],["1rem",{"_index":695,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/MockPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["1s",{"_index":3015,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["2",{"_index":820,"title":{},"body":{"components/BoardTaskComponent.html":{},"classes/Enum.html":{},"components/InputComponent.html":{},"components/UpperNavigationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["2.3.0",{"_index":3850,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":3322,"title":{},"body":{"components/TaskListPage.html":{}}}],["2/3",{"_index":3773,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2705,"title":{},"body":{"components/SchedulePage.html":{}}}],["200",{"_index":855,"title":{},"body":{"components/ButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["200px",{"_index":3541,"title":{},"body":{"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["20px",{"_index":933,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["22",{"_index":3796,"title":{},"body":{"coverage.html":{}}}],["222",{"_index":2369,"title":{},"body":{"components/MockPage.html":{}}}],["24px",{"_index":862,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{},"components/SnackbarComponent.html":{}}}],["25",{"_index":870,"title":{},"body":{"components/ButtonComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["250ms",{"_index":735,"title":{},"body":{"components/BoardPage.html":{}}}],["250px",{"_index":2965,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["255",{"_index":3572,"title":{},"body":{"classes/UserUtils.html":{}}}],["25px",{"_index":890,"title":{},"body":{"components/CardComponent.html":{}}}],["28px",{"_index":1047,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["29px",{"_index":3324,"title":{},"body":{"components/TaskListPage.html":{}}}],["2ecc71",{"_index":753,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"pipes/StatusColorPipe.html":{},"components/TaskListPage.html":{}}}],["2px",{"_index":881,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["2rem",{"_index":689,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["2s",{"_index":705,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["3",{"_index":1464,"title":{},"body":{"classes/Enum.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3/3",{"_index":3755,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":3786,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2826,"title":{},"body":{"components/SettingsAccountPage.html":{},"overview.html":{}}}],["300",{"_index":1978,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["300px",{"_index":708,"title":{},"body":{"components/BoardPage.html":{}}}],["30px",{"_index":2476,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{}}}],["315px",{"_index":2902,"title":{},"body":{"components/SettingsPage.html":{}}}],["32px",{"_index":813,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["36969",{"_index":2599,"title":{},"body":{"classes/Random.html":{}}}],["36px",{"_index":1990,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["39;one&#39",{"_index":1467,"title":{},"body":{"classes/Enum.html":{}}}],["39;three&#39",{"_index":1469,"title":{},"body":{"classes/Enum.html":{}}}],["39;two&#39",{"_index":1468,"title":{},"body":{"classes/Enum.html":{}}}],["3px",{"_index":1980,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["4",{"_index":3501,"title":{},"body":{"components/TextareaComponent.html":{},"miscellaneous/enumerations.html":{}}}],["4.2.3",{"_index":3842,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":3788,"title":{},"body":{"coverage.html":{}}}],["4/18",{"_index":3797,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":3784,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":3787,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1974,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{}}}],["4000",{"_index":2986,"title":{},"body":{"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{}}}],["400px",{"_index":1331,"title":{},"body":{"injectables/DialogService.html":{},"components/InputComponent.html":{}}}],["401",{"_index":1524,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":2177,"title":{},"body":{"components/LoginPage.html":{}}}],["404",{"_index":2182,"title":{},"body":{"components/LoginPage.html":{},"injectables/WorkspaceService.html":{}}}],["40px",{"_index":743,"title":{},"body":{"components/BoardPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["41",{"_index":3575,"title":{},"body":{"classes/UserUtils.html":{}}}],["422",{"_index":2638,"title":{},"body":{"components/RegisterPage.html":{}}}],["4294967296",{"_index":2603,"title":{},"body":{"classes/Random.html":{}}}],["42px",{"_index":866,"title":{},"body":{"components/ButtonComponent.html":{}}}],["43",{"_index":3789,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":3763,"title":{},"body":{"coverage.html":{}}}],["450px",{"_index":954,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["45deg",{"_index":3020,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["46px",{"_index":2405,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["4a5465",{"_index":3077,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["4px",{"_index":869,"title":{},"body":{"components/ButtonComponent.html":{},"components/MockPage.html":{},"components/SettingsPage.html":{}}}],["4rem",{"_index":942,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/TaskListPage.html":{}}}],["5",{"_index":817,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/SchedulePage.html":{}}}],["5/11",{"_index":3764,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":3727,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":3799,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":3809,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":809,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"coverage.html":{}}}],["500",{"_index":756,"title":{},"body":{"components/BoardPage.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["500px",{"_index":949,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["520px",{"_index":957,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["54",{"_index":3743,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":3808,"title":{},"body":{"coverage.html":{}}}],["55px",{"_index":2025,"title":{},"body":{"components/InputComponent.html":{}}}],["56",{"_index":3958,"title":{},"body":{"overview.html":{}}}],["57",{"_index":3734,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":752,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/ForgotPasswordPage.html":{},"components/ListGroupComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["6",{"_index":3584,"title":{},"body":{"classes/UserUtils.html":{},"overview.html":{}}}],["6.1.0",{"_index":3840,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":3754,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":3731,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":3800,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1979,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["60px",{"_index":1190,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["62px",{"_index":3540,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["64px",{"_index":932,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{}}}],["65535",{"_index":2600,"title":{},"body":{"classes/Random.html":{}}}],["66",{"_index":3772,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2680,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["7.1.0",{"_index":3844,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":3848,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":3791,"title":{},"body":{"coverage.html":{}}}],["7/16",{"_index":3790,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":3793,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":3802,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":3738,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["71",{"_index":3798,"title":{},"body":{"coverage.html":{}}}],["720px",{"_index":958,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["74px",{"_index":3038,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["75",{"_index":3785,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":3801,"title":{},"body":{"coverage.html":{}}}],["770px",{"_index":950,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["7px",{"_index":891,"title":{},"body":{"components/CardComponent.html":{}}}],["8",{"_index":3960,"title":{},"body":{"overview.html":{}}}],["8.3.2",{"_index":3852,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":3736,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":3795,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1986,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SettingsPage.html":{},"coverage.html":{}}}],["800",{"_index":726,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["800px",{"_index":2905,"title":{},"body":{"components/SettingsPage.html":{}}}],["80px",{"_index":865,"title":{},"body":{"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{}}}],["84",{"_index":3746,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["85",{"_index":3730,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":3792,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":3794,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":2903,"title":{},"body":{"components/SettingsPage.html":{}}}],["9",{"_index":3779,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":3757,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":3574,"title":{},"body":{"classes/UserUtils.html":{}}}],["950px",{"_index":953,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["987654321",{"_index":2587,"title":{},"body":{"classes/Random.html":{}}}],["_",{"_index":3037,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"classes/Utils.html":{}}}],["_assignee",{"_index":1905,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["_blank",{"_index":1694,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["_context",{"_index":2121,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["_control",{"_index":3483,"title":{},"body":{"classes/TestNgControl.html":{}}}],["_filters",{"_index":1598,"title":{},"body":{"components/FiltersComponent.html":{}}}],["_icon",{"_index":1834,"title":{},"body":{"components/IconComponent.html":{}}}],["_index",{"_index":3034,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["_isbuttondisabled",{"_index":3506,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["_main/_main.module",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["_main/components/main",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["_main/interfaces/color.interface",{"_index":3066,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["_main/services/api.service",{"_index":3389,"title":{},"body":{"injectables/TaskService.html":{}}}],["_main/services/dialog.service",{"_index":598,"title":{},"body":{"components/BoardPage.html":{}}}],["_main/validators/required.validator",{"_index":84,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["_persistentkey",{"_index":2493,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["_required",{"_index":964,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["_templateref",{"_index":2123,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["_viewcontainer",{"_index":2129,"title":{},"body":{"directives/LetDirective.html":{}}}],["_viewcontainer.createembeddedview(_templateref",{"_index":2124,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["ability",{"_index":1766,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["absolute",{"_index":822,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/MockPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["abstract",{"_index":4025,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["abstractcontrol",{"_index":3490,"title":{},"body":{"classes/TestNgControl.html":{}}}],["acc",{"_index":2349,"title":{},"body":{"injectables/MemberService.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["acc.set(member.user.id",{"_index":2348,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["acc.set(status.id",{"_index":3108,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["access",{"_index":324,"title":{},"body":{"injectables/ApiService.html":{},"injectables/GitIntegrationService.html":{},"additional-documentation/architecture.html":{}}}],["accessor",{"_index":1036,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["accessor.class",{"_index":1039,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["accessor.class.ts",{"_index":1066,"title":{},"body":{"components/ControlAccessor.html":{},"coverage.html":{}}}],["accessor.class.ts:102",{"_index":1084,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:118",{"_index":1089,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:126",{"_index":1086,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:133",{"_index":1087,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:139",{"_index":1088,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:150",{"_index":1085,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:19",{"_index":1082,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:25",{"_index":1095,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:29",{"_index":1098,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:36",{"_index":1090,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:41",{"_index":1100,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:48",{"_index":1091,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:53",{"_index":1093,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:58",{"_index":1102,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:65",{"_index":1104,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:67",{"_index":1078,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:77",{"_index":1092,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessor.class.ts:88",{"_index":1083,"title":{},"body":{"components/ControlAccessor.html":{}}}],["accessors",{"_index":1069,"title":{},"body":{"components/ControlAccessor.html":{},"injectables/DialogService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"directives/LetDirective.html":{},"components/OptionComponent.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{}}}],["account",{"_index":204,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{}}}],["account.githubusername",{"_index":1795,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["account.githubusername.replace",{"_index":1809,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["account.page",{"_index":470,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DeleteAccountPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["account.page'},{'name",{"_index":151,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["account.page.html",{"_index":1272,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.scss",{"_index":1271,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.ts",{"_index":1270,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"coverage.html":{}}}],["account.page.ts:10",{"_index":1273,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{}}}],["account.page.ts:12",{"_index":2790,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:13",{"_index":2676,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["account.page.ts:15",{"_index":2794,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:17",{"_index":1276,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/RestoreAccountPage.html":{}}}],["account.page.ts:22",{"_index":1275,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["account.page.ts:28",{"_index":2793,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:36",{"_index":2792,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account.page.ts:42",{"_index":2791,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["account/delete",{"_index":469,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DeleteAccountPage.html":{},"coverage.html":{}}}],["account/restore",{"_index":476,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/RestoreAccountPage.html":{},"coverage.html":{}}}],["account/settings",{"_index":2787,"title":{},"body":{"components/SettingsAccountPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{}}}],["accounts.map((account",{"_index":1689,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["action",{"_index":2831,"title":{},"body":{"components/SettingsAccountPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/continuos-integration.html":{}}}],["actions",{"_index":827,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"additional-documentation/continuos-integration.html":{}}}],["activatedroute",{"_index":543,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/GithubIntegrationPage.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["active",{"_index":880,"title":{},"body":{"components/ButtonComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["activeworkspace",{"_index":2411,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["actual_component",{"_index":250,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["add",{"_index":18,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{}}}],["add(emails",{"_index":2324,"title":{},"body":{"injectables/MemberService.html":{}}}],["added",{"_index":2343,"title":{},"body":{"injectables/MemberService.html":{}}}],["addedmembers",{"_index":2304,"title":{},"body":{"components/MemberListComponent.html":{}}}],["adding",{"_index":4071,"title":{},"body":{"additional-documentation/localization.html":{}}}],["additional",{"_index":2008,"title":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}},"body":{"components/InputComponent.html":{},"interfaces/RequestOptions.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["addmemberdialog",{"_index":1,"title":{"components/AddMemberDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["addmemberdialogdata",{"_index":39,"title":{"interfaces/AddMemberDialogData.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectMembersPage.html":{},"coverage.html":{}}}],["addmembers",{"_index":33,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["addrepository",{"_index":2090,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["address",{"_index":1650,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["adds",{"_index":2326,"title":{},"body":{"injectables/MemberService.html":{}}}],["advanced",{"_index":344,"title":{},"body":{"injectables/ApiService.html":{}}}],["afterclosed",{"_index":670,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["afterviewinit",{"_index":1634,"title":{},"body":{"directives/FocusInitialDirective.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{}}}],["agent",{"_index":2918,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype",{"_index":2912,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(\"browser",{"_index":2948,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(\"os",{"_index":2946,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agenttype(type",{"_index":2917,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["agree",{"_index":2643,"title":{},"body":{"components/RegisterPage.html":{}}}],["agreement",{"_index":2645,"title":{},"body":{"components/RegisterPage.html":{}}}],["agreements",{"_index":2619,"title":{},"body":{"components/RegisterPage.html":{}}}],["alert",{"_index":123,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["alert(data",{"_index":1298,"title":{},"body":{"injectables/DialogService.html":{}}}],["alert.dialog.html",{"_index":262,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alert.dialog.scss",{"_index":261,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alert/information",{"_index":1301,"title":{},"body":{"injectables/DialogService.html":{}}}],["alertdialog",{"_index":122,"title":{"components/AlertDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alertdialogdata",{"_index":268,"title":{"interfaces/AlertDialogData.html":{}},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"coverage.html":{}}}],["alertdialogvariant",{"_index":263,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{},"miscellaneous/enumerations.html":{}}}],["alertdialogvariant.default",{"_index":313,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["alertdialogvariant.important",{"_index":277,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["aliases",{"_index":3963,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":714,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["already",{"_index":2180,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["always",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["american",{"_index":2865,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["angular",{"_index":1114,"title":{},"body":{"components/ControlAccessor.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["angular.json",{"_index":3889,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/localization.html":{}}}],["angular/animations",{"_index":3830,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3832,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":851,"title":{},"body":{"components/ButtonComponent.html":{}}}],["angular/cdk/drag",{"_index":585,"title":{},"body":{"components/BoardPage.html":{},"modules/MainModule.html":{}}}],["angular/cdk/observers",{"_index":2196,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/overlay",{"_index":2198,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/platform",{"_index":2200,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/cdk/text",{"_index":2018,"title":{},"body":{"components/InputComponent.html":{}}}],["angular/common",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":365,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/ErrorInterceptor.html":{},"modules/MainModule.html":{},"interfaces/RequestOptions.html":{}}}],["angular/compiler",{"_index":3834,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":74,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AuthModule.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"classes/TestNgControl.html":{},"components/ViewOptionsComponent-1.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":4048,"title":{},"body":{"additional-documentation/localization.html":{}}}],["angular/material",{"_index":3835,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":2206,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/badge",{"_index":2208,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/checkbox",{"_index":2210,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/core",{"_index":2212,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/datepicker",{"_index":2214,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/dialog",{"_index":76,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"modules/MainModule.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["angular/material/form",{"_index":2217,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/icon",{"_index":2219,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/input",{"_index":2221,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/menu",{"_index":2223,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/progress",{"_index":2225,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/select",{"_index":2227,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/table",{"_index":2229,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tabs",{"_index":2231,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/material/tooltip",{"_index":2233,"title":{},"body":{"modules/MainModule.html":{}}}],["angular/platform",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"modules/SettingsRoutingModule.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["animating",{"_index":734,"title":{},"body":{"components/BoardPage.html":{}}}],["animation",{"_index":3014,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["animationname",{"_index":2976,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["any)._markastouched",{"_index":1133,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any)._rawvalidators",{"_index":1127,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any)._root",{"_index":2691,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["any).color",{"_index":1948,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["any).control._rawvalidators",{"_index":1130,"title":{},"body":{"components/ControlAccessor.html":{}}}],["any).id",{"_index":674,"title":{},"body":{"components/BoardPage.html":{}}}],["any).injector",{"_index":2290,"title":{},"body":{"modules/MainModule.html":{}}}],["any).injector.get(dialogservice",{"_index":1556,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["any).prototype.submit",{"_index":1657,"title":{},"body":{"interfaces/FormGroup.html":{}}}],["any).subscribe",{"_index":641,"title":{},"body":{"components/BoardPage.html":{}}}],["api",{"_index":325,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{}}}],["apiservice",{"_index":320,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":326,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["app.component",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routing",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["app/main/main.module",{"_index":2282,"title":{},"body":{"modules/MainModule.html":{}}}],["app/main/main.module';(@)ngmodule",{"_index":2192,"title":{},"body":{"modules/MainModule.html":{}}}],["appcomponent",{"_index":124,"title":{"components/AppComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["appfocusinitial",{"_index":1635,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["appfocusinitial]'},{'name",{"_index":247,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["application",{"_index":1737,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["apply",{"_index":990,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["apply(input",{"_index":1577,"title":{},"body":{"interfaces/FilterCheckbox.html":{}}}],["apply(tasks",{"_index":1591,"title":{},"body":{"classes/Filters.html":{}}}],["applyfilters",{"_index":3383,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["applyfilters(filters",{"_index":3879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appmodule",{"_index":399,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":406,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":3992,"title":{"additional-documentation/architecture.html":{}},"body":{"additional-documentation/architecture.html":{}}}],["arguments",{"_index":1055,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["array",{"_index":1470,"title":{},"body":{"classes/Enum.html":{},"classes/Utils.html":{}}}],["array.isarray(members",{"_index":1947,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["arraybuffer",{"_index":2664,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["artifacts",{"_index":3930,"title":{},"body":{"index.html":{}}}],["as.validator",{"_index":917,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["as.validator.ts",{"_index":3771,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["assets/mocks/calendar.svg",{"_index":3480,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["assets/mocks/dashboard.svg",{"_index":1260,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["assets/mocks/inbox.svg",{"_index":1449,"title":{},"body":{"modules/EmailsRoutingModule.html":{}}}],["assets/mocks/messages.svg",{"_index":2357,"title":{},"body":{"modules/MessagesRoutingModule.html":{}}}],["assign",{"_index":3350,"title":{},"body":{"injectables/TaskService.html":{}}}],["assign(member?.user.id",{"_index":1967,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assign(userid",{"_index":3358,"title":{},"body":{"injectables/TaskService.html":{}}}],["assigned",{"_index":3157,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["assignee",{"_index":811,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/TaskListPage.html":{}}}],["assignee'},{'name",{"_index":167,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["assignee(assignee",{"_index":1941,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component",{"_index":3465,"title":{},"body":{"modules/TasksModule.html":{}}}],["assignee.component.html",{"_index":1904,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.scss",{"_index":1903,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts",{"_index":1902,"title":{},"body":{"components/InputAssigneeComponent.html":{},"coverage.html":{}}}],["assignee.component.ts:18",{"_index":1912,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:27",{"_index":1930,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:31",{"_index":1913,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:45",{"_index":1915,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:46",{"_index":1914,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:48",{"_index":1928,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:50",{"_index":1921,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:52",{"_index":1925,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:53",{"_index":1924,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:54",{"_index":1922,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:56",{"_index":1936,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:60",{"_index":1934,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:62",{"_index":1911,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:68",{"_index":1917,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:80",{"_index":1916,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:84",{"_index":1920,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.component.ts:91",{"_index":1919,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee.user.name[0",{"_index":1968,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assignee/input",{"_index":1901,"title":{},"body":{"components/InputAssigneeComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["assigneecolor",{"_index":1906,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["assigneecontrol",{"_index":3254,"title":{},"body":{"components/TaskListPage.html":{}}}],["assigneeid",{"_index":1590,"title":{},"body":{"classes/Filters.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["assignees",{"_index":810,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["async)?.name",{"_index":1203,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{}}}],["attach",{"_index":1373,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"interfaces/RequestOptions.html":{},"components/TaskDialog.html":{},"injectables/TaskService.html":{}}}],["attached",{"_index":658,"title":{},"body":{"components/BoardPage.html":{},"directives/FocusInitialDirective.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["attachgithubintegration",{"_index":1708,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["attachgithubintegration(projectid",{"_index":1724,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["attachgithubintegration(this.projectid",{"_index":2108,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["attribute",{"_index":1850,"title":{},"body":{"components/IconComponent.html":{}}}],["auth",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/UpperNavigationComponent.html":{}}}],["auth.routing",{"_index":464,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/guard/logged",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/interfaces/user.interface",{"_index":2972,"title":{},"body":{"interfaces/SinglePersonSchedule.html":{},"injectables/UserService.html":{}}}],["auth/services/auth.service",{"_index":2149,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["auth/services/user.service",{"_index":2165,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{}}}],["authentication",{"_index":2670,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["authmodule",{"_index":455,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":459,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":483,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["auto",{"_index":687,"title":{},"body":{"components/BoardPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{}}}],["autocomplete",{"_index":974,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["autofillmonitor",{"_index":2002,"title":{},"body":{"components/InputComponent.html":{}}}],["automatically",{"_index":3926,"title":{},"body":{"index.html":{}}}],["available",{"_index":3594,"title":{},"body":{"classes/Utils.html":{},"injectables/WorkspaceService.html":{},"modules.html":{}}}],["avatar",{"_index":1989,"title":{},"body":{"components/InputAssigneeComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/SchedulePage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["awesome",{"_index":1831,"title":{},"body":{"components/IconComponent.html":{}}}],["back",{"_index":1649,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{}}}],["backend",{"_index":3981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["backlog",{"_index":3671,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["badge",{"_index":4108,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["badges",{"_index":4106,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["banner",{"_index":754,"title":{},"body":{"components/BoardPage.html":{}}}],["base",{"_index":1067,"title":{},"body":{"components/ControlAccessor.html":{},"additional-documentation/architecture.html":{}}}],["based",{"_index":1477,"title":{},"body":{"classes/Enum.html":{}}}],["basic",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["before",{"_index":873,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/localization.html":{}}}],["begin",{"_index":3058,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["behaviorsubject",{"_index":1324,"title":{},"body":{"injectables/DialogService.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["behaviorsubject(false",{"_index":1923,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{}}}],["behaviorsubject>(new",{"_index":3048,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["behaviorsubject>>(this.dialogsmap",{"_index":1319,"title":{},"body":{"injectables/DialogService.html":{}}}],["below",{"_index":306,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["beneath",{"_index":2007,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["between",{"_index":720,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["bezier(0",{"_index":737,"title":{},"body":{"components/BoardPage.html":{}}}],["binding",{"_index":280,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/IconComponent.html":{}}}],["blob",{"_index":2665,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["block",{"_index":745,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["blocks",{"_index":4027,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["blur",{"_index":1019,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["board",{"_index":129,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["board'},{'name",{"_index":127,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["board(projectid",{"_index":3115,"title":{},"body":{"injectables/StatusService.html":{}}}],["board.page.html",{"_index":528,"title":{},"body":{"components/BoardPage.html":{}}}],["board.page.scss",{"_index":527,"title":{},"body":{"components/BoardPage.html":{}}}],["board.push([task",{"_index":3148,"title":{},"body":{"injectables/StatusService.html":{}}}],["board.push(other",{"_index":3152,"title":{},"body":{"injectables/StatusService.html":{}}}],["boardpage",{"_index":126,"title":{"components/BoardPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["boards",{"_index":692,"title":{},"body":{"components/BoardPage.html":{}}}],["boardtaskcomponent",{"_index":128,"title":{"components/BoardTaskComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{}}}],["bold",{"_index":2141,"title":{},"body":{"components/ListGroupComponent.html":{},"components/MockPage.html":{}}}],["boolean",{"_index":275,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/UserSession.html":{},"classes/Utils.html":{}}}],["boolean(repositoryname.match(new",{"_index":1810,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["bootstrap",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":727,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["bottom",{"_index":721,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["box",{"_index":803,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["branch",{"_index":1670,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"additional-documentation/continuos-integration.html":{}}}],["brands",{"_index":3670,"title":{},"body":{"components/ViewOptionsComponent-1.html":{},"dependencies.html":{}}}],["break",{"_index":1132,"title":{},"body":{"components/ControlAccessor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["british",{"_index":2859,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["browse",{"_index":3954,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1707,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["bubbles",{"_index":1063,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["build",{"_index":3928,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["builder",{"_index":3978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":3942,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{}}}],["buildthe",{"_index":3929,"title":{},"body":{"index.html":{}}}],["button",{"_index":307,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["button'},{'name",{"_index":132,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["button.component.html",{"_index":832,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":831,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button:not(.button",{"_index":863,"title":{},"body":{"components/ButtonComponent.html":{}}}],["buttoncomponent",{"_index":131,"title":{"components/ButtonComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buttons",{"_index":260,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/RegisterPage.html":{}}}],["c.charcodeat(0",{"_index":3580,"title":{},"body":{"classes/UserUtils.html":{}}}],["calc($padding",{"_index":2030,"title":{},"body":{"components/InputComponent.html":{}}}],["calc($size",{"_index":819,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["calc(100",{"_index":931,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["calc(50",{"_index":1985,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["calc(var",{"_index":875,"title":{},"body":{"components/ButtonComponent.html":{}}}],["calendar",{"_index":3479,"title":{},"body":{"modules/TasksRoutingModule.html":{},"components/ViewOptionsComponent-1.html":{}}}],["call",{"_index":2673,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["callback",{"_index":993,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["called",{"_index":1006,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["camelcase",{"_index":3617,"title":{},"body":{"classes/Utils.html":{}}}],["canactivate",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoggedInUsersGuard.html":{}}}],["cancel",{"_index":34,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["cancelable",{"_index":1064,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["cancels",{"_index":3369,"title":{},"body":{"injectables/TaskService.html":{}}}],["canceltext",{"_index":310,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"injectables/DialogService.html":{},"interfaces/ErrorValidationTree.html":{},"injectables/TaskService.html":{}}}],["card",{"_index":883,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":134,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["card.component.html",{"_index":885,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":884,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":133,"title":{"components/CardComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":1875,"title":{},"body":{"components/IconComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"additional-documentation/architecture.html":{}}}],["catch",{"_index":645,"title":{},"body":{"components/BoardPage.html":{}}}],["catcherror",{"_index":1517,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["catcherror((e",{"_index":1521,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["catchresponse",{"_index":3762,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["catchresponse(message",{"_index":3880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cdk",{"_index":730,"title":{},"body":{"components/BoardPage.html":{}}}],["cdkdragdrop",{"_index":551,"title":{},"body":{"components/BoardPage.html":{}}}],["cell",{"_index":2720,"title":{},"body":{"components/SchedulePage.html":{},"components/TaskListPage.html":{}}}],["center",{"_index":716,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["change",{"_index":136,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{}}}],["changed",{"_index":2757,"title":{},"body":{"components/SelectComponent.html":{}}}],["changedate",{"_index":763,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["changedate(date",{"_index":772,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["changedate(session.lastused",{"_index":2951,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["changedate(subtask.deadline",{"_index":3320,"title":{},"body":{"components/TaskListPage.html":{}}}],["changedate(task.deadline",{"_index":798,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["changeddate",{"_index":2048,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["changelanguage",{"_index":2847,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["changepasswordpage",{"_index":135,"title":{"components/ChangePasswordPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["changes",{"_index":1008,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/ProjectService.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TextareaComponent.html":{}}}],["changestatus",{"_index":3351,"title":{},"body":{"injectables/TaskService.html":{}}}],["changestatus(statusid",{"_index":3363,"title":{},"body":{"injectables/TaskService.html":{}}}],["changeworkspace",{"_index":2527,"title":{},"body":{"injectables/ProjectService.html":{}}}],["changeworkspace(projectid",{"_index":2529,"title":{},"body":{"injectables/ProjectService.html":{}}}],["changeworkspace(this.projectid",{"_index":1406,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["char",{"_index":3606,"title":{},"body":{"classes/Utils.html":{}}}],["char.length",{"_index":3630,"title":{},"body":{"classes/Utils.html":{}}}],["character",{"_index":3604,"title":{},"body":{"classes/Utils.html":{}}}],["character.tolowercase",{"_index":3627,"title":{},"body":{"classes/Utils.html":{}}}],["character.touppercase",{"_index":3626,"title":{},"body":{"classes/Utils.html":{}}}],["check",{"_index":751,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{},"miscellaneous/functions.html":{}}}],["checkbox",{"_index":961,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{}}}],["checkbox'},{'name",{"_index":139,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["checkbox.component.html",{"_index":963,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":962,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.ng",{"_index":1042,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":138,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkboxes",{"_index":1070,"title":{},"body":{"components/ControlAccessor.html":{}}}],["checkifisrequired",{"_index":968,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["checks",{"_index":1756,"title":{},"body":{"injectables/GitIntegrationService.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":712,"title":{},"body":{"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/RestoreAccountPage.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{}}}],["child)::before",{"_index":3323,"title":{},"body":{"components/TaskListPage.html":{}}}],["children",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["choose",{"_index":1767,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["ci/cd",{"_index":4089,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["city",{"_index":3558,"title":{},"body":{"interfaces/UserSession.html":{}}}],["class",{"_index":90,"title":{"classes/ESet.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"classes/PersistentMap.html":{},"classes/Random.html":{},"classes/TestNgControl.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["class.focused",{"_index":2001,"title":{},"body":{"components/InputComponent.html":{}}}],["class.important",{"_index":267,"title":{},"body":{"components/AlertDialog.html":{}}}],["classes",{"_index":1081,"title":{},"body":{"components/ControlAccessor.html":{},"classes/ESet.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"classes/PersistentMap.html":{},"classes/Random.html":{},"classes/TestNgControl.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["classes/control",{"_index":2019,"title":{},"body":{"components/InputComponent.html":{}}}],["classes/utils.class",{"_index":1881,"title":{},"body":{"components/IconComponent.html":{}}}],["clean",{"_index":996,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["clear",{"_index":2494,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["cleargithubintegrationfields",{"_index":3178,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["cli",{"_index":3952,"title":{},"body":{"index.html":{}}}],["click",{"_index":243,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["clickstoppropagationdirective",{"_index":242,"title":{"directives/ClickStopPropagationDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["close",{"_index":1826,"title":{},"body":{"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{}}}],["close(uid",{"_index":3043,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["closeall",{"_index":1289,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{}}}],["closed",{"_index":286,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/GitIntegrationService.html":{}}}],["closenavelement",{"_index":2384,"title":{},"body":{"components/NavElementComponent.html":{}}}],["closeprofile",{"_index":3510,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["closes",{"_index":283,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["closeworkspace",{"_index":2412,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["cluster_appmodule",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":456,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":457,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":1216,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":1218,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":1217,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_providers",{"_index":1219,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_emailsmodule",{"_index":1443,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_emailsmodule_imports",{"_index":1444,"title":{},"body":{"modules/EmailsModule.html":{},"overview.html":{}}}],["cluster_messagesmodule",{"_index":2351,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_messagesmodule_imports",{"_index":2352,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":2873,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2875,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2874,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":3458,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_declarations",{"_index":3460,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":3459,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["code",{"_index":2474,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SettingsLocalizationPage.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["collapsed",{"_index":707,"title":{},"body":{"components/BoardPage.html":{}}}],["color",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["color.hsl(hue",{"_index":3573,"title":{},"body":{"classes/UserUtils.html":{}}}],["color.pipe",{"_index":3472,"title":{},"body":{"modules/TasksModule.html":{}}}],["color.pipe.ts",{"_index":3071,"title":{},"body":{"pipes/StatusColorPipe.html":{},"coverage.html":{}}}],["color.pipe.ts:8",{"_index":3074,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["colorstyle",{"_index":2981,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["cols",{"_index":3496,"title":{},"body":{"components/TextareaComponent.html":{}}}],["column",{"_index":686,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["columns",{"_index":701,"title":{},"body":{"components/BoardPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["combinelatest",{"_index":3129,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["combinelatest([this.list(projectid",{"_index":3136,"title":{},"body":{"injectables/StatusService.html":{}}}],["command",{"_index":3917,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{}}}],["commit",{"_index":824,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["commonmodule",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["comparewith",{"_index":3899,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complete",{"_index":1573,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["completed",{"_index":3158,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["completes",{"_index":346,"title":{},"body":{"injectables/ApiService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["compodoc",{"_index":3943,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":3837,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["component.ts",{"_index":4028,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["component_template",{"_index":120,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["components/board",{"_index":3463,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/button/button.component",{"_index":2237,"title":{},"body":{"modules/MainModule.html":{}}}],["components/card/card.component",{"_index":2238,"title":{},"body":{"modules/MainModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":2239,"title":{},"body":{"modules/MainModule.html":{}}}],["components/filters/filters.component",{"_index":2240,"title":{},"body":{"modules/MainModule.html":{}}}],["components/icon/icon.component",{"_index":2241,"title":{},"body":{"modules/MainModule.html":{}}}],["components/input",{"_index":2242,"title":{},"body":{"modules/MainModule.html":{},"modules/TasksModule.html":{}}}],["components/input/input.component",{"_index":2244,"title":{},"body":{"modules/MainModule.html":{}}}],["components/integration",{"_index":1223,"title":{},"body":{"modules/DashboardModule.html":{},"modules/SettingsModule.html":{}}}],["components/list",{"_index":2881,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/main",{"_index":2245,"title":{},"body":{"modules/MainModule.html":{}}}],["components/member",{"_index":1226,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/nav",{"_index":2246,"title":{},"body":{"modules/MainModule.html":{}}}],["components/option/option.component",{"_index":2251,"title":{},"body":{"modules/MainModule.html":{}}}],["components/select/select.component",{"_index":2252,"title":{},"body":{"modules/MainModule.html":{}}}],["components/sidebar",{"_index":2253,"title":{},"body":{"modules/MainModule.html":{}}}],["components/snackbar",{"_index":2256,"title":{},"body":{"modules/MainModule.html":{}}}],["components/snackbar/snackbar.component",{"_index":2259,"title":{},"body":{"modules/MainModule.html":{}}}],["components/status",{"_index":3466,"title":{},"body":{"modules/TasksModule.html":{}}}],["components/textarea/textarea.component",{"_index":2260,"title":{},"body":{"modules/MainModule.html":{}}}],["components/upper",{"_index":2261,"title":{},"body":{"modules/MainModule.html":{}}}],["components/view",{"_index":1229,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["concurrently",{"_index":3843,"title":{},"body":{"dependencies.html":{}}}],["configurable",{"_index":259,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["configuration",{"_index":364,"title":{},"body":{"injectables/ApiService.html":{},"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":3985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configure",{"_index":345,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["confirm",{"_index":265,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["confirm(data",{"_index":1305,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmation",{"_index":288,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["confirmed",{"_index":3410,"title":{},"body":{"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["confirmprojectdelete",{"_index":1290,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmprojectdelete(project",{"_index":1307,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmtext",{"_index":309,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["confirmworkspacedelete",{"_index":1291,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmworkspacedelete(workspace",{"_index":1309,"title":{},"body":{"injectables/DialogService.html":{}}}],["connect",{"_index":2110,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"components/TaskDialog.html":{}}}],["connected",{"_index":3163,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["connectgithubissue",{"_index":1709,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connectgithubissue(projectid",{"_index":1727,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connectgithubpull",{"_index":1710,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connectgithubpull(projectid",{"_index":1731,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["connection",{"_index":1735,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{}}}],["connecttogithub",{"_index":2091,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["connectwithissueongithub",{"_index":3164,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["connectwithpullrequestongithub",{"_index":3168,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["console",{"_index":3982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error('persistentmap",{"_index":2516,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["console.log",{"_index":633,"title":{},"body":{"components/BoardPage.html":{}}}],["console.log('submit",{"_index":1658,"title":{},"body":{"interfaces/FormGroup.html":{}}}],["console.log('updated",{"_index":2764,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.log('value",{"_index":2756,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.log(data",{"_index":3416,"title":{},"body":{"injectables/TaskService.html":{}}}],["console.log(formvalues",{"_index":3244,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["console.log(installation_id",{"_index":1823,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["console.log(this.control.value",{"_index":2766,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.log(val",{"_index":2762,"title":{},"body":{"components/SelectComponent.html":{}}}],["console.warn('unknown",{"_index":3456,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["const",{"_index":93,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["constructor(_viewcontainer",{"_index":2122,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["constructor(activatedroute",{"_index":542,"title":{},"body":{"components/BoardPage.html":{},"components/GithubIntegrationPage.html":{},"components/MockPage.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["constructor(apiservice",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["constructor(authservice",{"_index":899,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["constructor(data",{"_index":38,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/TaskDialog.html":{}}}],["constructor(dialogservice",{"_index":766,"title":{},"body":{"components/BoardTaskComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/UpperNavigationComponent.html":{}}}],["constructor(el",{"_index":1637,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["constructor(gitintegrationservice",{"_index":2093,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["constructor(httpclient",{"_index":331,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(injector",{"_index":2288,"title":{},"body":{"modules/MainModule.html":{}}}],["constructor(matdialog",{"_index":1295,"title":{},"body":{"injectables/DialogService.html":{}}}],["constructor(memberservice",{"_index":2305,"title":{},"body":{"components/MemberListComponent.html":{}}}],["constructor(ngcontrol",{"_index":1077,"title":{},"body":{"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["constructor(private",{"_index":372,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"interceptors/ErrorInterceptor.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{}}}],["constructor(public",{"_index":1616,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["constructor(ref",{"_index":2482,"title":{},"body":{"components/OptionComponent.html":{}}}],["constructor(router",{"_index":2146,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"injectables/RouterExtensionsService.html":{}}}],["constructor(seed",{"_index":2581,"title":{},"body":{"classes/Random.html":{}}}],["constructor(sessionservice",{"_index":2914,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["constructor(snackbarservice",{"_index":2982,"title":{},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["constructor(taskservice",{"_index":2700,"title":{},"body":{"components/SchedulePage.html":{}}}],["constructor(undefined",{"_index":2496,"title":{},"body":{"classes/PersistentMap.html":{}}}],["constructor(userservice",{"_index":2789,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["constructor(workspaceservice",{"_index":1150,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["containing",{"_index":1314,"title":{},"body":{"injectables/DialogService.html":{}}}],["contains",{"_index":1122,"title":{},"body":{"components/ControlAccessor.html":{},"classes/Enum.html":{}}}],["content",{"_index":718,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/variables.html":{}}}],["content.cdk",{"_index":740,"title":{},"body":{"components/BoardPage.html":{}}}],["contentchildren",{"_index":2752,"title":{},"body":{"components/SelectComponent.html":{}}}],["contentchildren(optioncomponent",{"_index":2746,"title":{},"body":{"components/SelectComponent.html":{}}}],["context",{"_index":2651,"title":{},"body":{"interfaces/RequestOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":3432,"title":{},"body":{"injectables/TaskService.html":{}}}],["continuos",{"_index":4088,"title":{"additional-documentation/continuos-integration.html":{}},"body":{"additional-documentation/continuos-integration.html":{}}}],["control",{"_index":986,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"coverage.html":{},"additional-documentation/architecture.html":{}}}],["control's",{"_index":1007,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["control.errors",{"_index":1040,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["control?.errors",{"_index":2021,"title":{},"body":{"components/InputComponent.html":{}}}],["controlaccessor",{"_index":140,"title":{"components/ControlAccessor.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["controlaccessor:102",{"_index":989,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:118",{"_index":1025,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:126",{"_index":1003,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:133",{"_index":1018,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:139",{"_index":1021,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:150",{"_index":992,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:19",{"_index":977,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:22",{"_index":2057,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["controlaccessor:28",{"_index":1607,"title":{},"body":{"components/FiltersComponent.html":{}}}],["controlaccessor:30",{"_index":3098,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["controlaccessor:32",{"_index":2055,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["controlaccessor:36",{"_index":1030,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:44",{"_index":2017,"title":{},"body":{"components/InputComponent.html":{}}}],["controlaccessor:48",{"_index":1033,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:53",{"_index":1037,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:64",{"_index":1926,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["controlaccessor:77",{"_index":1035,"title":{},"body":{"components/CheckboxComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["controlaccessor:88",{"_index":985,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["controls",{"_index":3634,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["controlvalueaccessor",{"_index":1072,"title":{},"body":{"components/ControlAccessor.html":{}}}],["convenient",{"_index":4082,"title":{},"body":{"additional-documentation/localization.html":{}}}],["conventions",{"_index":3998,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["convert",{"_index":3621,"title":{},"body":{"classes/Utils.html":{}}}],["converts",{"_index":3616,"title":{},"body":{"classes/Utils.html":{}}}],["cookie",{"_index":2669,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["core",{"_index":1879,"title":{},"body":{"components/IconComponent.html":{},"dependencies.html":{}}}],["correctdata",{"_index":2629,"title":{},"body":{"components/RegisterPage.html":{}}}],["country",{"_index":3559,"title":{},"body":{"interfaces/UserSession.html":{}}}],["coverage",{"_index":3721,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":142,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["create(project",{"_index":2532,"title":{},"body":{"injectables/ProjectService.html":{}}}],["create(projectid",{"_index":3117,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["create(workspace",{"_index":3684,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["create/general",{"_index":1262,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["create/members",{"_index":1263,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["created",{"_index":3120,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{},"additional-documentation/localization.html":{}}}],["createnewtask",{"_index":3511,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["createproject",{"_index":2413,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["createprojectmemberspage",{"_index":141,"title":{"components/CreateProjectMembersPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["createprojectpage",{"_index":145,"title":{"components/CreateProjectPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["creates",{"_index":1154,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["createsubscription",{"_index":1146,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["createsubtask",{"_index":764,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["createsubtask(task",{"_index":3267,"title":{},"body":{"components/TaskListPage.html":{}}}],["createworkspace",{"_index":2958,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["createworkspacepage",{"_index":147,"title":{"components/CreateWorkspacePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["creating",{"_index":1068,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["creation",{"_index":1162,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["credentials",{"_index":2668,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["css",{"_index":1846,"title":{},"body":{"components/IconComponent.html":{}}}],["cubic",{"_index":736,"title":{},"body":{"components/BoardPage.html":{}}}],["cuepic",{"_index":3444,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["cuissue",{"_index":3442,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["cupriorityhigh",{"_index":3338,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cupriorityhighest",{"_index":3340,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritylow",{"_index":3334,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritylowest",{"_index":3332,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["cuprioritymedium",{"_index":3336,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["current",{"_index":3552,"title":{},"body":{"interfaces/UserSession.html":{},"additional-documentation/localization.html":{}}}],["currentdate",{"_index":2930,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentdate.diff(sessiondate",{"_index":2933,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentdate.year",{"_index":2931,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["currentuserid",{"_index":1586,"title":{},"body":{"classes/Filters.html":{}}}],["cursor",{"_index":724,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["custom",{"_index":995,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["cusubtask",{"_index":3447,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["cutask",{"_index":3441,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["cuuserstory",{"_index":3446,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["cypress",{"_index":3940,"title":{},"body":{"index.html":{}}}],["czemar/cli",{"_index":1806,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["czy",{"_index":2802,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["d",{"_index":2938,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["dashboard",{"_index":1254,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/SidebarNavigationComponent.html":{}}}],["dashboard.routing",{"_index":1232,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard/classes/user.class",{"_index":1939,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["dashboard/dialogs/add",{"_index":1168,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["dashboard/interfaces/git",{"_index":1676,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["dashboard/interfaces/project",{"_index":587,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/interfaces/project.interface",{"_index":589,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/SchedulePage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["dashboard/interfaces/workspace.interface",{"_index":78,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/ProjectService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["dashboard/services/git",{"_index":1678,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/member.service",{"_index":590,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/MemberListComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/project.service",{"_index":591,"title":{},"body":{"components/BoardPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["dashboard/services/workspace.service",{"_index":3210,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{}}}],["dashboardmodule",{"_index":1215,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardroutingmodule",{"_index":1220,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["data",{"_index":28,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"injectables/SnackbarService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["data.canceltext",{"_index":317,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.confirmtext",{"_index":318,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.message",{"_index":316,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.task?.name",{"_index":3246,"title":{},"body":{"components/TaskDialog.html":{}}}],["data.title",{"_index":315,"title":{},"body":{"components/AlertDialog.html":{}}}],["data.variant",{"_index":312,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["database",{"_index":3065,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["date",{"_index":171,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["date().gettime",{"_index":2591,"title":{},"body":{"classes/Random.html":{}}}],["date:'d",{"_index":2715,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:'eee",{"_index":2716,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:'mmmm",{"_index":2713,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'d",{"_index":2730,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'eee",{"_index":2731,"title":{},"body":{"components/SchedulePage.html":{}}}],["date:\\'mmmm",{"_index":2729,"title":{},"body":{"components/SchedulePage.html":{}}}],["datepicker",{"_index":2067,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["dates",{"_index":2699,"title":{},"body":{"components/SchedulePage.html":{}}}],["day",{"_index":2726,"title":{},"body":{"components/SchedulePage.html":{}}}],["dayjs",{"_index":782,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["dayjs().todate",{"_index":2703,"title":{},"body":{"components/SchedulePage.html":{}}}],["dayjs(date",{"_index":792,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["days",{"_index":2681,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{}}}],["dd",{"_index":795,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["de",{"_index":2854,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["deadline",{"_index":821,"title":{},"body":{"components/BoardTaskComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["debug",{"_index":3750,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["declarations",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["declare",{"_index":1655,"title":{},"body":{"interfaces/FormGroup.html":{}}}],["decorator",{"_index":3895,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["decorator.ts",{"_index":4030,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["decorators",{"_index":57,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/ButtonComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"additional-documentation/architecture.html":{}}}],["decorators/service.decorator",{"_index":367,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DialogService.html":{}}}],["dedicated",{"_index":4019,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["deep",{"_index":1631,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["deep.mat",{"_index":2063,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["default",{"_index":60,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/localization.html":{}}}],["defaults",{"_index":1844,"title":{},"body":{"components/IconComponent.html":{}}}],["define",{"_index":4034,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["defines",{"_index":978,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["definition",{"_index":1839,"title":{},"body":{"components/IconComponent.html":{}}}],["delete",{"_index":150,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["delete(id",{"_index":2780,"title":{},"body":{"injectables/SessionsService.html":{},"injectables/WorkspaceService.html":{}}}],["delete(key",{"_index":2500,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["delete(projectid",{"_index":2534,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["delete(url",{"_index":335,"title":{},"body":{"injectables/ApiService.html":{}}}],["deleteaccount",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"components/DeleteAccountPage.html":{}}}],["deleteaccount(token",{"_index":1274,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["deleteaccountconfirmation",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteaccountconfirmation(token",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteaccountmailcheck",{"_index":2788,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["deleteaccountpage",{"_index":149,"title":{"components/DeleteAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["deleteconnectedgithubaccount",{"_index":1711,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deleteconnectedgithubaccount(githubaccountid",{"_index":1733,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deleted",{"_index":1279,"title":{},"body":{"components/DeleteAccountPage.html":{},"interceptors/ErrorInterceptor.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["deletegithubintegration",{"_index":1712,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deletegithubintegration(projectid",{"_index":1739,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["deletemember",{"_index":2303,"title":{},"body":{"components/MemberListComponent.html":{}}}],["deletemember(id",{"_index":2309,"title":{},"body":{"components/MemberListComponent.html":{}}}],["deleteproject",{"_index":2414,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["deleteproject(project",{"_index":2429,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["deletes",{"_index":2536,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["deletesession",{"_index":2913,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["deletesession(id",{"_index":2921,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["deletetask",{"_index":3259,"title":{},"body":{"components/TaskListPage.html":{}}}],["deletetask(task",{"_index":3270,"title":{},"body":{"components/TaskListPage.html":{}}}],["deletewithconfirmation",{"_index":3352,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletewithconfirmation(projectid",{"_index":3367,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleteworkspace",{"_index":2415,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["deleteworkspace(workspace",{"_index":3708,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["deletion",{"_index":2682,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/WorkspacesListPage.html":{}}}],["dependencies",{"_index":401,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dependency",{"_index":334,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DialogService.html":{},"modules/MainModule.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["deploy",{"_index":4095,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["deploy.yml",{"_index":4096,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["describe",{"_index":1096,"title":{},"body":{"components/ControlAccessor.html":{},"additional-documentation/architecture.html":{}}}],["description",{"_index":255,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"modules/MainModule.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["descriptor",{"_index":1541,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["descriptor.value",{"_index":1543,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["destroy",{"_index":965,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["destroyed",{"_index":1001,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["detached",{"_index":666,"title":{},"body":{"components/BoardPage.html":{}}}],["details",{"_index":1991,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["determine",{"_index":3060,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["deutsch",{"_index":2855,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["dev",{"_index":3923,"title":{},"body":{"index.html":{}}}],["development",{"_index":3910,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dezaktywujacy",{"_index":2816,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["dialog",{"_index":20,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dialog's",{"_index":292,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["dialog'},{'name",{"_index":121,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["dialog.afterclosed().subscribe",{"_index":1334,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialog.close",{"_index":1338,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogref",{"_index":40,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["dialogs",{"_index":1287,"title":{},"body":{"injectables/DialogService.html":{},"additional-documentation/architecture.html":{}}}],["dialogs/add",{"_index":1233,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dialogs/alert/alert.dialog",{"_index":1328,"title":{},"body":{"injectables/DialogService.html":{},"modules/MainModule.html":{}}}],["dialogs/task/task.dialog",{"_index":601,"title":{},"body":{"components/BoardPage.html":{},"modules/TasksModule.html":{}}}],["dialogservice",{"_index":546,"title":{"injectables/DialogService.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dialogservice.alert",{"_index":1557,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["dialogsmap",{"_index":1288,"title":{},"body":{"injectables/DialogService.html":{}}}],["direction",{"_index":685,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["directive",{"_index":118,"title":{"directives/ClickStopPropagationDirective.html":{},"directives/FocusInitialDirective.html":{},"directives/LetDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["directive.ts",{"_index":4032,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["directives",{"_index":241,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["directives/click",{"_index":2263,"title":{},"body":{"modules/MainModule.html":{}}}],["directives/focus",{"_index":2265,"title":{},"body":{"modules/MainModule.html":{}}}],["directives/let.directive",{"_index":2267,"title":{},"body":{"modules/MainModule.html":{}}}],["directory",{"_index":3933,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["disable",{"_index":1111,"title":{},"body":{"components/ControlAccessor.html":{},"miscellaneous/variables.html":{}}}],["disableconsolelog",{"_index":3979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disabled",{"_index":1022,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["disconnect",{"_index":2074,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["disconnect(account",{"_index":1691,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["disconnectgithubissue",{"_index":1713,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["disconnectgithubissue(projectid",{"_index":1741,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["disconnectgithubpull",{"_index":1714,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["disconnectgithubpull(projectid",{"_index":1743,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["display",{"_index":682,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/architecture.html":{}}}],["displayed",{"_index":304,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["displays",{"_index":1159,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["dist",{"_index":3932,"title":{},"body":{"index.html":{}}}],["dni",{"_index":2822,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["document.addeventlistener('domcontentloaded",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["document.body.classlist.remove('preload",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":3722,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["dodac",{"_index":2800,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["done",{"_index":3062,"title":{},"body":{"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"interfaces/StatusWithTasks.html":{}}}],["download",{"_index":2662,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["drag",{"_index":731,"title":{},"body":{"components/BoardPage.html":{}}}],["dragdropmodule",{"_index":2194,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["dragging",{"_index":741,"title":{},"body":{"components/BoardPage.html":{}}}],["drop",{"_index":536,"title":{},"body":{"components/BoardPage.html":{},"modules/MainModule.html":{}}}],["drop(event",{"_index":550,"title":{},"body":{"components/BoardPage.html":{}}}],["due",{"_index":797,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["duration",{"_index":2979,"title":{},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["dynamic",{"_index":3836,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1532,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e.error.message",{"_index":1527,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e.status",{"_index":1523,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["e2e",{"_index":3941,"title":{},"body":{"index.html":{}}}],["e[0",{"_index":1501,"title":{},"body":{"classes/Enum.html":{}}}],["e[1",{"_index":1499,"title":{},"body":{"classes/Enum.html":{}}}],["each",{"_index":3999,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["ease",{"_index":706,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["edit",{"_index":153,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/localization.html":{}}}],["edited",{"_index":4080,"title":{},"body":{"additional-documentation/localization.html":{}}}],["editing",{"_index":1384,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["editor",{"_index":4081,"title":{},"body":{"additional-documentation/localization.html":{}}}],["editproject",{"_index":1360,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["editproject(project",{"_index":2432,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["editprojectmemberspage",{"_index":152,"title":{"components/EditProjectMembersPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["editprojectpage",{"_index":154,"title":{"components/EditProjectPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["editprojectwithworkspace",{"_index":1361,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["editprojectwithworkspace(newworkspaceid",{"_index":1366,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["edittask",{"_index":3260,"title":{},"body":{"components/TaskListPage.html":{}}}],["edittask(task",{"_index":3272,"title":{},"body":{"components/TaskListPage.html":{}}}],["editworkspace",{"_index":2416,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["editworkspace(workspace",{"_index":3711,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["editworkspacepage",{"_index":155,"title":{"components/EditWorkspacePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["el",{"_index":1639,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["element",{"_index":117,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"additional-documentation/localization.html":{}}}],["element'},{'name",{"_index":193,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["element.component",{"_index":2250,"title":{},"body":{"modules/MainModule.html":{}}}],["element.component.html",{"_index":2381,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.scss",{"_index":2380,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts",{"_index":2379,"title":{},"body":{"components/NavElementComponent.html":{},"coverage.html":{}}}],["element.component.ts:12",{"_index":2390,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:15",{"_index":2391,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:17",{"_index":2396,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:19",{"_index":2399,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:22",{"_index":2398,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:24",{"_index":2389,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:28",{"_index":2394,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:31",{"_index":2392,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:34",{"_index":2395,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.component.ts:42",{"_index":2393,"title":{},"body":{"components/NavElementComponent.html":{}}}],["element.scrollheight",{"_index":676,"title":{},"body":{"components/BoardPage.html":{}}}],["element.scrollheight}px",{"_index":3317,"title":{},"body":{"components/TaskListPage.html":{}}}],["element/nav",{"_index":2249,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementComponent.html":{},"coverage.html":{}}}],["elementref",{"_index":848,"title":{},"body":{"components/ButtonComponent.html":{},"directives/FocusInitialDirective.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["email",{"_index":64,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["emails",{"_index":984,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/MemberService.html":{},"components/SelectComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["emails.routing",{"_index":1447,"title":{},"body":{"modules/EmailsModule.html":{}}}],["emailsmessages",{"_index":2969,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["emailsmodule",{"_index":1442,"title":{"modules/EmailsModule.html":{}},"body":{"modules/EmailsModule.html":{},"modules.html":{},"overview.html":{}}}],["emailsroutingmodule",{"_index":1445,"title":{"modules/EmailsRoutingModule.html":{}},"body":{"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["emailvalidator",{"_index":2618,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emitevent",{"_index":2060,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["emits",{"_index":1034,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["empty",{"_index":1518,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["en",{"_index":2856,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["end",{"_index":825,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SnackbarOutletComponent.html":{},"components/UpperNavigationComponent.html":{},"index.html":{}}}],["endpoints",{"_index":3945,"title":{},"body":{"index.html":{}}}],["english",{"_index":2858,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["enter",{"_index":929,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["entity",{"_index":3677,"title":{},"body":{"interfaces/Workspace.html":{}}}],["entries",{"_index":1455,"title":{},"body":{"classes/Enum.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["entries(enumtype",{"_index":1458,"title":{},"body":{"classes/Enum.html":{}}}],["entry",{"_index":1987,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["entry'},{'name",{"_index":174,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["entry.component",{"_index":2880,"title":{},"body":{"modules/SettingsModule.html":{}}}],["entry.component.html",{"_index":2072,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.scss",{"_index":2071,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts",{"_index":2070,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"coverage.html":{}}}],["entry.component.ts:10",{"_index":2078,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:11",{"_index":2076,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:12",{"_index":2079,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:14",{"_index":2075,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:18",{"_index":2081,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry.component.ts:9",{"_index":2077,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["entry/integration",{"_index":2069,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["enum",{"_index":301,"title":{"classes/Enum.html":{}},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"classes/Enum.html":{},"components/RegisterPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{}}}],["enum.entries(subtasktype",{"_index":3202,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["enum.entries(tasktype",{"_index":3207,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["enum.entries(testenum",{"_index":1465,"title":{},"body":{"classes/Enum.html":{}}}],["enum.isnumeric(enumtype",{"_index":1490,"title":{},"body":{"classes/Enum.html":{}}}],["enum.keys(testenum",{"_index":1481,"title":{},"body":{"classes/Enum.html":{}}}],["enum.ts",{"_index":4036,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enum.values(testenum",{"_index":1484,"title":{},"body":{"classes/Enum.html":{}}}],["enumerable",{"_index":294,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"additional-documentation/architecture.html":{}}}],["enumeration",{"_index":4035,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enumerations",{"_index":3856,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":4033,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["enumtype",{"_index":1466,"title":{},"body":{"classes/Enum.html":{}}}],["environment",{"_index":363,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/continuos-integration.html":{}}}],["environment.apiurl",{"_index":361,"title":{},"body":{"injectables/ApiService.html":{}}}],["epic",{"_index":3443,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["error",{"_index":1044,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["error('this",{"_index":1782,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["error(error",{"_index":1570,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["error.error.message",{"_index":2639,"title":{},"body":{"components/RegisterPage.html":{}}}],["error.interface.ts",{"_index":3632,"title":{},"body":{"interfaces/ValidationError.html":{},"coverage.html":{}}}],["error.pipe",{"_index":2272,"title":{},"body":{"modules/MainModule.html":{}}}],["error.pipe.ts",{"_index":3642,"title":{},"body":{"pipes/ValidationErrorPipe.html":{},"coverage.html":{}}}],["error.pipe.ts:15",{"_index":3643,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["error.status",{"_index":2176,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["errorinterceptor",{"_index":1503,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":1076,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["errorvalidationtree",{"_index":1533,"title":{"interfaces/ErrorValidationTree.html":{}},"body":{"interfaces/ErrorValidationTree.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["errorvalidationtree[identifier",{"_index":1549,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["errorvalidationtree[identifier][status",{"_index":1552,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["es",{"_index":2860,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["eset",{"_index":1347,"title":{"classes/ESet.html":{}},"body":{"classes/ESet.html":{},"components/TaskListPage.html":{},"coverage.html":{}}}],["eslint",{"_index":1110,"title":{},"body":{"components/ControlAccessor.html":{}}}],["eslint/component",{"_index":1115,"title":{},"body":{"components/ControlAccessor.html":{}}}],["español",{"_index":2861,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["estimated",{"_index":3159,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["estimateddate",{"_index":3154,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["etc",{"_index":1071,"title":{},"body":{"components/ControlAccessor.html":{},"components/IconComponent.html":{},"interfaces/RequestOptions.html":{},"interfaces/ValidationError.html":{}}}],["event",{"_index":553,"title":{},"body":{"components/BoardPage.html":{},"directives/ClickStopPropagationDirective.html":{},"components/SchedulePage.html":{}}}],["event('click",{"_index":1062,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["event.container",{"_index":643,"title":{},"body":{"components/BoardPage.html":{}}}],["event.container.data",{"_index":635,"title":{},"body":{"components/BoardPage.html":{}}}],["event.currentindex",{"_index":636,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer",{"_index":642,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.data",{"_index":634,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.data[previoustaskindex",{"_index":632,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previouscontainer.element.nativeelement.dataset['index",{"_index":623,"title":{},"body":{"components/BoardPage.html":{}}}],["event.previousindex",{"_index":631,"title":{},"body":{"components/BoardPage.html":{}}}],["event.stoppropagation",{"_index":1060,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["eventemitter",{"_index":2080,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["events",{"_index":877,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputComponent.html":{},"interfaces/RequestOptions.html":{}}}],["ex",{"_index":1759,"title":{},"body":{"injectables/GitIntegrationService.html":{},"additional-documentation/architecture.html":{}}}],["example",{"_index":829,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"interfaces/Project.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["example.page.html",{"_index":3896,"title":{},"body":{"miscellaneous/functions.html":{}}}],["example.page.scss",{"_index":3897,"title":{},"body":{"miscellaneous/functions.html":{}}}],["examplemodule",{"_index":2193,"title":{},"body":{"modules/MainModule.html":{}}}],["exclusive",{"_index":2597,"title":{},"body":{"classes/Random.html":{}}}],["execute",{"_index":3936,"title":{},"body":{"index.html":{}}}],["exist",{"_index":3705,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["existing",{"_index":3165,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["expanded",{"_index":3325,"title":{},"body":{"components/TaskListPage.html":{}}}],["expandedsubtasks",{"_index":3255,"title":{},"body":{"components/TaskListPage.html":{}}}],["expect",{"_index":2666,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["expecttofail",{"_index":3824,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["expecttofail(val",{"_index":3882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expecttopass",{"_index":3825,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["expecttopass(val",{"_index":3883,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expired",{"_index":1531,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["export",{"_index":85,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["exportdeclarations",{"_index":2279,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["exported",{"_index":2280,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["extended",{"_index":1080,"title":{},"body":{"components/ControlAccessor.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["extends",{"_index":960,"title":{},"body":{"components/CheckboxComponent.html":{},"classes/ESet.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{}}}],["extension",{"_index":4007,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["extensions.service",{"_index":80,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["extensions.service.ts",{"_index":2685,"title":{},"body":{"injectables/RouterExtensionsService.html":{},"coverage.html":{}}}],["extensions.service.ts:7",{"_index":2687,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["extensions.service.ts:9",{"_index":2689,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["external",{"_index":2278,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/localization.html":{}}}],["extract",{"_index":4077,"title":{},"body":{"additional-documentation/localization.html":{}}}],["extract:i18neach",{"_index":4079,"title":{},"body":{"additional-documentation/localization.html":{}}}],["f1",{"_index":4087,"title":{},"body":{"additional-documentation/localization.html":{}}}],["f39c12",{"_index":2368,"title":{},"body":{"components/MockPage.html":{},"pipes/StatusColorPipe.html":{}}}],["fa",{"_index":1840,"title":{},"body":{"components/IconComponent.html":{}}}],["faaddresscard",{"_index":2892,"title":{},"body":{"components/SettingsPage.html":{}}}],["faangledown",{"_index":1643,"title":{},"body":{"components/ForgotPasswordPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["facheck",{"_index":529,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["fachevronright",{"_index":530,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["facirclenodes",{"_index":2893,"title":{},"body":{"components/SettingsPage.html":{}}}],["faclose",{"_index":2977,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["facodecommit",{"_index":531,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["facodepullrequest",{"_index":532,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["facog",{"_index":3507,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["fafilter",{"_index":3653,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["fagithub",{"_index":3662,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["faglobe",{"_index":2894,"title":{},"body":{"components/SettingsPage.html":{}}}],["false",{"_index":284,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/variables.html":{}}}],["fapentosquare",{"_index":3655,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["faplus",{"_index":533,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["faquestion",{"_index":1882,"title":{},"body":{"components/IconComponent.html":{},"components/OptionComponent.html":{}}}],["fas",{"_index":1860,"title":{},"body":{"components/IconComponent.html":{}}}],["fasignout",{"_index":3508,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["fauser",{"_index":2895,"title":{},"body":{"components/SettingsPage.html":{},"components/UpperNavigationComponent.html":{}}}],["fff",{"_index":823,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["field",{"_index":979,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["fields",{"_index":991,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["filed",{"_index":1031,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["filename",{"_index":4004,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["files",{"_index":3927,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["fill",{"_index":981,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["filter",{"_index":1325,"title":{},"body":{"injectables/DialogService.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"miscellaneous/typealiases.html":{}}}],["filter((closed",{"_index":1787,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["filter((e",{"_index":1497,"title":{},"body":{"classes/Enum.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["filter((v",{"_index":1492,"title":{},"body":{"classes/Enum.html":{}}}],["filter.label",{"_index":1627,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filter.type",{"_index":1629,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filter.value",{"_index":1624,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtercheckbox",{"_index":1575,"title":{"interfaces/FilterCheckbox.html":{}},"body":{"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["filters",{"_index":1581,"title":{"classes/Filters.html":{}},"body":{"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filters'},{'name",{"_index":157,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["filters(filters",{"_index":1611,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.html",{"_index":1597,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.scss",{"_index":1596,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.map((filter",{"_index":1613,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.operator",{"_index":3385,"title":{},"body":{"injectables/TaskService.html":{}}}],["filters.operator.ts",{"_index":3759,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filterscomponent",{"_index":156,"title":{"components/FiltersComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filterscontrol",{"_index":3256,"title":{},"body":{"components/TaskListPage.html":{},"components/ViewOptionsComponent-1.html":{}}}],["filtertype",{"_index":1580,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"miscellaneous/typealiases.html":{}}}],["filtervalue",{"_index":1622,"title":{},"body":{"components/FiltersComponent.html":{}}}],["final",{"_index":3059,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["find",{"_index":3611,"title":{},"body":{"classes/Utils.html":{}}}],["finished",{"_index":347,"title":{},"body":{"injectables/ApiService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["finishing",{"_index":650,"title":{},"body":{"components/BoardPage.html":{}}}],["first",{"_index":711,"title":{},"body":{"components/BoardPage.html":{},"directives/FocusInitialDirective.html":{},"classes/Utils.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["flex",{"_index":683,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["floating",{"_index":2005,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["floatinglabel",{"_index":1998,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/TextareaComponent.html":{}}}],["fn",{"_index":1016,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["focus",{"_index":833,"title":{},"body":{"components/ButtonComponent.html":{},"directives/FocusInitialDirective.html":{}}}],["focusableoption",{"_index":830,"title":{},"body":{"components/ButtonComponent.html":{}}}],["focused",{"_index":1995,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["focusinitialdirective",{"_index":246,"title":{"directives/FocusInitialDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["folder",{"_index":4017,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["font",{"_index":1048,"title":{},"body":{"components/CheckboxComponent.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{}}}],["fontawesome",{"_index":2236,"title":{},"body":{"modules/MainModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":2234,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["forgot",{"_index":159,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["forgotpasswordpage",{"_index":158,"title":{"components/ForgotPasswordPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":29,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["formarray",{"_index":1606,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formcontrol",{"_index":65,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"classes/TestNgControl.html":{},"components/ViewOptionsComponent-1.html":{}}}],["formcontrol(false",{"_index":3195,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(filter.value",{"_index":1614,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formcontrol(null",{"_index":1382,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/IntegrationGithubComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["formcontrol(projectid",{"_index":1394,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["formcontrol(tasktype.task",{"_index":3192,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(this.taskpriorities[2",{"_index":3194,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formcontrol(workspaceid",{"_index":1180,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["formfields",{"_index":2628,"title":{},"body":{"components/RegisterPage.html":{}}}],["formgroup",{"_index":63,"title":{"interfaces/FormGroup.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{}}}],["forms",{"_index":1010,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["formsmodule",{"_index":2204,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["formvalue",{"_index":1620,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formvalue.push(filter",{"_index":1625,"title":{},"body":{"components/FiltersComponent.html":{}}}],["formvalues",{"_index":101,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formvalues.connectwithissueongithub",{"_index":3241,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formvalues.createissue",{"_index":3243,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["formvalues.issueattachgithub",{"_index":3242,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["fortawesome/angular",{"_index":2235,"title":{},"body":{"modules/MainModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":1878,"title":{},"body":{"components/IconComponent.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":592,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["forwards",{"_index":3016,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["found",{"_index":1869,"title":{},"body":{"components/IconComponent.html":{}}}],["fragment",{"_index":2027,"title":{},"body":{"components/InputComponent.html":{}}}],["fragments",{"_index":2026,"title":{},"body":{"components/InputComponent.html":{}}}],["fromevent",{"_index":1940,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["fromevent(document",{"_index":1957,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["full",{"_index":1256,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["fullname",{"_index":1665,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["function",{"_index":1005,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"interfaces/FormGroup.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"classes/Utils.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":4029,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["functions",{"_index":1452,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Enum.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["future",{"_index":4070,"title":{},"body":{"additional-documentation/localization.html":{}}}],["g",{"_index":3922,"title":{},"body":{"index.html":{}}}],["gb",{"_index":2857,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["general",{"_index":3659,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["generate",{"_index":3380,"title":{},"body":{"injectables/TaskService.html":{}}}],["generates",{"_index":3379,"title":{},"body":{"injectables/TaskService.html":{}}}],["generation",{"_index":2583,"title":{},"body":{"classes/Random.html":{}}}],["generator.js",{"_index":4109,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["geoip",{"_index":3553,"title":{},"body":{"interfaces/UserSession.html":{}}}],["german",{"_index":4050,"title":{},"body":{"additional-documentation/localization.html":{}}}],["germany",{"_index":4051,"title":{},"body":{"additional-documentation/localization.html":{}}}],["get('/user/integration/github",{"_index":1794,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["get(id",{"_index":3688,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["get(projectid",{"_index":2537,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/StatusService.html":{}}}],["get(url",{"_index":348,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(workspaceid",{"_index":3227,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["getassignee",{"_index":1929,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["getcolorbyid",{"_index":3561,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyid(id",{"_index":3563,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyusername",{"_index":3562,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorbyusername(username",{"_index":3565,"title":{},"body":{"classes/UserUtils.html":{}}}],["getcolorstyle",{"_index":2997,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["getcolumnscontainerheight",{"_index":537,"title":{},"body":{"components/BoardPage.html":{}}}],["getcolumnscontainerheight(mapkey",{"_index":554,"title":{},"body":{"components/BoardPage.html":{}}}],["getconnectedgithubaccounts",{"_index":1715,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getconnectedprojects",{"_index":2836,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["getconnectedprojects(account",{"_index":1695,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["getcontrol",{"_index":1099,"title":{},"body":{"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"classes/TestNgControl.html":{}}}],["getcontrol(index",{"_index":1602,"title":{},"body":{"components/FiltersComponent.html":{}}}],["getdates",{"_index":2710,"title":{},"body":{"components/SchedulePage.html":{}}}],["geterrors",{"_index":1103,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getfilters",{"_index":1608,"title":{},"body":{"components/FiltersComponent.html":{}}}],["getgithubaccountconnectedprojects",{"_index":1716,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getgithubaccountconnectedprojects(account",{"_index":1697,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["getgithubintegration",{"_index":1717,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["getheight",{"_index":1866,"title":{},"body":{"components/IconComponent.html":{}}}],["geticon",{"_index":1862,"title":{},"body":{"components/IconComponent.html":{}}}],["geticondefinition",{"_index":1867,"title":{},"body":{"components/IconComponent.html":{}}}],["getisanydialogopen",{"_index":1322,"title":{},"body":{"injectables/DialogService.html":{}}}],["getisopen",{"_index":1933,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["getmyself",{"_index":3543,"title":{},"body":{"injectables/UserService.html":{}}}],["getname",{"_index":1097,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getrequired",{"_index":1094,"title":{},"body":{"components/ControlAccessor.html":{}}}],["gets",{"_index":2539,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/WorkspaceService.html":{}}}],["getselected",{"_index":2750,"title":{},"body":{"components/SelectComponent.html":{}}}],["getsnakecasename",{"_index":1872,"title":{},"body":{"components/IconComponent.html":{}}}],["getsnapshot",{"_index":2688,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["getstatus",{"_index":3261,"title":{},"body":{"components/TaskListPage.html":{}}}],["getstatus(statusid",{"_index":3274,"title":{},"body":{"components/TaskListPage.html":{}}}],["getstyle",{"_index":1870,"title":{},"body":{"components/IconComponent.html":{}}}],["getsubscription",{"_index":1358,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["getsubtaskscontainerheight",{"_index":3262,"title":{},"body":{"components/TaskListPage.html":{}}}],["getsubtaskscontainerheight(taskid",{"_index":3276,"title":{},"body":{"components/TaskListPage.html":{}}}],["gettasksfromstatus",{"_index":538,"title":{},"body":{"components/BoardPage.html":{}}}],["gettasksfromstatus(statusid",{"_index":558,"title":{},"body":{"components/BoardPage.html":{}}}],["getter",{"_index":1854,"title":{},"body":{"components/IconComponent.html":{}}}],["getting",{"_index":1386,"title":{"index.html":{},"license.html":{}},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"index.html":{}}}],["getvalue",{"_index":1101,"title":{},"body":{"components/ControlAccessor.html":{}}}],["getviewvalue",{"_index":2488,"title":{},"body":{"components/OptionComponent.html":{}}}],["getwidth",{"_index":1865,"title":{},"body":{"components/IconComponent.html":{}}}],["git",{"_index":1703,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["gitaccount",{"_index":1659,"title":{"interfaces/GitAccount.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/SettingsIntegrationsPage.html":{},"coverage.html":{}}}],["gitaccountwithusage",{"_index":1671,"title":{"interfaces/GitAccountWithUsage.html":{}},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"coverage.html":{}}}],["github",{"_index":161,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"additional-documentation/continuos-integration.html":{}}}],["github'},{'name",{"_index":176,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["github.component",{"_index":1225,"title":{},"body":{"modules/DashboardModule.html":{}}}],["github.component.html",{"_index":2087,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.scss",{"_index":2086,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts",{"_index":2085,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"coverage.html":{}}}],["github.component.ts:14",{"_index":2095,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:16",{"_index":2101,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:17",{"_index":2094,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:21",{"_index":2100,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:25",{"_index":2097,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:31",{"_index":2098,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:39",{"_index":2096,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.component.ts:45",{"_index":2099,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["github.dev",{"_index":2471,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["github/integration",{"_index":1224,"title":{},"body":{"modules/DashboardModule.html":{},"components/IntegrationGithubComponent.html":{},"coverage.html":{}}}],["github/workflows",{"_index":4093,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["githubaccountid",{"_index":1736,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubaccounts",{"_index":1683,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["githubintegration",{"_index":2520,"title":{},"body":{"interfaces/Project.html":{}}}],["githubintegrationpage",{"_index":160,"title":{"components/GithubIntegrationPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["githubissuelist",{"_index":1718,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubissuelist(projectid",{"_index":1748,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubpulllist",{"_index":1719,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubpulllist(projectid",{"_index":1750,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["githubusername",{"_index":1662,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["gitintegration",{"_index":1666,"title":{"interfaces/GitIntegration.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"coverage.html":{}}}],["gitintegrationservice",{"_index":1221,"title":{"injectables/GitIntegrationService.html":{}},"body":{"modules/DashboardModule.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["gitissue",{"_index":1668,"title":{"interfaces/GitIssue.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"coverage.html":{}}}],["gitpull",{"_index":1669,"title":{"interfaces/GitPull.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"coverage.html":{}}}],["gitrepositories",{"_index":1667,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{}}}],["gitrepository",{"_index":1664,"title":{"interfaces/GitRepository.html":{}},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IntegrationGithubComponent.html":{},"coverage.html":{}}}],["give",{"_index":982,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["given",{"_index":1315,"title":{},"body":{"injectables/DialogService.html":{},"classes/Enum.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{}}}],["global",{"_index":1656,"title":{},"body":{"interfaces/FormGroup.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":3920,"title":{},"body":{"index.html":{}}}],["going",{"_index":1280,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["graph",{"_index":3955,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":940,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["greater",{"_index":3893,"title":{},"body":{"miscellaneous/functions.html":{}}}],["green",{"_index":3006,"title":{},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{}}}],["group",{"_index":910,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{}}}],["group'},{'name",{"_index":181,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["group.component",{"_index":2882,"title":{},"body":{"modules/SettingsModule.html":{}}}],["group.component.html",{"_index":2136,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.scss",{"_index":2135,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.ts",{"_index":2134,"title":{},"body":{"components/ListGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:13",{"_index":2138,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group.component.ts:9",{"_index":2137,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["group/list",{"_index":2133,"title":{},"body":{"components/ListGroupComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{}}}],["grouped",{"_index":4024,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["grouping",{"_index":3676,"title":{},"body":{"interfaces/Workspace.html":{}}}],["grow",{"_index":2029,"title":{},"body":{"components/InputComponent.html":{},"components/MainViewComponent.html":{},"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{}}}],["guard",{"_index":2142,"title":{"guards/LoggedInUsersGuard.html":{}},"body":{"coverage.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["guard.ts",{"_index":4039,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["guards",{"_index":2143,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"additional-documentation/architecture.html":{}}}],["h2",{"_index":943,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["h3",{"_index":723,"title":{},"body":{"components/BoardPage.html":{}}}],["h4",{"_index":2139,"title":{},"body":{"components/ListGroupComponent.html":{}}}],["h:mm",{"_index":2939,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["handleerror",{"_index":2155,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["handleerror(error",{"_index":2158,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["has(object",{"_index":3599,"title":{},"body":{"classes/Utils.html":{}}}],["hasgithubintegration",{"_index":1720,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["hasgithubintegration(projectid",{"_index":1752,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["header",{"_index":713,"title":{},"body":{"components/BoardPage.html":{},"components/CardComponent.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["headers",{"_index":2650,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["heading",{"_index":816,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/SchedulePage.html":{}}}],["height",{"_index":684,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["hello",{"_index":4005,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["here",{"_index":1283,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"index.html":{}}}],["hh:mm",{"_index":796,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["hidden",{"_index":702,"title":{},"body":{"components/BoardPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{}}}],["hidenavigation",{"_index":1259,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["high",{"_index":3337,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["highest",{"_index":3339,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["highly",{"_index":2824,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["hint",{"_index":1999,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["hook",{"_index":1375,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"directives/FocusInitialDirective.html":{},"components/WorkspacesListPage.html":{}}}],["host",{"_index":279,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CardComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["host.focused",{"_index":2032,"title":{},"body":{"components/InputComponent.html":{}}}],["host.ng",{"_index":2037,"title":{},"body":{"components/InputComponent.html":{}}}],["host:not(.focused",{"_index":2035,"title":{},"body":{"components/InputComponent.html":{}}}],["hostbinding",{"_index":297,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/SnackbarComponent.html":{}}}],["hostbinding('class.focused",{"_index":2015,"title":{},"body":{"components/InputComponent.html":{}}}],["hostbinding('class.important",{"_index":296,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["hostbinding('style.animation",{"_index":2995,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["hostbinding('style.height",{"_index":1897,"title":{},"body":{"components/IconComponent.html":{}}}],["hostbinding('style.width",{"_index":1895,"title":{},"body":{"components/IconComponent.html":{}}}],["hostbindings",{"_index":266,"title":{},"body":{"components/AlertDialog.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/SnackbarComponent.html":{}}}],["hostlistener",{"_index":1059,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hostlistener('click",{"_index":1058,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hostlisteners",{"_index":1054,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["hosts",{"_index":1849,"title":{},"body":{"components/IconComponent.html":{}}}],["hover",{"_index":750,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["html",{"_index":116,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["htmlelement",{"_index":555,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["http",{"_index":359,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://localhost:4200",{"_index":3925,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":2202,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":332,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["httpclientmodule",{"_index":2201,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["httpcontext",{"_index":2656,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httpevent",{"_index":1515,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":1511,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpheaders",{"_index":2657,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httpinterceptor",{"_index":1516,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpparams",{"_index":2659,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["httprequest",{"_index":1510,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["https://nodejs.org/en",{"_index":3914,"title":{},"body":{"index.html":{}}}],["https://workflow.adiantek.ovh/${this.form.value.language}/settings/localization",{"_index":2870,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["hue",{"_index":3571,"title":{},"body":{"classes/UserUtils.html":{}}}],["human",{"_index":3636,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"additional-documentation/localization.html":{}}}],["i18n",{"_index":4064,"title":{},"body":{"additional-documentation/localization.html":{}}}],["icon",{"_index":698,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["icon'},{'name",{"_index":164,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["icon(value",{"_index":1883,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.html",{"_index":1833,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":1832,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.hide",{"_index":860,"title":{},"body":{"components/ButtonComponent.html":{}}}],["icon.pipe",{"_index":3474,"title":{},"body":{"modules/TasksModule.html":{}}}],["icon.pipe.ts",{"_index":3328,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"coverage.html":{}}}],["icon.pipe.ts:7",{"_index":3330,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskTypeIconPipe.html":{}}}],["iconcomponent",{"_index":163,"title":{"components/IconComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icondefinition",{"_index":835,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{},"components/OptionComponent.html":{}}}],["iconname",{"_index":1857,"title":{},"body":{"components/IconComponent.html":{}}}],["iconprefix",{"_index":1859,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":595,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["id",{"_index":744,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"components/NavElementWorkspaceComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{}}}],["id).subscribe",{"_index":2316,"title":{},"body":{"components/MemberListComponent.html":{}}}],["identifier",{"_index":1544,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"injectables/ProjectService.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"injectables/WorkspaceService.html":{},"coverage.html":{}}}],["idof",{"_index":539,"title":{},"body":{"components/BoardPage.html":{}}}],["idof(o",{"_index":561,"title":{},"body":{"components/BoardPage.html":{}}}],["ids",{"_index":2338,"title":{},"body":{"injectables/MemberService.html":{}}}],["image",{"_index":934,"title":{},"body":{"components/ChangePasswordPage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"modules/EmailsRoutingModule.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"modules/TasksRoutingModule.html":{}}}],["img",{"_index":2367,"title":{},"body":{"components/MockPage.html":{}}}],["immediately",{"_index":999,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectPage.html":{},"interceptors/ErrorInterceptor.html":{},"directives/FocusInitialDirective.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/WorkspacesListPage.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["import('../settings/settings.module').then((m",{"_index":1257,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["import('../tasks/tasks.module').then((m",{"_index":1267,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["import('./auth/auth.module').then((m",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./dashboard/dashboard.module').then((m",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./emails/emails.module').then((m",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./messages/messages.module').then((m",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":264,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputDateTimeComponent.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/architecture.html":{}}}],["important_data",{"_index":2626,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["importexports",{"_index":2277,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["imports",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":814,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["included",{"_index":4104,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["inclusive",{"_index":2595,"title":{},"body":{"classes/Random.html":{}}}],["increase",{"_index":2827,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["independent",{"_index":3907,"title":{},"body":{"index.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1536,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["indexof",{"_index":3622,"title":{},"body":{"classes/Utils.html":{}}}],["indicate",{"_index":285,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["indicates",{"_index":302,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["infomracja",{"_index":2811,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["information",{"_index":838,"title":{},"body":{"components/ButtonComponent.html":{},"components/ControlAccessor.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/StatusService.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["information's",{"_index":3996,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["inherited",{"_index":976,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["initassigneechanging",{"_index":3263,"title":{},"body":{"components/TaskListPage.html":{}}}],["initcheckfortouch",{"_index":969,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["initial.directive",{"_index":2266,"title":{},"body":{"modules/MainModule.html":{}}}],["initial.directive.ts",{"_index":1633,"title":{},"body":{"directives/FocusInitialDirective.html":{},"coverage.html":{}}}],["initial.directive.ts:19",{"_index":1640,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["initial.directive.ts:9",{"_index":1638,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["initialization",{"_index":1011,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["initialize",{"_index":1079,"title":{},"body":{"components/ControlAccessor.html":{},"directives/FocusInitialDirective.html":{},"miscellaneous/functions.html":{}}}],["initializer",{"_index":3887,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initmocks",{"_index":3813,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["inject",{"_index":72,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["inject(mat_dialog_data",{"_index":58,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["injectable",{"_index":319,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"coverage.html":{}}}],["injectables",{"_index":321,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"overview.html":{}}}],["injection",{"_index":3357,"title":{},"body":{"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{}}}],["injector",{"_index":2203,"title":{},"body":{"modules/MainModule.html":{}}}],["injects",{"_index":270,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["inline",{"_index":1652,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["input",{"_index":166,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["input'},{'name",{"_index":169,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["input.component.html",{"_index":1994,"title":{},"body":{"components/InputComponent.html":{}}}],["input.component.scss",{"_index":1993,"title":{},"body":{"components/InputComponent.html":{}}}],["input::placeholder",{"_index":2036,"title":{},"body":{"components/InputComponent.html":{}}}],["inputassigneecomponent",{"_index":165,"title":{"components/InputAssigneeComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["inputcomponent",{"_index":168,"title":{"components/InputComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inputdatetimecomponent",{"_index":170,"title":{"components/InputDateTimeComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inputs",{"_index":765,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/MemberListComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["inputstring",{"_index":3620,"title":{},"body":{"classes/Utils.html":{}}}],["insiders",{"_index":2475,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["insiders://vscode.git/clone?url=https://github.com/${project.githubintegration",{"_index":2469,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["install",{"_index":3911,"title":{},"body":{"index.html":{}}}],["installand",{"_index":3918,"title":{},"body":{"index.html":{}}}],["installation_id",{"_index":1821,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["installationid",{"_index":1764,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["instance",{"_index":274,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"injectables/DialogService.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["instances",{"_index":3902,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instead",{"_index":3166,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"index.html":{}}}],["int",{"_index":2654,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["integration",{"_index":162,"title":{"additional-documentation/continuos-integration.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/continuos-integration.html":{}}}],["integration.gitrepositories",{"_index":2107,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["integration.interface",{"_index":1677,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["integration.interface.ts",{"_index":1661,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"coverage.html":{}}}],["integration.page",{"_index":1253,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["integration.page.html",{"_index":1818,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.scss",{"_index":1817,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.ts",{"_index":1816,"title":{},"body":{"components/GithubIntegrationPage.html":{},"coverage.html":{}}}],["integration.page.ts:10",{"_index":1819,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.page.ts:16",{"_index":1820,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["integration.service",{"_index":1248,"title":{},"body":{"modules/DashboardModule.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["integration.service.ts",{"_index":1702,"title":{},"body":{"injectables/GitIntegrationService.html":{},"coverage.html":{}}}],["integration.service.ts:103",{"_index":1742,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:107",{"_index":1751,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:111",{"_index":1732,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:117",{"_index":1744,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:128",{"_index":1755,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:133",{"_index":1746,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:25",{"_index":1723,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:33",{"_index":1765,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:50",{"_index":1763,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:56",{"_index":1747,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:60",{"_index":1726,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:66",{"_index":1745,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:81",{"_index":1734,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:85",{"_index":1740,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:89",{"_index":1753,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:93",{"_index":1749,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration.service.ts:97",{"_index":1730,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["integration/github",{"_index":1252,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/GithubIntegrationPage.html":{},"coverage.html":{}}}],["integrationentrycomponent",{"_index":173,"title":{"components/IntegrationEntryComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["integrationgithubcomponent",{"_index":175,"title":{"components/IntegrationGithubComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["integrations",{"_index":1680,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{}}}],["integrations'},{'name",{"_index":212,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["integrations.page",{"_index":2884,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["integrations.page.html",{"_index":1681,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.scss",{"_index":1682,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts",{"_index":1674,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"coverage.html":{}}}],["integrations.page.ts:17",{"_index":2837,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:21",{"_index":2841,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:25",{"_index":2840,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:38",{"_index":2838,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations.page.ts:44",{"_index":2839,"title":{},"body":{"components/SettingsIntegrationsPage.html":{}}}],["integrations/settings",{"_index":1673,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{}}}],["intercept",{"_index":1507,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(req",{"_index":1509,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":1502,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1504,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptors/error.interceptor",{"_index":2268,"title":{},"body":{"modules/MainModule.html":{}}}],["interface",{"_index":86,"title":{"interfaces/AddMemberDialogData.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"interfaces/ModifyUser.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"interfaces/ModifyUser.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{},"coverage.html":{},"additional-documentation/localization.html":{}}}],["interfaces",{"_index":253,"title":{},"body":{"interfaces/AddMemberDialogData.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"interfaces/LetContext.html":{},"interfaces/ModifyUser.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"interfaces/RequestOptions.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/SnackbarData.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/ValidationError.html":{},"interfaces/Workspace.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["interfaces/project.interface",{"_index":2543,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{}}}],["interfaces/request",{"_index":368,"title":{},"body":{"injectables/ApiService.html":{}}}],["interfaces/session.interface",{"_index":2926,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["interfaces/status.interface",{"_index":602,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{}}}],["interfaces/task.interface",{"_index":603,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{}}}],["interfaces/workspace.interface",{"_index":2567,"title":{},"body":{"components/ProjectsListPage.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["interval",{"_index":1772,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["interval(100).pipe",{"_index":1785,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["invalid",{"_index":2039,"title":{},"body":{"components/InputComponent.html":{}}}],["invalid.ng",{"_index":1043,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["invoked",{"_index":998,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["ip",{"_index":3554,"title":{},"body":{"interfaces/UserSession.html":{}}}],["isanydialogopen",{"_index":1294,"title":{},"body":{"injectables/DialogService.html":{}}}],["isbuttondisabled",{"_index":3512,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["isdisabled",{"_index":1023,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["isfiltersopen",{"_index":3663,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["isgithubintegrationavailable",{"_index":3172,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["isletter",{"_index":3596,"title":{},"body":{"classes/Utils.html":{}}}],["isletter(char",{"_index":3602,"title":{},"body":{"classes/Utils.html":{}}}],["isloggedin",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnumeric",{"_index":1456,"title":{},"body":{"classes/Enum.html":{}}}],["isnumeric(enumtype",{"_index":1471,"title":{},"body":{"classes/Enum.html":{}}}],["isopen",{"_index":1908,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["isopen(val",{"_index":1954,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["isownerofrepository",{"_index":1721,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["isownerofrepository(repositoryname",{"_index":1754,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["issubtasksrow",{"_index":3257,"title":{},"body":{"components/TaskListPage.html":{}}}],["issue",{"_index":1729,"title":{},"body":{"injectables/GitIntegrationService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"miscellaneous/enumerations.html":{}}}],["issue.title",{"_index":3249,"title":{},"body":{"components/TaskDialog.html":{}}}],["issueattachgithub",{"_index":3167,"title":{},"body":{"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["issuelist",{"_index":3173,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["issuenumbergithub",{"_index":3240,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["it's",{"_index":1758,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsAccountPage.html":{},"index.html":{},"additional-documentation/architecture.html":{}}}],["it\\'s",{"_index":2835,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["italian",{"_index":4057,"title":{},"body":{"additional-documentation/localization.html":{}}}],["italiano",{"_index":2862,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["italy",{"_index":4058,"title":{},"body":{"additional-documentation/localization.html":{}}}],["items",{"_index":715,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["jego",{"_index":2820,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["jesli",{"_index":2809,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["join",{"_index":3628,"title":{},"body":{"classes/Utils.html":{}}}],["js",{"_index":2191,"title":{},"body":{"modules/MainModule.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{}}}],["json",{"_index":376,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["json.parse(localstorage.getitem(persistentkey",{"_index":2515,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["json.stringify([...this.entries",{"_index":2512,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["justify",{"_index":717,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["k",{"_index":1489,"title":{},"body":{"classes/Enum.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["karma",{"_index":3938,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":1353,"title":{},"body":{"classes/ESet.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"classes/PersistentMap.html":{},"components/SelectComponent.html":{},"classes/Utils.html":{}}}],["keyframes",{"_index":3021,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["keys",{"_index":1457,"title":{},"body":{"classes/Enum.html":{},"classes/Utils.html":{}}}],["keys(enumtype",{"_index":1479,"title":{},"body":{"classes/Enum.html":{}}}],["kingdom",{"_index":4053,"title":{},"body":{"additional-documentation/localization.html":{}}}],["konta",{"_index":2808,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["konto",{"_index":2817,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["label",{"_index":691,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["label'},{'name",{"_index":227,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["label.component",{"_index":3467,"title":{},"body":{"modules/TasksModule.html":{}}}],["label.component.html",{"_index":3082,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.scss",{"_index":3081,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts",{"_index":3080,"title":{},"body":{"components/StatusLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:16",{"_index":3091,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:17",{"_index":3086,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:18",{"_index":3088,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:19",{"_index":3089,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:20",{"_index":3087,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:28",{"_index":3085,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:34",{"_index":3099,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:36",{"_index":3100,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:37",{"_index":3097,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:39",{"_index":3103,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:43",{"_index":3102,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:47",{"_index":3093,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:59",{"_index":3092,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:63",{"_index":3096,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label.component.ts:70",{"_index":3095,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["label/status",{"_index":3079,"title":{},"body":{"components/StatusLabelComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["label::after",{"_index":2040,"title":{},"body":{"components/InputComponent.html":{}}}],["labels",{"_index":2083,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["landing",{"_index":178,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["landingpagecomponent",{"_index":177,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["language",{"_index":2852,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["language.name",{"_index":2871,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["languages",{"_index":2846,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["last",{"_index":983,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/WorkspacesListPage.html":{}}}],["lastused",{"_index":3555,"title":{},"body":{"interfaces/UserSession.html":{}}}],["layout",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["leas",{"_index":1475,"title":{},"body":{"classes/Enum.html":{}}}],["leave",{"_index":2322,"title":{},"body":{"injectables/MemberService.html":{}}}],["leave(projectid",{"_index":2328,"title":{},"body":{"injectables/MemberService.html":{}}}],["left",{"_index":694,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/MockPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["legend",{"_index":115,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["length",{"_index":3892,"title":{},"body":{"miscellaneous/functions.html":{}}}],["length.validator",{"_index":1172,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["length.validator.ts",{"_index":3767,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["letcontext",{"_index":2117,"title":{"interfaces/LetContext.html":{}},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"coverage.html":{}}}],["letdirective",{"_index":248,"title":{"directives/LetDirective.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["letter",{"_index":3605,"title":{},"body":{"classes/Utils.html":{}}}],["letters",{"_index":4002,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["lg",{"_index":952,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["li",{"_index":1983,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{}}}],["libraries",{"_index":3595,"title":{},"body":{"classes/Utils.html":{}}}],["library",{"_index":3948,"title":{},"body":{"index.html":{}}}],["license",{"_index":2644,"title":{"license.html":{}},"body":{"components/RegisterPage.html":{},"license.html":{}}}],["lifecycle",{"_index":1374,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"directives/FocusInitialDirective.html":{},"components/WorkspacesListPage.html":{}}}],["limitafter",{"_index":2697,"title":{},"body":{"components/SchedulePage.html":{}}}],["limitbefore",{"_index":2698,"title":{},"body":{"components/SchedulePage.html":{}}}],["line",{"_index":1113,"title":{},"body":{"components/ControlAccessor.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{}}}],["link",{"_index":1284,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["list",{"_index":180,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/localization.html":{}}}],["list'},{'name",{"_index":188,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["list(projectid",{"_index":2330,"title":{},"body":{"injectables/MemberService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["list.component",{"_index":1228,"title":{},"body":{"modules/DashboardModule.html":{}}}],["list.component.html",{"_index":2302,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.scss",{"_index":2301,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts",{"_index":2300,"title":{},"body":{"components/MemberListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":2313,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:15",{"_index":2312,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:18",{"_index":2307,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:21",{"_index":2308,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:24",{"_index":2306,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:33",{"_index":2310,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.component.ts:39",{"_index":2311,"title":{},"body":{"components/MemberListComponent.html":{}}}],["list.page",{"_index":1244,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["list.page.html",{"_index":2557,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.scss",{"_index":2556,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts",{"_index":2555,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["list.page.ts:105",{"_index":3280,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:123",{"_index":3268,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:143",{"_index":3273,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:149",{"_index":3271,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:155",{"_index":3278,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:159",{"_index":3277,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:17",{"_index":2566,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:18",{"_index":2565,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:20",{"_index":2564,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:22",{"_index":2559,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:34",{"_index":3286,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:35",{"_index":3283,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:36",{"_index":3284,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:37",{"_index":3285,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:38",{"_index":3282,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:40",{"_index":3291,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:41",{"_index":2561,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:42",{"_index":3294,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:43",{"_index":3293,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:44",{"_index":3290,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:45",{"_index":2563,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskListPage.html":{}}}],["list.page.ts:46",{"_index":3281,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:47",{"_index":3713,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:48",{"_index":3292,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:49",{"_index":2560,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["list.page.ts:50",{"_index":3287,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:51",{"_index":3288,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:53",{"_index":3289,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:54",{"_index":3265,"title":{},"body":{"components/TaskListPage.html":{},"components/WorkspacesListPage.html":{}}}],["list.page.ts:62",{"_index":3709,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:75",{"_index":3712,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:79",{"_index":3715,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["list.page.ts:95",{"_index":3275,"title":{},"body":{"components/TaskListPage.html":{}}}],["list.page.ts:99",{"_index":3266,"title":{},"body":{"components/TaskListPage.html":{}}}],["list/member",{"_index":1227,"title":{},"body":{"modules/DashboardModule.html":{},"components/MemberListComponent.html":{},"coverage.html":{}}}],["list/projects",{"_index":1243,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/ProjectsListPage.html":{},"coverage.html":{}}}],["list/task",{"_index":3253,"title":{},"body":{"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"coverage.html":{}}}],["list/workspaces",{"_index":1246,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["listed",{"_index":4063,"title":{},"body":{"additional-documentation/localization.html":{}}}],["listelement",{"_index":2382,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["listgroupcomponent",{"_index":179,"title":{"components/ListGroupComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["lists",{"_index":2332,"title":{},"body":{"injectables/MemberService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["listwithtasks",{"_index":3113,"title":{},"body":{"injectables/StatusService.html":{}}}],["listwithtasks(projectid",{"_index":3124,"title":{},"body":{"injectables/StatusService.html":{}}}],["literal",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"interfaces/UserSession.html":{},"interfaces/Workspace.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1316,"title":{},"body":{"injectables/DialogService.html":{},"components/WorkspacesListPage.html":{}}}],["loadchildren",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["loader",{"_index":839,"title":{},"body":{"components/ButtonComponent.html":{}}}],["loadgithubintegration",{"_index":1685,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["loadparamsfromurl",{"_index":35,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["loadproject",{"_index":1362,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["loadproject(id",{"_index":1369,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["loadrepositories",{"_index":2092,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["loads",{"_index":1371,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["loadworkspace",{"_index":1431,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["loadworkspace(id",{"_index":1433,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["loadworkspaces",{"_index":3707,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["local",{"_index":2276,"title":{},"body":{"modules/MainModule.html":{},"components/SettingsSessionsPage.html":{},"miscellaneous/variables.html":{}}}],["locales",{"_index":4065,"title":{},"body":{"additional-documentation/localization.html":{}}}],["localization",{"_index":214,"title":{"additional-documentation/localization.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"additional-documentation/localization.html":{}}}],["localization.page",{"_index":2885,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["localization.page.html",{"_index":2845,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.scss",{"_index":2844,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts",{"_index":2843,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"coverage.html":{}}}],["localization.page.ts:11",{"_index":2853,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:15",{"_index":2868,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:44",{"_index":2848,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:48",{"_index":2850,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:50",{"_index":2849,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization.page.ts:54",{"_index":2851,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["localization/settings",{"_index":2842,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{}}}],["localize`are",{"_index":655,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`cancel",{"_index":662,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`close",{"_index":1341,"title":{},"body":{"injectables/DialogService.html":{}}}],["localize`delete",{"_index":1344,"title":{},"body":{"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["localize`detach",{"_index":667,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`email",{"_index":2641,"title":{},"body":{"components/RegisterPage.html":{}}}],["localize`epic",{"_index":3454,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`given",{"_index":906,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["localize`high",{"_index":3347,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`highest",{"_index":3348,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`if",{"_index":657,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`issue",{"_index":3453,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`low",{"_index":3345,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`lowest",{"_index":3344,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`medium",{"_index":3346,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["localize`merge",{"_index":661,"title":{},"body":{"components/BoardPage.html":{}}}],["localize`ok",{"_index":1562,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`only",{"_index":1589,"title":{},"body":{"classes/Filters.html":{}}}],["localize`something",{"_index":1559,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`subtask",{"_index":3455,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`success",{"_index":1558,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["localize`task",{"_index":3451,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["localize`user",{"_index":2179,"title":{},"body":{"components/LoginPage.html":{},"pipes/TaskTypePipe.html":{}}}],["localize`username",{"_index":2642,"title":{},"body":{"components/RegisterPage.html":{}}}],["localize`workspace",{"_index":3704,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["localize`wrong",{"_index":2183,"title":{},"body":{"components/LoginPage.html":{}}}],["localized",{"_index":4047,"title":{},"body":{"additional-documentation/localization.html":{}}}],["localstorage.getitem('logged",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["localstorage.getitem(persistentkey",{"_index":2514,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["localstorage.removeitem('logged",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["localstorage.removeitem(this._persistentkey",{"_index":2505,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["localstorage.setitem('logged",{"_index":2167,"title":{},"body":{"components/LoginPage.html":{}}}],["localstorage.setitem(this._persistentkey",{"_index":2511,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["located",{"_index":4031,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["location.href",{"_index":2869,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["location.reload",{"_index":673,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["log",{"_index":1282,"title":{},"body":{"components/DeleteAccountPage.html":{},"components/LoginPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/UpperNavigationComponent.html":{}}}],["logged",{"_index":2181,"title":{},"body":{"components/LoginPage.html":{}}}],["loggedinusersguard",{"_index":429,"title":{"guards/LoggedInUsersGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoggedInUsersGuard.html":{},"coverage.html":{}}}],["logging",{"_index":3983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logic",{"_index":4023,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["login",{"_index":478,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/UpperNavigationComponent.html":{}}}],["login'},{'name",{"_index":183,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["login(this.form.value",{"_index":2170,"title":{},"body":{"components/LoginPage.html":{}}}],["login(undefined",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.page.html",{"_index":2153,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":2152,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":182,"title":{"components/LoginPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginsubscription",{"_index":2154,"title":{},"body":{"components/LoginPage.html":{}}}],["logo",{"_index":930,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{}}}],["logout",{"_index":479,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/RestoreAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["low",{"_index":3333,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["lower",{"_index":4001,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["lowest",{"_index":3331,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["m",{"_index":1566,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["m.authmodule",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.dashboardmodule",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.emailsmodule",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.messagesmodule",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.settingsmodule",{"_index":1258,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["m.tasksmodule",{"_index":1268,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["m_w",{"_index":2578,"title":{},"body":{"classes/Random.html":{}}}],["m_z",{"_index":2579,"title":{},"body":{"classes/Random.html":{}}}],["ma",{"_index":2818,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["mail",{"_index":3909,"title":{},"body":{"index.html":{}}}],["maila",{"_index":2815,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["main",{"_index":185,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["main/_main.module",{"_index":2878,"title":{},"body":{"modules/SettingsModule.html":{}}}],["main/classes/control",{"_index":1038,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["main/classes/e",{"_index":3295,"title":{},"body":{"components/TaskListPage.html":{}}}],["main/classes/enum.class",{"_index":3211,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["main/classes/filters.class",{"_index":3297,"title":{},"body":{"components/TaskListPage.html":{}}}],["main/classes/persistent",{"_index":596,"title":{},"body":{"components/BoardPage.html":{}}}],["main/classes/random.class",{"_index":3567,"title":{},"body":{"classes/UserUtils.html":{}}}],["main/components/snackbar/snackbar.interface",{"_index":3050,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["main/decorators/service",{"_index":3697,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["main/decorators/service.decorator",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SnackbarService.html":{}}}],["main/dialogs/alert/alert.dialog",{"_index":3382,"title":{},"body":{"injectables/TaskService.html":{}}}],["main/interfaces/filters.interface",{"_index":1587,"title":{},"body":{"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent-1.html":{}}}],["main/operators/apply",{"_index":3384,"title":{},"body":{"injectables/TaskService.html":{}}}],["main/pages/mock/mock.page",{"_index":1250,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["main/services/api.service",{"_index":1771,"title":{},"body":{"injectables/GitIntegrationService.html":{},"injectables/UserService.html":{}}}],["main/services/dialog.service",{"_index":779,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["main/services/router",{"_index":79,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["main/services/snackbar.service",{"_index":2999,"title":{},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/TaskService.html":{}}}],["main/validators/email.validator",{"_index":2625,"title":{},"body":{"components/RegisterPage.html":{}}}],["main/validators/max",{"_index":1171,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["main/validators/password.validator",{"_index":913,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["main/validators/required.validator",{"_index":914,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{}}}],["main/validators/same",{"_index":916,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["mainly",{"_index":3988,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["mainmodule",{"_index":407,"title":{"modules/MainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["mainmodule.injector",{"_index":2289,"title":{},"body":{"modules/MainModule.html":{}}}],["maintained",{"_index":3993,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["mainviewcomponent",{"_index":184,"title":{"components/MainViewComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":3587,"title":{},"body":{"classes/UserUtils.html":{},"additional-documentation/localization.html":{}}}],["making",{"_index":4073,"title":{},"body":{"additional-documentation/localization.html":{}}}],["manage",{"_index":1286,"title":{},"body":{"injectables/DialogService.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["management",{"_index":3681,"title":{},"body":{"injectables/WorkspaceService.html":{},"index.html":{}}}],["map",{"_index":768,"title":{},"body":{"components/BoardTaskComponent.html":{},"injectables/DialogService.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/SettingsIntegrationsPage.html":{},"interfaces/SinglePersonSchedule.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["map(([statuses",{"_index":3138,"title":{},"body":{"injectables/StatusService.html":{}}}],["map(([tasks",{"_index":3427,"title":{},"body":{"injectables/TaskService.html":{}}}],["map((accounts",{"_index":1688,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/SettingsIntegrationsPage.html":{}}}],["map((c",{"_index":3579,"title":{},"body":{"classes/UserUtils.html":{}}}],["map((character",{"_index":3624,"title":{},"body":{"classes/Utils.html":{}}}],["map((e",{"_index":1500,"title":{},"body":{"classes/Enum.html":{}}}],["map((members",{"_index":2346,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["map((projects",{"_index":1812,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["map((response",{"_index":1776,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["map((v",{"_index":1495,"title":{},"body":{"classes/Enum.html":{}}}],["map((workspace",{"_index":2571,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["map((workspaces",{"_index":2550,"title":{},"body":{"injectables/ProjectService.html":{},"components/UpperNavigationComponent.html":{}}}],["map(projectid",{"_index":2333,"title":{},"body":{"injectables/MemberService.html":{}}}],["map.class",{"_index":597,"title":{},"body":{"components/BoardPage.html":{}}}],["map.class.ts",{"_index":2492,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"coverage.html":{}}}],["map.class.ts:11",{"_index":2501,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:17",{"_index":2504,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:23",{"_index":2502,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:27",{"_index":2498,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.class.ts:6",{"_index":2499,"title":{},"body":{"classes/PersistentMap.html":{}}}],["map.delete(uid",{"_index":3054,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["map.set(uid",{"_index":3052,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["mapkey",{"_index":557,"title":{},"body":{"components/BoardPage.html":{}}}],["margin",{"_index":688,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["mark",{"_index":2952,"title":{},"body":{"components/SettingsSessionsPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["mask",{"_index":2580,"title":{},"body":{"classes/Random.html":{}}}],["master",{"_index":4098,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["mat",{"_index":856,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/IconComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["mat_dialog_data",{"_index":75,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/variables.html":{}}}],["matautocompletemodule",{"_index":2205,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matbadgemodule",{"_index":2207,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1547,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"classes/Utils.html":{}}}],["match(error",{"_index":1571,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["match(value",{"_index":1567,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["matcheckboxmodule",{"_index":2209,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":252,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["matdatepickermodule",{"_index":2213,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1296,"title":{},"body":{"injectables/DialogService.html":{}}}],["matdialogmodule",{"_index":2215,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":41,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/variables.html":{}}}],["matdialogtestingprovider",{"_index":3821,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1830,"title":{},"body":{"components/IconComponent.html":{},"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":2216,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":2598,"title":{},"body":{"classes/Random.html":{}}}],["maticonmodule",{"_index":2218,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":2220,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":2222,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matnativedatemodule",{"_index":2211,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":2224,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":2226,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["mattablemodule",{"_index":2228,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodule",{"_index":2230,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":2232,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":704,"title":{},"body":{"components/BoardPage.html":{},"components/InputComponent.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["maxlength",{"_index":3639,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["maxlengthvalidator",{"_index":1170,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["maxlengthvalidator(50",{"_index":1164,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["maxlengthvalidator(length",{"_index":3891,"title":{},"body":{"miscellaneous/functions.html":{}}}],["md",{"_index":951,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["medium",{"_index":3335,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["member",{"_index":19,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["member.dialog",{"_index":1169,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{}}}],["member.dialog.html",{"_index":24,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["member.dialog.scss",{"_index":22,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["member.dialog.ts",{"_index":12,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"coverage.html":{}}}],["member.dialog.ts:21",{"_index":69,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:22",{"_index":70,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:24",{"_index":67,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:26",{"_index":45,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:29",{"_index":59,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:34",{"_index":56,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:41",{"_index":55,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:47",{"_index":51,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.dialog.ts:58",{"_index":54,"title":{},"body":{"components/AddMemberDialog.html":{}}}],["member.interface",{"_index":588,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["member.interface.ts",{"_index":2525,"title":{},"body":{"interfaces/ProjectMember.html":{},"coverage.html":{}}}],["member.user.name",{"_index":1970,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.name[0",{"_index":1969,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.surname",{"_index":1971,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member.user.username",{"_index":1972,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["member/add",{"_index":11,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"components/EditProjectMembersPage.html":{},"coverage.html":{}}}],["memberlist",{"_index":1147,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/MemberListComponent.html":{}}}],["memberlistcomponent",{"_index":187,"title":{"components/MemberListComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["members",{"_index":109,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{}}}],["members'},{'name",{"_index":144,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["members(members",{"_index":1946,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["members.page",{"_index":1235,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["members.page.html",{"_index":1145,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.scss",{"_index":1144,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.ts",{"_index":1143,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{},"coverage.html":{}}}],["members.page.ts:106",{"_index":1367,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:116",{"_index":1365,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:122",{"_index":1378,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:140",{"_index":1372,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:21",{"_index":1163,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:25",{"_index":1381,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:26",{"_index":1165,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:30",{"_index":1383,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:33",{"_index":1161,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:35",{"_index":1166,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/EditProjectMembersPage.html":{}}}],["members.page.ts:36",{"_index":1391,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:37",{"_index":1167,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:39",{"_index":1152,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:42",{"_index":1387,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:46",{"_index":1385,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:48",{"_index":1389,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:49",{"_index":1364,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:65",{"_index":1153,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:74",{"_index":1160,"title":{},"body":{"components/CreateProjectMembersPage.html":{}}}],["members.page.ts:80",{"_index":1370,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.page.ts:91",{"_index":1379,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["members.reduce((acc",{"_index":2347,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskListPage.html":{}}}],["members.values",{"_index":1952,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["members/create",{"_index":1142,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["members/edit",{"_index":1239,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"coverage.html":{}}}],["membersarray",{"_index":1951,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["memberservice",{"_index":548,"title":{"injectables/MemberService.html":{}},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["merged",{"_index":659,"title":{},"body":{"components/BoardPage.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["mergedpulllist",{"_index":3155,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["mergemap",{"_index":1773,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["mergemap((url",{"_index":1778,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["message",{"_index":258,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"injectables/SnackbarService.html":{},"injectables/TaskService.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SidebarNavigationComponent.html":{},"index.html":{}}}],["messages.routing",{"_index":2355,"title":{},"body":{"modules/MessagesModule.html":{}}}],["messagesmodule",{"_index":2350,"title":{"modules/MessagesModule.html":{}},"body":{"modules/MessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesroutingmodule",{"_index":2353,"title":{"modules/MessagesRoutingModule.html":{}},"body":{"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["method",{"_index":358,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["methodologies",{"_index":3994,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["methods",{"_index":32,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["middle",{"_index":2028,"title":{},"body":{"components/InputComponent.html":{}}}],["min",{"_index":709,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["minlength",{"_index":3638,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["miragejs",{"_index":3846,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":3855,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":794,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["mock",{"_index":2359,"title":{},"body":{"components/MockPage.html":{},"miscellaneous/variables.html":{}}}],["mock'},{'name",{"_index":190,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["mock.page.html",{"_index":2361,"title":{},"body":{"components/MockPage.html":{}}}],["mock.page.scss",{"_index":2360,"title":{},"body":{"components/MockPage.html":{}}}],["mocking",{"_index":3886,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mockpage",{"_index":189,"title":{"components/MockPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsRoutingModule.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":1313,"title":{},"body":{"injectables/DialogService.html":{}}}],["mode",{"_index":3980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":1013,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["modify",{"_index":3686,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["modifyuser",{"_index":2373,"title":{"interfaces/ModifyUser.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{}}}],["module",{"_index":398,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}},"body":{"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["module.ts",{"_index":4020,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["modules",{"_index":400,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectPage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["moduser",{"_index":3548,"title":{},"body":{"injectables/UserService.html":{}}}],["moment",{"_index":4094,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["month",{"_index":2934,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["more",{"_index":3995,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["more_vert",{"_index":2404,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["move",{"_index":649,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"injectables/ProjectService.html":{},"components/TaskListPage.html":{}}}],["moved",{"_index":2531,"title":{},"body":{"injectables/ProjectService.html":{}}}],["moveiteminarray",{"_index":583,"title":{},"body":{"components/BoardPage.html":{}}}],["moveiteminarray(event.container.data",{"_index":644,"title":{},"body":{"components/BoardPage.html":{}}}],["mozliwosc",{"_index":2819,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["multi",{"_index":2281,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":3906,"title":{},"body":{"index.html":{}}}],["n",{"_index":3582,"title":{},"body":{"classes/UserUtils.html":{}}}],["na",{"_index":2803,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["named",{"_index":4000,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["naming",{"_index":3997,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["native",{"_index":847,"title":{},"body":{"components/ButtonComponent.html":{}}}],["nav",{"_index":192,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navelementcomponent",{"_index":191,"title":{"components/NavElementComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navelementworkspacecomponent",{"_index":194,"title":{"components/NavElementWorkspaceComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigatebyurl",{"_index":2458,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["navigates",{"_index":1156,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["navigation",{"_index":2955,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation'},{'name",{"_index":220,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["navigation.component",{"_index":2255,"title":{},"body":{"modules/MainModule.html":{}}}],["navigation.component.html",{"_index":2957,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.scss",{"_index":2956,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts",{"_index":2954,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["navigation.component.ts:14",{"_index":2960,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:16",{"_index":2962,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:18",{"_index":2961,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:20",{"_index":2959,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["navigation.component.ts:25",{"_index":3519,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:41",{"_index":3529,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:43",{"_index":3524,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:44",{"_index":3527,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:45",{"_index":3525,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:46",{"_index":3526,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:48",{"_index":3523,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:49",{"_index":3522,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:51",{"_index":3516,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:66",{"_index":3518,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:72",{"_index":3517,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:75",{"_index":3520,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:84",{"_index":3515,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation.component.ts:87",{"_index":3521,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["navigation/sidebar",{"_index":2254,"title":{},"body":{"modules/MainModule.html":{},"components/SidebarNavigationComponent.html":{},"coverage.html":{}}}],["navigation/upper",{"_index":2262,"title":{},"body":{"modules/MainModule.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["need",{"_index":2517,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/RequestOptions.html":{},"components/SettingsAccountPage.html":{},"miscellaneous/functions.html":{},"additional-documentation/localization.html":{}}}],["needed",{"_index":3119,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["neutral",{"_index":938,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["new",{"_index":62,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/UserUtils.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"additional-documentation/localization.html":{}}}],["newly",{"_index":1302,"title":{},"body":{"injectables/DialogService.html":{}}}],["newstatus",{"_index":628,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatus.final",{"_index":653,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatus.id",{"_index":639,"title":{},"body":{"components/BoardPage.html":{}}}],["newstatusindex",{"_index":624,"title":{},"body":{"components/BoardPage.html":{}}}],["newtask",{"_index":3423,"title":{},"body":{"injectables/TaskService.html":{}}}],["newtask.id",{"_index":3400,"title":{},"body":{"injectables/TaskService.html":{}}}],["newvalue",{"_index":3488,"title":{},"body":{"classes/TestNgControl.html":{}}}],["newworkspaceid",{"_index":1368,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/ProjectService.html":{}}}],["newworkspaceid]).then",{"_index":1430,"title":{},"body":{"components/EditProjectPage.html":{}}}],["next",{"_index":1112,"title":{},"body":{"components/ControlAccessor.html":{},"interceptors/ErrorInterceptor.html":{},"components/RegisterPage.html":{}}}],["next(value",{"_index":1565,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["next.handle(req).pipe",{"_index":1520,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nextstage",{"_index":2610,"title":{},"body":{"components/RegisterPage.html":{}}}],["ng",{"_index":1630,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["ngafterviewinit",{"_index":1636,"title":{},"body":{"directives/FocusInitialDirective.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{}}}],["ngcontrol",{"_index":966,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{}}}],["ngcontrol.control?.errors",{"_index":3504,"title":{},"body":{"components/TextareaComponent.html":{}}}],["nglet",{"_index":249,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["nglet(value",{"_index":2126,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["ngmodule",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["ngmoduleconfig",{"_index":2275,"title":{},"body":{"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngmoduleconfig.declarations",{"_index":2285,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.exportdeclarations",{"_index":2286,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.importexports",{"_index":2284,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.imports",{"_index":2283,"title":{},"body":{"modules/MainModule.html":{}}}],["ngmoduleconfig.providers",{"_index":2287,"title":{},"body":{"modules/MainModule.html":{}}}],["ngondestroy",{"_index":540,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["no_content_provided",{"_index":3816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":1959,"title":{},"body":{"components/InputAssigneeComponent.html":{},"injectables/RouterExtensionsService.html":{},"components/StatusLabelComponent.html":{},"index.html":{}}}],["node.children[0",{"_index":2692,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["node.js",{"_index":3912,"title":{},"body":{"index.html":{}}}],["node.value.params",{"_index":2693,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["none",{"_index":878,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["not(.add",{"_index":1976,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(.add):hover",{"_index":1977,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(.collapsed",{"_index":696,"title":{},"body":{"components/BoardPage.html":{}}}],["not(.line",{"_index":1984,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["not(:last",{"_index":2683,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/TaskListPage.html":{}}}],["nothing",{"_index":3989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notify",{"_index":3990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["now",{"_index":1825,"title":{},"body":{"components/GithubIntegrationPage.html":{},"components/SettingsSessionsPage.html":{}}}],["npm",{"_index":3913,"title":{},"body":{"index.html":{}}}],["null",{"_index":1106,"title":{},"body":{"components/ControlAccessor.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"classes/TestNgControl.html":{},"pipes/ValidationErrorPipe.html":{}}}],["number",{"_index":88,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/ModifyUser.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["number(!this.taskmap.get(mapkey",{"_index":675,"title":{},"body":{"components/BoardPage.html":{}}}],["number(e[1",{"_index":1498,"title":{},"body":{"classes/Enum.html":{}}}],["number(event.container.element.nativeelement.dataset['index",{"_index":625,"title":{},"body":{"components/BoardPage.html":{}}}],["number(k",{"_index":1488,"title":{},"body":{"classes/Enum.html":{}}}],["number(key",{"_index":1486,"title":{},"body":{"classes/Enum.html":{}}}],["number(projectid",{"_index":100,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["number(this.expandedsubtasks.has(taskid",{"_index":3316,"title":{},"body":{"components/TaskListPage.html":{}}}],["number(this.form?.controls[index].value",{"_index":1623,"title":{},"body":{"components/FiltersComponent.html":{}}}],["number(v",{"_index":1493,"title":{},"body":{"classes/Enum.html":{}}}],["number(workspaceid",{"_index":98,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["numberrepresentation",{"_index":3577,"title":{},"body":{"classes/UserUtils.html":{}}}],["numeric",{"_index":1474,"title":{},"body":{"classes/Enum.html":{}}}],["o",{"_index":563,"title":{},"body":{"components/BoardPage.html":{}}}],["object",{"_index":272,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["object.entries(enumtype",{"_index":1496,"title":{},"body":{"classes/Enum.html":{}}}],["object.hasownproperty(key",{"_index":3629,"title":{},"body":{"classes/Utils.html":{}}}],["object.keys(enumtype",{"_index":1485,"title":{},"body":{"classes/Enum.html":{}}}],["object.keys(enumtype).filter((k",{"_index":1487,"title":{},"body":{"classes/Enum.html":{}}}],["object.values(enumtype",{"_index":1491,"title":{},"body":{"classes/Enum.html":{}}}],["object.values(taskpriority",{"_index":3205,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["obs",{"_index":1522,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["observable",{"_index":68,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["observable((subscriber",{"_index":1563,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["observables",{"_index":1546,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["observe",{"_index":2652,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["observersmodule",{"_index":2195,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["occurrence",{"_index":3612,"title":{},"body":{"classes/Utils.html":{}}}],["of(newtask",{"_index":3401,"title":{},"body":{"injectables/TaskService.html":{}}}],["of(true",{"_index":3413,"title":{},"body":{"injectables/TaskService.html":{}}}],["offset",{"_index":874,"title":{},"body":{"components/ButtonComponent.html":{}}}],["omit",{"_index":3162,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["onblur",{"_index":1996,"title":{},"body":{"components/InputComponent.html":{}}}],["onclick",{"_index":1053,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["onclick(event",{"_index":1057,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["ondestroy",{"_index":526,"title":{},"body":{"components/BoardPage.html":{},"components/ControlAccessor.html":{},"components/EditProjectPage.html":{}}}],["one",{"_index":1461,"title":{},"body":{"classes/Enum.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"additional-documentation/architecture.html":{},"additional-documentation/continuos-integration.html":{}}}],["onfocus",{"_index":1997,"title":{},"body":{"components/InputComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["only_my_tasks",{"_index":1583,"title":{},"body":{"classes/Filters.html":{}}}],["only_my_tasks(currentuserid",{"_index":1584,"title":{},"body":{"classes/Filters.html":{}}}],["onprojectidchange",{"_index":3179,"title":{},"body":{"components/TaskDialog.html":{}}}],["onprojectidchange(projectid",{"_index":3187,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["onsameurlnavigation",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["onsuccess",{"_index":637,"title":{},"body":{"components/BoardPage.html":{}}}],["onworkspaceidchange",{"_index":3180,"title":{},"body":{"components/TaskDialog.html":{}}}],["onworkspaceidchange(workspaceid",{"_index":3189,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["opacity",{"_index":733,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{}}}],["open",{"_index":1292,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{},"additional-documentation/localization.html":{}}}],["open(addmemberdialog",{"_index":1181,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["open(component",{"_index":1311,"title":{},"body":{"injectables/DialogService.html":{}}}],["open(taskdialog",{"_index":668,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["openaddmembersdialog",{"_index":1148,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{}}}],["openbelow",{"_index":3509,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["opencreatenewtaskdialog",{"_index":3353,"title":{},"body":{"injectables/TaskService.html":{}}}],["opencreatesubtaskdialog",{"_index":3354,"title":{},"body":{"injectables/TaskService.html":{}}}],["opencreatesubtaskdialog(projectid",{"_index":3372,"title":{},"body":{"injectables/TaskService.html":{}}}],["opened",{"_index":1303,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{}}}],["openedittaskdialog",{"_index":3355,"title":{},"body":{"injectables/TaskService.html":{}}}],["openedittaskdialog(projectid",{"_index":3375,"title":{},"body":{"injectables/TaskService.html":{}}}],["openerrordialog",{"_index":1293,"title":{},"body":{"injectables/DialogService.html":{}}}],["openerrordialog(error",{"_index":1317,"title":{},"body":{"injectables/DialogService.html":{}}}],["opennavelement",{"_index":2385,"title":{},"body":{"components/NavElementComponent.html":{}}}],["opennewtaskdialog",{"_index":541,"title":{},"body":{"components/BoardPage.html":{}}}],["openprofile",{"_index":3513,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["openproject",{"_index":2558,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["openproject(project",{"_index":2562,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["opens",{"_index":1300,"title":{},"body":{"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"injectables/TaskService.html":{}}}],["openwithlocalvscode",{"_index":2417,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscode(project",{"_index":2436,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscodeinsiders",{"_index":2418,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithlocalvscodeinsiders(project",{"_index":2438,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithvscode",{"_index":2419,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openwithvscode(project",{"_index":2440,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["openworkspace",{"_index":2420,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/WorkspacesListPage.html":{}}}],["openworkspace(workspace",{"_index":3714,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["option",{"_index":1578,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/SelectComponent.html":{}}}],["option'},{'name",{"_index":197,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["option.assigneeid",{"_index":1594,"title":{},"body":{"classes/Filters.html":{}}}],["option.component.html",{"_index":2480,"title":{},"body":{"components/OptionComponent.html":{}}}],["option.component.scss",{"_index":2479,"title":{},"body":{"components/OptionComponent.html":{}}}],["option.selected",{"_index":2759,"title":{},"body":{"components/SelectComponent.html":{}}}],["option.viewvalue",{"_index":2776,"title":{},"body":{"components/SelectComponent.html":{}}}],["option/option.component",{"_index":2753,"title":{},"body":{"components/SelectComponent.html":{}}}],["optional",{"_index":50,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":4021,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["optioncomponent",{"_index":196,"title":{"components/OptionComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":336,"title":{},"body":{"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options'},{'name",{"_index":237,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["options.component",{"_index":1231,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{}}}],["options.component.html",{"_index":3649,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.scss",{"_index":3648,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts",{"_index":3647,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["options.component.ts:12",{"_index":3656,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:13",{"_index":3654,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:15",{"_index":3658,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:16",{"_index":3657,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:17",{"_index":3668,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:19",{"_index":3652,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:20",{"_index":3669,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:22",{"_index":3651,"title":{},"body":{"components/ViewOptionsComponent.html":{}}}],["options.component.ts:23",{"_index":3667,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:26",{"_index":3665,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:29",{"_index":3666,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.component.ts:31",{"_index":3664,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["options.interface",{"_index":369,"title":{},"body":{"injectables/ApiService.html":{}}}],["options.interface.ts",{"_index":2649,"title":{},"body":{"interfaces/RequestOptions.html":{},"coverage.html":{}}}],["options/view",{"_index":1230,"title":{},"body":{"modules/DashboardModule.html":{},"modules/TasksModule.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["optionsmap",{"_index":2735,"title":{},"body":{"components/SelectComponent.html":{}}}],["origin",{"_index":2967,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["originalmethod.apply(this",{"_index":1545,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["os",{"_index":2944,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["osname",{"_index":2941,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["other[1].find((status",{"_index":3149,"title":{},"body":{"injectables/StatusService.html":{}}}],["otherwise",{"_index":1158,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{}}}],["out",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RestoreAccountPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"modules/TasksModule.html":{},"components/UpperNavigationComponent.html":{},"overview.html":{}}}],["outlet",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/SnackbarOutletComponent.html":{}}}],["outlet'},{'name",{"_index":225,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["outlet.component",{"_index":2258,"title":{},"body":{"modules/MainModule.html":{}}}],["outlet.component.html",{"_index":3028,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet.component.scss",{"_index":3027,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts",{"_index":3026,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"coverage.html":{}}}],["outlet.component.ts:11",{"_index":3031,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet.component.ts:15",{"_index":3033,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["outlet/snackbar",{"_index":2257,"title":{},"body":{"modules/MainModule.html":{},"components/SnackbarOutletComponent.html":{},"coverage.html":{}}}],["outline",{"_index":871,"title":{},"body":{"components/ButtonComponent.html":{}}}],["output",{"_index":2082,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["outputs",{"_index":2073,"title":{},"body":{"components/IntegrationEntryComponent.html":{}}}],["overflow",{"_index":693,"title":{},"body":{"components/BoardPage.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SchedulePage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{}}}],["overlay",{"_index":1909,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["overlaymodule",{"_index":2197,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":1617,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/StatusLabelComponent.html":{}}}],["overview",{"_index":3956,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":1761,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/SettingsAccountPage.html":{}}}],["owner",{"_index":1757,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["p",{"_index":944,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["p.project",{"_index":2553,"title":{},"body":{"injectables/ProjectService.html":{}}}],["package",{"_index":3829,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":110,"title":{},"body":{"components/AddMemberDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["page",{"_index":240,"title":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/continuos-integration.html":{}}}],["page'},{'name",{"_index":148,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["page.component",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":2115,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.scss",{"_index":2114,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":2113,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:8",{"_index":2116,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/landing",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["pages/board/board.page",{"_index":3468,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/change",{"_index":465,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/create",{"_index":1234,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/delete",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/edit",{"_index":1238,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/forgot",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/github",{"_index":1251,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["pages/login/login.page",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/mock/mock.page",{"_index":2269,"title":{},"body":{"modules/MainModule.html":{}}}],["pages/projects",{"_index":1242,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["pages/register/register.page",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/restore",{"_index":475,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pages/schedule/schedule.page",{"_index":3469,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/settings",{"_index":2883,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["pages/settings/settings.page",{"_index":2907,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["pages/task",{"_index":3470,"title":{},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pages/workspaces",{"_index":1245,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["param",{"_index":311,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"directives/FocusInitialDirective.html":{},"injectables/GitIntegrationService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1790,"title":{},"body":{"injectables/GitIntegrationService.html":{},"interfaces/RequestOptions.html":{},"injectables/RouterExtensionsService.html":{}}}],["paramsinheritancestrategy",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["parent",{"_index":3160,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["parenttask",{"_index":3373,"title":{},"body":{"injectables/TaskService.html":{}}}],["parenttask.id",{"_index":3422,"title":{},"body":{"injectables/TaskService.html":{}}}],["parenttaskid",{"_index":787,"title":{},"body":{"components/BoardTaskComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["parser",{"_index":2925,"title":{},"body":{"components/SettingsSessionsPage.html":{},"dependencies.html":{}}}],["part",{"_index":2658,"title":{},"body":{"interfaces/RequestOptions.html":{},"additional-documentation/architecture.html":{}}}],["partial",{"_index":3219,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["pascalcase",{"_index":3618,"title":{},"body":{"classes/Utils.html":{}}}],["pass",{"_index":273,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/DialogService.html":{}}}],["passable",{"_index":2671,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["passed",{"_index":303,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ControlAccessor.html":{},"classes/Utils.html":{}}}],["passes",{"_index":1155,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["passthrough",{"_index":291,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["password",{"_index":481,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"interfaces/ModifyUser.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"miscellaneous/functions.html":{}}}],["password'},{'name",{"_index":137,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["password.page",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["password.page.html",{"_index":897,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.scss",{"_index":896,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.ts",{"_index":895,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"coverage.html":{}}}],["password.page.ts:14",{"_index":1644,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:16",{"_index":900,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:17",{"_index":1646,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:19",{"_index":1647,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:24",{"_index":901,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["password.page.ts:28",{"_index":1645,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["password.page.ts:29",{"_index":912,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:34",{"_index":909,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password.page.ts:47",{"_index":902,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["password/change",{"_index":466,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{},"coverage.html":{}}}],["password/forgot",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ForgotPasswordPage.html":{},"coverage.html":{}}}],["passwords",{"_index":907,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["passwordvalidator",{"_index":903,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["patch",{"_index":327,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["patch(url",{"_index":350,"title":{},"body":{"injectables/ApiService.html":{}}}],["path",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"interfaces/RequestOptions.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pathmatch",{"_index":1255,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["pattern",{"_index":3640,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["pending",{"_index":834,"title":{},"body":{"components/ButtonComponent.html":{}}}],["pentosquare",{"_index":3650,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["people",{"_index":2327,"title":{},"body":{"injectables/MemberService.html":{},"components/SchedulePage.html":{}}}],["per",{"_index":3064,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["performs",{"_index":994,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["period",{"_index":2833,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["permanently",{"_index":2829,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["persistentkey",{"_index":581,"title":{},"body":{"components/BoardPage.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["persistentmap",{"_index":580,"title":{"classes/PersistentMap.html":{}},"body":{"components/BoardPage.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"coverage.html":{}}}],["persistentmapoptions",{"_index":2497,"title":{"interfaces/PersistentMapOptions.html":{}},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"coverage.html":{}}}],["person",{"_index":2723,"title":{},"body":{"components/SchedulePage.html":{}}}],["personal_data",{"_index":2627,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["pewno",{"_index":2804,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["picker",{"_index":2049,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["pipe",{"_index":1000,"title":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/TextareaComponent.html":{},"pipes/ValidationErrorPipe.html":{},"coverage.html":{},"additional-documentation/architecture.html":{}}}],["pipe(filter((result",{"_index":1340,"title":{},"body":{"injectables/DialogService.html":{}}}],["pipe(map((projects",{"_index":1698,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["pipe(map((workspace",{"_index":3228,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["pipe(skip(1",{"_index":3537,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["pipe.ts",{"_index":4042,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["pipeline",{"_index":4090,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["pipes",{"_index":3069,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{},"overview.html":{},"additional-documentation/architecture.html":{}}}],["pipes/status",{"_index":3471,"title":{},"body":{"modules/TasksModule.html":{}}}],["pipes/task",{"_index":3473,"title":{},"body":{"modules/TasksModule.html":{}}}],["pipes/validation",{"_index":2271,"title":{},"body":{"modules/MainModule.html":{}}}],["pipetransform",{"_index":3075,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}}}],["pl",{"_index":2863,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["pl.xlf",{"_index":4068,"title":{},"body":{"additional-documentation/localization.html":{}}}],["placed",{"_index":4026,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["placeholder",{"_index":732,"title":{},"body":{"components/BoardPage.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TextareaComponent.html":{}}}],["platformmodule",{"_index":2199,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":2187,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["plus",{"_index":3716,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["pointer",{"_index":725,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["poland",{"_index":4060,"title":{},"body":{"additional-documentation/localization.html":{}}}],["polish",{"_index":4059,"title":{},"body":{"additional-documentation/localization.html":{}}}],["polski",{"_index":2864,"title":{},"body":{"components/SettingsLocalizationPage.html":{}}}],["populatedtasks",{"_index":3307,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatedtasks.push",{"_index":3313,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatedtasks.push(task",{"_index":3310,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatesubtasks",{"_index":3264,"title":{},"body":{"components/TaskListPage.html":{}}}],["populatesubtasks(tasklist",{"_index":3279,"title":{},"body":{"components/TaskListPage.html":{}}}],["popup",{"_index":2801,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["position",{"_index":801,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["post",{"_index":328,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["post(url",{"_index":352,"title":{},"body":{"injectables/ApiService.html":{}}}],["postgithubintegration",{"_index":1722,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["postgithubintegration(installationid",{"_index":1762,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["powerful",{"_index":3905,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":861,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{}}}],["prefix:not(.pending",{"_index":864,"title":{},"body":{"components/ButtonComponent.html":{}}}],["preparedusername",{"_index":1808,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["press",{"_index":4086,"title":{},"body":{"additional-documentation/localization.html":{}}}],["previousstage",{"_index":2611,"title":{},"body":{"components/RegisterPage.html":{}}}],["previousstatus",{"_index":626,"title":{},"body":{"components/BoardPage.html":{}}}],["previousstatusindex",{"_index":622,"title":{},"body":{"components/BoardPage.html":{}}}],["previoustaskindex",{"_index":630,"title":{},"body":{"components/BoardPage.html":{}}}],["primary",{"_index":843,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["principle",{"_index":4010,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["priority",{"_index":3193,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityIconPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["priority.enum",{"_index":3214,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["priority.enum.ts",{"_index":3862,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["priority.pipe",{"_index":3475,"title":{},"body":{"modules/TasksModule.html":{}}}],["priority.pipe.ts",{"_index":3342,"title":{},"body":{"pipes/TaskPriorityPipe.html":{},"coverage.html":{}}}],["priority.pipe.ts:7",{"_index":3343,"title":{},"body":{"pipes/TaskPriorityPipe.html":{}}}],["privacy",{"_index":2646,"title":{},"body":{"components/RegisterPage.html":{}}}],["private",{"_index":91,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["privileges",{"_index":2376,"title":{},"body":{"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"interfaces/Workspace.html":{}}}],["process",{"_index":1706,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["production",{"_index":3884,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/continuos-integration.html":{}}}],["profile",{"_index":2823,"title":{},"body":{"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["programmatic",{"_index":1028,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["progress",{"_index":2371,"title":{},"body":{"components/MockPage.html":{},"interfaces/RequestOptions.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"interfaces/StatusWithTasks.html":{}}}],["project",{"_index":143,"title":{"interfaces/Project.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["project's",{"_index":2523,"title":{},"body":{"interfaces/Project.html":{}}}],["project'},{'name",{"_index":146,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["project.githubintegration",{"_index":1799,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["project.id",{"_index":2461,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["project.interface",{"_index":3679,"title":{},"body":{"interfaces/Workspace.html":{}}}],["project.name",{"_index":1345,"title":{},"body":{"injectables/DialogService.html":{},"components/TaskDialog.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["project.name).join",{"_index":1700,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["project.page",{"_index":1236,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["project.page.html",{"_index":1194,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.scss",{"_index":1193,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{}}}],["project.page.ts",{"_index":1192,"title":{},"body":{"components/CreateProjectPage.html":{},"components/EditProjectPage.html":{},"coverage.html":{}}}],["project.page.ts:104",{"_index":1415,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:116",{"_index":1414,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:125",{"_index":1417,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:21",{"_index":1419,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:24",{"_index":1200,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:26",{"_index":1421,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:27",{"_index":1424,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:28",{"_index":1199,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:32",{"_index":1198,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:33",{"_index":1422,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:34",{"_index":1201,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:36",{"_index":1202,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:37",{"_index":1420,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:38",{"_index":1195,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:39",{"_index":1423,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:40",{"_index":1413,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:59",{"_index":1196,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:69",{"_index":1416,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.page.ts:72",{"_index":1197,"title":{},"body":{"components/CreateProjectPage.html":{}}}],["project.page.ts:89",{"_index":1418,"title":{},"body":{"components/EditProjectPage.html":{}}}],["project.project",{"_index":2573,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["project.service",{"_index":1774,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["project/create",{"_index":1191,"title":{},"body":{"components/CreateProjectPage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["project/edit",{"_index":1240,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectPage.html":{},"coverage.html":{}}}],["projectid",{"_index":89,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["projectid/edit",{"_index":1264,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectid/edit/general",{"_index":1265,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectid/edit/members",{"_index":1266,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["projectlist",{"_index":2342,"title":{},"body":{"injectables/MemberService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["projectmember",{"_index":586,"title":{"interfaces/ProjectMember.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["projectmembers",{"_index":2521,"title":{},"body":{"interfaces/Project.html":{}}}],["projects",{"_index":199,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"interfaces/Project.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["projects.filter",{"_index":1813,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["projects.map((project",{"_index":1699,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["projects.push(...workspace.projectswithprivileges.map((p",{"_index":2552,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projects/spaces",{"_index":3675,"title":{},"body":{"interfaces/Workspace.html":{}}}],["projectservice",{"_index":547,"title":{"injectables/ProjectService.html":{}},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["projectslistpage",{"_index":198,"title":{"components/ProjectsListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["projectswithprivileges",{"_index":3678,"title":{},"body":{"interfaces/Workspace.html":{}}}],["projectwithpriv.project.name",{"_index":2470,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["prompt",{"_index":980,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["propagate",{"_index":1015,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["propagation",{"_index":1052,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["propagation.directive",{"_index":2264,"title":{},"body":{"modules/MainModule.html":{}}}],["propagation.directive.ts",{"_index":1051,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{},"coverage.html":{}}}],["propagation.directive.ts:8",{"_index":1056,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["propagation]'},{'name",{"_index":245,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["properly",{"_index":2190,"title":{},"body":{"modules/MainModule.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"properties.html":{}}}],["property",{"_index":748,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{}}}],["propertydescriptor",{"_index":1542,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["propertykey",{"_index":1540,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["props",{"_index":1856,"title":{},"body":{"components/IconComponent.html":{}}}],["protect",{"_index":4037,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["protocol",{"_index":4101,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["provide",{"_index":1073,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":362,"title":{},"body":{"injectables/ApiService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":370,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{}}}],["provider.helper",{"_index":1109,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["provider.helper.ts",{"_index":3482,"title":{},"body":{"classes/TestNgControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provider.helper.ts:4",{"_index":3485,"title":{},"body":{"classes/TestNgControl.html":{}}}],["provider.helper.ts:5",{"_index":3487,"title":{},"body":{"classes/TestNgControl.html":{}}}],["provider.helper.ts:8",{"_index":3489,"title":{},"body":{"classes/TestNgControl.html":{}}}],["providers",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"components/ControlAccessor.html":{},"modules/DashboardModule.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/variables.html":{}}}],["przywrocenia",{"_index":2821,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["publishes",{"_index":4102,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["pull",{"_index":646,"title":{},"body":{"components/BoardPage.html":{},"injectables/GitIntegrationService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["pulllist",{"_index":3174,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["pullrequest.title",{"_index":3250,"title":{},"body":{"components/TaskDialog.html":{}}}],["purple",{"_index":2065,"title":{},"body":{"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["push",{"_index":4097,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["put",{"_index":329,"title":{},"body":{"injectables/ApiService.html":{}}}],["put(url",{"_index":354,"title":{},"body":{"injectables/ApiService.html":{}}}],["query",{"_index":2660,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["querylist",{"_index":2745,"title":{},"body":{"components/SelectComponent.html":{}}}],["queryoptions",{"_index":2736,"title":{},"body":{"components/SelectComponent.html":{}}}],["question",{"_index":1841,"title":{},"body":{"components/IconComponent.html":{}}}],["question_mark",{"_index":1899,"title":{},"body":{"components/IconComponent.html":{}}}],["radius",{"_index":728,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MockPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["random",{"_index":2576,"title":{"classes/Random.html":{}},"body":{"classes/Random.html":{},"classes/UserUtils.html":{},"coverage.html":{}}}],["random(id",{"_index":3568,"title":{},"body":{"classes/UserUtils.html":{}}}],["random(numberrepresentation",{"_index":3590,"title":{},"body":{"classes/UserUtils.html":{}}}],["random.random",{"_index":3570,"title":{},"body":{"classes/UserUtils.html":{}}}],["randomnumber",{"_index":3569,"title":{},"body":{"classes/UserUtils.html":{}}}],["reactiveformsmodule",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/MainModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["readable",{"_index":3637,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"additional-documentation/localization.html":{}}}],["readme.md",{"_index":4107,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["readonly",{"_index":1907,"title":{},"body":{"components/InputAssigneeComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/StatusLabelComponent.html":{}}}],["readonlyarray",{"_index":2674,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["ready",{"_index":3919,"title":{},"body":{"index.html":{}}}],["rebuild",{"_index":4099,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["receive",{"_index":1651,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["recommended",{"_index":2825,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["recoveraccount",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["red",{"_index":888,"title":{},"body":{"components/CardComponent.html":{},"components/InputComponent.html":{}}}],["redirectto",{"_index":1261,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["reduce((sum",{"_index":3581,"title":{},"body":{"classes/UserUtils.html":{}}}],["ref",{"_index":2484,"title":{},"body":{"components/OptionComponent.html":{}}}],["reference",{"_index":271,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/ButtonComponent.html":{},"injectables/DialogService.html":{},"directives/FocusInitialDirective.html":{}}}],["regex",{"_index":3608,"title":{},"body":{"classes/Utils.html":{}}}],["regexindexof",{"_index":3597,"title":{},"body":{"classes/Utils.html":{}}}],["regexindexof(string",{"_index":3607,"title":{},"body":{"classes/Utils.html":{}}}],["regexp",{"_index":1811,"title":{},"body":{"injectables/GitIntegrationService.html":{},"classes/Utils.html":{}}}],["register",{"_index":480,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["register'},{'name",{"_index":201,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["register(this.form.value",{"_index":2637,"title":{},"body":{"components/RegisterPage.html":{}}}],["register(undefined",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.page.html",{"_index":2606,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":2605,"title":{},"body":{"components/RegisterPage.html":{}}}],["registeronchange",{"_index":970,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registeronchange(fn",{"_index":1002,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched",{"_index":971,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerontouched(fn",{"_index":1017,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerpage",{"_index":200,"title":{"components/RegisterPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["registers",{"_index":1004,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["registerstage",{"_index":2607,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/enumerations.html":{}}}],["registerstage.important_data",{"_index":2623,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerstage.personal_data",{"_index":2634,"title":{},"body":{"components/RegisterPage.html":{}}}],["registersubscription",{"_index":2608,"title":{},"body":{"components/RegisterPage.html":{}}}],["regular",{"_index":3841,"title":{},"body":{"dependencies.html":{}}}],["relative",{"_index":802,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/MockPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["reload",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["remember",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["remembered",{"_index":3556,"title":{},"body":{"interfaces/UserSession.html":{}}}],["removal",{"_index":1738,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["remove",{"_index":1973,"title":{},"body":{"components/InputAssigneeComponent.html":{},"injectables/MemberService.html":{}}}],["remove(projectid",{"_index":2335,"title":{},"body":{"injectables/MemberService.html":{}}}],["removes",{"_index":2337,"title":{},"body":{"injectables/MemberService.html":{}}}],["repeat",{"_index":936,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SidebarNavigationComponent.html":{}}}],["repeatpassword",{"_index":904,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["replace",{"_index":3890,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["replaced",{"_index":3984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replacements",{"_index":3888,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":3386,"title":{},"body":{"injectables/TaskService.html":{}}}],["report",{"_index":2661,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["reportprogress",{"_index":2653,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["repositories",{"_index":1769,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["repository",{"_index":660,"title":{},"body":{"components/BoardPage.html":{},"injectables/GitIntegrationService.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/Project.html":{},"index.html":{}}}],["repository.fullname",{"_index":2111,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositorylist",{"_index":2088,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositorylistloaded",{"_index":2089,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["repositoryname",{"_index":1725,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["req",{"_index":1513,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["request",{"_index":330,"title":{},"body":{"injectables/ApiService.html":{},"components/BoardPage.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"interfaces/RequestOptions.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/variables.html":{}}}],["request(method",{"_index":356,"title":{},"body":{"injectables/ApiService.html":{}}}],["requested",{"_index":1029,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["requestoptions",{"_index":337,"title":{"interfaces/RequestOptions.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{},"coverage.html":{}}}],["requests",{"_index":2655,"title":{},"body":{"interfaces/RequestOptions.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["require",{"_index":3827,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":3975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":987,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{}}}],["required::after",{"_index":2023,"title":{},"body":{"components/InputComponent.html":{}}}],["requiredvalidator",{"_index":66,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["requires",{"_index":3585,"title":{},"body":{"classes/UserUtils.html":{},"additional-documentation/localization.html":{}}}],["reset",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordPage.html":{},"components/SettingsAccountPage.html":{}}}],["resetpassword(undefined",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetsubscription",{"_index":898,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["resolved",{"_index":4091,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["response",{"_index":1548,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"interfaces/RequestOptions.html":{},"miscellaneous/variables.html":{}}}],["response.deleted",{"_index":2173,"title":{},"body":{"components/LoginPage.html":{}}}],["response.id]).subscribe",{"_index":1187,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["response.link",{"_index":1777,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["response.operator.ts",{"_index":3761,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["response?.error?.status",{"_index":1550,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["response?.status",{"_index":1551,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["responsetype",{"_index":375,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/RequestOptions.html":{}}}],["responsibility",{"_index":4009,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["restore",{"_index":203,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["restoreaccountpage",{"_index":202,"title":{"components/RestoreAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["result",{"_index":664,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Random.html":{},"components/UpperNavigationComponent.html":{}}}],["result).subscribe",{"_index":672,"title":{},"body":{"components/BoardPage.html":{},"components/UpperNavigationComponent.html":{}}}],["results",{"_index":251,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["return",{"_index":106,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"injectables/MemberService.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"injectables/ProjectService.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"injectables/RouterExtensionsService.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{}}}],["returned",{"_index":3635,"title":{},"body":{"interfaces/ValidationError.html":{}}}],["returns",{"_index":52,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"injectables/GitIntegrationService.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["reversible",{"_index":2832,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["revert",{"_index":2834,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["revive",{"_index":1281,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["rgb(0",{"_index":806,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{}}}],["rgba(0",{"_index":1981,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["right",{"_index":746,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["ripple",{"_index":2066,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["root",{"_index":371,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DialogService.html":{},"injectables/GitIntegrationService.html":{},"guards/LoggedInUsersGuard.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/RouterExtensionsService.html":{},"injectables/SessionsService.html":{},"injectables/SnackbarService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"additional-documentation/continuos-integration.html":{}}}],["root'},{'name",{"_index":125,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["rotate",{"_index":3019,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["rotate(45deg",{"_index":3018,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["rotate(90deg",{"_index":700,"title":{},"body":{"components/BoardPage.html":{},"components/ForgotPasswordPage.html":{},"components/TaskListPage.html":{}}}],["router",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordPage.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["routerextensions",{"_index":42,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["routerextensionsservice",{"_index":43,"title":{"injectables/RouterExtensionsService.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"injectables/RouterExtensionsService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{}}}],["routerlink",{"_index":2387,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["routermodule",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MainModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(routes",{"_index":482,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":427,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/EmailsRoutingModule.html":{},"modules/MessagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TasksRoutingModule.html":{},"miscellaneous/functions.html":{},"overview.html":{},"routes.html":{},"additional-documentation/architecture.html":{}}}],["routetoproject",{"_index":2421,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routetoproject(project",{"_index":2443,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routetoworkspace",{"_index":2422,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["routing.ts",{"_index":4022,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["row",{"_index":757,"title":{},"body":{"components/BoardPage.html":{},"components/MemberListComponent.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{}}}],["row.hasownproperty('withsubtasks",{"_index":3298,"title":{},"body":{"components/TaskListPage.html":{}}}],["row.name",{"_index":2574,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["row.user.email",{"_index":2318,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.name",{"_index":2319,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.surname",{"_index":2320,"title":{},"body":{"components/MemberListComponent.html":{}}}],["row.user.username",{"_index":2317,"title":{},"body":{"components/MemberListComponent.html":{}}}],["rows",{"_index":2724,"title":{},"body":{"components/SchedulePage.html":{},"components/TextareaComponent.html":{}}}],["rsync",{"_index":4100,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["run",{"_index":1704,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["running",{"_index":3934,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["runs",{"_index":4103,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["rxjs",{"_index":83,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsSessionsPage.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":2963,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["s",{"_index":3142,"title":{},"body":{"injectables/StatusService.html":{}}}],["s.user.id",{"_index":3431,"title":{},"body":{"injectables/TaskService.html":{}}}],["same",{"_index":908,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["sameasvalidator",{"_index":915,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sameasvalidator('password",{"_index":905,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/RegisterPage.html":{}}}],["sameasvalidator(comparewith",{"_index":3898,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sampandonte/untitled",{"_index":2522,"title":{},"body":{"interfaces/Project.html":{}}}],["save",{"_index":1204,"title":{},"body":{"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/SettingsLocalizationPage.html":{},"components/TaskDialog.html":{}}}],["savefilters",{"_index":1599,"title":{},"body":{"components/FiltersComponent.html":{}}}],["savestate",{"_index":2495,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["scale(1",{"_index":858,"title":{},"body":{"components/ButtonComponent.html":{}}}],["scale(1.02",{"_index":2968,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["scaley",{"_index":2406,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["schedule",{"_index":206,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/typealiases.html":{}}}],["schedule(projectid",{"_index":3377,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.page.html",{"_index":2696,"title":{},"body":{"components/SchedulePage.html":{}}}],["schedule.page.scss",{"_index":2695,"title":{},"body":{"components/SchedulePage.html":{}}}],["schedule.tasks.get(null).push(task",{"_index":3437,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.has(null",{"_index":3435,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.set(dayjs(task.estimateddate).format('yyyy",{"_index":3434,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedule.tasks.set(null",{"_index":3436,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedulepage",{"_index":205,"title":{"components/SchedulePage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["schedules",{"_index":3428,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedules.find((s",{"_index":3430,"title":{},"body":{"injectables/TaskService.html":{}}}],["schedules.push",{"_index":3429,"title":{},"body":{"injectables/TaskService.html":{}}}],["screen",{"_index":947,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["script",{"_index":4105,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["search",{"_index":1842,"title":{},"body":{"components/IconComponent.html":{},"classes/Utils.html":{},"additional-documentation/localization.html":{}}}],["searching",{"_index":3977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":3915,"title":{},"body":{"index.html":{}}}],["secondary",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["section",{"_index":808,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/MainViewComponent.html":{},"components/NavElementComponent.html":{},"components/SettingsPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/localization.html":{}}}],["sections",{"_index":2717,"title":{},"body":{"components/SchedulePage.html":{}}}],["secure",{"_index":2185,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["security",{"_index":2828,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["see",{"_index":1046,"title":{},"body":{"components/CheckboxComponent.html":{},"additional-documentation/architecture.html":{}}}],["seed",{"_index":2584,"title":{},"body":{"classes/Random.html":{},"miscellaneous/functions.html":{}}}],["select",{"_index":1910,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{}}}],["select'},{'name",{"_index":208,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["select(member",{"_index":1918,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["select(status",{"_index":3094,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["select.component.html",{"_index":2734,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.scss",{"_index":2733,"title":{},"body":{"components/SelectComponent.html":{}}}],["selectcomponent",{"_index":207,"title":{"components/SelectComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":2737,"title":{},"body":{"components/SelectComponent.html":{}}}],["selecteditem.viewvalue",{"_index":2775,"title":{},"body":{"components/SelectComponent.html":{}}}],["selection",{"_index":4072,"title":{},"body":{"additional-documentation/localization.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["self",{"_index":946,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["send",{"_index":342,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["sends",{"_index":340,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["separated",{"_index":4016,"title":{},"body":{"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["server",{"_index":2667,"title":{},"body":{"interfaces/RequestOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["serves",{"_index":4085,"title":{},"body":{"additional-documentation/localization.html":{}}}],["service",{"_index":323,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"components/SelectComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["service.ts",{"_index":4045,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["services",{"_index":4043,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["services/api.service",{"_index":2273,"title":{},"body":{"modules/MainModule.html":{}}}],["services/auth.service",{"_index":918,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["services/dialog.service",{"_index":2274,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["services/git",{"_index":1247,"title":{},"body":{"modules/DashboardModule.html":{}}}],["services/project.service",{"_index":1174,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["services/sessions.service",{"_index":2927,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["services/status.service",{"_index":604,"title":{},"body":{"components/BoardPage.html":{}}}],["services/task.service",{"_index":605,"title":{},"body":{"components/BoardPage.html":{}}}],["services/workspace.service",{"_index":1175,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["servicevalidator",{"_index":3696,"title":{},"body":{"injectables/WorkspaceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["servicevalidator(errorvalidationtree",{"_index":1538,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"miscellaneous/functions.html":{}}}],["servicevalidator({delete",{"_index":3694,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["session",{"_index":1530,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["session.geoip.city",{"_index":2949,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["session.geoip.country",{"_index":2950,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["session.useragent",{"_index":2947,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate",{"_index":791,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SettingsSessionsPage.html":{},"components/TaskListPage.html":{}}}],["sessiondate.format('ll",{"_index":2935,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('lll",{"_index":2936,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('mmmm",{"_index":2937,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessiondate.format('yyyy",{"_index":793,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputDateTimeComponent.html":{},"components/TaskListPage.html":{}}}],["sessiondate.year",{"_index":2932,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions",{"_index":2901,"title":{},"body":{"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{}}}],["sessions'},{'name",{"_index":217,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["sessions.page",{"_index":2887,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["sessions.page.html",{"_index":2910,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.scss",{"_index":2909,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts",{"_index":2908,"title":{},"body":{"components/SettingsSessionsPage.html":{},"coverage.html":{}}}],["sessions.page.ts:14",{"_index":2915,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:17",{"_index":2923,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:21",{"_index":2920,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:36",{"_index":2919,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions.page.ts:49",{"_index":2922,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessions/settings",{"_index":2886,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"coverage.html":{}}}],["sessionservice",{"_index":2916,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessionslist",{"_index":2911,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["sessionsservice",{"_index":2777,"title":{"injectables/SessionsService.html":{}},"body":{"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"coverage.html":{}}}],["set",{"_index":281,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"modules/AuthRoutingModule.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/ESet.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"classes/PersistentMap.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["set(key",{"_index":2503,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["set.class",{"_index":3296,"title":{},"body":{"components/TaskListPage.html":{}}}],["set.class.ts",{"_index":1349,"title":{},"body":{"classes/ESet.html":{},"coverage.html":{}}}],["set.class.ts:2",{"_index":1352,"title":{},"body":{"classes/ESet.html":{}}}],["setanimationname",{"_index":2978,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["setanimationname(name",{"_index":2993,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["setassignee(assignee",{"_index":1931,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["setdisabledstate",{"_index":972,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1020,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["setfilters(filters",{"_index":1610,"title":{},"body":{"components/FiltersComponent.html":{}}}],["seticon(value",{"_index":1864,"title":{},"body":{"components/IconComponent.html":{}}}],["setisopen(val",{"_index":1935,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["setmembers(members",{"_index":1932,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["setnewpassword",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{}}}],["setnewpassword(this.token",{"_index":925,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["setnewpassword(token",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["setnglet(value",{"_index":2131,"title":{},"body":{"directives/LetDirective.html":{}}}],["setstatuses(statuses",{"_index":3101,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["setter",{"_index":1855,"title":{},"body":{"components/IconComponent.html":{}}}],["settimeout",{"_index":853,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SelectComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["setting",{"_index":911,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["settings",{"_index":210,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["settings.page.html",{"_index":2891,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page.scss",{"_index":2890,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.routing",{"_index":2888,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settingsaccountpage",{"_index":209,"title":{"components/SettingsAccountPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingsintegrationspage",{"_index":211,"title":{"components/SettingsIntegrationsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingslocalizationpage",{"_index":213,"title":{"components/SettingsLocalizationPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingsmodule",{"_index":2872,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingspage",{"_index":215,"title":{"components/SettingsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["settingsroutingmodule",{"_index":2876,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["settingssessionspage",{"_index":216,"title":{"components/SettingsSessionsPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["setup_action",{"_index":1822,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["shadow",{"_index":804,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{}}}],["shape",{"_index":4041,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["share",{"_index":4044,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["shared",{"_index":2830,"title":{},"body":{"components/SettingsAccountPage.html":{},"index.html":{}}}],["shopping_cart",{"_index":1877,"title":{},"body":{"components/IconComponent.html":{}}}],["shoppingcart",{"_index":1876,"title":{},"body":{"components/IconComponent.html":{}}}],["show",{"_index":3041,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["show(message",{"_index":3046,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["showalert",{"_index":1553,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["showalert(m",{"_index":1568,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["showarrow",{"_index":2383,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["shown",{"_index":840,"title":{},"body":{"components/ButtonComponent.html":{}}}],["showoptions",{"_index":2388,"title":{},"body":{"components/NavElementComponent.html":{}}}],["shows",{"_index":3710,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["shrink",{"_index":2718,"title":{},"body":{"components/SchedulePage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["side",{"_index":939,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["sidebar",{"_index":219,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["sidebarnavigationcomponent",{"_index":218,"title":{"components/SidebarNavigationComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sie",{"_index":2806,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["simple",{"_index":256,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["simultaneously",{"_index":3248,"title":{},"body":{"components/TaskDialog.html":{}}}],["single",{"_index":2722,"title":{},"body":{"components/SchedulePage.html":{},"additional-documentation/architecture.html":{}}}],["singlepersonschedule",{"_index":2970,"title":{"interfaces/SinglePersonSchedule.html":{}},"body":{"interfaces/SinglePersonSchedule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["singleschedule.user.name.substring(0",{"_index":2714,"title":{},"body":{"components/SchedulePage.html":{}}}],["site",{"_index":2186,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["size",{"_index":812,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{}}}],["skip",{"_index":3530,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["skiplocationchange",{"_index":2459,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["sm",{"_index":948,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["small",{"_index":3090,"title":{},"body":{"components/StatusLabelComponent.html":{},"additional-documentation/continuos-integration.html":{}}}],["smaller",{"_index":3588,"title":{},"body":{"classes/UserUtils.html":{}}}],["snackbar",{"_index":224,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbar'},{'name",{"_index":222,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["snackbar.component.html",{"_index":2975,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar.component.scss",{"_index":2974,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar.interface",{"_index":3001,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.interface",{"_index":3036,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["snackbar:not(:last",{"_index":3039,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["snackbarcomponent",{"_index":221,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["snackbardata",{"_index":3000,"title":{"interfaces/SnackbarData.html":{}},"body":{"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["snackbardata['color",{"_index":3004,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbardata['duration",{"_index":3003,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbardata['message",{"_index":3002,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["snackbaroutletcomponent",{"_index":223,"title":{"components/SnackbarOutletComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["snackbars",{"_index":3029,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["snackbarservice",{"_index":2983,"title":{"injectables/SnackbarService.html":{}},"body":{"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["snake",{"_index":1874,"title":{},"body":{"components/IconComponent.html":{}}}],["snake_case",{"_index":3619,"title":{},"body":{"classes/Utils.html":{}}}],["snakecase",{"_index":3598,"title":{},"body":{"classes/Utils.html":{}}}],["snakecase(inputstring",{"_index":3614,"title":{},"body":{"classes/Utils.html":{}}}],["snakecasename",{"_index":1837,"title":{},"body":{"components/IconComponent.html":{}}}],["snapshot",{"_index":2686,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["solid",{"_index":593,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"modules/EmailsModule.html":{},"modules/EmailsRoutingModule.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"modules/MessagesModule.html":{},"modules/MessagesRoutingModule.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"modules/SettingsModule.html":{},"components/SettingsPage.html":{},"modules/SettingsRoutingModule.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"index.html":{}}}],["source.subscribe",{"_index":1564,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["space",{"_index":719,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SettingsSessionsPage.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["spaces",{"_index":4003,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["spain",{"_index":4056,"title":{},"body":{"additional-documentation/localization.html":{}}}],["span",{"_index":1988,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["spanish",{"_index":4055,"title":{},"body":{"additional-documentation/localization.html":{}}}],["spec\\.ts",{"_index":3976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":3360,"title":{},"body":{"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["specified",{"_index":3601,"title":{},"body":{"classes/Utils.html":{}}}],["specify",{"_index":299,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"interfaces/ValidationError.html":{},"miscellaneous/enumerations.html":{}}}],["specyfic",{"_index":3894,"title":{},"body":{"miscellaneous/functions.html":{}}}],["speed",{"_index":3908,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":857,"title":{},"body":{"components/ButtonComponent.html":{},"modules/MainModule.html":{}}}],["spinner.hide",{"_index":859,"title":{},"body":{"components/ButtonComponent.html":{}}}],["split",{"_index":3578,"title":{},"body":{"classes/UserUtils.html":{},"classes/Utils.html":{}}}],["splitindex",{"_index":1886,"title":{},"body":{"components/IconComponent.html":{}}}],["splitter",{"_index":4015,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/.../_main.mocks.prod.ts",{"_index":3869,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../_main.mocks.ts",{"_index":3870,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../_main.module.ts",{"_index":3973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../alert.dialog.ts",{"_index":3857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../apply",{"_index":3864,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../catch",{"_index":3865,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../color.interface.ts",{"_index":3964,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../debug.decorator.ts",{"_index":3866,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../email.validator.ts",{"_index":3867,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":3970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filters.interface.ts",{"_index":3965,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mat",{"_index":3972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../max",{"_index":3871,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../page.decorator.ts",{"_index":3872,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../password.validator.ts",{"_index":3873,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../register.page.ts",{"_index":3858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../required.validator.ts",{"_index":3874,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../response.mock.helper.ts",{"_index":3974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../same",{"_index":3875,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../schedule.interface.ts",{"_index":3966,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../service",{"_index":3877,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../service.decorator.ts",{"_index":3876,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task",{"_index":3859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../task.dialog.ts",{"_index":3861,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":3969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validator",{"_index":3868,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../workspaces.mocks.ts",{"_index":3878,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app",{"_index":4018,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/app/_main/_main.module.ts",{"_index":2188,"title":{},"body":{"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_main/classes/control",{"_index":1065,"title":{},"body":{"components/ControlAccessor.html":{},"coverage.html":{}}}],["src/app/_main/classes/e",{"_index":1348,"title":{},"body":{"classes/ESet.html":{},"coverage.html":{}}}],["src/app/_main/classes/enum.class.ts",{"_index":1450,"title":{},"body":{"classes/Enum.html":{},"coverage.html":{}}}],["src/app/_main/classes/enum.class.ts:10",{"_index":1472,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:32",{"_index":1480,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:48",{"_index":1483,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/enum.class.ts:70",{"_index":1459,"title":{},"body":{"classes/Enum.html":{}}}],["src/app/_main/classes/filters.class.ts",{"_index":1582,"title":{},"body":{"classes/Filters.html":{},"coverage.html":{}}}],["src/app/_main/classes/filters.class.ts:5",{"_index":1585,"title":{},"body":{"classes/Filters.html":{}}}],["src/app/_main/classes/persistent",{"_index":2491,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"coverage.html":{}}}],["src/app/_main/classes/random.class.ts",{"_index":2577,"title":{},"body":{"classes/Random.html":{},"coverage.html":{}}}],["src/app/_main/classes/random.class.ts:17",{"_index":2590,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:2",{"_index":2586,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:3",{"_index":2588,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/random.class.ts:4",{"_index":2582,"title":{},"body":{"classes/Random.html":{}}}],["src/app/_main/classes/utils.class.ts",{"_index":3591,"title":{},"body":{"classes/Utils.html":{},"coverage.html":{}}}],["src/app/_main/classes/utils.class.ts:12",{"_index":3610,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:22",{"_index":3615,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:45",{"_index":3600,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/classes/utils.class.ts:59",{"_index":3603,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/_main/components/button/button.component.ts",{"_index":828,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/button/button.component.ts:21",{"_index":844,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:23",{"_index":842,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:28",{"_index":837,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:33",{"_index":836,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:38",{"_index":850,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/button/button.component.ts:43",{"_index":846,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/_main/components/card/card.component.ts",{"_index":882,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/card/card.component.ts:11",{"_index":887,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/_main/components/card/card.component.ts:8",{"_index":886,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/_main/components/checkbox/checkbox.component.ts",{"_index":959,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/checkbox/checkbox.component.ts:10",{"_index":975,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts",{"_index":1595,"title":{},"body":{"components/FiltersComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/filters/filters.component.ts:12",{"_index":1601,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:21",{"_index":1609,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:25",{"_index":1605,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:26",{"_index":1600,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:32",{"_index":1603,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/filters/filters.component.ts:37",{"_index":1604,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts",{"_index":1828,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/icon/icon.component.ts:100",{"_index":1861,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:105",{"_index":1858,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:113",{"_index":1873,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:19",{"_index":1843,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:35",{"_index":1838,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:52",{"_index":1863,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:59",{"_index":1851,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:66",{"_index":1848,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:73",{"_index":1868,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:83",{"_index":1871,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/icon/icon.component.ts:95",{"_index":1852,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/_main/components/input",{"_index":2042,"title":{},"body":{"components/InputDateTimeComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/input/input.component.ts",{"_index":1992,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/input/input.component.ts:18",{"_index":2011,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:23",{"_index":2004,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:28",{"_index":2010,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:33",{"_index":2009,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:38",{"_index":2006,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:40",{"_index":2012,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:42",{"_index":2003,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:48",{"_index":2014,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/input/input.component.ts:52",{"_index":2013,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/_main/components/main",{"_index":2291,"title":{},"body":{"components/MainViewComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/nav",{"_index":2378,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/option/option.component.ts",{"_index":2478,"title":{},"body":{"components/OptionComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/option/option.component.ts:10",{"_index":2486,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:11",{"_index":2485,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:13",{"_index":2487,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:15",{"_index":2489,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/option/option.component.ts:17",{"_index":2483,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/_main/components/select/select.component.ts",{"_index":2732,"title":{},"body":{"components/SelectComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/select/select.component.ts:12",{"_index":2747,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:13",{"_index":2743,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:14",{"_index":2744,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:15",{"_index":2739,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:16",{"_index":2749,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:18",{"_index":2748,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:20",{"_index":2751,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:24",{"_index":2741,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:41",{"_index":2740,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/select/select.component.ts:49",{"_index":2742,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/_main/components/sidebar",{"_index":2953,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/snackbar",{"_index":3025,"title":{},"body":{"components/SnackbarOutletComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts",{"_index":2973,"title":{},"body":{"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:12",{"_index":2996,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:15",{"_index":2989,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:18",{"_index":2988,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:21",{"_index":2987,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:24",{"_index":2985,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:27",{"_index":2990,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:29",{"_index":2998,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:36",{"_index":2984,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:40",{"_index":2992,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:46",{"_index":2991,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.component.ts:53",{"_index":2994,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/_main/components/snackbar/snackbar.interface.ts",{"_index":3024,"title":{},"body":{"interfaces/SnackbarData.html":{},"coverage.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts",{"_index":3492,"title":{},"body":{"components/TextareaComponent.html":{},"coverage.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:13",{"_index":3498,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:18",{"_index":3503,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:23",{"_index":3500,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:28",{"_index":3499,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:30",{"_index":3502,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/textarea/textarea.component.ts:32",{"_index":3497,"title":{},"body":{"components/TextareaComponent.html":{}}}],["src/app/_main/components/upper",{"_index":3505,"title":{},"body":{"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["src/app/_main/decorators/debug.decorator.ts",{"_index":3749,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/page.decorator",{"_index":1212,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/WorkspacesListPage.html":{}}}],["src/app/_main/decorators/page.decorator.ts",{"_index":3752,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/service",{"_index":1534,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/decorators/service.decorator.ts",{"_index":3753,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts",{"_index":254,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:50",{"_index":269,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:58",{"_index":295,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:67",{"_index":278,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:73",{"_index":282,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/dialogs/alert/alert.dialog.ts:80",{"_index":289,"title":{},"body":{"components/AlertDialog.html":{}}}],["src/app/_main/directives/click",{"_index":1050,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{},"coverage.html":{}}}],["src/app/_main/directives/focus",{"_index":1632,"title":{},"body":{"directives/FocusInitialDirective.html":{},"coverage.html":{}}}],["src/app/_main/directives/let.directive.ts",{"_index":2118,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"coverage.html":{}}}],["src/app/_main/directives/let.directive.ts:11",{"_index":2128,"title":{},"body":{"directives/LetDirective.html":{}}}],["src/app/_main/directives/let.directive.ts:18",{"_index":2130,"title":{},"body":{"directives/LetDirective.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts",{"_index":1505,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:11",{"_index":1514,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:13",{"_index":1512,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interceptors/error.interceptor.ts:8",{"_index":1508,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_main/interfaces/color.interface.ts",{"_index":3967,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/_main/interfaces/filters.interface.ts",{"_index":1576,"title":{},"body":{"interfaces/FilterCheckbox.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/_main/interfaces/filters.interface.ts:9",{"_index":1579,"title":{},"body":{"interfaces/FilterCheckbox.html":{}}}],["src/app/_main/interfaces/request",{"_index":2648,"title":{},"body":{"interfaces/RequestOptions.html":{},"coverage.html":{}}}],["src/app/_main/interfaces/validation",{"_index":3631,"title":{},"body":{"interfaces/ValidationError.html":{},"coverage.html":{}}}],["src/app/_main/operators/apply",{"_index":3758,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/operators/catch",{"_index":3760,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/pages/mock/mock.page.ts",{"_index":2358,"title":{},"body":{"components/MockPage.html":{},"coverage.html":{}}}],["src/app/_main/pages/mock/mock.page.ts:12",{"_index":2364,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pages/mock/mock.page.ts:14",{"_index":2363,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pages/mock/mock.page.ts:9",{"_index":2362,"title":{},"body":{"components/MockPage.html":{}}}],["src/app/_main/pipes/validation",{"_index":3641,"title":{},"body":{"pipes/ValidationErrorPipe.html":{},"coverage.html":{}}}],["src/app/_main/services/api.service",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MemberService.html":{},"injectables/ProjectService.html":{},"injectables/SessionsService.html":{},"injectables/StatusService.html":{},"injectables/WorkspaceService.html":{}}}],["src/app/_main/services/api.service.ts",{"_index":322,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/_main/services/api.service.ts:18",{"_index":333,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:30",{"_index":357,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:44",{"_index":349,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:54",{"_index":353,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:64",{"_index":338,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:74",{"_index":355,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/api.service.ts:84",{"_index":351,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/_main/services/dialog.service",{"_index":2568,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["src/app/_main/services/dialog.service.ts",{"_index":1285,"title":{},"body":{"injectables/DialogService.html":{},"coverage.html":{}}}],["src/app/_main/services/dialog.service.ts:101",{"_index":1310,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:18",{"_index":1321,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:19",{"_index":1320,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:21",{"_index":1323,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:23",{"_index":1297,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:36",{"_index":1312,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:55",{"_index":1304,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:66",{"_index":1299,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:72",{"_index":1318,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:87",{"_index":1306,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/dialog.service.ts:91",{"_index":1308,"title":{},"body":{"injectables/DialogService.html":{}}}],["src/app/_main/services/router",{"_index":2684,"title":{},"body":{"injectables/RouterExtensionsService.html":{},"coverage.html":{}}}],["src/app/_main/services/snackbar.service.ts",{"_index":3040,"title":{},"body":{"injectables/SnackbarService.html":{},"coverage.html":{}}}],["src/app/_main/services/snackbar.service.ts:11",{"_index":3042,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:14",{"_index":3049,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:16",{"_index":3047,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:26",{"_index":3044,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/services/snackbar.service.ts:31",{"_index":3045,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/_main/validators/email.validator.ts",{"_index":3765,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/validators/max",{"_index":3766,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/validators/password.validator.ts",{"_index":3768,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/validators/required.validator",{"_index":1173,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["src/app/_main/validators/required.validator.ts",{"_index":3769,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_main/validators/same",{"_index":3770,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.ts",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/auth/auth.module.ts",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.routing.ts",{"_index":477,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/guard/logged",{"_index":2144,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"coverage.html":{}}}],["src/app/auth/interfaces/user.interface.ts",{"_index":2374,"title":{},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{}}}],["src/app/auth/pages/change",{"_index":894,"title":{},"body":{"components/ChangePasswordPage.html":{},"coverage.html":{}}}],["src/app/auth/pages/delete",{"_index":1269,"title":{},"body":{"components/DeleteAccountPage.html":{},"coverage.html":{}}}],["src/app/auth/pages/forgot",{"_index":1642,"title":{},"body":{"components/ForgotPasswordPage.html":{},"coverage.html":{}}}],["src/app/auth/pages/login/login.page.ts",{"_index":2151,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/auth/pages/login/login.page.ts:14",{"_index":2157,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:21",{"_index":2164,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:22",{"_index":2162,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:27",{"_index":2163,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:33",{"_index":2161,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:40",{"_index":2160,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/login/login.page.ts:66",{"_index":2159,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/auth/pages/register/register.page.ts",{"_index":2604,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/auth/pages/register/register.page.ts:21",{"_index":2612,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:24",{"_index":2622,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:25",{"_index":2624,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:26",{"_index":2621,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:28",{"_index":2617,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:33",{"_index":2620,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:51",{"_index":2614,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:66",{"_index":2615,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:70",{"_index":2616,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/register/register.page.ts:91",{"_index":2613,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/auth/pages/restore",{"_index":2675,"title":{},"body":{"components/RestoreAccountPage.html":{},"coverage.html":{}}}],["src/app/auth/services/auth.service.ts",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/services/auth.service.ts:12",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:30",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:42",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:47",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:51",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:55",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:59",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:63",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:67",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/auth.service.ts:9",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/services/user.service.ts",{"_index":3542,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/auth/services/user.service.ts:12",{"_index":3547,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/services/user.service.ts:16",{"_index":3545,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/auth/services/user.service.ts:9",{"_index":3544,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/dashboard/classes/user.class.ts",{"_index":3560,"title":{},"body":{"classes/UserUtils.html":{},"coverage.html":{}}}],["src/app/dashboard/classes/user.class.ts:15",{"_index":3566,"title":{},"body":{"classes/UserUtils.html":{}}}],["src/app/dashboard/classes/user.class.ts:5",{"_index":3564,"title":{},"body":{"classes/UserUtils.html":{}}}],["src/app/dashboard/components/integration",{"_index":2084,"title":{},"body":{"components/IntegrationGithubComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/components/member",{"_index":2299,"title":{},"body":{"components/MemberListComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/components/view",{"_index":3646,"title":{},"body":{"components/ViewOptionsComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.module.ts",{"_index":1222,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/dashboard/dashboard.routing.ts",{"_index":1249,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["src/app/dashboard/dialogs/add",{"_index":10,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"coverage.html":{}}}],["src/app/dashboard/interfaces/git",{"_index":1660,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"coverage.html":{}}}],["src/app/dashboard/interfaces/project",{"_index":2524,"title":{},"body":{"interfaces/ProjectMember.html":{},"coverage.html":{}}}],["src/app/dashboard/interfaces/project.interface",{"_index":2450,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["src/app/dashboard/interfaces/project.interface.ts",{"_index":2519,"title":{},"body":{"interfaces/Project.html":{},"coverage.html":{}}}],["src/app/dashboard/interfaces/workspace.interface",{"_index":2451,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["src/app/dashboard/interfaces/workspace.interface.ts",{"_index":3674,"title":{},"body":{"interfaces/Workspace.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/create",{"_index":1141,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/edit",{"_index":1357,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/github",{"_index":1815,"title":{},"body":{"components/GithubIntegrationPage.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/projects",{"_index":2554,"title":{},"body":{"components/ProjectsListPage.html":{},"coverage.html":{}}}],["src/app/dashboard/pages/workspaces",{"_index":3706,"title":{},"body":{"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["src/app/dashboard/services/git",{"_index":1701,"title":{},"body":{"injectables/GitIntegrationService.html":{},"coverage.html":{}}}],["src/app/dashboard/services/member.service.ts",{"_index":2321,"title":{},"body":{"injectables/MemberService.html":{},"coverage.html":{}}}],["src/app/dashboard/services/member.service.ts:11",{"_index":2323,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:19",{"_index":2331,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:29",{"_index":2336,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:39",{"_index":2329,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:49",{"_index":2325,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/member.service.ts:61",{"_index":2334,"title":{},"body":{"injectables/MemberService.html":{}}}],["src/app/dashboard/services/project.service",{"_index":2452,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["src/app/dashboard/services/project.service.ts",{"_index":2526,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/app/dashboard/services/project.service.ts:12",{"_index":2528,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:20",{"_index":2538,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:29",{"_index":2535,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:38",{"_index":2542,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:47",{"_index":2533,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:57",{"_index":2530,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/project.service.ts:64",{"_index":2540,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/dashboard/services/workspace.service",{"_index":2453,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/SidebarNavigationComponent.html":{}}}],["src/app/dashboard/services/workspace.service.ts",{"_index":3680,"title":{},"body":{"injectables/WorkspaceService.html":{},"coverage.html":{}}}],["src/app/dashboard/services/workspace.service.ts:14",{"_index":3683,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:27",{"_index":3689,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:36",{"_index":3687,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:45",{"_index":3692,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:53",{"_index":3690,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:62",{"_index":3685,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/dashboard/services/workspace.service.ts:74",{"_index":3695,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["src/app/emails/emails.module.ts",{"_index":1446,"title":{},"body":{"modules/EmailsModule.html":{}}}],["src/app/emails/emails.routing.ts",{"_index":1448,"title":{},"body":{"modules/EmailsRoutingModule.html":{}}}],["src/app/hello",{"_index":4011,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["src/app/landing",{"_index":2112,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/messages/messages.module.ts",{"_index":2354,"title":{},"body":{"modules/MessagesModule.html":{}}}],["src/app/messages/messages.routing.ts",{"_index":2356,"title":{},"body":{"modules/MessagesRoutingModule.html":{}}}],["src/app/settings/components/integration",{"_index":2068,"title":{},"body":{"components/IntegrationEntryComponent.html":{},"coverage.html":{}}}],["src/app/settings/components/list",{"_index":2132,"title":{},"body":{"components/ListGroupComponent.html":{},"coverage.html":{}}}],["src/app/settings/interfaces/session.interface",{"_index":2784,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/interfaces/session.interface.ts",{"_index":3551,"title":{},"body":{"interfaces/UserSession.html":{},"coverage.html":{}}}],["src/app/settings/pages/settings",{"_index":1672,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"coverage.html":{}}}],["src/app/settings/pages/settings/settings.page",{"_index":2879,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/settings/pages/settings/settings.page.ts",{"_index":2889,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:10",{"_index":2900,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:11",{"_index":2899,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:12",{"_index":2898,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:13",{"_index":2896,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/pages/settings/settings.page.ts:17",{"_index":2897,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/services/sessions.service.ts",{"_index":2778,"title":{},"body":{"injectables/SessionsService.html":{},"coverage.html":{}}}],["src/app/settings/services/sessions.service.ts:12",{"_index":2782,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/services/sessions.service.ts:16",{"_index":2781,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/services/sessions.service.ts:9",{"_index":2779,"title":{},"body":{"injectables/SessionsService.html":{}}}],["src/app/settings/settings.module.ts",{"_index":2877,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/settings/settings.routing.ts",{"_index":2906,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/tasks/components/board",{"_index":758,"title":{},"body":{"components/BoardTaskComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/input",{"_index":1900,"title":{},"body":{"components/InputAssigneeComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/status",{"_index":3078,"title":{},"body":{"components/StatusLabelComponent.html":{},"coverage.html":{}}}],["src/app/tasks/components/view",{"_index":3661,"title":{},"body":{"components/ViewOptionsComponent-1.html":{},"coverage.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts",{"_index":3169,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:105",{"_index":3190,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:111",{"_index":3188,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:136",{"_index":3185,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:142",{"_index":3183,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:150",{"_index":3184,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:169",{"_index":3182,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:38",{"_index":3204,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:40",{"_index":3208,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:41",{"_index":3203,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:42",{"_index":3206,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:44",{"_index":3201,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:45",{"_index":3209,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:46",{"_index":3199,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:47",{"_index":3198,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:48",{"_index":3200,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:50",{"_index":3197,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:52",{"_index":3196,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:73",{"_index":3181,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:76",{"_index":3191,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/dialogs/task/task.dialog.ts:84",{"_index":3186,"title":{},"body":{"components/TaskDialog.html":{}}}],["src/app/tasks/enums/task",{"_index":3863,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/tasks/interfaces/schedule.interface.ts",{"_index":2971,"title":{},"body":{"interfaces/SinglePersonSchedule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/tasks/interfaces/status.interface.ts",{"_index":3056,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"coverage.html":{}}}],["src/app/tasks/interfaces/task.interface.ts",{"_index":3153,"title":{},"body":{"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"coverage.html":{}}}],["src/app/tasks/pages/board/board.page.ts",{"_index":525,"title":{},"body":{"components/BoardPage.html":{},"coverage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:148",{"_index":566,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:164",{"_index":562,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:168",{"_index":556,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:30",{"_index":572,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:31",{"_index":569,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:32",{"_index":570,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:33",{"_index":571,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:34",{"_index":568,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:36",{"_index":582,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:37",{"_index":575,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:39",{"_index":578,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:40",{"_index":567,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:41",{"_index":574,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:42",{"_index":573,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:43",{"_index":577,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:44",{"_index":549,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:66",{"_index":559,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:70",{"_index":565,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:76",{"_index":564,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/board/board.page.ts:80",{"_index":552,"title":{},"body":{"components/BoardPage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts",{"_index":2694,"title":{},"body":{"components/SchedulePage.html":{},"coverage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:16",{"_index":2709,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:17",{"_index":2708,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:19",{"_index":2704,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:20",{"_index":2706,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:21",{"_index":2707,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:23",{"_index":2711,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:37",{"_index":2701,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/schedule/schedule.page.ts:50",{"_index":2702,"title":{},"body":{"components/SchedulePage.html":{}}}],["src/app/tasks/pages/task",{"_index":3252,"title":{},"body":{"components/TaskListPage.html":{},"coverage.html":{}}}],["src/app/tasks/pipes/status",{"_index":3070,"title":{},"body":{"pipes/StatusColorPipe.html":{},"coverage.html":{}}}],["src/app/tasks/pipes/task",{"_index":3327,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"coverage.html":{}}}],["src/app/tasks/services/status.service.ts",{"_index":3112,"title":{},"body":{"injectables/StatusService.html":{},"coverage.html":{}}}],["src/app/tasks/services/status.service.ts:11",{"_index":3114,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:19",{"_index":3123,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:29",{"_index":3122,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:39",{"_index":3118,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:49",{"_index":3127,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:59",{"_index":3121,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:63",{"_index":3125,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/status.service.ts:74",{"_index":3116,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/tasks/services/task.service.ts",{"_index":3349,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/tasks/services/task.service.ts:119",{"_index":3366,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:129",{"_index":3368,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:155",{"_index":3376,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:181",{"_index":3371,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:204",{"_index":3374,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:231",{"_index":3378,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:269",{"_index":3359,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:282",{"_index":3364,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:33",{"_index":3356,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:53",{"_index":3370,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:74",{"_index":3365,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/services/task.service.ts:98",{"_index":3381,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/tasks/tasks.module.ts",{"_index":3462,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/app/tasks/tasks.routing.ts",{"_index":3478,"title":{},"body":{"modules/TasksRoutingModule.html":{}}}],["src/environments/environment",{"_index":366,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/environments/environment.prod.ts",{"_index":3810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/locales",{"_index":4069,"title":{},"body":{"additional-documentation/localization.html":{}}}],["src/locales/messages.pl",{"_index":4067,"title":{},"body":{"additional-documentation/localization.html":{}}}],["src/mocks/_main.mocks.prod.ts",{"_index":3812,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mocks/_main.mocks.ts",{"_index":3814,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/mocks/helpers/response.mock.helper.ts",{"_index":3815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/workspaces.mocks.ts",{"_index":3817,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tests/helpers/mat",{"_index":3820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tests/helpers/ng",{"_index":3481,"title":{},"body":{"classes/TestNgControl.html":{},"coverage.html":{}}}],["src/tests/helpers/validator",{"_index":3822,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tests/test.ts",{"_index":3826,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/typings/typings.ts",{"_index":1653,"title":{},"body":{"interfaces/FormGroup.html":{},"coverage.html":{}}}],["src/typings/typings.ts:5",{"_index":1654,"title":{},"body":{"interfaces/FormGroup.html":{}}}],["stage",{"_index":2609,"title":{},"body":{"components/RegisterPage.html":{},"additional-documentation/localization.html":{}}}],["start",{"_index":941,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"injectables/GitIntegrationService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/WorkspacesListPage.html":{}}}],["start:docsapi",{"_index":3944,"title":{},"body":{"index.html":{}}}],["start:test",{"_index":3939,"title":{},"body":{"index.html":{}}}],["started",{"_index":3061,"title":{"index.html":{},"license.html":{}},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"index.html":{}}}],["startgithubintegration",{"_index":1705,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["starting",{"_index":3613,"title":{},"body":{"classes/Utils.html":{}}}],["startnavigate",{"_index":3924,"title":{},"body":{"index.html":{}}}],["startpos",{"_index":3609,"title":{},"body":{"classes/Utils.html":{}}}],["state",{"_index":651,"title":{},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["statement",{"_index":2647,"title":{},"body":{"components/RegisterPage.html":{}}}],["statements",{"_index":3723,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":4054,"title":{},"body":{"additional-documentation/localization.html":{}}}],["static",{"_index":1454,"title":{},"body":{"classes/Enum.html":{},"classes/Filters.html":{},"components/InputComponent.html":{},"modules/MainModule.html":{},"components/TextareaComponent.html":{},"classes/UserUtils.html":{},"classes/Utils.html":{}}}],["staticlabel",{"_index":2000,"title":{},"body":{"components/InputComponent.html":{},"components/TextareaComponent.html":{}}}],["statistics",{"_index":2575,"title":{},"body":{"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["status",{"_index":81,"title":{"interfaces/Status.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"interfaces/ErrorValidationTree.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["status.begin)?.id",{"_index":3233,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["status.id",{"_index":619,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{}}}],["status.name",{"_index":678,"title":{},"body":{"components/BoardPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{}}}],["status.tasks",{"_index":3150,"title":{},"body":{"injectables/StatusService.html":{}}}],["status.tasks.push(task",{"_index":3151,"title":{},"body":{"injectables/StatusService.html":{}}}],["status/column",{"_index":3057,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["status['name",{"_index":3076,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["statuscolor",{"_index":3072,"title":{},"body":{"pipes/StatusColorPipe.html":{}}}],["statuscolorpipe",{"_index":3068,"title":{"pipes/StatusColorPipe.html":{}},"body":{"pipes/StatusColorPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["statuses",{"_index":3083,"title":{},"body":{"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{}}}],["statuses(statuses",{"_index":3104,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statuses.find((status",{"_index":3232,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["statuses.foreach((status",{"_index":3139,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.map((s",{"_index":3141,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.map((status",{"_index":3145,"title":{},"body":{"injectables/StatusService.html":{}}}],["statuses.reduce((acc",{"_index":3107,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statuseswithsubtasks",{"_index":3144,"title":{},"body":{"injectables/StatusService.html":{}}}],["statusid",{"_index":560,"title":{},"body":{"components/BoardPage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["statusid)?.name",{"_index":3306,"title":{},"body":{"components/TaskListPage.html":{}}}],["statusid)?.tasks",{"_index":620,"title":{},"body":{"components/BoardPage.html":{}}}],["statuslabelcomponent",{"_index":226,"title":{"components/StatusLabelComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["statuslist",{"_index":30,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["statuslistsubscription",{"_index":534,"title":{},"body":{"components/BoardPage.html":{}}}],["statusmap",{"_index":3084,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statusmap.get(statusid)?.name",{"_index":3111,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["statusservice",{"_index":545,"title":{"injectables/StatusService.html":{}},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"coverage.html":{}}}],["statuswithtasks",{"_index":576,"title":{"interfaces/StatusWithTasks.html":{}},"body":{"components/BoardPage.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"coverage.html":{}}}],["statuswithtasks).tasks",{"_index":3140,"title":{},"body":{"injectables/StatusService.html":{}}}],["step",{"_index":3916,"title":{},"body":{"index.html":{}}}],["stop",{"_index":244,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["store",{"_index":3900,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stored",{"_index":3931,"title":{},"body":{"index.html":{}}}],["stores",{"_index":3986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["story",{"_index":3452,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["string",{"_index":305,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/Enum.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"miscellaneous/functions.html":{}}}],["string.substring(startpos).search(regex",{"_index":3623,"title":{},"body":{"classes/Utils.html":{}}}],["strings",{"_index":4076,"title":{},"body":{"additional-documentation/localization.html":{}}}],["structure",{"_index":4040,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["studio",{"_index":2473,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"additional-documentation/localization.html":{}}}],["style",{"_index":845,"title":{},"body":{"components/ButtonComponent.html":{},"components/IconComponent.html":{}}}],["style.animation",{"_index":2980,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["style.height",{"_index":1835,"title":{},"body":{"components/IconComponent.html":{}}}],["style.width",{"_index":1836,"title":{},"body":{"components/IconComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["styles/typography",{"_index":800,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["styling",{"_index":300,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"miscellaneous/enumerations.html":{}}}],["sub",{"_index":2477,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["subject",{"_index":1032,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"injectables/WorkspaceService.html":{}}}],["subject.next(tasks",{"_index":3394,"title":{},"body":{"injectables/TaskService.html":{}}}],["subject.pipe(applyfilters(filters",{"_index":3395,"title":{},"body":{"injectables/TaskService.html":{}}}],["submit",{"_index":841,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/FormGroup.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{}}}],["submitcreate",{"_index":1149,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["submitupdate",{"_index":1363,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["subscribe",{"_index":927,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/RegisterPage.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["subscribe((response",{"_index":2172,"title":{},"body":{"components/LoginPage.html":{}}}],["subscribe((result",{"_index":663,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/UpperNavigationComponent.html":{}}}],["subscribe((task",{"_index":789,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["subscriber.complete",{"_index":1574,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscriber.error(error",{"_index":1572,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscriber.next(value",{"_index":1569,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["subscription",{"_index":579,"title":{},"body":{"components/BoardPage.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["subscriptions",{"_index":1377,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["subtask",{"_index":786,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["subtask.id",{"_index":3318,"title":{},"body":{"components/TaskListPage.html":{}}}],["subtask.name",{"_index":3319,"title":{},"body":{"components/TaskListPage.html":{}}}],["subtask.statusid",{"_index":3147,"title":{},"body":{"injectables/StatusService.html":{}}}],["subtasks",{"_index":3156,"title":{},"body":{"interfaces/Task.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["subtasktype",{"_index":3215,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"miscellaneous/enumerations.html":{}}}],["subtasktypes",{"_index":3175,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["success",{"_index":1554,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"components/GithubIntegrationPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["successful",{"_index":3991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successfully",{"_index":3406,"title":{},"body":{"injectables/TaskService.html":{}}}],["suffix",{"_index":1116,"title":{},"body":{"components/ControlAccessor.html":{}}}],["sum",{"_index":3583,"title":{},"body":{"classes/UserUtils.html":{}}}],["super",{"_index":2513,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["super(ngcontrol",{"_index":1618,"title":{},"body":{"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["super.clear",{"_index":2506,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["super.delete(key",{"_index":2508,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["super.set(key",{"_index":2510,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["support",{"_index":1783,"title":{},"body":{"injectables/GitIntegrationService.html":{},"modules.html":{}}}],["supports",{"_index":1829,"title":{},"body":{"components/IconComponent.html":{}}}],["sure",{"_index":656,"title":{},"body":{"components/BoardPage.html":{},"injectables/DialogService.html":{},"injectables/TaskService.html":{}}}],["surname",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{}}}],["suspended",{"_index":1663,"title":{},"body":{"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/IntegrationEntryComponent.html":{}}}],["svg",{"_index":594,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"dependencies.html":{},"modules.html":{}}}],["swagger",{"_index":3947,"title":{},"body":{"index.html":{}}}],["switch",{"_index":2175,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{}}}],["switchmap",{"_index":3387,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((confirmed",{"_index":3409,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((newtask",{"_index":3397,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((task",{"_index":3420,"title":{},"body":{"injectables/TaskService.html":{}}}],["switchmap((updatedtask",{"_index":3417,"title":{},"body":{"injectables/TaskService.html":{}}}],["system",{"_index":2184,"title":{},"body":{"components/LoginPage.html":{},"components/SettingsSessionsPage.html":{}}}],["t",{"_index":339,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/FilterCheckbox.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["table",{"_index":3321,"title":{},"body":{"components/TaskListPage.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3828,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":3660,"title":{},"body":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["tak",{"_index":2810,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["take",{"_index":1679,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/SettingsIntegrationsPage.html":{},"components/StatusLabelComponent.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["take(1",{"_index":1788,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["taken",{"_index":2640,"title":{},"body":{"components/RegisterPage.html":{}}}],["tap",{"_index":3388,"title":{},"body":{"injectables/TaskService.html":{}}}],["tap((data",{"_index":3415,"title":{},"body":{"injectables/TaskService.html":{}}}],["target",{"_index":1539,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["task",{"_index":229,"title":{"interfaces/Task.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["task'},{'name",{"_index":130,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["task).subscribe",{"_index":790,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["task.assigneeid",{"_index":1593,"title":{},"body":{"classes/Filters.html":{},"injectables/TaskService.html":{}}}],["task.component",{"_index":3464,"title":{},"body":{"modules/TasksModule.html":{}}}],["task.component.html",{"_index":762,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.scss",{"_index":761,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts",{"_index":760,"title":{},"body":{"components/BoardTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:17",{"_index":771,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:20",{"_index":770,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:23",{"_index":769,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:25",{"_index":777,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:26",{"_index":778,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:27",{"_index":767,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:31",{"_index":775,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:37",{"_index":776,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:43",{"_index":774,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.component.ts:63",{"_index":773,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["task.connectwithissueongithub",{"_index":3402,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.connectwithpullrequestongithub",{"_index":3398,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.dialog.html",{"_index":3171,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["task.dialog.scss",{"_index":3170,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["task.estimateddate",{"_index":3433,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.id",{"_index":679,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["task.id).pipe(switchmap",{"_index":3412,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.interface",{"_index":3067,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{}}}],["task.issue",{"_index":3403,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.mergedpulllist",{"_index":665,"title":{},"body":{"components/BoardPage.html":{}}}],["task.name",{"_index":680,"title":{},"body":{"components/BoardPage.html":{},"components/SchedulePage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["task.parenttaskid",{"_index":3309,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.pull",{"_index":652,"title":{},"body":{"components/BoardPage.html":{},"injectables/TaskService.html":{}}}],["task.service",{"_index":3130,"title":{},"body":{"injectables/StatusService.html":{}}}],["task.statusid",{"_index":638,"title":{},"body":{"components/BoardPage.html":{},"injectables/StatusService.html":{}}}],["task.subtasks",{"_index":3311,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.subtasks.length",{"_index":3312,"title":{},"body":{"components/TaskListPage.html":{}}}],["task.subtasks?.filter((subtask",{"_index":3146,"title":{},"body":{"injectables/StatusService.html":{}}}],["task.subtasks?.length",{"_index":3143,"title":{},"body":{"injectables/StatusService.html":{}}}],["task/board",{"_index":759,"title":{},"body":{"components/BoardTaskComponent.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["task:last",{"_index":729,"title":{},"body":{"components/BoardPage.html":{}}}],["task:not(.cdk",{"_index":742,"title":{},"body":{"components/BoardPage.html":{}}}],["task?.name",{"_index":799,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["taskcreate",{"_index":3251,"title":{},"body":{"components/TaskDialog.html":{}}}],["taskdialog",{"_index":228,"title":{"components/TaskDialog.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["taskdialogdata",{"_index":599,"title":{"interfaces/TaskDialogData.html":{}},"body":{"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["taskdialogvariant",{"_index":600,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["taskdialogvariant.create",{"_index":669,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["taskdialogvariant.edit",{"_index":3414,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskid",{"_index":1728,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{}}}],["tasklist",{"_index":3258,"title":{},"body":{"components/TaskListPage.html":{}}}],["tasklist.filter((task",{"_index":3308,"title":{},"body":{"components/TaskListPage.html":{}}}],["tasklistpage",{"_index":230,"title":{"components/TaskListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["taskmap",{"_index":535,"title":{},"body":{"components/BoardPage.html":{}}}],["taskpriorities",{"_index":3176,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["taskpriority",{"_index":3212,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskPriorityPipe.html":{},"miscellaneous/enumerations.html":{}}}],["taskpriorityicon",{"_index":3329,"title":{},"body":{"pipes/TaskPriorityIconPipe.html":{}}}],["taskpriorityiconpipe",{"_index":3326,"title":{"pipes/TaskPriorityIconPipe.html":{}},"body":{"pipes/TaskPriorityIconPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["taskprioritypipe",{"_index":3341,"title":{"pipes/TaskPriorityPipe.html":{}},"body":{"pipes/TaskPriorityPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasks",{"_index":681,"title":{},"body":{"components/BoardPage.html":{},"classes/Filters.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"modules/TasksRoutingModule.html":{},"index.html":{}}}],["tasks.filter((task",{"_index":1592,"title":{},"body":{"classes/Filters.html":{},"injectables/StatusService.html":{}}}],["tasks.routing",{"_index":3477,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks/dialogs/task/task.dialog",{"_index":780,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["tasks/enums/task",{"_index":3213,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["tasks/interfaces/schedule.interface",{"_index":2712,"title":{},"body":{"components/SchedulePage.html":{},"injectables/TaskService.html":{}}}],["tasks/interfaces/status.interface",{"_index":82,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["tasks/interfaces/task.interface",{"_index":1588,"title":{},"body":{"classes/Filters.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{}}}],["tasks/services/status.service",{"_index":3218,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["tasks/services/task.service",{"_index":781,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["taskservice",{"_index":544,"title":{"injectables/TaskService.html":{}},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/InputAssigneeComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":3457,"title":{"modules/TasksModule.html":{}},"body":{"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksroutingmodule",{"_index":3461,"title":{"modules/TasksRoutingModule.html":{}},"body":{"modules/TasksModule.html":{},"modules/TasksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tasktype",{"_index":3216,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["tasktypeicon",{"_index":3440,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{}}}],["tasktypeiconpipe",{"_index":3439,"title":{"pipes/TaskTypeIconPipe.html":{}},"body":{"pipes/TaskTypeIconPipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasktypepipe",{"_index":3448,"title":{"pipes/TaskTypePipe.html":{}},"body":{"pipes/TaskTypePipe.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{}}}],["tasktypes",{"_index":3177,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["taskwithadditionaldata",{"_index":3161,"title":{"interfaces/TaskWithAdditionalData.html":{}},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"coverage.html":{}}}],["temp",{"_index":2507,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["templateref",{"_index":2119,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["test",{"_index":1476,"title":{},"body":{"classes/Enum.html":{},"injectables/GitIntegrationService.html":{}}}],["testenum",{"_index":1460,"title":{},"body":{"classes/Enum.html":{}}}],["testing",{"_index":1108,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["testing.helper.ts",{"_index":3823,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["testngcontrol",{"_index":1075,"title":{"classes/TestNgControl.html":{}},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"classes/TestNgControl.html":{},"coverage.html":{}}}],["tests",{"_index":1473,"title":{},"body":{"classes/Enum.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/continuos-integration.html":{}}}],["tests/helpers/ng",{"_index":1107,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["text",{"_index":308,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/NavElementComponent.html":{},"interfaces/RequestOptions.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/localization.html":{}}}],["textarea",{"_index":3493,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea'},{'name",{"_index":232,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["textarea.component.html",{"_index":3495,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textarea.component.scss",{"_index":3494,"title":{},"body":{"components/TextareaComponent.html":{}}}],["textareacomponent",{"_index":231,"title":{"components/TextareaComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["theirs",{"_index":3901,"title":{},"body":{"miscellaneous/functions.html":{}}}],["this._assignee",{"_index":1942,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this._context",{"_index":2125,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["this._context.nglet",{"_index":2127,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["this._control",{"_index":3491,"title":{},"body":{"classes/TestNgControl.html":{}}}],["this._filters",{"_index":1615,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this._icon",{"_index":1884,"title":{},"body":{"components/IconComponent.html":{}}}],["this._isbuttondisabled",{"_index":3533,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this._persistentkey",{"_index":2518,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["this._required",{"_index":1117,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.activatedroute.data.subscribe",{"_index":2365,"title":{},"body":{"components/MockPage.html":{}}}],["this.activatedroute.snapshot.params",{"_index":606,"title":{},"body":{"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/MemberListComponent.html":{},"components/ProjectsListPage.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.activatedroute.snapshot.queryparams",{"_index":919,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/GithubIntegrationPage.html":{}}}],["this.active",{"_index":2400,"title":{},"body":{"components/NavElementComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["this.activeworkspace",{"_index":2454,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.add(key",{"_index":1356,"title":{},"body":{"classes/ESet.html":{}}}],["this.alert(data",{"_index":1342,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.animationname",{"_index":3012,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.apiservice",{"_index":1793,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/auth/delete",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.delete(`/auth/delete/confirm",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.delete(`/project/${projectid",{"_index":2545,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/integration/github",{"_index":1797,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/member",{"_index":2341,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/status/${status.id",{"_index":3135,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid",{"_index":3408,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid}/integration/git/issue",{"_index":1802,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/project/${projectid}/task/${taskid}/integration/git/pull",{"_index":1805,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/session/${id",{"_index":2786,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.apiservice.delete(`/user/integration/github/${githubaccountid",{"_index":1796,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.delete(`/workspace/${id}`).pipe(this.validate('delete",{"_index":3700,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.get('/user/integration/github/repository",{"_index":1791,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get('/user/integration/github/repository').pipe",{"_index":1775,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get('/workspace').pipe",{"_index":2549,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.get(`/auth/me",{"_index":3550,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.get(`/project/${projectid",{"_index":2544,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.get(`/project/${projectid}/integration/git/issue",{"_index":1800,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get(`/project/${projectid}/integration/git/pull",{"_index":1803,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.get(`/project/${projectid}/member",{"_index":2339,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.get(`/project/${projectid}/status",{"_index":3131,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.get(`/project/${projectid}/status/${statusid",{"_index":3132,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.get(`/project/${projectid}/task`).subscribe((tasks",{"_index":3393,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.get(`/session",{"_index":2785,"title":{},"body":{"injectables/SessionsService.html":{}}}],["this.apiservice.get(`/workspace",{"_index":3702,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.get(`/workspace/${id",{"_index":3699,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.post('/project",{"_index":2547,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.post(`/auth/delete/recover",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/login",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/logout",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/password/recover",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/password/reset",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/auth/register",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.post(`/project/${projectid}/integration/github",{"_index":1792,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/${projectid}/status",{"_index":3133,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task",{"_index":3396,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task/${taskid}/integration/git/issue",{"_index":1801,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/${projectid}/task/${taskid}/integration/git/pull",{"_index":1804,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/project/member",{"_index":2344,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.post(`/user/integration/github",{"_index":1789,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.apiservice.post(`/workspace",{"_index":3703,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiservice.put(`/auth/edit",{"_index":3549,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.put(`/project/${project.id",{"_index":2546,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.put(`/project/${projectid}/member",{"_index":2340,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.apiservice.put(`/project/${projectid}/status/${status.id",{"_index":3134,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.apiservice.put(`/project/${projectid}/task/${task.id",{"_index":3407,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.put(`/project/${projectid}/task/${taskid",{"_index":3438,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.apiservice.put(`/project/${projectid}/workspace/${newworkspaceid",{"_index":2548,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.apiservice.put(`/workspace/${workspace.id",{"_index":3701,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["this.apiurl",{"_index":374,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.assigneecolor",{"_index":1943,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.assigneecontrol.valuechanges.subscribe((assignee",{"_index":3315,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.authservice",{"_index":924,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.authservice.deleteaccount().subscribe",{"_index":2799,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.authservice.deleteaccountconfirmation(token).subscribe",{"_index":1278,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["this.authservice.isloggedin",{"_index":2150,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["this.authservice.logout().subscribe",{"_index":2677,"title":{},"body":{"components/RestoreAccountPage.html":{},"components/SettingsAccountPage.html":{},"components/UpperNavigationComponent.html":{}}}],["this.authservice.recoveraccount().subscribe",{"_index":2678,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["this.authservice.resetpassword(this.form.value).subscribe",{"_index":1648,"title":{},"body":{"components/ForgotPasswordPage.html":{}}}],["this.authservice.resetpassword(this.form.value.email).subscribe",{"_index":2798,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.board",{"_index":610,"title":{},"body":{"components/BoardPage.html":{}}}],["this.button.nativeelement.focus",{"_index":854,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.changeddate.setvalue(this.changedate(value",{"_index":2061,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.changeddate.valuechanges.subscribe((date",{"_index":2058,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.checkifisrequired",{"_index":1125,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.cleargithubintegrationfields",{"_index":3230,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.close",{"_index":1960,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.closenavelement",{"_index":2402,"title":{},"body":{"components/NavElementComponent.html":{}}}],["this.closeprofile",{"_index":3538,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.closeworkspace",{"_index":2456,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.color",{"_index":3005,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.confirm",{"_index":1343,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.control",{"_index":1126,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.disable",{"_index":1136,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.enable",{"_index":1137,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.errors",{"_index":1121,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.markastouched",{"_index":1134,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.setvalue(formvalue",{"_index":1626,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.control.setvalue(this.changedate(date",{"_index":2059,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["this.control.value",{"_index":1120,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.control.valuechanges.subscribe((value",{"_index":2755,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.create(projectid",{"_index":3424,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.create(task.projectid",{"_index":3421,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.createsubscription",{"_index":1184,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["this.createsubscription?.closed",{"_index":1183,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{}}}],["this.data",{"_index":94,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.data.projectid",{"_index":99,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.data.variant",{"_index":276,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["this.data.workspaceid",{"_index":97,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.delete(key",{"_index":1355,"title":{},"body":{"classes/ESet.html":{}}}],["this.delete(projectid",{"_index":3411,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.deleteaccount(token",{"_index":1277,"title":{},"body":{"components/DeleteAccountPage.html":{}}}],["this.destroy$.complete",{"_index":1139,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.destroy$.next(null",{"_index":1138,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.dialogref.close([formvalues.email",{"_index":107,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{}}}],["this.dialogref.close(false",{"_index":108,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.dialogref.close(formvalues",{"_index":3245,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.dialogref.close(true",{"_index":314,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["this.dialogs$.getvalue().size",{"_index":1329,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogs$.next(this.dialogsmap",{"_index":1336,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogservice",{"_index":654,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{}}}],["this.dialogservice.closeall",{"_index":1526,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.dialogservice.confirmprojectdelete(project).subscribe",{"_index":2462,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["this.dialogservice.confirmworkspacedelete(this.workspace).subscribe",{"_index":2464,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.dialogservice.confirmworkspacedelete(workspace).subscribe",{"_index":3719,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.dialogservice.openerrordialog($localize`your",{"_index":1529,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.dialogsmap.delete(uid",{"_index":1335,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogsmap.foreach((dialog",{"_index":1337,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.dialogsmap.set(uid",{"_index":1333,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.duration",{"_index":3008,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.editproject",{"_index":1404,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.editprojectwithworkspace(newworkspaceid",{"_index":1403,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.el.nativeelement.__ngcontext__[33].focus",{"_index":1641,"title":{},"body":{"directives/FocusInitialDirective.html":{}}}],["this.error",{"_index":2178,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.filters.entries",{"_index":1621,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filters.push(filters.only_my_tasks(user.id",{"_index":3304,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.filterscontrol.valuechanges.subscribe((filters",{"_index":3305,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.focused",{"_index":2020,"title":{},"body":{"components/InputComponent.html":{}}}],["this.form",{"_index":1612,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.form.addcontrol('id",{"_index":1393,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.form.addcontrol('workspaceid",{"_index":1179,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.form.get('newworkspaceid')?.value",{"_index":1402,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.form.get('projectid')?.valuechanges.subscribe(this.onprojectidchange.bind(this",{"_index":3222,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.get('workspaceid')?.valuechanges.subscribe(this.onworkspaceidchange.bind(this",{"_index":3221,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.get(field)?.invalid",{"_index":2632,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.get(field)?.markastouched",{"_index":2630,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.get(field)?.updatevalueandvalidity",{"_index":2631,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.form.invalid",{"_index":105,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.markallastouched",{"_index":103,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue",{"_index":95,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue(project",{"_index":1426,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.form.patchvalue(response",{"_index":2796,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.form.patchvalue(task",{"_index":3220,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.patchvalue(workspace",{"_index":1399,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.form.updatevalueandvalidity",{"_index":104,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.valid",{"_index":923,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.form.value",{"_index":102,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.form.value.password",{"_index":926,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["this.form.value.repository",{"_index":2109,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.form?.controls[index",{"_index":1619,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.getconnectedprojects(account).pipe(take(1",{"_index":1690,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.getsubscription",{"_index":1397,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.getsubscription.unsubscribe",{"_index":1411,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.githubaccounts",{"_index":1686,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.githubintegrationservice.isownerofrepository(&#39;@czemar/cli&#39",{"_index":1760,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.githubintegrationservice.isownerofrepository('@czemar/cli",{"_index":1807,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.githubintegrationservice.startgithubintegration",{"_index":1770,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.gitintegrationservice",{"_index":1696,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/IntegrationGithubComponent.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.connectgithubissue(projectid",{"_index":3404,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.gitintegrationservice.connectgithubpull(projectid",{"_index":3399,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.gitintegrationservice.deleteconnectedgithubaccount(account.id).subscribe",{"_index":1692,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.getconnectedgithubaccounts().pipe",{"_index":1687,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.gitintegrationservice.getgithubintegration().subscribe((integration",{"_index":2105,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.gitintegrationservice.githubissuelist(projectid",{"_index":3237,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.githubpulllist(projectid",{"_index":3239,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.hasgithubintegration(projectid!).subscribe((value",{"_index":3234,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.gitintegrationservice.postgithubintegration(installation_id).subscribe",{"_index":1824,"title":{},"body":{"components/GithubIntegrationPage.html":{}}}],["this.gitintegrationservice.startgithubintegration().subscribe",{"_index":2102,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.handleerror(e",{"_index":2171,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.has(key",{"_index":1354,"title":{},"body":{"classes/ESet.html":{}}}],["this.httpclient.request(method",{"_index":373,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.image",{"_index":2366,"title":{},"body":{"components/MockPage.html":{}}}],["this.initcheckfortouch",{"_index":1124,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.isgithubintegrationavailable",{"_index":3235,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.isopen",{"_index":1963,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(false",{"_index":1962,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(true",{"_index":1961,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.next(val",{"_index":1955,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isopen$.value",{"_index":1956,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.isownerofrepository(project.githubintegration",{"_index":1814,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.issuelist",{"_index":3236,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.list(projectid).pipe",{"_index":2345,"title":{},"body":{"injectables/MemberService.html":{}}}],["this.list(projectid).pipe(take(1",{"_index":3425,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.get(projectid",{"_index":3391,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.has(projectid",{"_index":3390,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.lists.set(projectid",{"_index":3392,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.loadgithubintegration",{"_index":1684,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["this.loadparamsfromurl",{"_index":92,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.loadproject(projectid",{"_index":1395,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.loadrepositories",{"_index":2103,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.loadworkspace(workspaceid",{"_index":1439,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.loadworkspaces",{"_index":3717,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.loginsubscription",{"_index":2168,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginsubscription.closed",{"_index":2169,"title":{},"body":{"components/LoginPage.html":{}}}],["this.m_w",{"_index":2592,"title":{},"body":{"classes/Random.html":{}}}],["this.m_z",{"_index":2594,"title":{},"body":{"classes/Random.html":{}}}],["this.mask",{"_index":2593,"title":{},"body":{"classes/Random.html":{}}}],["this.matdialog.open(component",{"_index":1330,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.memberlist",{"_index":1182,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/MemberListComponent.html":{}}}],["this.members",{"_index":616,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.members$.next(members",{"_index":1950,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.members$.next(membersarray",{"_index":1953,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.memberservice.add(result",{"_index":1409,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.memberservice.add(this.memberlist",{"_index":1186,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.memberservice.list(projectid",{"_index":2314,"title":{},"body":{"components/MemberListComponent.html":{}}}],["this.memberservice.list(projectid).pipe",{"_index":3299,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.memberservice.list(projectid).pipe(take(1",{"_index":3426,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.memberservice.map(projectid",{"_index":617,"title":{},"body":{"components/BoardPage.html":{}}}],["this.memberservice.remove(this.projectid",{"_index":2315,"title":{},"body":{"components/MemberListComponent.html":{}}}],["this.name",{"_index":1891,"title":{},"body":{"components/IconComponent.html":{}}}],["this.ngcontrol",{"_index":1129,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol.control",{"_index":1119,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol.name?.tostring",{"_index":1118,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":1123,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.onprojectidchange(projectid",{"_index":3224,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.onworkspaceidchange(workspaceid",{"_index":3223,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.open",{"_index":1964,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.open(alertdialog",{"_index":1339,"title":{},"body":{"injectables/DialogService.html":{}}}],["this.opennavelement",{"_index":2401,"title":{},"body":{"components/NavElementComponent.html":{}}}],["this.openprofile",{"_index":3539,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.openworkspace",{"_index":2455,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.options",{"_index":2768,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.optionsmap!.set(x.value",{"_index":2773,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.optionsmap?.foreach((option",{"_index":2758,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.optionsmap?.get(this.control.value",{"_index":2754,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.overlay?.nativeelement.contains(e.target",{"_index":1958,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.prefix",{"_index":1889,"title":{},"body":{"components/IconComponent.html":{}}}],["this.project",{"_index":608,"title":{},"body":{"components/BoardPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/TaskListPage.html":{}}}],["this.project$.subscribe((project",{"_index":1425,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.project$.subscribe((workspace",{"_index":1398,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.projectid",{"_index":607,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/InputAssigneeComponent.html":{},"components/MemberListComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.projectid).subscribe",{"_index":3110,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.projectid]).subscribe",{"_index":1410,"title":{},"body":{"components/EditProjectMembersPage.html":{}}}],["this.projectlist",{"_index":3225,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.projects",{"_index":2569,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["this.projectservice",{"_index":1405,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"injectables/GitIntegrationService.html":{}}}],["this.projectservice.create(this.form.value).subscribe((response",{"_index":1185,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.projectservice.delete(project.id).subscribe",{"_index":2463,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{}}}],["this.projectservice.get(id",{"_index":1396,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.projectservice.get(projectid",{"_index":609,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.projectservice.get(projectid).pipe(map((project",{"_index":1798,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["this.projectservice.update(this.form.value).subscribe",{"_index":1407,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.pulllist",{"_index":3238,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.queryoptions?.changes.subscribe((options",{"_index":2763,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.queryoptions?.map((x",{"_index":2769,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.ref.nativeelement.innertext",{"_index":2490,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.registersubscription",{"_index":2635,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registersubscription.closed",{"_index":2636,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.repositorylist",{"_index":2106,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.repositorylistloaded",{"_index":2104,"title":{},"body":{"components/IntegrationGithubComponent.html":{}}}],["this.request('delete",{"_index":380,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('get",{"_index":378,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('patch",{"_index":382,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('post",{"_index":379,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.request('put",{"_index":381,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.resetsubscription",{"_index":921,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["this.resetsubscription.closed",{"_index":922,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/ForgotPasswordPage.html":{}}}],["this.router",{"_index":2457,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.router.navigate",{"_index":1408,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/LoginPage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/SidebarNavigationComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["this.router.navigate(['/']).then",{"_index":1214,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["this.router.navigate(['/auth/delete",{"_index":1528,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigate(['/auth/login",{"_index":928,"title":{},"body":{"components/ChangePasswordPage.html":{},"interceptors/ErrorInterceptor.html":{},"guards/LoggedInUsersGuard.html":{}}}],["this.router.navigate(['/auth/restore",{"_index":2174,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigate([this.workspaceid]).then",{"_index":1188,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{}}}],["this.router.routerstate.snapshot",{"_index":2690,"title":{},"body":{"injectables/RouterExtensionsService.html":{}}}],["this.routerextensions.snapshot.params",{"_index":96,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.savestate",{"_index":2509,"title":{},"body":{"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["this.selected$.next(option",{"_index":2760,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selected$.next(this.optionsmap?.get(this.control.value",{"_index":2774,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.selected$.subscribe((val",{"_index":2761,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.sessionservice.delete(id).subscribe",{"_index":2945,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.sessionservice.list",{"_index":2929,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.sessionslist",{"_index":2928,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["this.setanimationname('close",{"_index":3009,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.showarrow$.next(boolean(this.listelement?.nativeelement.children.length",{"_index":2403,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["this.size",{"_index":1896,"title":{},"body":{"components/IconComponent.html":{}}}],["this.snackbars$.next(map",{"_index":3053,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbars$.next(new",{"_index":3055,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbars$.value",{"_index":3051,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbarservice.close(this.uid",{"_index":3010,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["this.snackbarservice.show($localize`task",{"_index":3405,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.snackbarservice.snackbars",{"_index":3035,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["this.stage",{"_index":2633,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.statuses$.next(statuses",{"_index":3105,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.statuslist",{"_index":612,"title":{},"body":{"components/BoardPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["this.statuslist$.subscribe((list",{"_index":3302,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.statuslist$.subscribe((statuses",{"_index":3231,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.statuslist$.subscribe((statuslist",{"_index":615,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslist.find((status",{"_index":618,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["this.statuslist[newstatusindex",{"_index":629,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslist[previousstatusindex",{"_index":627,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslistsubscription",{"_index":614,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statuslistsubscription?.unsubscribe",{"_index":621,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statusmap",{"_index":3106,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.statusservice.board(projectid",{"_index":611,"title":{},"body":{"components/BoardPage.html":{}}}],["this.statusservice.list(projectid",{"_index":3229,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{}}}],["this.statusservice.listwithtasks(projectid",{"_index":613,"title":{},"body":{"components/BoardPage.html":{}}}],["this.task).subscribe",{"_index":784,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["this.task.id",{"_index":788,"title":{},"body":{"components/BoardTaskComponent.html":{}}}],["this.taskid",{"_index":1965,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["this.tasklist",{"_index":3300,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.taskservice",{"_index":1966,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["this.taskservice.changestatus(status.id",{"_index":3109,"title":{},"body":{"components/StatusLabelComponent.html":{}}}],["this.taskservice.create(result.projectid",{"_index":3536,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.taskservice.create(this.projectid",{"_index":671,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.deletewithconfirmation(this.projectid",{"_index":783,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.list(projectid",{"_index":3301,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.taskservice.list(projectid)]).pipe",{"_index":3137,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.taskservice.openedittaskdialog(this.projectid",{"_index":785,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/TaskListPage.html":{}}}],["this.taskservice.update(this.projectid",{"_index":640,"title":{},"body":{"components/BoardPage.html":{}}}],["this.token",{"_index":920,"title":{},"body":{"components/ChangePasswordPage.html":{}}}],["this.touched$.complete",{"_index":1140,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.touched$.next(true",{"_index":1135,"title":{},"body":{"components/ControlAccessor.html":{}}}],["this.unauthorizedinarow",{"_index":1525,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.update(projectid",{"_index":3419,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.updateoptions",{"_index":2765,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.updatesubscription",{"_index":1401,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.updatesubscription.unsubscribe",{"_index":1412,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["this.updatesubscription?.closed",{"_index":1400,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.userservice.getmyself().subscribe",{"_index":2166,"title":{},"body":{"components/LoginPage.html":{}}}],["this.userservice.getmyself().subscribe((response",{"_index":2795,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.userservice.getmyself().subscribe((user",{"_index":3303,"title":{},"body":{"components/TaskListPage.html":{}}}],["this.userservice.update(this.form.value).subscribe",{"_index":2797,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["this.workspace",{"_index":1177,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ProjectsListPage.html":{}}}],["this.workspace$.pipe",{"_index":2570,"title":{},"body":{"components/ProjectsListPage.html":{}}}],["this.workspace$.subscribe((workspace",{"_index":1440,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.workspace.id",{"_index":2460,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.workspaceid",{"_index":1176,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/ProjectsListPage.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["this.workspacelist",{"_index":2964,"title":{},"body":{"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.workspacelist$.subscribe((workspaces",{"_index":1427,"title":{},"body":{"components/EditProjectPage.html":{}}}],["this.workspaces",{"_index":3718,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.workspaceservice",{"_index":3226,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["this.workspaceservice.create(this.form.value).subscribe",{"_index":1213,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["this.workspaceservice.delete(this.workspace.id).subscribe",{"_index":2465,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["this.workspaceservice.delete(workspace.id).subscribe",{"_index":3720,"title":{},"body":{"components/WorkspacesListPage.html":{}}}],["this.workspaceservice.get(id",{"_index":1392,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["this.workspaceservice.get(workspaceid",{"_index":1178,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/ProjectsListPage.html":{}}}],["this.workspaceservice.list",{"_index":1390,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/WorkspacesListPage.html":{}}}],["this.workspaceservice.list().pipe",{"_index":3531,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["this.workspaceservice.update(this.form.value).subscribe",{"_index":1441,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["this.yet",{"_index":2767,"title":{},"body":{"components/SelectComponent.html":{}}}],["three",{"_index":1463,"title":{},"body":{"classes/Enum.html":{}}}],["through",{"_index":2672,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["throw",{"_index":1781,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["throwerror",{"_index":1519,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["time",{"_index":2045,"title":{},"body":{"components/InputDateTimeComponent.html":{},"components/SettingsAccountPage.html":{}}}],["time'},{'name",{"_index":172,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["time.component",{"_index":2243,"title":{},"body":{"modules/MainModule.html":{}}}],["time.component.html",{"_index":2047,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.scss",{"_index":2046,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts",{"_index":2044,"title":{},"body":{"components/InputDateTimeComponent.html":{},"coverage.html":{}}}],["time.component.ts:13",{"_index":2052,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:16",{"_index":2051,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:18",{"_index":2056,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:20",{"_index":2050,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:26",{"_index":2054,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time.component.ts:36",{"_index":2053,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["time/input",{"_index":2043,"title":{},"body":{"components/InputDateTimeComponent.html":{},"modules/MainModule.html":{},"coverage.html":{}}}],["timeline",{"_index":2719,"title":{},"body":{"components/SchedulePage.html":{}}}],["title",{"_index":257,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"injectables/DialogService.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/ViewOptionsComponent.html":{}}}],["title>app",{"_index":697,"title":{},"body":{"components/BoardPage.html":{},"components/TaskListPage.html":{}}}],["todo",{"_index":3269,"title":{},"body":{"components/TaskListPage.html":{}}}],["toggle",{"_index":1350,"title":{},"body":{"classes/ESet.html":{},"components/InputAssigneeComponent.html":{},"components/InputDateTimeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["toggle(key",{"_index":1351,"title":{},"body":{"classes/ESet.html":{}}}],["togglenavelement",{"_index":2386,"title":{},"body":{"components/NavElementComponent.html":{}}}],["toggleprofile",{"_index":3514,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["toggleworkspace",{"_index":2423,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["token",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"interfaces/RequestOptions.html":{}}}],["tool",{"_index":4092,"title":{},"body":{"additional-documentation/continuos-integration.html":{}}}],["tools",{"_index":4083,"title":{},"body":{"additional-documentation/localization.html":{}}}],["top",{"_index":111,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/MockPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["touched",{"_index":967,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["touched.ng",{"_index":2038,"title":{},"body":{"components/InputComponent.html":{}}}],["tracksnackbartuple",{"_index":3030,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["tracksnackbartuple(_index",{"_index":3032,"title":{},"body":{"components/SnackbarOutletComponent.html":{}}}],["transferarrayitem",{"_index":584,"title":{},"body":{"components/BoardPage.html":{}}}],["transform",{"_index":699,"title":{},"body":{"components/BoardPage.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordPage.html":{},"components/InputComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"components/UpperNavigationComponent.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent-1.html":{},"additional-documentation/architecture.html":{}}}],["transform(value",{"_index":3073,"title":{},"body":{"pipes/StatusColorPipe.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"pipes/ValidationErrorPipe.html":{}}}],["transformed",{"_index":3644,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["transition",{"_index":703,"title":{},"body":{"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/LoginPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/SettingsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{}}}],["translatable",{"_index":4078,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translate",{"_index":2372,"title":{},"body":{"components/MockPage.html":{}}}],["translated",{"_index":4049,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translatex(0",{"_index":3023,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["translatex(100",{"_index":3022,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["translatey(100",{"_index":3673,"title":{},"body":{"components/ViewOptionsComponent-1.html":{}}}],["translatey(calc($height",{"_index":2034,"title":{},"body":{"components/InputComponent.html":{}}}],["translating",{"_index":4075,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translation",{"_index":4066,"title":{},"body":{"additional-documentation/localization.html":{}}}],["translations",{"_index":4074,"title":{},"body":{"additional-documentation/localization.html":{}}}],["transparent",{"_index":2031,"title":{},"body":{"components/InputComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["true",{"_index":290,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/BoardTaskComponent.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"modules/DashboardRoutingModule.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationGithubComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":648,"title":{},"body":{"components/BoardPage.html":{}}}],["ts",{"_index":4008,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["tslib",{"_index":3849,"title":{},"body":{"dependencies.html":{}}}],["tweaks",{"_index":3586,"title":{},"body":{"classes/UserUtils.html":{}}}],["two",{"_index":1462,"title":{},"body":{"classes/Enum.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/ErrorValidationTree.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/GitAccount.html":{},"interfaces/GitAccountWithUsage.html":{},"interfaces/GitIntegration.html":{},"injectables/GitIntegrationService.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"guards/LoggedInUsersGuard.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"injectables/MemberService.html":{},"components/MockPage.html":{},"interfaces/ModifyUser.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"interfaces/Project.html":{},"interfaces/ProjectMember.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"interfaces/RequestOptions.html":{},"components/RestoreAccountPage.html":{},"injectables/RouterExtensionsService.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"injectables/SessionsService.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/SnackbarComponent.html":{},"interfaces/SnackbarData.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"interfaces/Status.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"interfaces/TaskWithAdditionalData.html":{},"modules/TasksModule.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"injectables/UserService.html":{},"interfaces/UserSession.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{},"classes/Utils.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["type.enum",{"_index":3217,"title":{},"body":{"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["type.enum.ts",{"_index":3860,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.pipe",{"_index":3476,"title":{},"body":{"modules/TasksModule.html":{}}}],["type.pipe.ts",{"_index":3449,"title":{},"body":{"pipes/TaskTypePipe.html":{},"coverage.html":{}}}],["type.pipe.ts:7",{"_index":3450,"title":{},"body":{"pipes/TaskTypePipe.html":{}}}],["type[0",{"_index":3247,"title":{},"body":{"components/TaskDialog.html":{}}}],["typealiases",{"_index":3962,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1885,"title":{},"body":{"components/IconComponent.html":{}}}],["typescript",{"_index":1453,"title":{},"body":{"classes/Enum.html":{}}}],["typo",{"_index":815,"title":{},"body":{"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SchedulePage.html":{},"components/SettingsPage.html":{},"components/StatusLabelComponent.html":{},"components/TaskListPage.html":{}}}],["ua",{"_index":2867,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"components/SettingsSessionsPage.html":{},"dependencies.html":{},"additional-documentation/localization.html":{}}}],["uaparser",{"_index":2924,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser(agent",{"_index":2940,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser.getbrowser().name",{"_index":2943,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["uaparser.getos().name",{"_index":2942,"title":{},"body":{"components/SettingsSessionsPage.html":{}}}],["ui",{"_index":1009,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"additional-documentation/localization.html":{}}}],["uid",{"_index":1332,"title":{},"body":{"injectables/DialogService.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{}}}],["uk",{"_index":2866,"title":{},"body":{"components/SettingsLocalizationPage.html":{},"additional-documentation/localization.html":{}}}],["ukraine)configuration",{"_index":4062,"title":{},"body":{"additional-documentation/localization.html":{}}}],["ukrainian",{"_index":4061,"title":{},"body":{"additional-documentation/localization.html":{}}}],["unassigned",{"_index":3362,"title":{},"body":{"injectables/TaskService.html":{}}}],["unauthorized",{"_index":4038,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["unauthorizedinarow",{"_index":1506,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["undefined",{"_index":1945,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/SnackbarOutletComponent.html":{},"pipes/StatusColorPipe.html":{},"injectables/WorkspaceService.html":{}}}],["underline",{"_index":2064,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["unique",{"_index":3063,"title":{},"body":{"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{}}}],["unit",{"_index":3935,"title":{},"body":{"index.html":{}}}],["united",{"_index":4052,"title":{},"body":{"additional-documentation/localization.html":{}}}],["units",{"_index":1847,"title":{},"body":{"components/IconComponent.html":{}}}],["universal",{"_index":2189,"title":{},"body":{"modules/MainModule.html":{}}}],["unknown",{"_index":1628,"title":{},"body":{"components/FiltersComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/SettingsSessionsPage.html":{}}}],["unsubscribe",{"_index":1376,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{}}}],["unsupported",{"_index":3576,"title":{},"body":{"classes/UserUtils.html":{}}}],["up",{"_index":997,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"index.html":{}}}],["update",{"_index":1012,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/GithubIntegrationPage.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/StatusLabelComponent.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"components/TextareaComponent.html":{},"injectables/UserService.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{}}}],["update(moduser",{"_index":3546,"title":{},"body":{"injectables/UserService.html":{}}}],["update(project",{"_index":2541,"title":{},"body":{"injectables/ProjectService.html":{}}}],["update(projectid",{"_index":3126,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["update(workspace",{"_index":3691,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["updated",{"_index":3128,"title":{},"body":{"injectables/StatusService.html":{},"injectables/TaskService.html":{}}}],["updatedtask",{"_index":3418,"title":{},"body":{"injectables/TaskService.html":{}}}],["updateoptions",{"_index":2738,"title":{},"body":{"components/SelectComponent.html":{}}}],["updates",{"_index":1380,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"injectables/ProjectService.html":{},"injectables/StatusService.html":{},"injectables/TaskService.html":{},"injectables/WorkspaceService.html":{}}}],["updatesubscription",{"_index":1359,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["updating",{"_index":1388,"title":{},"body":{"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{}}}],["upload",{"_index":2663,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["upper",{"_index":234,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["uppercase",{"_index":2728,"title":{},"body":{"components/SchedulePage.html":{},"components/StatusLabelComponent.html":{}}}],["uppernavigationcomponent",{"_index":233,"title":{"components/UpperNavigationComponent.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":341,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/GitAccount.html":{},"interfaces/GitIntegration.html":{},"interfaces/GitIssue.html":{},"interfaces/GitPull.html":{},"interfaces/GitRepository.html":{},"miscellaneous/variables.html":{}}}],["url('../../../../assets/metadata/logo_with_name.svg",{"_index":2966,"title":{},"body":{"components/SidebarNavigationComponent.html":{}}}],["url('/assets/metadata/logo_with_name.svg",{"_index":935,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["usage",{"_index":1675,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["use",{"_index":360,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/ErrorValidationTree.html":{},"injectables/GitIntegrationService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"classes/Random.html":{},"interfaces/RequestOptions.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/WorkspacesListPage.html":{},"index.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["useclass",{"_index":1074,"title":{},"body":{"components/ControlAccessor.html":{},"components/InputAssigneeComponent.html":{},"modules/MainModule.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":298,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/RequestOptions.html":{},"components/SelectComponent.html":{},"interfaces/Status.html":{},"components/StatusLabelComponent.html":{},"interfaces/StatusWithTasks.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{}}}],["useful",{"_index":3593,"title":{},"body":{"classes/Utils.html":{}}}],["user",{"_index":647,"title":{"interfaces/User.html":{}},"body":{"components/BoardPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"interceptors/ErrorInterceptor.html":{},"components/FiltersComponent.html":{},"injectables/GitIntegrationService.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SelectComponent.html":{},"interfaces/SinglePersonSchedule.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{},"additional-documentation/architecture.html":{}}}],["user_story",{"_index":3445,"title":{},"body":{"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["useragent",{"_index":3557,"title":{},"body":{"interfaces/UserSession.html":{}}}],["userdata",{"_index":2377,"title":{"interfaces/UserData.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/SinglePersonSchedule.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{}}}],["userid",{"_index":3361,"title":{},"body":{"injectables/TaskService.html":{}}}],["username",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"components/InputAssigneeComponent.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"interfaces/ModifyUser.html":{},"interfaces/ProjectMember.html":{},"components/RegisterPage.html":{},"components/SettingsAccountPage.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"classes/UserUtils.html":{},"interfaces/UserWithPrivileges.html":{}}}],["users.guard",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users.guard.ts",{"_index":2145,"title":{},"body":{"guards/LoggedInUsersGuard.html":{},"coverage.html":{}}}],["users.guard.ts:6",{"_index":2147,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["users.guard.ts:9",{"_index":2148,"title":{},"body":{"guards/LoggedInUsersGuard.html":{}}}],["userservice",{"_index":2156,"title":{"injectables/UserService.html":{}},"body":{"components/LoginPage.html":{},"components/SettingsAccountPage.html":{},"components/TaskListPage.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usersession",{"_index":2783,"title":{"interfaces/UserSession.html":{}},"body":{"injectables/SessionsService.html":{},"components/SettingsSessionsPage.html":{},"interfaces/UserSession.html":{},"coverage.html":{}}}],["userutils",{"_index":1938,"title":{"classes/UserUtils.html":{}},"body":{"components/InputAssigneeComponent.html":{},"classes/UserUtils.html":{},"coverage.html":{}}}],["userutils.getcolorbyid(assignee?.user.id",{"_index":1944,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["userutils.getcolorbyid(member.user.id",{"_index":1949,"title":{},"body":{"components/InputAssigneeComponent.html":{}}}],["userwithprivileges",{"_index":2375,"title":{"interfaces/UserWithPrivileges.html":{}},"body":{"interfaces/ModifyUser.html":{},"interfaces/User.html":{},"interfaces/UserData.html":{},"interfaces/UserWithPrivileges.html":{},"coverage.html":{}}}],["usevalue",{"_index":3987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":3946,"title":{},"body":{"index.html":{},"additional-documentation/architecture.html":{},"additional-documentation/localization.html":{},"additional-documentation/continuos-integration.html":{}}}],["usuniecie",{"_index":2807,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["utilities",{"_index":3592,"title":{},"body":{"classes/Utils.html":{}}}],["utility",{"_index":1451,"title":{},"body":{"classes/Enum.html":{},"additional-documentation/architecture.html":{}}}],["utils",{"_index":1880,"title":{"classes/Utils.html":{}},"body":{"components/IconComponent.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["utils.isletter(character",{"_index":3625,"title":{},"body":{"classes/Utils.html":{}}}],["utils.regexindexof(value",{"_index":1887,"title":{},"body":{"components/IconComponent.html":{}}}],["utils.snakecase(this.name",{"_index":1898,"title":{},"body":{"components/IconComponent.html":{}}}],["uuid",{"_index":1327,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{},"dependencies.html":{}}}],["v",{"_index":1494,"title":{},"body":{"classes/Enum.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{}}}],["v4",{"_index":1326,"title":{},"body":{"injectables/DialogService.html":{},"injectables/SnackbarService.html":{}}}],["val",{"_index":1937,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{},"miscellaneous/functions.html":{}}}],["valid",{"_index":1157,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"miscellaneous/functions.html":{}}}],["validate",{"_index":3682,"title":{},"body":{"injectables/WorkspaceService.html":{},"additional-documentation/architecture.html":{}}}],["validate(identifier",{"_index":3693,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["validation",{"_index":3633,"title":{},"body":{"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{}}}],["validationerror",{"_index":1041,"title":{"interfaces/ValidationError.html":{}},"body":{"components/CheckboxComponent.html":{},"components/InputComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"pipes/ValidationErrorPipe.html":{},"coverage.html":{}}}],["validationerrorpipe",{"_index":2270,"title":{"pipes/ValidationErrorPipe.html":{}},"body":{"modules/MainModule.html":{},"pipes/ValidationErrorPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationerrors",{"_index":1105,"title":{},"body":{"components/ControlAccessor.html":{}}}],["validator",{"_index":1128,"title":{},"body":{"components/ControlAccessor.html":{},"miscellaneous/functions.html":{},"additional-documentation/architecture.html":{}}}],["validator.decorator",{"_index":3698,"title":{},"body":{"injectables/WorkspaceService.html":{}}}],["validator.decorator.ts",{"_index":1535,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validator.decorator.ts:4",{"_index":1537,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["validator.name",{"_index":1131,"title":{},"body":{"components/ControlAccessor.html":{}}}],["validator.ts",{"_index":4046,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["validatorfn",{"_index":3881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":988,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"interfaces/ValidationError.html":{},"additional-documentation/architecture.html":{}}}],["value",{"_index":61,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"classes/Enum.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FilterCheckbox.html":{},"classes/Filters.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"interfaces/LetContext.html":{},"directives/LetDirective.html":{},"components/LoginPage.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"classes/Random.html":{},"components/RegisterPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"injectables/SnackbarService.html":{},"pipes/StatusColorPipe.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"pipes/TaskPriorityIconPipe.html":{},"pipes/TaskPriorityPipe.html":{},"injectables/TaskService.html":{},"pipes/TaskTypeIconPipe.html":{},"pipes/TaskTypePipe.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"pipes/ValidationErrorPipe.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/architecture.html":{}}}],["value.iconname",{"_index":1894,"title":{},"body":{"components/IconComponent.html":{}}}],["value.prefix",{"_index":1893,"title":{},"body":{"components/IconComponent.html":{}}}],["value.substring(0",{"_index":1890,"title":{},"body":{"components/IconComponent.html":{}}}],["value.substring(splitindex",{"_index":1892,"title":{},"body":{"components/IconComponent.html":{}}}],["value?.message",{"_index":3645,"title":{},"body":{"pipes/ValidationErrorPipe.html":{}}}],["values",{"_index":1014,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"classes/Enum.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{},"additional-documentation/architecture.html":{}}}],["values(enumtype",{"_index":1482,"title":{},"body":{"classes/Enum.html":{}}}],["var",{"_index":119,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"classes/Utils.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["variable",{"_index":1853,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["variables",{"_index":3968,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":293,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"injectables/DialogService.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"components/UpperNavigationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":3885,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["versions",{"_index":3949,"title":{},"body":{"index.html":{}}}],["via",{"_index":3937,"title":{},"body":{"index.html":{}}}],["view",{"_index":236,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["view'},{'name",{"_index":186,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["view.component",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{}}}],["view.component.html",{"_index":2294,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.scss",{"_index":2293,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts",{"_index":2292,"title":{},"body":{"components/MainViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:11",{"_index":2296,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view.component.ts:8",{"_index":2295,"title":{},"body":{"components/MainViewComponent.html":{}}}],["view/main",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MainModule.html":{},"components/MainViewComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":852,"title":{},"body":{"components/ButtonComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/StatusLabelComponent.html":{},"components/UpperNavigationComponent.html":{}}}],["viewchild('btn",{"_index":849,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('elementlist",{"_index":2397,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["viewchild('input",{"_index":2016,"title":{},"body":{"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{}}}],["viewchild('openbelow",{"_index":3528,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["viewchild('overlay",{"_index":1927,"title":{},"body":{"components/InputAssigneeComponent.html":{},"components/StatusLabelComponent.html":{}}}],["viewcontainerref",{"_index":2120,"title":{},"body":{"interfaces/LetContext.html":{},"directives/LetDirective.html":{}}}],["viewoptionscomponent",{"_index":235,"title":{"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"modules/TasksModule.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["viewtomodelupdate",{"_index":3484,"title":{},"body":{"classes/TestNgControl.html":{}}}],["viewtomodelupdate(newvalue",{"_index":3486,"title":{},"body":{"classes/TestNgControl.html":{}}}],["viewvalue",{"_index":2481,"title":{},"body":{"components/OptionComponent.html":{},"components/SelectComponent.html":{}}}],["visibility",{"_index":2407,"title":{},"body":{"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["visible",{"_index":3013,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["visual",{"_index":2472,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"additional-documentation/localization.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"directives/ClickStopPropagationDirective.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"classes/ESet.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"directives/FocusInitialDirective.html":{},"components/ForgotPasswordPage.html":{},"interfaces/FormGroup.html":{},"interfaces/GitAccountWithUsage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"directives/LetDirective.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"classes/PersistentMap.html":{},"interfaces/PersistentMapOptions.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"injectables/SnackbarService.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"classes/TestNgControl.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/WorkspacesListPage.html":{}}}],["vscode",{"_index":2468,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["vscode://vscode.git/clone?url=https://github.com/${project.githubintegration",{"_index":2467,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["want",{"_index":1045,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/DialogService.html":{},"interfaces/RequestOptions.html":{},"injectables/TaskService.html":{}}}],["way",{"_index":4084,"title":{},"body":{"additional-documentation/localization.html":{}}}],["week",{"_index":2727,"title":{},"body":{"components/SchedulePage.html":{}}}],["weight",{"_index":2140,"title":{},"body":{"components/ListGroupComponent.html":{},"components/MockPage.html":{}}}],["went",{"_index":1560,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["whether",{"_index":1478,"title":{},"body":{"classes/Enum.html":{},"miscellaneous/variables.html":{}}}],["white",{"_index":2062,"title":{},"body":{"components/InputDateTimeComponent.html":{}}}],["width",{"_index":113,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/ChangePasswordPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SettingsAccountPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["wikipedia",{"_index":4014,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["win",{"_index":1779,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["win.closed",{"_index":1786,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["window",{"_index":1555,"title":{},"body":{"interfaces/ErrorValidationTree.html":{},"injectables/GitIntegrationService.html":{},"modules/MainModule.html":{}}}],["window.document.dispatchevent",{"_index":1061,"title":{},"body":{"directives/ClickStopPropagationDirective.html":{}}}],["window.location.reload",{"_index":1189,"title":{},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/WorkspacesListPage.html":{}}}],["window.open",{"_index":1784,"title":{},"body":{"injectables/GitIntegrationService.html":{},"components/NavElementWorkspaceComponent.html":{}}}],["window.open(`https://github.dev/${project.githubintegration",{"_index":2466,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["window.open(link",{"_index":1693,"title":{},"body":{"interfaces/GitAccountWithUsage.html":{},"components/SettingsIntegrationsPage.html":{}}}],["window.open(url",{"_index":1780,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["witch",{"_index":1768,"title":{},"body":{"injectables/GitIntegrationService.html":{}}}],["withcredentials",{"_index":377,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RequestOptions.html":{}}}],["within",{"_index":2679,"title":{},"body":{"components/RestoreAccountPage.html":{}}}],["without",{"_index":287,"title":{},"body":{"components/AlertDialog.html":{},"interfaces/AlertDialogData.html":{}}}],["withsubtasks",{"_index":3314,"title":{},"body":{"components/TaskListPage.html":{}}}],["work",{"_index":2370,"title":{},"body":{"components/MockPage.html":{},"interfaces/Status.html":{},"interfaces/StatusWithTasks.html":{},"interfaces/Task.html":{},"interfaces/TaskWithAdditionalData.html":{},"index.html":{},"additional-documentation/localization.html":{}}}],["workflow",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["workspace",{"_index":77,"title":{"interfaces/Workspace.html":{}},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"injectables/DialogService.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"interfaces/Workspace.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["workspace'},{'name",{"_index":195,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{}}}],["workspace.component",{"_index":2248,"title":{},"body":{"modules/MainModule.html":{}}}],["workspace.component.html",{"_index":2410,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.scss",{"_index":2409,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts",{"_index":2408,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{},"coverage.html":{}}}],["workspace.component.ts:104",{"_index":2441,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:108",{"_index":2437,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:115",{"_index":2439,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:18",{"_index":2425,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:21",{"_index":2426,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:23",{"_index":2448,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:24",{"_index":2447,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:26",{"_index":2449,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:29",{"_index":2424,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:38",{"_index":2442,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:41",{"_index":2427,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:44",{"_index":2446,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:52",{"_index":2435,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:58",{"_index":2445,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:64",{"_index":2444,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:70",{"_index":2428,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:76",{"_index":2433,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:82",{"_index":2430,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:90",{"_index":2434,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.component.ts:96",{"_index":2431,"title":{},"body":{"components/NavElementWorkspaceComponent.html":{}}}],["workspace.id",{"_index":1429,"title":{},"body":{"components/EditProjectPage.html":{},"components/WorkspacesListPage.html":{}}}],["workspace.name",{"_index":1346,"title":{},"body":{"injectables/DialogService.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{}}}],["workspace.page",{"_index":1237,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["workspace.page.html",{"_index":1208,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["workspace.page.scss",{"_index":1207,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{}}}],["workspace.page.ts",{"_index":1206,"title":{},"body":{"components/CreateWorkspacePage.html":{},"components/EditWorkspacePage.html":{},"coverage.html":{}}}],["workspace.page.ts:22",{"_index":1436,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:23",{"_index":1211,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:27",{"_index":1438,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:30",{"_index":1209,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:32",{"_index":1437,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:36",{"_index":1432,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:43",{"_index":1210,"title":{},"body":{"components/CreateWorkspacePage.html":{}}}],["workspace.page.ts:58",{"_index":1434,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.page.ts:69",{"_index":1435,"title":{},"body":{"components/EditWorkspacePage.html":{}}}],["workspace.projectswithprivileges.length).length",{"_index":3535,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspace.projectswithprivileges.map((project",{"_index":2572,"title":{},"body":{"components/ProjectsListPage.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["workspace/create",{"_index":1205,"title":{},"body":{"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["workspace/edit",{"_index":1241,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/EditWorkspacePage.html":{},"coverage.html":{}}}],["workspace/nav",{"_index":2247,"title":{},"body":{"modules/MainModule.html":{},"components/NavElementWorkspaceComponent.html":{},"coverage.html":{}}}],["workspaceid",{"_index":87,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/BoardPage.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"modules/DashboardRoutingModule.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/MemberListComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsListPage.html":{},"interfaces/Task.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/TaskListPage.html":{},"interfaces/TaskWithAdditionalData.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["workspacelist",{"_index":31,"title":{},"body":{"components/AddMemberDialog.html":{},"interfaces/AddMemberDialogData.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{}}}],["workspaces",{"_index":239,"title":{},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"miscellaneous/functions.html":{}}}],["workspaces.filter((workspace",{"_index":3534,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspaces.find((workspace",{"_index":1428,"title":{},"body":{"components/EditProjectPage.html":{}}}],["workspaces.length",{"_index":3532,"title":{},"body":{"components/UpperNavigationComponent.html":{}}}],["workspaces.reduce((projects",{"_index":2551,"title":{},"body":{"injectables/ProjectService.html":{}}}],["workspaceservice",{"_index":1151,"title":{"injectables/WorkspaceService.html":{}},"body":{"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/NavElementWorkspaceComponent.html":{},"components/ProjectsListPage.html":{},"components/SidebarNavigationComponent.html":{},"components/TaskDialog.html":{},"interfaces/TaskDialogData.html":{},"components/UpperNavigationComponent.html":{},"injectables/WorkspaceService.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{}}}],["workspaceslistpage",{"_index":238,"title":{"components/WorkspacesListPage.html":{}},"body":{"components/AddMemberDialog.html":{},"components/AlertDialog.html":{},"components/AppComponent.html":{},"components/BoardPage.html":{},"components/BoardTaskComponent.html":{},"components/ButtonComponent.html":{},"components/CardComponent.html":{},"components/ChangePasswordPage.html":{},"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/CreateProjectMembersPage.html":{},"components/CreateProjectPage.html":{},"components/CreateWorkspacePage.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DeleteAccountPage.html":{},"components/EditProjectMembersPage.html":{},"components/EditProjectPage.html":{},"components/EditWorkspacePage.html":{},"components/FiltersComponent.html":{},"components/ForgotPasswordPage.html":{},"components/GithubIntegrationPage.html":{},"components/IconComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/IntegrationEntryComponent.html":{},"components/IntegrationGithubComponent.html":{},"components/LandingPageComponent.html":{},"components/ListGroupComponent.html":{},"components/LoginPage.html":{},"components/MainViewComponent.html":{},"components/MemberListComponent.html":{},"components/MockPage.html":{},"components/NavElementComponent.html":{},"components/NavElementWorkspaceComponent.html":{},"components/OptionComponent.html":{},"components/ProjectsListPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{},"components/SchedulePage.html":{},"components/SelectComponent.html":{},"components/SettingsAccountPage.html":{},"components/SettingsIntegrationsPage.html":{},"components/SettingsLocalizationPage.html":{},"components/SettingsPage.html":{},"components/SettingsSessionsPage.html":{},"components/SidebarNavigationComponent.html":{},"components/SnackbarComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/StatusLabelComponent.html":{},"components/TaskDialog.html":{},"components/TaskListPage.html":{},"components/TextareaComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent.html":{},"components/ViewOptionsComponent-1.html":{},"components/WorkspacesListPage.html":{},"coverage.html":{},"overview.html":{}}}],["workspacesmock",{"_index":3818,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["workspacesmock(server",{"_index":3903,"title":{},"body":{"miscellaneous/functions.html":{}}}],["workspacesseed",{"_index":3819,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["workspacesseed(server",{"_index":3904,"title":{},"body":{"miscellaneous/functions.html":{}}}],["world",{"_index":4006,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["world.module.ts",{"_index":4013,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["world/hello",{"_index":4012,"title":{},"body":{"additional-documentation/architecture.html":{}}}],["wrapper",{"_index":889,"title":{},"body":{"components/CardComponent.html":{},"components/InputComponent.html":{}}}],["write",{"_index":1027,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writes",{"_index":1026,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue",{"_index":973,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["writevalue(value",{"_index":1024,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ControlAccessor.html":{},"components/FiltersComponent.html":{},"components/InputAssigneeComponent.html":{},"components/InputComponent.html":{},"components/InputDateTimeComponent.html":{},"components/SelectComponent.html":{},"components/StatusLabelComponent.html":{},"components/TextareaComponent.html":{}}}],["wrong",{"_index":1561,"title":{},"body":{"interfaces/ErrorValidationTree.html":{}}}],["wyslany",{"_index":2814,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["x",{"_index":2297,"title":{},"body":{"components/MainViewComponent.html":{},"components/SchedulePage.html":{}}}],["x.icon",{"_index":2772,"title":{},"body":{"components/SelectComponent.html":{}}}],["x.value",{"_index":2770,"title":{},"body":{"components/SelectComponent.html":{}}}],["x.viewvalue",{"_index":2771,"title":{},"body":{"components/SelectComponent.html":{}}}],["xl",{"_index":955,"title":{},"body":{"components/ChangePasswordPage.html":{},"components/DeleteAccountPage.html":{},"components/ForgotPasswordPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/RestoreAccountPage.html":{}}}],["y",{"_index":2298,"title":{},"body":{"components/MainViewComponent.html":{},"components/NavElementComponent.html":{}}}],["yarn",{"_index":3921,"title":{},"body":{"index.html":{},"additional-documentation/localization.html":{}}}],["yes",{"_index":343,"title":{},"body":{"injectables/ApiService.html":{},"injectables/GitIntegrationService.html":{},"classes/PersistentMap.html":{},"components/TaskListPage.html":{},"injectables/TaskService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":1888,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/SnackbarOutletComponent.html":{},"components/UpperNavigationComponent.html":{},"components/ViewOptionsComponent-1.html":{}}}],["ze",{"_index":2812,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["zgadzamy",{"_index":2805,"title":{},"body":{"components/SettingsAccountPage.html":{}}}],["zone.js",{"_index":3853,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DashboardModule.html":{},"modules/EmailsModule.html":{},"modules/MainModule.html":{},"modules/MessagesModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["zostal",{"_index":2813,"title":{},"body":{"components/SettingsAccountPage.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddMemberDialog.html":{"url":"components/AddMemberDialog.html","title":"component - AddMemberDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddMemberDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-member-dialog\n            \n\n            \n                styleUrls\n                ./add-member.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-member.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMembers\n                            \n                            \n                                cancel\n                            \n                            \n                                loadParamsFromUrl\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: AddMemberDialogData, dialogRef: MatDialogRef, routerExtensions: RouterExtensionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMemberDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerExtensions\n                                                  \n                                                        \n                                                                        RouterExtensionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMembers\n                        \n                    \n                \n            \n            \n                \naddMembers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadParamsFromUrl\n                        \n                    \n                \n            \n            \n                \nloadParamsFromUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddMemberDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dialogs/add-member/add-member.dialog.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\n\nexport interface AddMemberDialogData {\n  workspaceId: number;\n  projectId?: number;\n}\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member.dialog.html',\n  styleUrls: ['./add-member.dialog.scss'],\n})\nexport class AddMemberDialog implements OnInit {\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AddMemberDialogData,\n    private dialogRef: MatDialogRef,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  addMembers() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    this.dialogRef.close([formValues.email]);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        Add members\n\n  \n\n    \n    \n    \n\n  \n\n\n  Cancel\n  Add\n\n\n    \n\n    \n                \n                    ./add-member.dialog.scss\n                \n                form {\n  padding-top: 10px;\n\n  > * {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add members                  Cancel  Add'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddMemberDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddMemberDialogData.html":{"url":"interfaces/AddMemberDialogData.html","title":"interface - AddMemberDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddMemberDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\n\nexport interface AddMemberDialogData {\n  workspaceId: number;\n  projectId?: number;\n}\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member.dialog.html',\n  styleUrls: ['./add-member.dialog.scss'],\n})\nexport class AddMemberDialog implements OnInit {\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()]),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AddMemberDialogData,\n    private dialogRef: MatDialogRef,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  addMembers() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    this.dialogRef.close([formValues.email]);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertDialog.html":{"url":"components/AlertDialog.html","title":"component - AlertDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/dialogs/alert/alert.dialog.ts\n\n\n\n    \n        Description\n    \n    \n        Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert-dialog\n            \n\n            \n                styleUrls\n                ./alert.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./alert.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                AlertDialogVariant\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                important\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                confirm\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.important-dialog\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: AlertDialogData, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:50\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the dialog reference and data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AlertDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Object to pass as data to the dialog\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to dialog instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.important-dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.data.variant === AlertDialogVariant.IMPORTANT\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:67\n                        \n                    \n\n            \n                \n                    Host binding to set if the dialog is important.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/dialogs/alert/alert.dialog.ts:73\n                \n            \n\n\n            \n                \n                    Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/dialogs/alert/alert.dialog.ts:80\n                \n            \n\n\n            \n                \n                    Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        AlertDialogVariant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AlertDialogVariant\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:50\n                        \n                    \n\n            \n                \n                    Passthrough to the dialog's variant enumerable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AlertDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:58\n                        \n                    \n\n            \n                \n                    Object to pass as data to the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        important\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.data.variant === AlertDialogVariant.IMPORTANT\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.important-dialog')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/dialogs/alert/alert.dialog.ts:67\n                        \n                    \n\n            \n                \n                    Host binding to set if the dialog is important.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostBinding, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Type of the dialog variant. Used to specify what dialog styling should be used.\n */\nexport enum AlertDialogVariant {\n  DEFAULT = 'default',\n  IMPORTANT = 'important',\n}\n\n/**\n * Alert dialog data interface. Indicates what data will be passed to the dialog.\n */\nexport interface AlertDialogData {\n  /**\n   * Dialog title. Displayed at the top of the dialog.\n   */\n  title?: string;\n  /**\n   * Dialog message. Displayed below the title.\n   */\n  message?: string;\n  /**\n   * Confirm button text.\n   */\n  confirmText?: string;\n  /**\n   * Cancel button text.\n   */\n  cancelText?: string;\n  /**\n   * Type of the dialog variant. Used to specify what dialog styling should be used.\n   */\n  variant?: AlertDialogVariant;\n}\n\n/**\n * Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n */\n@Component({\n  selector: 'app-alert-dialog',\n  templateUrl: './alert.dialog.html',\n  styleUrls: ['./alert.dialog.scss'],\n})\nexport class AlertDialog {\n  /**\n   * Passthrough to the dialog's variant enumerable.\n   */\n  public AlertDialogVariant = AlertDialogVariant;\n\n  /**\n   * Default constructor. Injects the dialog reference and data.\n   * @param data Object to pass as data to the dialog\n   * @param dialogRef Reference to dialog instance\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AlertDialogData,\n    private dialogRef: MatDialogRef,\n  ) {\n    data.variant ||= AlertDialogVariant.DEFAULT;\n  }\n\n  /**\n   * Host binding to set if the dialog is important.\n   */\n  @HostBinding('class.important-dialog') important: boolean =\n    this.data.variant === AlertDialogVariant.IMPORTANT;\n\n  /**\n   * Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n   */\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  /**\n   * Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n   */\n  confirm() {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n    \n        {{ data.title }}\n\n  {{ data.message }}\n\n\n  {{ data.cancelText }}\n  \n    {{ data.confirmText }}\n  \n  \n    {{ data.confirmText }}\n  \n\n\n    \n\n    \n                \n                    ./alert.dialog.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.title }}  {{ data.message }}  {{ data.cancelText }}      {{ data.confirmText }}        {{ data.confirmText }}  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AlertDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AlertDialogData.html":{"url":"interfaces/AlertDialogData.html","title":"interface - AlertDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AlertDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/dialogs/alert/alert.dialog.ts\n        \n\n\n            \n                Description\n            \n            \n                Alert dialog data interface. Indicates what data will be passed to the dialog.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cancelText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            confirmText\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            variant\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancelText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Cancel button text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Confirm button text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dialog message. Displayed below the title.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Dialog title. Displayed at the top of the dialog.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:         AlertDialogVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AlertDialogVariant\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of the dialog variant. Used to specify what dialog styling should be used.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, HostBinding, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Type of the dialog variant. Used to specify what dialog styling should be used.\n */\nexport enum AlertDialogVariant {\n  DEFAULT = 'default',\n  IMPORTANT = 'important',\n}\n\n/**\n * Alert dialog data interface. Indicates what data will be passed to the dialog.\n */\nexport interface AlertDialogData {\n  /**\n   * Dialog title. Displayed at the top of the dialog.\n   */\n  title?: string;\n  /**\n   * Dialog message. Displayed below the title.\n   */\n  message?: string;\n  /**\n   * Confirm button text.\n   */\n  confirmText?: string;\n  /**\n   * Cancel button text.\n   */\n  cancelText?: string;\n  /**\n   * Type of the dialog variant. Used to specify what dialog styling should be used.\n   */\n  variant?: AlertDialogVariant;\n}\n\n/**\n * Alert dialog component. Simple dialog with a title, message, and configurable buttons.\n */\n@Component({\n  selector: 'app-alert-dialog',\n  templateUrl: './alert.dialog.html',\n  styleUrls: ['./alert.dialog.scss'],\n})\nexport class AlertDialog {\n  /**\n   * Passthrough to the dialog's variant enumerable.\n   */\n  public AlertDialogVariant = AlertDialogVariant;\n\n  /**\n   * Default constructor. Injects the dialog reference and data.\n   * @param data Object to pass as data to the dialog\n   * @param dialogRef Reference to dialog instance\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AlertDialogData,\n    private dialogRef: MatDialogRef,\n  ) {\n    data.variant ||= AlertDialogVariant.DEFAULT;\n  }\n\n  /**\n   * Host binding to set if the dialog is important.\n   */\n  @HostBinding('class.important-dialog') important: boolean =\n    this.data.variant === AlertDialogVariant.IMPORTANT;\n\n  /**\n   * Closes the dialog. Returns false to indicate that the dialog was closed without confirmation.\n   */\n  cancel() {\n    this.dialogRef.close(false);\n  }\n\n  /**\n   * Closes the dialog. Returns true to indicate that the dialog was closed with confirmation.\n   */\n  confirm() {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to access the API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/api.service.ts:18\n                            \n                        \n\n                \n                    \n                            Default service constructor with HttpClient dependency\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:64\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends DELETE request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends GET request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends PATCH request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:54\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends POST request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                    \n                    put(url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:74\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends PUT request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        request\n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, url: string, options?: RequestOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/api.service.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Sends request to the API.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP method to use\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL where to send request\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                RequestOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        advanced options to configure request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiURL\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/api.service.ts:18\n                        \n                    \n\n            \n                \n                    URL of the API. Provided in the environment configuration file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Service } from '../decorators/service.decorator';\nimport { RequestOptions } from '../interfaces/request-options.interface';\n\n/**\n * Service to access the API\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  /**\n   * URL of the API. Provided in the environment configuration file.\n   */\n  private apiURL: string = environment.apiURL;\n\n  /** Default service constructor with `HttpClient` dependency */\n  constructor(private httpClient: HttpClient) {}\n\n  /**\n   * Sends request to the API.\n   * @param method HTTP method to use\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public request(method: string, url: string, options?: RequestOptions) {\n    return this.httpClient.request(method, this.apiURL + url, {\n      responseType: 'json' as any,\n      withCredentials: true,\n      ...options,\n    });\n  }\n\n  /**\n   * Sends GET request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(url: string, options?: RequestOptions) {\n    return this.request('GET', url, options);\n  }\n\n  /**\n   * Sends POST request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public post(url: string, options?: RequestOptions) {\n    return this.request('POST', url, options);\n  }\n\n  /**\n   * Sends DELETE request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(url: string, options?: RequestOptions) {\n    return this.request('DELETE', url, options);\n  }\n\n  /**\n   * Sends PUT request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public put(url: string, options?: RequestOptions) {\n    return this.request('PUT', url, options);\n  }\n\n  /**\n   * Sends PATCH request to the API.\n   * @param url URL where to send request\n   * @param options advanced options to configure request\n   * @returns Request observable, which completes when request is finished\n   */\n  public patch(url: string, options?: RequestOptions) {\n    return this.request('PATCH', url, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main Component with basic layout and main router outlet\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'workflow'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of the page\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Main Component with basic layout and main router outlet\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  /**\n   * Title of the page\n   */\n  public title = 'workflow';\n\n  constructor() {\n    document.addEventListener('DOMContentLoaded', () => {\n      document.body.classList.remove('preload');\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  width: 100%;\n  background-color: var(--color-secondary-700);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\nimport { LandingPageComponent } from './landing-page/landing-page/landing-page.component';\nimport { MainModule } from './_main/_main.module';\n\n@NgModule({\n  declarations: [AppComponent, LandingPageComponent],\n  imports: [AppRoutingModule, BrowserAnimationsModule, MainModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoggedInUsersGuard } from './auth/guard/logged-in-users.guard';\nimport { LandingPageComponent } from './landing-page/landing-page/landing-page.component';\nimport { MainViewComponent } from './_main/components/main-view/main-view.component';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'landing-page',\n    component: LandingPageComponent,\n  },\n  {\n    path: '',\n    component: MainViewComponent,\n    canActivate: [LoggedInUsersGuard],\n    children: [\n      {\n        path: 'email',\n        loadChildren: () => \"import('./emails/emails.module').then((m) => m.EmailsModule)\",\n      },\n      {\n        path: 'messages',\n        loadChildren: () => \"import('./messages/messages.module').then((m) => m.MessagesModule)\",\n      },\n      {\n        path: '',\n        loadChildren: () => \"import('./dashboard/dashboard.module').then((m) => m.DashboardModule)\",\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      onSameUrlNavigation: 'reload',\n      paramsInheritanceStrategy: 'always',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nChangePasswordPage->AuthModule\n\n\n\n\n\nDeleteAccountPage\n\nDeleteAccountPage\n\nAuthModule -->\n\nDeleteAccountPage->AuthModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\nAuthModule -->\n\nForgotPasswordPage->AuthModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAuthModule -->\n\nLoginPage->AuthModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nAuthModule -->\n\nRegisterPage->AuthModule\n\n\n\n\n\nRestoreAccountPage\n\nRestoreAccountPage\n\nAuthModule -->\n\nRestoreAccountPage->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAuthModule -->\n\nMainModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChangePasswordPage\n                        \n                        \n                            DeleteAccountPage\n                        \n                        \n                            ForgotPasswordPage\n                        \n                        \n                            LoginPage\n                        \n                        \n                            RegisterPage\n                        \n                        \n                            RestoreAccountPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { AuthRoutingModule } from './auth.routing';\nimport { ChangePasswordPage } from './pages/change-password/change-password.page';\nimport { DeleteAccountPage } from './pages/delete-account/delete-account.page';\nimport { ForgotPasswordPage } from './pages/forgot-password/forgot-password.page';\nimport { LoginPage } from './pages/login/login.page';\nimport { RegisterPage } from './pages/register/register.page';\nimport { RestoreAccountPage } from './pages/restore-account/restore-account.page';\n\n@NgModule({\n  imports: [CommonModule, AuthRoutingModule, MainModule, ReactiveFormsModule],\n  declarations: [\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    ChangePasswordPage,\n    RestoreAccountPage,\n    DeleteAccountPage,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ChangePasswordPage } from './pages/change-password/change-password.page';\nimport { DeleteAccountPage } from './pages/delete-account/delete-account.page';\nimport { ForgotPasswordPage } from './pages/forgot-password/forgot-password.page';\nimport { LoginPage } from './pages/login/login.page';\nimport { RegisterPage } from './pages/register/register.page';\nimport { RestoreAccountPage } from './pages/restore-account/restore-account.page';\n\n/**\n * Auth routes list\n */\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginPage,\n  },\n  {\n    path: 'logout',\n    component: LoginPage,\n  },\n  {\n    path: 'register',\n    component: RegisterPage,\n  },\n  {\n    path: 'password-reset',\n    component: ForgotPasswordPage,\n  },\n  {\n    path: 'set-new-password',\n    component: ChangePasswordPage,\n  },\n  {\n    path: 'restore-account',\n    component: RestoreAccountPage,\n  },\n  {\n    path: 'delete-account',\n    component: DeleteAccountPage,\n  },\n];\n\n/**\n * Auth routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteAccount\n                            \n                            \n                                    Public\n                                deleteAccountConfirmation\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                recoverAccount\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Public\n                                setNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteAccountConfirmation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAccountConfirmation(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        recoverAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    recoverAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setNewPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    setNewPassword(token: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Service } from '@main/decorators/service.decorator';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private apiService: ApiService) {}\n\n  public register({\n    email,\n    password,\n    name,\n    surname,\n    username,\n  }: {\n    email: string;\n    password: string;\n    name: string;\n    surname: string;\n    username: string;\n  }) {\n    return this.apiService.post(`/auth/register`, {\n      body: { email, password, name, surname, username },\n    });\n  }\n\n  public login({\n    email,\n    password,\n    remember,\n  }: {\n    email: string;\n    password: string;\n    remember: boolean;\n  }) {\n    return this.apiService.post(`/auth/login`, { body: { email, password, remember } });\n  }\n\n  public logout() {\n    localStorage.removeItem('logged');\n    return this.apiService.post(`/auth/logout`, { body: {} });\n  }\n\n  public resetPassword({ email }: { email: string }) {\n    return this.apiService.post(`/auth/password/recover`, { body: { email } });\n  }\n\n  public setNewPassword(token: string, password: string) {\n    return this.apiService.post(`/auth/password/reset`, { body: { token, password } });\n  }\n\n  public deleteAccount() {\n    return this.apiService.delete(`/auth/delete`, { body: {} });\n  }\n\n  public deleteAccountConfirmation(token: string) {\n    return this.apiService.delete(`/auth/delete/confirm`, { body: { token } });\n  }\n\n  public recoverAccount() {\n    return this.apiService.post(`/auth/delete/recover`, { body: {} });\n  }\n\n  public isLoggedIn() {\n    if (localStorage.getItem('logged')) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardPage.html":{"url":"components/BoardPage.html","title":"component - BoardPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/board/board.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                ./board.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./board.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board$\n                            \n                            \n                                faCheck\n                            \n                            \n                                faChevronRight\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                statusList\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Private\n                                    Optional\n                                statusListSubscription\n                            \n                            \n                                    Public\n                                taskMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                getColumnsContainerHeight\n                            \n                            \n                                getTasksFromStatus\n                            \n                            \n                                idOf\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openNewTaskDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, taskService: TaskService, statusService: StatusService, dialogService: DialogService, projectService: ProjectService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/board/board.page.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(event: CdkDragDrop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CdkDragDrop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColumnsContainerHeight\n                        \n                    \n                \n            \n            \n                \ngetColumnsContainerHeight(mapKey: string | number, element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapKey\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasksFromStatus\n                        \n                    \n                \n            \n            \n                \ngetTasksFromStatus(statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idOf\n                        \n                    \n                \n            \n            \n                \nidOf(o: Task | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Task | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewTaskDialog\n                        \n                    \n                \n            \n            \n                \nopenNewTaskDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/board/board.page.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        board$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faChevronRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faChevronRight\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StatusWithTasks[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        statusListSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PersistentMap({ persistentKey: 'board' })\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/board/board.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport {\n  faCheck,\n  faChevronRight,\n  faCodeCommit,\n  faCodePullRequest,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { PersistentMap } from '@main/classes/persistent-map.class';\nimport { Observable, Subscription } from 'rxjs';\nimport { DialogService } from '../../../_main/services/dialog.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '../../dialogs/task/task.dialog';\nimport { StatusWithTasks } from '../../interfaces/status.interface';\nimport { Task } from '../../interfaces/task.interface';\nimport { StatusService } from '../../services/status.service';\nimport { TaskService } from '../../services/task.service';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.page.html',\n  styleUrls: ['./board.page.scss'],\n})\nexport class BoardPage implements OnInit, OnDestroy {\n  faPlus = faPlus;\n  faChevronRight = faChevronRight;\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  public taskMap = new PersistentMap({ persistentKey: 'board' });\n  public projectId!: number;\n\n  public statusList$!: Observable;\n  public board$!: Observable;\n  public project$: Observable;\n  public members$: Observable>;\n  public statusList: StatusWithTasks[] = [];\n  private statusListSubscription?: Subscription;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private taskService: TaskService,\n    private statusService: StatusService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.projectId = projectId;\n    this.project$ = this.projectService.get(projectId);\n    this.board$ = this.statusService.board(projectId);\n    this.statusList$ = this.statusService.listWithTasks(projectId);\n    this.statusListSubscription = this.statusList$.subscribe((statusList) => {\n      this.statusList = statusList;\n    });\n    this.members$ = this.memberService.map(projectId);\n  }\n\n  getTasksFromStatus(statusId: number) {\n    return this.statusList.find((status) => status.id === statusId)?.tasks;\n  }\n\n  ngOnInit() {\n    this.statusList$.subscribe((statusList) => {\n      this.statusList = statusList;\n    });\n  }\n\n  ngOnDestroy() {\n    this.statusListSubscription?.unsubscribe();\n  }\n\n  drop(event: CdkDragDrop) {\n    const previousStatusIndex = Number(\n      event.previousContainer.element.nativeElement.dataset['index'],\n    );\n    const newStatusIndex = Number(event.container.element.nativeElement.dataset['index']);\n    const previousStatus = this.statusList[previousStatusIndex];\n    const newStatus = this.statusList[newStatusIndex];\n    const previousTaskIndex = event.previousIndex;\n    const task = event.previousContainer.data[previousTaskIndex];\n\n    console.log({ previousStatus, task });\n\n    console.log(\n      event.previousContainer.data,\n      event.container.data,\n      event.previousIndex,\n      event.currentIndex,\n    );\n\n    const onSuccess = () => {\n      task.statusId = newStatus.id;\n      this.taskService.update(this.projectId, task as any).subscribe();\n\n      if (event.previousContainer === event.container) {\n        moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n      } else {\n        transferArrayItem(\n          event.previousContainer.data,\n          event.container.data,\n          event.previousIndex,\n          event.currentIndex,\n        );\n      }\n    };\n\n    // Catch if the task has pull request and user is trying to move to finishing state\n    if (task.pull && newStatus.final) {\n      this.dialogService\n        .alert({\n          title: $localize`Are you sure?`,\n          message: $localize`If you will move this task to finishing state, the attached pull request will be merged to the repository.`,\n          confirmText: $localize`Merge`,\n          cancelText: $localize`Cancel`,\n        })\n        .subscribe((result) => {\n          if (!result) return;\n\n          onSuccess();\n        });\n      // } else if (task.mergedPullList && !newStatus.final) {\n      //   this.dialogService\n      //     .alert({\n      //       title: $localize`Are you sure?`,\n      //       message: $localize`If you will move this task to not finishing state, the pull request will be detached.`,\n      //       confirmText: $localize`Detach`,\n      //       cancelText: $localize`Cancel`,\n      //     })\n      //     .subscribe((result) => {\n      //       if (!result) return;\n\n      //       onSuccess();\n      //     });\n      // }\n    } else {\n      onSuccess();\n    }\n  }\n\n  openNewTaskDialog() {\n    this.dialogService\n      .open(TaskDialog, {\n        projectId: this.projectId,\n        variant: TaskDialogVariant.CREATE,\n      } as TaskDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.taskService.create(this.projectId, result).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n\n  idOf(o: Task | string) {\n    return (o as any).id || o;\n  }\n\n  getColumnsContainerHeight(mapKey: string | number, element: HTMLElement) {\n    return `${Number(!this.taskMap.get(mapKey)) * element.scrollHeight + 16}px`;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    {{ status.name }}\n  \n\n\n\n  \n    \n      \n        \n          \n            \n            #{{ task.id }}\n            {{ task.name }}\n            \n              \n            \n            \n              \n            \n            \n              \n              \n            \n            \n            \n          \n          \n            \n            Other tasks\n          \n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./board.page.scss\n                \n                :host {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n}\n\napp-view-options {\n  width: auto;\n  margin: 2rem 2rem 0 2rem;\n}\n\napp-status-label {\n  width: auto;\n}\n\n.boards {\n  display: flex;\n  overflow: auto;\n  flex-direction: column;\n  padding: 0 2rem 2rem 2rem;\n}\n\n.board {\n  display: flex;\n  flex-direction: column;\n  padding-left: 10px;\n  margin-left: -1rem;\n\n  &:not(.collapsed) .task-title>app-icon {\n    transform: rotate(90deg);\n  }\n\n  .columns {\n    display: flex;\n    overflow: hidden;\n    transition: max-height .2s ease;\n\n    // &.collapsed {\n    //   height: 0;\n    // }\n  }\n\n  .column {\n    display: flex;\n    width: 300px;\n    min-height: 100%;\n    flex-direction: column;\n    padding: 1rem 0.5rem 0 0.5rem;\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    .column-header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin-bottom: 1em;\n      color: var(--color-text);\n\n      h3 {\n        margin: 0;\n      }\n\n      app-icon {\n        cursor: pointer;\n      }\n    }\n\n    .column-content {\n      height: 100%;\n      padding: 1rem;\n      background-color: var(--color-secondary-800);\n      border-radius: var(--border-radius);\n\n      app-board-task:last-child {\n        margin-bottom: -1rem;\n      }\n    }\n  }\n}\n\n.cdk-drag-placeholder {\n  opacity: 0;\n}\n\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.column-content.cdk-drop-list-dragging app-board-task:not(.cdk-drag-placeholder) {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.task-title {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  padding-left: 0.5rem;\n\n  .task-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .task-property {\n    display: flex;\n    margin-left: 1rem;\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.2s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    .check {\n      margin-left: 5px;\n      color: #2ecc71;\n    }\n  }\n\n  &>app-icon {\n    margin-right: 1rem;\n    opacity: 0.5;\n    transition: transform .2s ease;\n  }\n}\n\n.status-list-banner {\n  display: flex;\n  padding: 1rem;\n  border-bottom: 1px solid var(--color-secondary-500);\n  margin-left: 2rem;\n\n  .status-banner {\n    width: 300px;\n    color: var(--color-text);\n  }\n}\n\n.row {\n  cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ status.name }}                                                        #{{ task.id }}            {{ task.name }}                                                                                                                                                                                                    Other tasks                                                                                      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoardPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardTaskComponent.html":{"url":"components/BoardTaskComponent.html","title":"component - BoardTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BoardTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/board-task/board-task.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board-task\n            \n\n            \n                styleUrls\n                ./board-task.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./board-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faCheck\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                createSubtask\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                members\n                            \n                            \n                                projectId\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        task\n                    \n                \n                \n                    \n                        Type :         Task\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/board-task/board-task.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubtask\n                        \n                    \n                \n            \n            \n                \ncreateSubtask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/board-task/board-task.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/board-task/board-task.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { faCheck, faCodeCommit, faCodePullRequest } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskDialog, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { Task } from '../../interfaces/task.interface';\n\n@Component({\n  selector: 'app-board-task',\n  templateUrl: './board-task.component.html',\n  styleUrls: ['./board-task.component.scss'],\n})\nexport class BoardTaskComponent {\n  @Input()\n  public task!: Task;\n\n  @Input()\n  public projectId!: number;\n\n  @Input()\n  public members: Map = new Map();\n\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  constructor(private dialogService: DialogService, private taskService: TaskService) {}\n\n  delete() {\n    this.taskService.deleteWithConfirmation(this.projectId, this.task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  edit() {\n    this.taskService.openEditTaskDialog(this.projectId, this.task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  createSubtask() {\n    this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n        projectId: this.projectId,\n        subtask: true,\n        task: {\n          parentTaskId: this.task.id,\n        },\n      })\n      .afterClosed()\n      .subscribe((task) => {\n        if (!task) return;\n\n        this.taskService.create(this.projectId, task).subscribe(() => {\n          location.reload();\n        });\n      });\n  }\n\n  changeDate(date: Date) {\n    let sessionDate = dayjs(date);\n    return sessionDate.format('YYYY-MM-DD, hh:mm A');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Due date\n      {{ changeDate(task.deadline) }}\n    \n  \n  \n    #{{ task.id }}\n    {{ task?.name }}\n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n      \n    \n  \n  \n    \n      \n    \n    \n      \n        Edit task\n      \n      \n        Create subtask\n      \n      \n        Delete task\n      \n    \n  \n\n    \n\n    \n                \n                    ./board-task.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  cursor: move;\n}\n\n.task {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  background-color: var(--color-board-task-background);\n  border-radius: var(--border-radius);\n  transition: background-color 0.2s ease, box-shadow 0.2s ease;\n\n  &:hover {\n    background-color: var(--color-board-task-background-hover);\n    box-shadow: 0 0 0.5rem 0.01rem rgb(0 0 0 / 10%);\n  }\n\n  .top-section {\n    display: flex;\n\n    > * {\n      width: 50%;\n    }\n\n    .assignees {\n      .assignee {\n        $size: 32px;\n\n        @include typo-heading-5;\n\n        display: flex;\n        width: #{$size};\n        height: #{$size};\n        align-items: center;\n        justify-content: center;\n        background-color: #0a95d0;\n        border-radius: calc($size / 2);\n        color: var(--color-text);\n      }\n    }\n\n    .deadline {\n      color: var(--color-text);\n\n      .title {\n        @include typo-body;\n      }\n\n      .value {\n        @include typo-title;\n      }\n    }\n  }\n\n  .name {\n    @include typo-body;\n\n    margin-top: 1rem;\n    color: var(--color-text);\n\n    .task-id {\n      margin-right: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n\n  .options {\n    position: absolute;\n    right: 5px;\n    color: #fff;\n  }\n\n  .commit {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n    padding: 0 0.5rem;\n    color: var(--color-text);\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.5s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  .actions {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n\n    > * {\n      display: flex;\n      margin-left: 1rem;\n      color: var(--color-text);\n      cursor: pointer;\n      opacity: 0.5;\n      transition: opacity 0.2s ease;\n\n      &:hover {\n        opacity: 1;\n      }\n\n      .check {\n        margin-left: 5px;\n        color: #2ecc71;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Due date      {{ changeDate(task.deadline) }}            #{{ task.id }}    {{ task?.name }}                                                                                        Edit task                    Create subtask                    Delete task            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoardTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/button/button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main button component\nExample text\n    \n\n\n    \n        Implements\n    \n    \n                FocusableOption\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                pending\n                            \n                            \n                                type\n                            \n                            \n                                variant\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:33\n                            \n                        \n                \n                    \n                        Icon to display on the button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pending\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:28\n                            \n                        \n                \n                    \n                        Information about the pending. If button is pending the loader icon will be shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"button\" | \"submit\"\n\n                    \n                \n                \n                    \n                        Default value : 'submit'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        variant\n                    \n                \n                \n                    \n                        Type :     \"primary\" | \"secondary\" | \"important\"\n\n                    \n                \n                \n                    \n                        Default value : 'secondary'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/button/button.component.ts:21\n                            \n                        \n                \n                    \n                        Style variant of the button\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        focus\n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/button/button.component.ts:43\n                \n            \n\n\n            \n                \n                    Focus the native button element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('btn')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/button/button.component.ts:38\n                        \n                    \n\n            \n                \n                    Reference to native button element\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { FocusableOption } from '@angular/cdk/a11y';\nimport { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Main button component\n *\n * ```html\n * Example text\n * ```\n */\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent implements FocusableOption {\n  /**\n   * Style variant of the button\n   */\n  @Input() variant: 'primary' | 'secondary' | 'important' = 'secondary';\n\n  @Input() type: 'button' | 'submit' = 'submit';\n\n  /**\n   * Information about the pending. If button is pending the loader icon will be shown\n   */\n  @Input() pending?: boolean = false;\n\n  /**\n   * Icon to display on the button\n   */\n  @Input() icon?: string | IconDefinition;\n\n  /**\n   * Reference to native button element\n   */\n  @ViewChild('btn') button!: ElementRef;\n\n  /**\n   * Focus the native button element\n   */\n  focus() {\n    setTimeout(() => {\n      this.button.nativeElement.focus();\n    }, 200);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                @import '../../../../styles/typography';\n\nbutton mat-spinner,\nbutton app-icon {\n  opacity: 1;\n  transform: scale(1);\n  transition: opacity 0.2s;\n}\n\nbutton mat-spinner.hide,\nbutton app-icon.hide {\n  opacity: 0;\n}\n\nbutton .prefix {\n  position: relative;\n  display: flex;\n  width: 24px;\n  height: 24px;\n  align-items: center;\n  justify-content: center;\n  transition: width 0.2s, margin-right 0.2s;\n\n  > * {\n    position: absolute;\n  }\n}\n\nbutton:not(.button-with-icon) .prefix:not(.pending) {\n  width: 0;\n  margin-right: 0;\n}\n\nbutton {\n  @include typo-title;\n\n  position: relative;\n  display: flex;\n  min-width: 80px;\n  height: 42px;\n  align-items: center;\n  justify-content: center;\n  padding: 0.8125rem 1.25rem;\n  border-radius: var(--border-radius);\n  box-shadow: 0 4px 4px rgb(0 0 0 / 25%);\n  color: var(--color-text);\n  outline: 0 !important;\n  transition: background-color 0.2s ease;\n\n  > * {\n    margin-right: 0.75rem;\n  }\n\n  &::before {\n    $offset: 4px;\n\n    position: absolute;\n    top: #{-$offset};\n    right: #{-$offset};\n    bottom: #{-$offset};\n    left: #{-$offset};\n    border-radius: calc(var(--border-radius) * 1.5);\n    content: '';\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.1s ease;\n  }\n\n  &:focus {\n    &::before {\n      opacity: 1;\n    }\n  }\n\n  &:active {\n    box-shadow: 0 1px 1px rgb(0 0 0 / 25%);\n  }\n\n  &.primary {\n    background-color: var(--color-button-primary-background);\n\n    &::before {\n      border: 2px solid var(--color-button-primary-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-primary-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-primary-background-active);\n    }\n  }\n\n  &.secondary {\n    background-color: var(--color-button-secondary-background);\n\n    &::before {\n      border: 2px solid var(--color-button-secondary-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-secondary-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-secondary-background-active);\n    }\n  }\n\n  &.important {\n    background-color: var(--color-button-important-background);\n\n    &::before {\n      border: 2px solid var(--color-button-important-border-active);\n    }\n\n    &:hover {\n      background-color: var(--color-button-important-background-hover);\n    }\n\n    &:active {\n      background-color: var(--color-button-important-background-active);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/card/card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/card/card.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/card/card.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  &.important {\n    .card {\n      border: 1px solid var(--color-red-700);\n    }\n\n    .card-header-wrapper {\n      color: var(--color-red-700);\n    }\n  }\n}\n\n.card {\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  border: 1px solid var(--color-secondary-500);\n  border-radius: var(--border-radius);\n}\n\n.card-header-wrapper {\n  @include typo-title;\n\n  margin-bottom: 7px;\n  color: var(--color-text);\n}\n\n.card-content-wrapper {\n  @include typo-body;\n\n  margin-bottom: 15px;\n  color: var(--color-text);\n  opacity: 0.7;\n}\n\n.card-actions-wrapper {\n  @include typo-body;\n\n  color: var(--color-text);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordPage.html":{"url":"components/ChangePasswordPage.html","title":"component - ChangePasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/change-password/change-password.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password\n            \n\n            \n                styleUrls\n                ./change-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                resetSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/change-password/change-password.page.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setNewPassword\n                        \n                    \n                \n            \n            \n                \nsetNewPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/change-password/change-password.page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:34\n                        \n                    \n\n            \n                \n                    Form group for setting new password.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        resetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/change-password/change-password.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { passwordValidator } from '@main/validators/password.validator';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport { sameAsValidator } from '@main/validators/same-as.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.page.html',\n  styleUrls: ['./change-password.page.scss'],\n})\nexport class ChangePasswordPage implements OnInit {\n  private token?: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const { token } = this.activatedRoute.snapshot.queryParams;\n    this.token = token;\n  }\n\n  private resetSubscription?: Subscription;\n\n  /**\n   * Form group for setting new password.\n   */\n  public form = new FormGroup({\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n  });\n\n  setNewPassword() {\n    if (this.resetSubscription && !this.resetSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid && this.token) {\n      this.resetSubscription = this.authService\n        .setNewPassword(this.token, this.form.value.password)\n        .subscribe(() => {\n          this.router.navigate(['/auth/login']);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Reset password\n          Enter your new password.\n        \n\n        \n\n        \n\n        Set new password\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./change-password.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Reset password          Enter your new password.                                Set new password                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/checkbox/checkbox.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/checkbox/checkbox.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:77\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n})\nexport class CheckboxComponent extends ControlAccessor {\n  @Input() label: string = '';\n}\n\n    \n\n    \n        \n  {{ label }}\n  \n\n{{ control.errors | validationError }}\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                :host {\n  position: relative;\n}\n\nmat-checkbox.ng-invalid.ng-touched ~ mat-error {\n  // Set this to 'block' if you want to see mat-error label\n  display: none;\n}\n\nmat-error {\n  position: absolute;\n  bottom: -5px;\n  left: 28px;\n  display: none;\n  font-size: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}  {{ control.errors | validationError }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ClickStopPropagationDirective.html":{"url":"directives/ClickStopPropagationDirective.html","title":"directive - ClickStopPropagationDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ClickStopPropagationDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/click-stop-propagation.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [click-stop-propagation]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/directives/click-stop-propagation.directive.ts:8\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/_main/directives/click-stop-propagation.directive.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[click-stop-propagation]',\n})\nexport class ClickStopPropagationDirective {\n  @HostListener('click', ['$event'])\n  public onClick(event: any): void {\n    event.stopPropagation();\n\n    window.document.dispatchEvent(\n      new Event('click', {\n        bubbles: true,\n        cancelable: true,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlAccessor.html":{"url":"components/ControlAccessor.html","title":"component - ControlAccessor","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ControlAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/classes/control-accessor.class.ts\n\n\n\n    \n        Description\n    \n    \n        A base class for creating custom control accessors like inputs, checkboxes, etc.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    required\n                                \n                                \n                                    name\n                                \n                                \n                                    control\n                                \n                                \n                                    value\n                                \n                                \n                                    errors\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/control-accessor.class.ts:67\n                            \n                        \n\n                \n                    \n                            Accessor constructor to initialize component. Extended by child classes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                control to be used by the accessor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:19\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:88\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:102\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:150\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:126\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:133\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:139\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/control-accessor.class.ts:118\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:36\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:48\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:77\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/control-accessor.class.ts:53\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n\n                \n                    \n                        getrequired()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:25\n                                \n                            \n                    \n                        \n                                Property to describe if the control is required.\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n\n                \n                    \n                        getcontrol()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:41\n                                \n                            \n                    \n                        \n                                Control that is used by the form.\n\n\n                                \n                                    Returns :         FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:58\n                                \n                            \n                    \n                        \n                                Get the value of the control.\n\n\n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n\n                \n                    \n                        geterrors()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/classes/control-accessor.class.ts:65\n                                \n                            \n                    \n                        \n                                Get the errors of the control.\n\n\n                                \n                                    Returns :         ValidationErrors | null\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl, ValidationErrors } from '@angular/forms';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport { Subject } from 'rxjs';\n\n/**\n * A base class for creating custom control accessors like inputs, checkboxes, etc.\n */\n@Component({\n  template: '',\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ControlAccessor implements OnDestroy, ControlValueAccessor {\n  /**\n   * Property that defines if field should prompt user how to fill it. For example\n   * in a form, if a field is email, it will give the user last used emails\n   */\n  @Input() autocomplete: 'on' | 'off' = 'off';\n\n  /**\n   * Property to describe if the control is required.\n   * @returns true if the control is required to fill in form.\n   */\n  public get required() {\n    return this._required;\n  }\n\n  public get name() {\n    return this.ngControl.name?.toString() || '';\n  }\n\n  /**\n   * Private property to set filed as required\n   */\n  private _required: boolean = false;\n\n  /**\n   * Control that is used by the form.\n   */\n  public get control(): FormControl {\n    return (this.ngControl.control as FormControl) || new FormControl();\n  }\n\n  /**\n   * Observable that emits when the control is destroyed.\n   */\n  private destroy$ = new Subject();\n\n  /**\n   * Observable that emits when the control is touched.\n   */\n  private touched$ = new Subject();\n\n  /**\n   * Get the value of the control.\n   */\n  public get value(): any {\n    return this.control.value;\n  }\n\n  /**\n   * Get the errors of the control.\n   */\n  public get errors(): ValidationErrors | null {\n    return this.control.errors;\n  }\n\n  /**\n   * Accessor constructor to initialize component. Extended by child classes.\n   * @param ngControl control to be used by the accessor\n   */\n  constructor(\n    /**\n     * Control passed from DOM to the component, contains all the information about form control\n     */\n    public ngControl: NgControl,\n  ) {\n    this.ngControl.valueAccessor = this;\n\n    this.initCheckForTouch();\n    this.checkIfIsRequired();\n  }\n\n  /**\n   * Check if the control is required by provided validators.\n   */\n  private checkIfIsRequired(): void {\n    if (!(this.control as any)._rawValidators) return;\n\n    for (const validator of (this.ngControl as any).control._rawValidators) {\n      if (validator.name === 'required') {\n        this._required = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Apply the touched observable on ngControl and control fields\n   */\n  private initCheckForTouch(): void {\n    (this.control as any)._markAsTouched = this.control.markAsTouched;\n    this.control.markAsTouched = () => {\n      (this.control as any)._markAsTouched();\n      this.touched$.next(true);\n    };\n  }\n\n  /**\n   * Writes a new value to the element.\n   *\n   * This method is called by the forms API to write to the view when programmatic\n   * changes from model to view are requested.\n   *\n   * @param value The new value for the element\n   */\n  writeValue(value: any): void {}\n\n  /**\n   * Registers a callback function that is called when the control's value changes in the UI.\n   *\n   * This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n   * @param fn Callback to be called when the control value changes.\n   */\n  registerOnChange(fn: any): void {}\n\n  /**\n   * Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n   *\n   * @param fn Callback to be called when the control is touched.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Set disabled state on the control. If set to true, the control will be disabled.\n   * @param isDisabled State to set to the control\n   */\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.control.disable();\n    } else {\n      this.control.enable();\n    }\n  }\n\n  /**\n   * A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n    this.touched$.complete();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ControlAccessor'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectMembersPage.html":{"url":"components/CreateProjectMembersPage.html","title":"component - CreateProjectMembersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectMembersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-project-members/create-project-members.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project-members\n            \n\n            \n                styleUrls\n                ./create-project-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project-members.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                memberList\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:39\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:65\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:33\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:26\n                        \n                    \n\n            \n                \n                    Form group for the project creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        memberList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project-members/create-project-members.page.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddMemberDialog } from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-create-project-members',\n  templateUrl: './create-project-members.page.html',\n  styleUrls: ['./create-project-members.page.scss'],\n})\nexport class CreateProjectMembersPage {\n  faPlus = faPlus;\n\n  /**\n   * Form group for the project creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  public workspace$!: Observable;\n\n  private workspaceId!: number;\n\n  private memberList?: string[];\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n    this.workspaceId = workspaceId;\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n  }\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {})\n      .afterClosed()\n      .subscribe((result) => {\n        this.memberList = result;\n      });\n  }\n\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.projectService.create(this.form.value).subscribe((response) => {\n      if (this.memberList) {\n        this.memberService.add(this.memberList, [response.id]).subscribe(() => {\n          this.router.navigate([this.workspaceId]).then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        this.router.navigate([this.workspaceId]).then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  Add member\n\n\n\n\n    \n\n    \n                \n                    ./create-project-members.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.button {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-top: -60px;\n  margin-bottom: 20px;\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add member'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectMembersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectPage.html":{"url":"components/CreateProjectPage.html","title":"component - CreateProjectPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-project/create-project.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project\n            \n\n            \n                styleUrls\n                ./create-project.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                memberList\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:38\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project/create-project.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-project/create-project.page.ts:72\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:32\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:24\n                        \n                    \n\n            \n                \n                    Form group for the project creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        memberList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-project/create-project.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddMemberDialog } from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.page.html',\n  styleUrls: ['./create-project.page.scss'],\n})\nexport class CreateProjectPage {\n  /**\n   * Form group for the project creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  faPlus = faPlus;\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  public workspace$!: Observable;\n\n  private workspaceId!: number;\n\n  public memberList: string[] = [];\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n    this.workspaceId = workspaceId;\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n  }\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {})\n      .afterClosed()\n      .subscribe((result) => {\n        this.memberList = [...this.memberList, ...result];\n      });\n  }\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.projectService.create(this.form.value).subscribe((response) => {\n      if (this.memberList) {\n        this.memberService.add(this.memberList, [response.id]).subscribe(() => {\n          this.router.navigate([this.workspaceId]).then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        this.router.navigate([this.workspaceId]).then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Workspace: {{ (workspace$ | async)?.name }}\n    \n  \n\n  \n    Members\n    \n      Add member\n    \n  \n  \n\n  \n    Save\n  \n\n\n    \n\n    \n                \n                    ./create-project.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 2rem;\n}\n\n.members {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-top: 20px;\n\n  h2 {\n    margin: 0;\n  }\n\n  .button {\n    display: flex;\n    width: 100%;\n    justify-content: flex-end;\n  }\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Workspace: {{ (workspace$ | async)?.name }}            Members          Add member              Save  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateWorkspacePage.html":{"url":"components/CreateWorkspacePage.html","title":"component - CreateWorkspacePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateWorkspacePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/create-workspace/create-workspace.page.ts\n\n\n\n    \n        Description\n    \n    \n        Create workspace page component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-workspace-page\n            \n\n            \n                styleUrls\n                ./create-workspace.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-workspace.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                createSubscription\n                            \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                submitCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:30\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace and Router service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:43\n                \n            \n\n\n            \n                \n                    Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        createSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:30\n                        \n                    \n\n            \n                \n                    Subscription to the workspace creation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/create-workspace/create-workspace.page.ts:23\n                        \n                    \n\n            \n                \n                    Form group for the workspace creation.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Subscription } from 'rxjs';\nimport { Page } from 'src/app/_main/decorators/page.decorator';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Create workspace page component.\n */\n@Page()\n@Component({\n  selector: 'app-create-workspace-page',\n  templateUrl: './create-workspace.page.html',\n  styleUrls: ['./create-workspace.page.scss'],\n})\nexport class CreateWorkspacePage {\n  /**\n   * Form group for the workspace creation.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n  });\n\n  /**\n   * Subscription to the workspace creation.\n   */\n  public createSubscription?: Subscription;\n\n  /**\n   * Default constructor. Injects the Workspace and Router service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   */\n  constructor(private workspaceService: WorkspaceService, private router: Router) {}\n\n  /**\n   * Creates a new workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitCreate(): void {\n    if (!this.createSubscription?.closed && this.createSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.createSubscription = this.workspaceService.create(this.form.value).subscribe(() => {\n      this.router.navigate(['/']).then(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  Create new workspace\n  \n\n  \n    Save\n  \n\n\n\n    \n\n    \n                \n                    ./create-workspace.page.scss\n                \n                form {\n  padding: 4rem;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create new workspace        Save  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateWorkspacePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nAddMemberDialog\n\nAddMemberDialog\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nAddMemberDialog->DashboardModule\n\n\n\n\n\nCreateProjectMembersPage\n\nCreateProjectMembersPage\n\nDashboardModule -->\n\nCreateProjectMembersPage->DashboardModule\n\n\n\n\n\nCreateProjectPage\n\nCreateProjectPage\n\nDashboardModule -->\n\nCreateProjectPage->DashboardModule\n\n\n\n\n\nCreateWorkspacePage\n\nCreateWorkspacePage\n\nDashboardModule -->\n\nCreateWorkspacePage->DashboardModule\n\n\n\n\n\nEditProjectMembersPage\n\nEditProjectMembersPage\n\nDashboardModule -->\n\nEditProjectMembersPage->DashboardModule\n\n\n\n\n\nEditProjectPage\n\nEditProjectPage\n\nDashboardModule -->\n\nEditProjectPage->DashboardModule\n\n\n\n\n\nEditWorkspacePage\n\nEditWorkspacePage\n\nDashboardModule -->\n\nEditWorkspacePage->DashboardModule\n\n\n\n\n\nIntegrationGithubComponent\n\nIntegrationGithubComponent\n\nDashboardModule -->\n\nIntegrationGithubComponent->DashboardModule\n\n\n\n\n\nMemberListComponent\n\nMemberListComponent\n\nDashboardModule -->\n\nMemberListComponent->DashboardModule\n\n\n\n\n\nProjectsListPage\n\nProjectsListPage\n\nDashboardModule -->\n\nProjectsListPage->DashboardModule\n\n\n\n\n\nViewOptionsComponent\n\nViewOptionsComponent\n\nDashboardModule -->\n\nViewOptionsComponent->DashboardModule\n\n\n\n\n\nWorkspacesListPage\n\nWorkspacesListPage\n\nDashboardModule -->\n\nWorkspacesListPage->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nDashboardModule -->\n\nMainModule->DashboardModule\n\n\n\n\n\nGitIntegrationService\n\nGitIntegrationService\n\nDashboardModule -->\n\nGitIntegrationService->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddMemberDialog\n                        \n                        \n                            CreateProjectMembersPage\n                        \n                        \n                            CreateProjectPage\n                        \n                        \n                            CreateWorkspacePage\n                        \n                        \n                            EditProjectMembersPage\n                        \n                        \n                            EditProjectPage\n                        \n                        \n                            EditWorkspacePage\n                        \n                        \n                            IntegrationGithubComponent\n                        \n                        \n                            MemberListComponent\n                        \n                        \n                            ProjectsListPage\n                        \n                        \n                            ViewOptionsComponent\n                        \n                        \n                            WorkspacesListPage\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GitIntegrationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DashboardRoutingModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { IntegrationGithubComponent } from './components/integration-github/integration-github.component';\nimport { MemberListComponent } from './components/member-list/member-list.component';\nimport { ViewOptionsComponent } from './components/view-options/view-options.component';\nimport { DashboardRoutingModule } from './dashboard.routing';\nimport { AddMemberDialog } from './dialogs/add-member/add-member.dialog';\nimport { CreateProjectMembersPage } from './pages/create-project-members/create-project-members.page';\nimport { CreateProjectPage } from './pages/create-project/create-project.page';\nimport { CreateWorkspacePage } from './pages/create-workspace/create-workspace.page';\nimport { EditProjectMembersPage } from './pages/edit-project-members/edit-project-members.page';\nimport { EditProjectPage } from './pages/edit-project/edit-project.page';\nimport { EditWorkspacePage } from './pages/edit-workspace/edit-workspace.page';\nimport { ProjectsListPage } from './pages/projects-list/projects-list.page';\nimport { WorkspacesListPage } from './pages/workspaces-list/workspaces-list.page';\nimport { GitIntegrationService } from './services/git-integration.service';\n\n@NgModule({\n  imports: [CommonModule, MainModule, ReactiveFormsModule, DashboardRoutingModule],\n  declarations: [\n    CreateWorkspacePage,\n    WorkspacesListPage,\n    EditWorkspacePage,\n    ProjectsListPage,\n    CreateProjectPage,\n    EditProjectPage,\n    CreateProjectMembersPage,\n    EditProjectMembersPage,\n    IntegrationGithubComponent,\n    ViewOptionsComponent,\n    MemberListComponent,\n    AddMemberDialog,\n  ],\n  providers: [GitIntegrationService],\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dashboard/dashboard.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\nimport { CreateProjectMembersPage } from './pages/create-project-members/create-project-members.page';\nimport { CreateProjectPage } from './pages/create-project/create-project.page';\nimport { CreateWorkspacePage } from './pages/create-workspace/create-workspace.page';\nimport { EditProjectMembersPage } from './pages/edit-project-members/edit-project-members.page';\nimport { EditProjectPage } from './pages/edit-project/edit-project.page';\nimport { EditWorkspacePage } from './pages/edit-workspace/edit-workspace.page';\nimport { GithubIntegrationPage } from './pages/github-integration/github-integration.page';\nimport { ProjectsListPage } from './pages/projects-list/projects-list.page';\nimport { WorkspacesListPage } from './pages/workspaces-list/workspaces-list.page';\n\n/**\n * Dashboard routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: WorkspacesListPage,\n  },\n  {\n    path: 'settings',\n    loadChildren: () => \"import('../settings/settings.module').then((m) => m.SettingsModule)\",\n  },\n  {\n    path: 'github',\n    component: GithubIntegrationPage,\n    data: {\n      hideNavigation: true,\n    },\n  },\n  {\n    path: 'dashboard',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/dashboard.svg',\n    },\n  },\n  {\n    path: 'create',\n    component: CreateWorkspacePage,\n  },\n  {\n    path: ':workspaceId',\n    children: [\n      {\n        path: 'edit',\n        component: EditWorkspacePage,\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        component: ProjectsListPage,\n      },\n      {\n        path: 'create',\n        redirectTo: 'create/general',\n      },\n      {\n        path: 'create/general',\n        component: CreateProjectPage,\n      },\n      {\n        path: 'create/members',\n        component: CreateProjectMembersPage,\n      },\n      {\n        path: ':projectId/edit',\n        redirectTo: ':projectId/edit/general',\n      },\n      {\n        path: ':projectId/edit/general',\n        component: EditProjectPage,\n      },\n      {\n        path: ':projectId/edit/members',\n        component: EditProjectMembersPage,\n      },\n      {\n        path: ':projectId',\n        loadChildren: () => \"import('../tasks/tasks.module').then((m) => m.TasksModule)\",\n      },\n    ],\n  },\n];\n\n/**\n * Dashboard routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteAccountPage.html":{"url":"components/DeleteAccountPage.html","title":"component - DeleteAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeleteAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/delete-account/delete-account.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-account.page\n            \n\n            \n                styleUrls\n                ./delete-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./delete-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccount\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/delete-account/delete-account.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \ndeleteAccount(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/delete-account/delete-account.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/delete-account/delete-account.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-delete-account.page',\n  templateUrl: './delete-account.page.html',\n  styleUrls: ['./delete-account.page.scss'],\n})\nexport class DeleteAccountPage implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    const { token } = this.activatedRoute.snapshot.queryParams;\n    this.deleteAccount(token);\n  }\n\n  deleteAccount(token: string) {\n    if (token) {\n      this.authService.deleteAccountConfirmation(token).subscribe(() => {});\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        Your account has been deleted.\n        If you are going to revive your account, you can log in to your account click here to log in \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./delete-account.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      padding: 4rem;\n      background-color: var(--color-gray-800);\n\n      h2 {\n        margin-bottom: 0.5rem;\n      }\n\n      p {\n        margin-bottom: 1.5rem;\n      }\n\n      app-input {\n        width: 100%;\n      }\n\n      app-button {\n        align-self: flex-end;\n      }\n\n      a {\n        color: var(--color-link);\n        cursor: pointer;\n        transition: color 0.2s ease;\n\n        &:hover {\n          color: var(--color-link-hover);\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Your account has been deleted.        If you are going to revive your account, you can log in to your account click here to log in                     '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DeleteAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/dialog.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage dialogs.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dialogs$\n                            \n                            \n                                    Private\n                                dialogsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alert\n                            \n                            \n                                closeAll\n                            \n                            \n                                confirm\n                            \n                            \n                                confirmProjectDelete\n                            \n                            \n                                confirmWorkspaceDelete\n                            \n                            \n                                open\n                            \n                            \n                                openErrorDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isAnyDialogOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/dialog.service.ts:23\n                            \n                        \n\n                \n                    \n                            Default constructor with MatDialog dependency.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        alert\n                        \n                    \n                \n            \n            \n                \nalert(data: AlertDialogData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:66\n                \n            \n\n\n            \n                \n                    Opens a alert/information dialog.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AlertDialogData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeAll\n                        \n                    \n                \n            \n            \n                \ncloseAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm(data: AlertDialogData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:87\n                \n            \n\n\n            \n                \n                    Opens a confirm dialog.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                AlertDialogData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmProjectDelete\n                        \n                    \n                \n            \n            \n                \nconfirmProjectDelete(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmWorkspaceDelete\n                        \n                    \n                \n            \n            \n                \nconfirmWorkspaceDelete(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(component: any, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:36\n                \n            \n\n\n            \n                \n                    Opens a modal dialog containing the given component.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Type of the component to load into the dialog.\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to pass as data to the dialog\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Reference to the newly-opened dialog.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openErrorDialog\n                        \n                    \n                \n            \n            \n                \nopenErrorDialog(error: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/dialog.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>>(this.dialogsMap)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/dialog.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dialogsMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/dialog.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isAnyDialogOpen\n                    \n                \n\n                \n                    \n                        getisAnyDialogOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/services/dialog.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { BehaviorSubject, filter } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\nimport { Service } from '../decorators/service.decorator';\nimport { AlertDialog, AlertDialogData, AlertDialogVariant } from '../dialogs/alert/alert.dialog';\n\n/**\n * Service to manage dialogs.\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogService {\n  private dialogsMap = new Map();\n  private dialogs$ = new BehaviorSubject>>(this.dialogsMap);\n\n  public get isAnyDialogOpen() {\n    return this.dialogs$.getValue().size > 0;\n  }\n  /**\n   * Default constructor with `MatDialog` dependency.\n   * @param matDialog MatDialog instance\n   */\n  constructor(private matDialog: MatDialog) {}\n\n  /**\n   * Opens a modal dialog containing the given component.\n   * @param component Type of the component to load into the dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  open(component: any, data: any) {\n    const dialog = this.matDialog.open(component, {\n      data,\n      width: '400px',\n    });\n\n    const uid = uuid();\n    this.dialogsMap.set(uid, dialog);\n\n    dialog.afterClosed().subscribe(() => {\n      this.dialogsMap.delete(uid);\n      this.dialogs$.next(this.dialogsMap);\n    });\n\n    this.dialogs$.next(this.dialogsMap);\n\n    return dialog;\n  }\n\n  closeAll() {\n    this.dialogsMap.forEach((dialog) => {\n      dialog.close();\n    });\n  }\n\n  /**\n   * Opens a alert/information dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  alert(data: AlertDialogData) {\n    return this.open(AlertDialog, data)\n      .afterClosed()\n      .pipe(filter((result) => result));\n  }\n\n  openErrorDialog(error: string) {\n    const data: AlertDialogData = {\n      title: 'Error',\n      message: error,\n      variant: AlertDialogVariant.IMPORTANT,\n      cancelText: $localize`Close`,\n    };\n    return this.alert(data);\n  }\n\n  /**\n   * Opens a confirm dialog.\n   * @param data Object to pass as data to the dialog\n   * @returns Reference to the newly-opened dialog.\n   */\n  confirm(data: AlertDialogData) {\n    return this.alert(data);\n  }\n\n  confirmProjectDelete(project: Project) {\n    return this.confirm({\n      title: $localize`Delete project \"${project.name}\"`,\n      message: $localize`Are you sure you want to delete project \"${project.name}\"?`,\n      confirmText: $localize`Delete`,\n      cancelText: $localize`Cancel`,\n      variant: AlertDialogVariant.IMPORTANT,\n    });\n  }\n\n  confirmWorkspaceDelete(workspace: Workspace) {\n    return this.confirm({\n      title: $localize`Delete workspace \"${workspace.name}\"`,\n      message: $localize`Are you sure you want to delete this workspace \"${workspace.name}\"?`,\n      confirmText: $localize`Delete`,\n      cancelText: $localize`Cancel`,\n      variant: AlertDialogVariant.IMPORTANT,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ESet.html":{"url":"classes/ESet.html","title":"class - ESet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ESet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/e-set.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Set\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle(key: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/e-set.class.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ESet extends Set {\n  toggle(key: any) {\n    if (this.has(key)) {\n      this.delete(key);\n    } else {\n      this.add(key);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProjectMembersPage.html":{"url":"components/EditProjectMembersPage.html","title":"component - EditProjectMembersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProjectMembersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-project-members\n            \n\n            \n                styleUrls\n                ./edit-project-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-project-members.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                editProjectWithWorkspace\n                            \n                            \n                                    Public\n                                loadProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openAddMembersDialog\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute, dialogService: DialogService, memberService: MemberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:49\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProjectWithWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProjectWithWorkspace(newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:80\n                \n            \n\n\n            \n                \n                    Loads project data from the project service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:140\n                \n            \n\n\n            \n                \n                    Attach to lifecycle hook to unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenAddMembersDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:91\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:30\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:46\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:42\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.workspaceService.list()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  AddMemberDialog,\n  AddMemberDialogData,\n} from '@dashboard/dialogs/add-member/add-member.dialog';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-edit-project-members',\n  templateUrl: './edit-project-members.page.html',\n  styleUrls: ['./edit-project-members.page.scss'],\n})\nexport class EditProjectMembersPage {\n  faPlus = faPlus;\n\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  });\n\n  public project$!: Observable;\n  public workspaceList$: Observable = this.workspaceService.list();\n  // public workspace: Workspace = this.workspaceService.get(id);\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  private workspaceId!: number;\n  public projectId!: number;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n    this.form.addControl('id', new FormControl(projectId));\n\n    this.loadProject(projectId);\n  }\n\n  /**\n   * Loads project data from the project service.\n   * @param id project id\n   */\n  public loadProject(id: number) {\n    this.project$ = this.projectService.get(id);\n    this.getSubscription = this.project$.subscribe((workspace) => {\n      this.form.patchValue(workspace);\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    let newWorkspaceId: number = this.form.get('newWorkspaceId')?.value;\n\n    if (this.workspaceId != newWorkspaceId && newWorkspaceId != null) {\n      this.editProjectWithWorkspace(newWorkspaceId);\n    } else {\n      this.editProject();\n    }\n  }\n\n  public editProjectWithWorkspace(newWorkspaceId: number) {\n    this.updateSubscription = this.projectService\n      .changeWorkspace(this.projectId, newWorkspaceId)\n      .subscribe(() => {\n        this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n          this.router.navigate(['/', newWorkspaceId]);\n        });\n      });\n  }\n\n  public editProject() {\n    this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/', this.workspaceId]);\n    });\n  }\n\n  openAddMembersDialog() {\n    this.dialogService\n      .open(AddMemberDialog, {\n        projectId: this.projectId,\n      } as AddMemberDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.memberService.add(result, [this.projectId]).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n\n  /**\n   * Attach to lifecycle hook to unsubscribe from all subscriptions.\n   */\n  ngOnDestroy(): void {\n    if (this.getSubscription) this.getSubscription.unsubscribe();\n    if (this.updateSubscription) this.updateSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n  Add member\n\n\n\n\n    \n\n    \n                \n                    ./edit-project-members.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.button {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-top: -60px;\n  margin-bottom: 20px;\n}\n\n.app-member-list {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add member'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditProjectMembersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProjectPage.html":{"url":"components/EditProjectPage.html","title":"component - EditProjectPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProjectPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-project/edit-project.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-project\n            \n\n            \n                styleUrls\n                ./edit-project.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-project.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                editProjectWithWorkspace\n                            \n                            \n                                    Public\n                                loadProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:40\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProjectWithWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProjectWithWorkspace(newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProject(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:69\n                \n            \n\n\n            \n                \n                    Loads project data from the project service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:125\n                \n            \n\n\n            \n                \n                    Attach to lifecycle hook to unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:89\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:21\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:37\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:33\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.workspaceService.list()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-project/edit-project.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n@Component({\n  selector: 'app-edit-project',\n  templateUrl: './edit-project.page.html',\n  styleUrls: ['./edit-project.page.scss'],\n})\nexport class EditProjectPage implements OnDestroy {\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    newWorkspaceId: new FormControl(null),\n  });\n\n  public project$!: Observable;\n  public workspaceList$: Observable = this.workspaceService.list();\n  // public workspace: Workspace = this.workspaceService.get(id);\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  private workspaceId!: number;\n  public projectId!: number;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = Number(workspaceId);\n    this.projectId = Number(projectId);\n\n    this.form.addControl('workspaceId', new FormControl(workspaceId));\n    this.form.addControl('id', new FormControl(projectId));\n\n    this.loadProject(projectId);\n  }\n\n  /**\n   * Loads project data from the project service.\n   * @param id project id\n   */\n  public loadProject(id: number) {\n    this.project$ = this.projectService.get(id);\n    this.getSubscription = this.project$.subscribe((project) => {\n      this.form.patchValue(project);\n    });\n\n    this.workspaceList$.subscribe((workspaces) => {\n      const workspace = workspaces.find((workspace) => workspace.id === this.workspaceId);\n      if (workspace) {\n        this.form.patchValue({\n          newWorkspaceId: workspace.id,\n        });\n      }\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    let newWorkspaceId: number = this.form.get('newWorkspaceId')?.value;\n\n    if (this.workspaceId != newWorkspaceId && newWorkspaceId != null) {\n      this.editProjectWithWorkspace(newWorkspaceId);\n    } else {\n      this.editProject();\n    }\n  }\n\n  public editProjectWithWorkspace(newWorkspaceId: number) {\n    this.updateSubscription = this.projectService\n      .changeWorkspace(this.projectId, newWorkspaceId)\n      .subscribe(() => {\n        this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n          this.router.navigate(['/', newWorkspaceId]).then(() => {\n            location.reload();\n          });\n        });\n      });\n  }\n\n  public editProject() {\n    this.updateSubscription = this.projectService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/', this.workspaceId]);\n    });\n  }\n\n  /**\n   * Attach to lifecycle hook to unsubscribe from all subscriptions.\n   */\n  ngOnDestroy(): void {\n    if (this.getSubscription) this.getSubscription.unsubscribe();\n    if (this.updateSubscription) this.updateSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n  \n    Workspace:\n    \n      {{ workspace.name }}\n      \n    \n  \n\n  \n    Modules\n  \n  \n  \n    Save\n  \n\n\n    \n\n    \n                \n                    ./edit-project.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\nform {\n  padding-left: 10px;\n}\n\n.app-button {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Workspace:          {{ workspace.name }}                  Modules          Save  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditProjectPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditWorkspacePage.html":{"url":"components/EditWorkspacePage.html","title":"component - EditWorkspacePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditWorkspacePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts\n\n\n\n    \n        Description\n    \n    \n        Edit workspace page component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-workspace-page\n            \n\n            \n                styleUrls\n                ./edit-workspace.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-workspace.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                getSubscription\n                            \n                            \n                                    Public\n                                    Optional\n                                updateSubscription\n                            \n                            \n                                    Public\n                                workspace$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadWorkspace\n                            \n                            \n                                    Public\n                                submitUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:36\n                            \n                        \n\n                \n                    \n                            Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadWorkspace(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:58\n                \n            \n\n\n            \n                \n                    Loads workspace data from the workspace service.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        submitUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:69\n                \n            \n\n\n            \n                \n                    Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\nOtherwise, displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    id: new FormControl(-1),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:22\n                        \n                    \n\n            \n                \n                    Form group for the workspace editing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:36\n                        \n                    \n\n            \n                \n                    Subscription to the workspace getting.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:32\n                        \n                    \n\n            \n                \n                    Subscription to the workspace updating.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { maxLengthValidator } from '@main/validators/max-length.validator';\nimport { Observable, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Edit workspace page component.\n */\n@Component({\n  selector: 'app-edit-workspace-page',\n  templateUrl: './edit-workspace.page.html',\n  styleUrls: ['./edit-workspace.page.scss'],\n})\nexport class EditWorkspacePage {\n  /**\n   * Form group for the workspace editing.\n   */\n  public form = new FormGroup({\n    name: new FormControl('', [requiredValidator(), maxLengthValidator(50)], []),\n    id: new FormControl(-1),\n  });\n\n  public workspace$!: Observable;\n\n  /**\n   * Subscription to the workspace updating.\n   */\n  public updateSubscription?: Subscription;\n  /**\n   * Subscription to the workspace getting.\n   */\n  private getSubscription?: Subscription;\n\n  /**\n   * Default constructor. Injects the Workspace, Router service and ActivatedRoute service.\n   * @param workspaceService Workspace service\n   * @param router Router service\n   * @param activatedRoute ActivatedRoute service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n\n    this.loadWorkspace(workspaceId);\n  }\n\n  /**\n   * Loads workspace data from the workspace service.\n   * @param id Workspace id\n   */\n  public loadWorkspace(id: number) {\n    this.workspace$ = this.workspaceService.get(id);\n    this.getSubscription = this.workspace$.subscribe((workspace) => {\n      this.form.patchValue(workspace);\n    });\n  }\n\n  /**\n   * Updates a workspace. Passes the form data to the workspace service. Then navigates to the workspace list if form was valid.\n   * Otherwise, displays an error message.\n   */\n  public submitUpdate() {\n    if (!this.updateSubscription?.closed && this.updateSubscription) return;\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.updateSubscription = this.workspaceService.update(this.form.value).subscribe(() => {\n      this.router.navigate(['/']).then(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  Edit workspace: {{ (workspace$ | async)?.name }}\n  \n  \n    Save\n  \n\n\n    \n\n    \n                \n                    ./edit-workspace.page.scss\n                \n                form {\n  padding: 4rem;\n}\n\n.app-button {\n  display: flex;\n  margin-top: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Edit workspace: {{ (workspace$ | async)?.name }}        Save  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditWorkspacePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailsModule.html":{"url":"modules/EmailsModule.html","title":"module - EmailsModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EmailsModule\n\n\n\ncluster_EmailsModule_imports\n\n\n\n\nEmailsRoutingModule\n\nEmailsRoutingModule\n\n\n\nEmailsModule\n\nEmailsModule\n\nEmailsModule -->\n\nEmailsRoutingModule->EmailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/emails/emails.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            EmailsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmailsRoutingModule } from './emails.routing';\n\n@NgModule({\n  imports: [CommonModule, EmailsRoutingModule],\n  declarations: [],\n})\nexport class EmailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailsRoutingModule.html":{"url":"modules/EmailsRoutingModule.html","title":"module - EmailsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/emails/emails.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\n\n/**\n * Emails routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/inbox.svg',\n    },\n  },\n];\n\n/**\n * Emails routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmailsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Enum.html":{"url":"classes/Enum.html","title":"class - Enum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Enum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/enum.class.ts\n        \n\n\n            \n                Description\n            \n            \n                Utility enum functions for typescript\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                entries\n                            \n                            \n                                    Static\n                                isNumeric\n                            \n                            \n                                    Static\n                                keys\n                            \n                            \n                                    Static\n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        entries\n                        \n                    \n                \n            \n            \n                \n                    \n                    entries(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:70\n                \n            \n\n\n            \n                \n                    Function to get enum value by key.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.entries(TestEnum) // [['One', 1], ['Two', 2], ['Three', 3]]\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get entries from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.entries(TestEnum) // [[&#39;One&#39;, 1], [&#39;Two&#39;, 2], [&#39;Three&#39;, 3]]\n                        \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        array of enum entries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isNumeric\n                        \n                    \n                \n            \n            \n                \n                    \n                    isNumeric(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:10\n                \n            \n\n\n            \n                \n                    Tests if the given enum is numeric - contains at leas one number as value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to test\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true or false based on whether enum has numeric values\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        keys\n                        \n                    \n                \n            \n            \n                \n                    \n                    keys(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:32\n                \n            \n\n\n            \n                \n                    Function to get enum keys.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.keys(TestEnum) // ['One', 'Two', 'Three']\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get keys from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.keys(TestEnum) // [&#39;One&#39;, &#39;Two&#39;, &#39;Three&#39;]\n                        \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        array of enum keys\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        values\n                        \n                    \n                \n            \n            \n                \n                    \n                    values(enumType: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/enum.class.ts:48\n                \n            \n\n\n            \n                \n                    Function to get enum values.\nenum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.values(TestEnum) // [1, 2, 3]\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    enumType\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        enum to get values from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            enum TestEnum {\n  One = 1,\n  Two = 2,\n  Three = 3,\n}\nEnum.values(TestEnum) // [1, 2, 3]\n                        \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        array of enum values\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Enum {\n  /**\n   * Tests if the given enum is numeric - contains at leas one number as value.\n   * @param enumType enum to test\n   * @returns true or false based on whether enum has numeric values\n   */\n  public static isNumeric(enumType: any): boolean {\n    for (const key of Object.keys(enumType)) {\n      if (Number(key)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Function to get enum keys.\n   * @param enumType enum to get keys from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.keys(TestEnum) // ['One', 'Two', 'Three']\n   * @returns array of enum keys\n   */\n  public static keys(enumType: any): string[] {\n    return Object.keys(enumType).filter((k) => !Number(k) && k != '0');\n  }\n\n  /**\n   * Function to get enum values.\n   * @param enumType enum to get values from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.values(TestEnum) // [1, 2, 3]\n   * @returns array of enum values\n   */\n  public static values(enumType: any): any[] {\n    if (!Enum.isNumeric(enumType)) {\n      return Object.values(enumType);\n    }\n\n    return Object.values(enumType)\n      .filter((v) => Number(v) || v === '0')\n      .map((v) => Number(v));\n  }\n\n  /**\n   * Function to get enum value by key.\n   * @param enumType enum to get entries from\n   * @example\n   * enum TestEnum {\n   *   One = 1,\n   *   Two = 2,\n   *   Three = 3,\n   * }\n   * Enum.entries(TestEnum) // [['One', 1], ['Two', 2], ['Three', 3]]\n   * @returns array of enum entries\n   */\n  public static entries(enumType: any): [string, any][] {\n    if (!Enum.isNumeric(enumType)) {\n      return Object.entries(enumType);\n    }\n\n    return Object.entries(enumType)\n      .filter((e) => Number(e[1]) || e[1] === '0' || e[1] === 0)\n      .map((e) => [e[0], Number(e[1])]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                unauthorizedInARow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/interceptors/error.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/interceptors/error.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unauthorizedInARow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/interceptors/error.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DialogService } from '@main/services/dialog.service';\nimport { catchError, EMPTY, Observable, throwError } from 'rxjs';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private dialogService: DialogService, private router: Router) {}\n\n  private unauthorizedInARow = 0;\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((e, obs) => {\n        if (e.status === 401) {\n          this.unauthorizedInARow++;\n\n          if (this.unauthorizedInARow > 1) return EMPTY;\n\n          this.dialogService.closeAll();\n\n          if (e.error.message == 'user deleted') {\n            localStorage.removeItem('logged');\n            this.router.navigate(['/auth/delete-account']);\n            return EMPTY;\n          }\n\n          if (localStorage.getItem('logged')) {\n            localStorage.removeItem('logged');\n            this.dialogService.openErrorDialog($localize`Your session has expired.`);\n          }\n\n          this.router.navigate(['/auth/login']);\n          return EMPTY;\n        }\n\n        return throwError(() => e);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorValidationTree.html":{"url":"interfaces/ErrorValidationTree.html","title":"interface - ErrorValidationTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorValidationTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/decorators/service-validator.decorator.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/decorators/service-validator.decorator.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { DialogService } from '@main/services/dialog.service';\nimport { Observable } from 'rxjs';\n\nexport interface ErrorValidationTree {\n  [key: string]: {\n    [key: number]: string;\n  };\n}\n\nexport function ServiceValidator(errorValidationTree: ErrorValidationTree) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    descriptor.value = function (identifier: string) {\n      // const result = originalMethod.apply(this, identifier);\n\n      // This function returns new observable to use it as a pipe in other observables\n      return (source: Observable) => {\n        // Check for match in response\n        const match = (response: any) => {\n          // identifier check\n          if (!errorValidationTree[identifier]) return;\n\n          // Status check\n          const status = response?.error?.status || response?.status;\n          if (!status) return;\n\n          return errorValidationTree[identifier][status] || null;\n        };\n\n        const showAlert = (message: string, responseType: 'SUCCESS' | 'ERROR') => {\n          const dialogService = (window as any).injector.get(DialogService);\n\n          dialogService.alert({\n            title:\n              responseType === 'SUCCESS' ? $localize`Success` : $localize`Something went wrong`,\n            message,\n            cancelText: $localize`OK`,\n          });\n        };\n\n        return new Observable((subscriber) => {\n          source.subscribe({\n            next(value) {\n              const m = match(value);\n\n              if (m) {\n                showAlert(m, 'ERROR');\n              } else {\n                subscriber.next(value);\n              }\n            },\n            error(error) {\n              const m = match(error);\n\n              if (m) {\n                showAlert(m, 'ERROR');\n              } else {\n                subscriber.error(error);\n              }\n            },\n            complete() {\n              subscriber.complete();\n            },\n          });\n        });\n      };\n    };\n\n    return descriptor;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterCheckbox.html":{"url":"interfaces/FilterCheckbox.html","title":"interface - FilterCheckbox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterCheckbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/filters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        apply\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(input: T, option: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/interfaces/filters.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    option\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     \"1\" | \"0\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"1\" | \"0\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FilterCheckbox {\n  type: 'checkbox';\n  options: {\n    1: T | null;\n    0: T | null;\n  };\n  value: 1 | 0;\n  label: string;\n  apply(input: T, option: any): T;\n}\n\nexport type Filter = FilterCheckbox;\n\nexport type FilterType = 'checkbox';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filters.html":{"url":"classes/Filters.html","title":"class - Filters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/filters.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ONLY_MY_TASKS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        ONLY_MY_TASKS\n                        \n                    \n                \n            \n            \n                \n                    \n                    ONLY_MY_TASKS(currentUserId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/filters.class.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterCheckbox\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterCheckbox } from '@main/interfaces/filters.interface';\nimport { Task } from '@tasks/interfaces/task.interface';\n\nexport class Filters {\n  public static ONLY_MY_TASKS(currentUserId: string): FilterCheckbox {\n    return {\n      type: 'checkbox',\n      label: $localize`Only my tasks`,\n      options: {\n        1: { assigneeId: currentUserId },\n        0: {},\n      },\n      value: 0,\n      apply(tasks: Task[], option: { assigneeId?: string }) {\n        return tasks.filter((task) => task.assigneeId === option.assigneeId);\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/filters/filters.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n            \n                styleUrls\n                ./filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filters\n                            \n                            \n                                    Public\n                                    Optional\n                                form\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getControl\n                            \n                            \n                                    Public\n                                saveFilters\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filters\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/filters/filters.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/filters/filters.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getControl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getControl(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/filters/filters.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/filters/filters.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/filters/filters.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormArray\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/filters/filters.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n\n                \n                    \n                        getfilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/filters/filters.component.ts:21\n                                \n                            \n\n                \n                    \n                        setfilters(filters: Filter[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/filters/filters.component.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            filters\n                                                    \n                                                            \n                                                                            Filter[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormArray, FormControl, NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Filter } from '@main/interfaces/filters.interface';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss'],\n})\nexport class FiltersComponent extends ControlAccessor {\n  @Input() set filters(filters: Filter[]) {\n    this.form = new FormArray(\n      filters.map((filter) => {\n        return new FormControl(filter.value);\n      }),\n    );\n    this._filters = filters;\n  }\n\n  public get filters() {\n    return this._filters;\n  }\n\n  private _filters: Filter[] = [];\n  public form?: FormArray;\n\n  constructor(public override ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  public getControl(index: number) {\n    const control = (this.form?.controls[index] || new FormControl()) as FormControl;\n    return control;\n  }\n\n  public saveFilters() {\n    if (!this.form) return;\n\n    let formValue: Filter[] = [];\n\n    for (const [index, filter] of this.filters.entries()) {\n      const filterValue = Number(this.form?.controls[index].value) as 0 | 1;\n      filter.value = filterValue;\n      formValue.push(filter);\n    }\n\n    this.control.setValue(formValue);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ filter.label }}\n      \n      Unknown filter type: {{ filter.type }}\n    \n  \n\n  Save filters\n\n    \n\n    \n                \n                    ./filters.component.scss\n                \n                .filters {\n  width: 100%;\n\n  app-button {\n    width: 100%;\n\n    ::ng-deep button {\n      width: 100%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ filter.label }}            Unknown filter type: {{ filter.type }}        Save filters'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusInitialDirective.html":{"url":"directives/FocusInitialDirective.html","title":"directive - FocusInitialDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  FocusInitialDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/focus-initial.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive to focus on the first input element on the page\n\n            \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFocusInitial]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/directives/focus-initial.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Default constructor of the directive.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to attached element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/directives/focus-initial.directive.ts:19\n                \n            \n\n\n            \n                \n                    Lifecycle hook to initialize the directive.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n/**\n * Directive to focus on the first input element on the page\n */\n@Directive({\n  selector: '[appFocusInitial]',\n})\nexport class FocusInitialDirective implements AfterViewInit {\n  /**\n   * Default constructor of the directive.\n   * @param el Reference to attached element\n   */\n  constructor(private el: ElementRef) {}\n\n  /**\n   * Lifecycle hook to initialize the directive.\n   */\n  ngAfterViewInit(): void {\n    this.el.nativeElement.__ngContext__[33].focus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordPage.html":{"url":"components/ForgotPasswordPage.html","title":"component - ForgotPasswordPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/forgot-password/forgot-password.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-page\n            \n\n            \n                styleUrls\n                ./forgot-password.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAngleDown\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                resetSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:24\n                        \n                    \n\n            \n                \n                    Form group for reset password.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        resetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/forgot-password/forgot-password.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { requiredValidator } from '@main/validators/required.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-forgot-page',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  faAngleDown = faAngleDown;\n\n  private resetSubscription?: Subscription;\n\n  /**\n   * Form group for reset password.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n  });\n\n  resetPassword() {\n    if (this.resetSubscription && !this.resetSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.resetSubscription = this.authService.resetPassword(this.form.value).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        Back to login page\n      \n      \n        \n          Reset password\n          When you enter your email address, you will receive an email with a link to reset your password.\n        \n\n        \n\n        Reset password\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .return-button {\n      position: relative;\n      display: flex;\n      align-items: center;\n      align-self: flex-start;\n      margin: 0 0 0 40px;\n\n      &:hover {\n        a {\n          color: var(--color-link-hover);\n        }\n\n        app-icon {\n          color: var(--color-link-hover);\n        }\n      }\n\n      app-icon {\n        display: inline-block;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: 5px;\n        color: var(--color-link);\n        transform: rotate(90deg);\n      }\n\n      a {\n        color: var(--color-link);\n        cursor: pointer;\n        transition: color 0.2s ease;\n      }\n    }\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Back to login page                              Reset password          When you enter your email address, you will receive an email with a link to reset your password.                        Reset password                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormGroup.html":{"url":"interfaces/FormGroup.html","title":"interface - FormGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/typings/typings.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        submit\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/typings/typings.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\n\ndeclare global {\n  interface FormGroup {\n    submit(): void;\n  }\n}\n\n(FormGroup as any).prototype.submit = function () {\n  console.log('submit');\n};\n\nexport {};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitAccount.html":{"url":"interfaces/GitAccount.html","title":"interface - GitAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitHubUsername\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            suspended\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitHubUsername\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitHubUsername:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suspended\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suspended:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitAccountWithUsage.html":{"url":"interfaces/GitAccountWithUsage.html","title":"interface - GitAccountWithUsage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitAccountWithUsage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                                \n                                        \n                                            usage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:         GitAccount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitAccount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usage:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GitAccount } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { map, Observable, take } from 'rxjs';\n\ninterface GitAccountWithUsage {\n  account: GitAccount;\n  usage: Observable;\n}\n\n@Component({\n  selector: 'app-settings-integrations',\n  templateUrl: './settings-integrations.page.html',\n  styleUrls: ['./settings-integrations.page.scss'],\n})\nexport class SettingsIntegrationsPage implements OnInit {\n  public gitHubAccounts$!: Observable;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  ngOnInit() {\n    this.loadGitHubIntegration();\n  }\n\n  public loadGitHubIntegration(): void {\n    this.gitHubAccounts$ = this.gitIntegrationService.getConnectedGitHubAccounts().pipe(\n      map((accounts) => {\n        return accounts.map((account) => {\n          return {\n            account,\n            usage: this.getConnectedProjects(account).pipe(take(1)),\n          };\n        });\n      }),\n    );\n  }\n\n  public disconnect(account: GitAccount): void {\n    this.gitIntegrationService.deleteConnectedGitHubAccount(account.id).subscribe(({ link }) => {\n      window.open(link, '_blank');\n    });\n  }\n\n  public getConnectedProjects(account: GitAccount): Observable {\n    return this.gitIntegrationService\n      .getGitHubAccountConnectedProjects(account)\n      .pipe(map((projects) => projects.map((project: any) => project.name).join(', ')));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitIntegration.html":{"url":"interfaces/GitIntegration.html","title":"interface - GitIntegration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitIntegration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitRepositories\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitRepositories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitRepositories:         GitRepository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitRepository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GitIntegrationService.html":{"url":"injectables/GitIntegrationService.html","title":"injectable - GitIntegrationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GitIntegrationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/git-integration.service.ts\n        \n\n\n            \n                Description\n            \n            \n                How to use Git integration service:\n\nRun method startGitHubIntegration() to start the integration process and open the browser to the GitHub login page.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attachGitHubIntegration\n                            \n                            \n                                    Public\n                                connectGitHubIssue\n                            \n                            \n                                    Public\n                                connectGitHubPull\n                            \n                            \n                                    Public\n                                deleteConnectedGitHubAccount\n                            \n                            \n                                    Public\n                                deleteGitHubIntegration\n                            \n                            \n                                    Public\n                                disconnectGitHubIssue\n                            \n                            \n                                    Public\n                                disconnectGitHubPull\n                            \n                            \n                                    Public\n                                getConnectedGitHubAccounts\n                            \n                            \n                                    Public\n                                getGitHubAccountConnectedProjects\n                            \n                            \n                                    Public\n                                getGitHubIntegration\n                            \n                            \n                                    Public\n                                gitHubIssueList\n                            \n                            \n                                    Public\n                                gitHubPullList\n                            \n                            \n                                    Public\n                                hasGitHubIntegration\n                            \n                            \n                                    Public\n                                isOwnerOfRepository\n                            \n                            \n                                    Public\n                                postGitHubIntegration\n                            \n                            \n                                    Public\n                                startGitHubIntegration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/git-integration.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        attachGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    attachGitHubIntegration(projectId: number, repositoryName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repositoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectGitHubIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectGitHubIssue(projectId: number, taskId: number, issue?: GitIssue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    issue\n                                    \n                                                GitIssue\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectGitHubPull\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectGitHubPull(projectId: number, taskId: number, pull?: GitPull)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pull\n                                    \n                                                GitPull\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteConnectedGitHubAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteConnectedGitHubAccount(gitHubAccountId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:81\n                \n            \n\n\n            \n                \n                    Delete the given account connection\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gitHubAccountId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GitHub account id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with link to open the GitHub page with application removal\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGitHubIntegration(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnectGitHubIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnectGitHubIssue(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnectGitHubPull\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnectGitHubPull(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConnectedGitHubAccounts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConnectedGitHubAccounts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGitHubAccountConnectedProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGitHubAccountConnectedProjects(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gitHubIssueList\n                        \n                    \n                \n            \n            \n                \n                    \n                    gitHubIssueList(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        gitHubPullList\n                        \n                    \n                \n            \n            \n                \n                    \n                    gitHubPullList(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hasGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasGitHubIntegration(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isOwnerOfRepository\n                        \n                    \n                \n            \n            \n                \n                    \n                    isOwnerOfRepository(repositoryName: string, account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:128\n                \n            \n\n\n            \n                \n                    Checks if the given account is the owner of the repository\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    repositoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Repository name with it's owner ex.\n\n                                    \n                                \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        GitHub account object to test with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            this.gitHubIntegrationService.isOwnerOfRepository(&#39;@czemar/cli&#39;, account)\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the repository is owned by the account\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        postGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    postGitHubIntegration(installationId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    installationId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        startGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    startGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/git-integration.service.ts:33\n                \n            \n\n\n            \n                \n                    Start GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.\n\n\n                    \n                        Example :\n                        \n                            this.gitHubIntegrationService.startGitHubIntegration()\n                        \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable true if the opened window with GitHub integration was closed\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  GitAccount,\n  GitIntegration,\n  GitIssue,\n  GitPull,\n} from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { ApiService } from '@main/services/api.service';\nimport { filter, interval, map, mergeMap, Observable, take } from 'rxjs';\nimport { ProjectService } from './project.service';\n\n/**\n * How to use Git integration service:\n *\n * 1. Run method `startGitHubIntegration()` to start the integration process and open the browser to the GitHub login page.\n *\n *\n */\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class GitIntegrationService {\n  constructor(private apiService: ApiService, private projectService: ProjectService) {}\n\n  /**\n   * Start GitHub integration process - opens the GitHub page in new window, to give user ability to choose witch account and repositories wants to give access to.\n   * @example this.gitHubIntegrationService.startGitHubIntegration()\n   * @returns Observable true if the opened window with GitHub integration was closed\n   */\n  public startGitHubIntegration(): Observable {\n    return this.apiService.get('/user/integration/github/repository').pipe(\n      map((response: any) => response.link),\n      mergeMap((url) => {\n        const win = window.open(url, '_blank');\n\n        if (!win) throw new Error('This browser does not support window.open');\n\n        return interval(100).pipe(\n          map(() => win.closed),\n          filter((closed) => closed),\n          take(1),\n        );\n      }),\n    );\n  }\n\n  public postGitHubIntegration(installationId: string): Observable {\n    return this.apiService.post(`/user/integration/github`, {\n      params: { installationId },\n    });\n  }\n\n  public getGitHubIntegration(): Observable {\n    return this.apiService.get('/user/integration/github/repository');\n  }\n\n  public attachGitHubIntegration(projectId: number, repositoryName: string): Observable {\n    return this.apiService.post(`/project/${projectId}/integration/github`, {\n      body: repositoryName,\n    });\n  }\n\n  public getConnectedGitHubAccounts(): Observable {\n    return this.apiService\n      .get('/user/integration/github')\n      .pipe(\n        map((accounts: GitAccount[]) =>\n          accounts.map((account) => ({ ...account, gitHubUsername: `@${account.gitHubUsername}` })),\n        ),\n      );\n  }\n\n  /**\n   * Delete the given account connection\n   * @param gitHubAccountId GitHub account id\n   * @returns object with link to open the GitHub page with application removal\n   */\n  public deleteConnectedGitHubAccount(gitHubAccountId: number): Observable {\n    return this.apiService.delete(`/user/integration/github/${gitHubAccountId}`);\n  }\n\n  public deleteGitHubIntegration(projectId: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/integration/github`);\n  }\n\n  public hasGitHubIntegration(projectId: number): Observable {\n    return this.projectService.get(projectId).pipe(map((project) => !!project.gitHubIntegration));\n  }\n\n  public gitHubIssueList(projectId: number) {\n    return this.apiService.get(`/project/${projectId}/integration/git/issue`);\n  }\n\n  public connectGitHubIssue(projectId: number, taskId: number, issue?: GitIssue) {\n    return this.apiService.post(`/project/${projectId}/task/${taskId}/integration/git/issue`, {\n      body: issue,\n    });\n  }\n\n  public disconnectGitHubIssue(projectId: number, taskId: number) {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}/integration/git/issue`);\n  }\n\n  public gitHubPullList(projectId: number) {\n    return this.apiService.get(`/project/${projectId}/integration/git/pull`);\n  }\n\n  public connectGitHubPull(projectId: number, taskId: number, pull?: GitPull) {\n    return this.apiService.post(`/project/${projectId}/task/${taskId}/integration/git/pull`, {\n      body: pull,\n    });\n  }\n\n  public disconnectGitHubPull(projectId: number, taskId: number) {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}/integration/git/pull`);\n  }\n\n  /**\n   * Checks if the given account is the owner of the repository\n   * @param repositoryName Repository name with it's owner ex. @czemar/cli\n   * @param account GitHub account object to test with\n   * @example this.gitHubIntegrationService.isOwnerOfRepository('@czemar/cli', account)\n   * @returns true if the repository is owned by the account\n   */\n  public isOwnerOfRepository(repositoryName: string, account: GitAccount): boolean {\n    const preparedUsername = account.gitHubUsername.replace('@', '');\n    return Boolean(repositoryName.match(new RegExp('^' + preparedUsername + '/*')));\n  }\n\n  public getGitHubAccountConnectedProjects(account: GitAccount): Observable {\n    return this.projectService\n      .list()\n      .pipe(\n        map((projects) =>\n          projects.filter(\n            (project: Project) =>\n              project.gitHubIntegration &&\n              this.isOwnerOfRepository(project.gitHubIntegration, account),\n          ),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitIssue.html":{"url":"interfaces/GitIssue.html","title":"interface - GitIssue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitIssue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitPull.html":{"url":"interfaces/GitPull.html","title":"interface - GitPull","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitPull\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            branch\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitRepository.html":{"url":"interfaces/GitRepository.html","title":"interface - GitRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/git-integration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fullName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            private\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitRepository {\n  id: number;\n  fullName: string;\n  private: boolean;\n}\n\nexport interface GitIntegration {\n  link: string;\n  gitRepositories: GitRepository[];\n}\n\nexport interface GitIssue {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n}\n\nexport interface GitAccount {\n  id: number;\n  gitHubUsername: string;\n  suspended: boolean;\n}\n\nexport interface GitPull {\n  id: number;\n  url: string;\n  state: string;\n  title: string;\n  description: string;\n  service: string;\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GithubIntegrationPage.html":{"url":"components/GithubIntegrationPage.html","title":"component - GithubIntegrationPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GithubIntegrationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/github-integration/github-integration.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-github-integration-page\n            \n\n            \n                styleUrls\n                ./github-integration.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./github-integration.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/github-integration/github-integration.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/github-integration/github-integration.page.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\n\n@Component({\n  selector: 'app-github-integration-page',\n  templateUrl: './github-integration.page.html',\n  styleUrls: ['./github-integration.page.scss'],\n})\nexport class GithubIntegrationPage implements OnInit {\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private gitIntegrationService: GitIntegrationService,\n  ) {}\n\n  ngOnInit() {\n    const { installation_id, setup_action } = this.activatedRoute.snapshot.queryParams;\n\n    console.log(installation_id, setup_action, setup_action !== 'update');\n\n    if (installation_id && setup_action && setup_action !== 'update') {\n      this.gitIntegrationService.postGitHubIntegration(installation_id).subscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  GitHub connection success\n\n\n  Now you can close this page\n\n\n    \n\n    \n                \n                    ./github-integration.page.scss\n                \n                :host {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\nh2 {\n  color: var(--color-text);\n  font-size: 1.5rem;\n}\n\np {\n  color: var(--color-text);\n  opacity: 0.75;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  GitHub connection success  Now you can close this page'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'GithubIntegrationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/icon/icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        Icon component. Supports material icons and font-awesome icons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-icon\n            \n\n            \n                styleUrls\n                ./icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _icon\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                prefix\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.height\n                            \n                            \n                                style.width\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    icon\n                                \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    iconDefinition\n                                \n                                \n                                    style\n                                \n                                \n                                    snakeCaseName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/icon/icon.component.ts:35\n                            \n                        \n                \n                    \n                        Icon to display. Can be a string or an icon definition.\nFor example:\nFor the icon \"fa fa-question\" you can use:\nFor the icon \"mat search\" you can use:\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '24px'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/icon/icon.component.ts:19\n                            \n                        \n                \n                    \n                        Icon size. Defaults to 1.5em. Supports all CSS units.\nFor example: 24px, 1.5em, etc.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:66\n                        \n                    \n\n            \n                \n                    Binding to the hosts height attribute to use the size input.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:59\n                        \n                    \n\n            \n                \n                    Binding to hosts width attribute to use the size input.\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | IconDefinition\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:95\n                        \n                    \n\n            \n                \n                    Private icon variable to use getter and setter for props.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconName\n\n                    \n                \n                \n                    \n                        Default value : 'question'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:105\n                        \n                    \n\n            \n                \n                    Name getter\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconPrefix\n\n                    \n                \n                \n                    \n                        Default value : 'fas'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/icon/icon.component.ts:100\n                        \n                    \n\n            \n                \n                    Prefix getter\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:52\n                                \n                            \n                    \n                        \n                                Icon getter\n\n\n                                \n                                    Returns :     string | IconDefinition\n\n                                \n                        \n                    \n\n                \n                    \n                        seticon(value: string | IconDefinition)\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:35\n                                \n                            \n                    \n                        \n                                Icon to display. Can be a string or an icon definition.\nFor example:\nFor the icon \"fa fa-question\" you can use:\nFor the icon \"mat search\" you can use:\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string | IconDefinition\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:59\n                                \n                            \n                    \n                        \n                                Binding to hosts width attribute to use the size input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:66\n                                \n                            \n                    \n                        \n                                Binding to the hosts height attribute to use the size input.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        iconDefinition\n                    \n                \n\n                \n                    \n                        geticonDefinition()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:73\n                                \n                            \n                    \n                        \n                                Getter to the icon definition. If no icon is found it returns the question icon.\n\n\n                                \n                                    Returns :     IconDefinition\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        style\n                    \n                \n\n                \n                    \n                        getstyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:83\n                                \n                            \n                    \n                        \n                                Style host binding to set the icon size.\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        snakeCaseName\n                    \n                \n\n                \n                    \n                        getsnakeCaseName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/icon/icon.component.ts:113\n                                \n                            \n                    \n                        \n                                Getter to get the icon name in snake case.\nFor example:\nfor ShoppingCart this function will return shopping_cart\n\n\n                                \n                                    Returns :     IconName\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Input } from '@angular/core';\nimport { IconName, IconPrefix } from '@fortawesome/fontawesome-svg-core';\nimport { Utils } from '../../classes/utils.class';\nimport { faQuestion, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Icon component. Supports material icons and font-awesome icons.\n */\n@Component({\n  selector: 'app-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent {\n  /**\n   * Icon size. Defaults to 1.5em. Supports all CSS units.\n   * For example: 24px, 1.5em, etc.\n   */\n  @Input() size: string = '24px';\n\n  /**\n   * Icon to display. Can be a string or an icon definition.\n   * For example:\n   *\n   * For the icon \"fa fa-question\" you can use:\n   * ```html\n   * \n   * ```\n   *\n   * For the icon \"mat search\" you can use:\n   * ```html\n   * \n   * ```\n   */\n  @Input() set icon(value: string | IconDefinition) {\n    this._icon = value;\n\n    if (typeof value === 'string') {\n      const splitIndex = Utils.regexIndexOf(value, /[A-Z]/);\n\n      this.prefix = value.substring(0, splitIndex) as IconPrefix;\n      this.name = value.substring(splitIndex) as IconName;\n    } else {\n      this.prefix = value.prefix as IconPrefix;\n      this.name = value.iconName as IconName;\n    }\n  }\n\n  /**\n   * Icon getter\n   */\n  public get icon(): string | IconDefinition {\n    return this._icon;\n  }\n\n  /**\n   * Binding to hosts width attribute to use the size input.\n   */\n  @HostBinding('style.width') get width() {\n    return this.size;\n  }\n\n  /**\n   * Binding to the hosts height attribute to use the size input.\n   */\n  @HostBinding('style.height') get height() {\n    return this.size;\n  }\n\n  /**\n   * Getter to the icon definition. If no icon is found it returns the question icon.\n   */\n  public get iconDefinition(): IconDefinition {\n    if (typeof this._icon === 'string') {\n      return faQuestion;\n    }\n    return this._icon as IconDefinition;\n  }\n\n  /**\n   * Style host binding to set the icon size.\n   */\n  public get style() {\n    return {\n      'font-size': this.size,\n      width: this.size,\n      height: this.size,\n      'line-height': this.size,\n    };\n  }\n\n  /**\n   * Private icon variable to use getter and setter for props.\n   */\n  private _icon: string | IconDefinition = '';\n\n  /**\n   * Prefix getter\n   */\n  public prefix: IconPrefix = 'fas';\n\n  /**\n   * Name getter\n   */\n  public name: IconName = 'question';\n\n  /**\n   * Getter to get the icon name in snake case.\n   * For example:\n   *\n   * for `ShoppingCart` this function will return `shopping_cart`\n   */\n  public get snakeCaseName(): IconName {\n    return Utils.snakeCase(this.name) as IconName;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    {{ snakeCaseName }}\n  \n  \n    \n  \n  \n    question_mark\n  \n\n    \n\n    \n                \n                    ./icon.component.scss\n                \n                :host {\n  display: flex;\n  width: 24px;\n  height: 24px;\n  align-items: center;\n  justify-content: center;\n  font-size: 0;\n\n  fa-icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ snakeCaseName }}                question_mark  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputAssigneeComponent.html":{"url":"components/InputAssigneeComponent.html","title":"component - InputAssigneeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputAssigneeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/input-assignee/input-assignee.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n            \n                selector\n                app-input-assignee\n            \n\n            \n                styleUrls\n                ./input-assignee.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-assignee.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _assignee\n                            \n                            \n                                    Public\n                                    Optional\n                                assigneeColor\n                            \n                            \n                                    Public\n                                    Readonly\n                                isOpen$\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                overlay\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assignee\n                            \n                            \n                                members\n                            \n                            \n                                projectId\n                            \n                            \n                                taskId\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    assignee\n                                \n                                \n                                    members\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assignee\n                    \n                \n                \n                    \n                        Type :     ProjectMember | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n                \n                    \n                        Type :     Map | []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        taskId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(member: ProjectMember | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    member\n                                    \n                                            ProjectMember | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _assignee\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectMember | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        assigneeColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Color\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([] as any)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('overlay')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        assignee\n                    \n                \n\n                \n                    \n                        getassignee()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:27\n                                \n                            \n\n                \n                    \n                        setassignee(assignee: ProjectMember | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            assignee\n                                                    \n                                                            \n                                                                        ProjectMember | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        members\n                    \n                \n\n\n                \n                    \n                        setmembers(members: Map | ProjectMember[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            members\n                                                    \n                                                            \n                                                                        Map | ProjectMember[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:60\n                                \n                            \n\n                \n                    \n                        setisOpen(val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/input-assignee/input-assignee.component.ts:56\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { UserUtils } from '@dashboard/classes/user.class';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { TaskService } from '@tasks/services/task.service';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport * as Color from 'color';\nimport { BehaviorSubject, filter, fromEvent, take } from 'rxjs';\n\n@Component({\n  selector: 'app-input-assignee',\n  templateUrl: './input-assignee.component.html',\n  styleUrls: ['./input-assignee.component.scss'],\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\nexport class InputAssigneeComponent extends ControlAccessor {\n  @Input() set assignee(assignee: ProjectMember | null) {\n    this._assignee = assignee;\n\n    if (assignee) {\n      this.assigneeColor = UserUtils.getColorById(assignee?.user.id);\n    } else {\n      this.assigneeColor = undefined;\n    }\n  }\n  public get assignee(): ProjectMember | null {\n    return this._assignee;\n  }\n\n  @Input() set members(members: Map | ProjectMember[]) {\n    if (Array.isArray(members)) {\n      for (const member of members) {\n        (member as any).color = UserUtils.getColorById(member.user.id);\n      }\n      this.members$.next(members as any);\n    } else if (members) {\n      const membersArray = [...members.values()];\n      for (const member of membersArray) {\n        (member as any).color = UserUtils.getColorById(member.user.id);\n      }\n      this.members$.next(membersArray as any);\n    }\n  }\n  @Input() taskId?: number;\n  @Input() projectId?: number;\n\n  @ViewChild('overlay') overlay!: ElementRef;\n\n  private _assignee: ProjectMember | null = null;\n\n  public members$ = new BehaviorSubject([] as any);\n  public readonly isOpen$ = new BehaviorSubject(false);\n  public assigneeColor?: Color;\n\n  public set isOpen(val: boolean) {\n    this.isOpen$.next(val);\n  }\n\n  public get isOpen() {\n    return this.isOpen$.value;\n  }\n\n  constructor(public override ngControl: NgControl, private taskService: TaskService) {\n    super(ngControl);\n  }\n\n  public open() {\n    setTimeout(() => {\n      fromEvent(document, 'click')\n        .pipe(\n          take(1),\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\n        )\n        .subscribe(() => this.close());\n      this.isOpen$.next(true);\n    });\n  }\n\n  public close() {\n    this.isOpen$.next(false);\n  }\n\n  public toggle() {\n    if (this.isOpen) {\n      return this.close();\n    }\n    return this.open();\n  }\n\n  public select(member: ProjectMember | null) {\n    if (this.taskId && this.projectId)\n      this.taskService\n        .assign(member?.user.id || null, this.taskId, this.projectId)\n        .subscribe(() => {\n          this.close();\n          location.reload();\n        });\n  }\n}\n\n    \n\n    \n        \n\n  {{ assignee ? assignee.user.name[0] : '+' }}\n\n\n\n  \n    \n      {{ member.user.name[0] }}\n      \n        {{ member.user.name }} {{ member.user.surname }}\n        @{{ member.user.username }}\n      \n    \n    \n    \n      -\n      Remove assignee\n    \n  \n\n    \n\n    \n                \n                    ./input-assignee.component.scss\n                \n                @import '../../../../styles/typography';\n\n.assignee {\n  display: flex;\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-secondary-400);\n  border-radius: 50%;\n  color: var(--color-text);\n  cursor: pointer;\n  transition: background-color 0.4s ease;\n\n  &:not(.add) {\n    @include typo-title;\n\n    background-color: var(--color-primary-500);\n  }\n\n  &:not(.add):hover {\n    background-color: var(--color-secondary-300);\n  }\n}\n\n.members-overlay {\n  padding: 1rem;\n  padding: 0.5rem 0;\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n  box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.1);\n\n  li {\n    display: flex;\n    align-items: center;\n    padding: 0.75rem 2rem;\n    color: var(--color-text);\n\n    &:not(.line) {\n      cursor: pointer;\n      transition: background-color 0.4s ease;\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n\n    &.line {\n      position: relative;\n\n      &::before {\n        position: absolute;\n        top: calc(50% - 1px);\n        left: 10%;\n        width: 80%;\n        height: 1px;\n        background-color: var(--color-secondary-500);\n        content: '';\n      }\n    }\n\n    &.entry-remove {\n      span {\n        opacity: 0.75;\n      }\n    }\n\n    .avatar {\n      @include typo-title;\n\n      display: flex;\n      width: 36px;\n      height: 36px;\n      align-items: center;\n      justify-content: center;\n      margin-right: 1rem;\n      border-radius: 50%;\n      color: var(--color-text);\n    }\n\n    .avatar-remove {\n      display: flex;\n      width: 36px;\n      height: 36px;\n      align-items: center;\n      justify-content: center;\n      margin-right: 1rem;\n      background-color: var(--color-secondary-400);\n      border-radius: 50%;\n      color: var(--color-text);\n      opacity: 0.5;\n    }\n\n    .details {\n      display: flex;\n      flex-direction: column;\n\n      .username {\n        opacity: 0.5;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ assignee ? assignee.user.name[0] : \\'+\\' }}            {{ member.user.name[0] }}              {{ member.user.name }} {{ member.user.surname }}        @{{ member.user.username }}                        -      Remove assignee      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputAssigneeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/input/input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Default text input component\n\n    \n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input\n            \n\n            \n                styleUrls\n                ./input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                focused\n                            \n                            \n                                input\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlur\n                            \n                            \n                                onFocus\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                hint\n                            \n                            \n                                placeholder\n                            \n                            \n                                staticLabel\n                            \n                            \n                                type\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.focused\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, autofillMonitor: AutofillMonitor)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/input/input.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autofillMonitor\n                                                  \n                                                        \n                                                                    AutofillMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:23\n                            \n                        \n                \n                    \n                        Floating label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:38\n                            \n                        \n                \n                    \n                        Hint to display beneath the input to provide additional information of how to use the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:33\n                            \n                        \n                \n                    \n                        Input placeholder text\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        staticLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:28\n                            \n                        \n                \n                    \n                        Static label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"text\" | \"number\" | \"email\" | \"password\"\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input/input.component.ts:18\n                            \n                        \n                \n                    \n                        Type of the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.focused\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input/input.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input/input.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFocus\n                        \n                    \n                \n            \n            \n                \nonFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input/input.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        focused\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.focused')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input/input.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input/input.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AutofillMonitor } from '@angular/cdk/text-field';\nimport { Component, ElementRef, HostBinding, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ControlAccessor } from '../../classes/control-accessor.class';\n\n/**\n * Default text input component\n */\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent extends ControlAccessor {\n  /**\n   * Type of the input\n   */\n  @Input() type: 'text' | 'number' | 'email' | 'password' = 'text';\n\n  /**\n   * Floating label text to display\n   */\n  @Input() floatingLabel?: string;\n\n  /**\n   * Static label text to display\n   */\n  @Input() staticLabel?: string;\n\n  /**\n   * Input placeholder text\n   */\n  @Input() placeholder: string = '';\n\n  /**\n   * Hint to display beneath the input to provide additional information of how to use the input\n   */\n  @Input() hint?: string;\n\n  @HostBinding('class.focused') focused = false;\n\n  @ViewChild('input') input!: ElementRef;\n\n  constructor(public override ngControl: NgControl, private autofillMonitor: AutofillMonitor) {\n    super(ngControl);\n  }\n\n  onFocus() {\n    this.focused = true;\n  }\n\n  onBlur() {\n    this.focused = false;\n  }\n}\n\n    \n\n    \n        \n  {{ staticLabel }}\n  \n    \n    \n      {{ floatingLabel }}\n    \n    \n    \n  \n  {{ control?.errors | validationError }}\n\n\n    \n\n    \n                \n                    ./input.component.scss\n                \n                @import '../../../../styles/typography';\n\n.form-field {\n  display: flex;\n  max-width: 400px;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  > label {\n    @include typo-title;\n\n    margin-bottom: 0.4rem;\n    color: var(--color-input-text);\n\n    &.required::after {\n      margin-left: 0.2rem;\n      color: var(--color-input-text);\n      content: '*';\n    }\n  }\n}\n\n$padding-left: 1rem;\n$height: 55px;\n\n// New input\n.input-form-field {\n  position: relative;\n  height: $height;\n  margin-bottom: 2rem;\n\n  // Static label for input\n  .static-label {\n    @include typo-title;\n\n    margin-bottom: 0.4rem;\n    color: var(--color-input-text);\n\n    &.required::after {\n      margin-left: 0.2rem;\n      color: var(--color-input-text);\n      content: '*';\n    }\n  }\n\n  // Floating label for input\n  .floating-label {\n    @include typo-body;\n\n    padding: 0 0.4rem;\n    color: var(--color-text);\n    transition: transform 0.2s ease, font-size 0.2s ease;\n  }\n\n  // Fragments\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    z-index: 1;\n    height: 100%;\n    border: 2px solid var(--color-input-border);\n    pointer-events: none;\n  }\n\n  .fragment-left {\n    width: $padding-left;\n    border-right-width: 0;\n    border-bottom-left-radius: var(--border-radius);\n    border-top-left-radius: var(--border-radius);\n  }\n\n  .fragment-middle {\n    display: flex;\n    align-items: center;\n    border-right-width: 0;\n    border-left-width: 0;\n  }\n\n  .fragment-right {\n    flex-grow: 1;\n    border-left-width: 0;\n    border-bottom-right-radius: var(--border-radius);\n    border-top-right-radius: var(--border-radius);\n  }\n\n  .input-wrapper {\n    position: relative;\n    display: flex;\n    width: 100%;\n    height: 100%;\n    background-color: var(--color-input-background);\n    border-radius: var(--border-radius);\n    transition: background-color 0.2s ease-in-out;\n\n    &:hover {\n      background-color: var(--color-input-background-hover);\n    }\n  }\n\n  input {\n    @include typo-body;\n\n    position: absolute;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    padding-left: calc($padding-left + 0.4rem);\n    background-color: var(--color-input-background);\n    background-color: transparent;\n    border-radius: var(--border-radius);\n    color: var(--color-text);\n  }\n}\n\n.has-value,\n:host.focused {\n  .floating-label {\n    font-size: 0.75em;\n    transform: translateY(calc($height / -2));\n  }\n\n  .fragment-middle {\n    border-top-width: 0;\n  }\n}\n\n:host:not(.focused) {\n  input::placeholder {\n    opacity: 0;\n  }\n}\n\n:host.ng-touched.ng-invalid {\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    border-color: var(--color-red-500);\n  }\n}\n\n:host.focused .input-form-field {\n  .fragment-left,\n  .fragment-middle,\n  .fragment-right {\n    border-color: var(--color-primary-500);\n  }\n}\n\n.required {\n  .static-label::after,\n  .floating-label::after {\n    margin-left: 0.2rem;\n    color: var(--color-red-500);\n    content: '*';\n  }\n}\n\n.error {\n  position: absolute;\n  margin-top: 0.2rem;\n  color: var(--color-red-500);\n  font-size: 12px;\n  line-height: 0.8rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ staticLabel }}                {{ floatingLabel }}                {{ control?.errors | validationError }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputDateTimeComponent.html":{"url":"components/InputDateTimeComponent.html","title":"component - InputDateTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputDateTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/input-date-time/input-date-time.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input-date-time\n            \n\n            \n                styleUrls\n                ./input-date-time.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-date-time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changedDate\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                picker\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                writeValue\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                placeholder\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        writeValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        picker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('input-date-time')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/input-date-time/input-date-time.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport * as dayjs from 'dayjs';\n\n@Component({\n  selector: 'app-input-date-time',\n  templateUrl: './input-date-time.component.html',\n  styleUrls: ['./input-date-time.component.scss'],\n})\nexport class InputDateTimeComponent extends ControlAccessor implements OnInit {\n  @Input()\n  placeholder: string = '';\n\n  @Input()\n  floatingLabel?: string;\n\n  public changedDate: FormControl = new FormControl();\n\n  @ViewChild('input-date-time') picker!: ElementRef;\n\n  constructor(public override ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  ngOnInit(): void {\n    this.changedDate.valueChanges.subscribe((date) =>\n      this.control.setValue(this.changeDate(date), { emitEvent: false }),\n    );\n  }\n\n  override writeValue(value: any): void {\n    this.changedDate.setValue(this.changeDate(value));\n  }\n\n  changeDate(date: number) {\n    let sessionDate = dayjs(date);\n\n    return sessionDate.format('YYYY-MM-DD');\n  }\n}\n\n    \n\n    \n        \n   {{floatingLabel}}\n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./input-date-time.component.scss\n                \n                ::ng-deep .mat-focused .mat-form-field-label {\n  /* change color of label */\n  color: white !important;\n}\n\n::ng-deep.mat-form-field-underline {\n  /* change color of underline */\n  background-color: var(--color-purple-300) !important;\n}\n\n::ng-deep.mat-form-field-ripple {\n  /* change color of underline when focused */\n  background-color: white !important;\n}\n\n::ng-deep .mat-form-field-label {\n  /* change color of label */\n  color: white !important;\n}\n\nmat-datepicker-toggle {\n  color: var(--color-purple-300) !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{floatingLabel}}        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputDateTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntegrationEntryComponent.html":{"url":"components/IntegrationEntryComponent.html","title":"component - IntegrationEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntegrationEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/components/integration-entry/integration-entry.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-integration-entry\n            \n\n            \n                styleUrls\n                ./integration-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./integration-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                integration\n                            \n                            \n                                label\n                            \n                            \n                                suspended\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        integration\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        suspended\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        disconnect\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/components/integration-entry/integration-entry.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-integration-entry',\n  templateUrl: './integration-entry.component.html',\n  styleUrls: ['./integration-entry.component.scss'],\n})\nexport class IntegrationEntryComponent implements OnInit {\n  @Input() integration?: any;\n  @Input() label!: string;\n  @Input() description?: string | null;\n  @Input() suspended: boolean = false;\n\n  @Output() disconnect = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      {{ label }}\n    \n    \n      {{ description }}\n    \n  \n  \n    Disconnect\n  \n\n\n    \n\n    \n                \n                    ./integration-entry.component.scss\n                \n                .integration-entry {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px;\n  border: 1px solid var(--color-secondary-300);\n  border-radius: var(--border-radius);\n\n  &.suspended {\n    opacity: 0.5;\n  }\n\n  .labels {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    margin-bottom: 0;\n\n    .description {\n      display: block;\n      padding-left: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}              {{ description }}            Disconnect  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'IntegrationEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntegrationGithubComponent.html":{"url":"components/IntegrationGithubComponent.html","title":"component - IntegrationGithubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntegrationGithubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/integration-github/integration-github.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-integration-github\n            \n\n            \n                styleUrls\n                ./integration-github.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./integration-github.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                repositoryList\n                            \n                            \n                                    Public\n                                repositoryListLoaded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRepository\n                            \n                            \n                                connectToGithub\n                            \n                            \n                                loadRepositories\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRepository\n                        \n                    \n                \n            \n            \n                \naddRepository()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectToGithub\n                        \n                    \n                \n            \n            \n                \nconnectToGithub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRepositories\n                        \n                    \n                \n            \n            \n                \nloadRepositories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    repository: new FormControl(null, [requiredValidator()]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repositoryList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GitRepository[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        repositoryListLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/integration-github/integration-github.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { GitRepository } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { requiredValidator } from '@main/validators/required.validator';\n\n@Component({\n  selector: 'app-integration-github',\n  templateUrl: './integration-github.component.html',\n  styleUrls: ['./integration-github.component.scss'],\n})\nexport class IntegrationGithubComponent implements OnInit {\n  @Input()\n  projectId!: number;\n\n  repositoryList: GitRepository[] = [];\n  public repositoryListLoaded = false;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  public form = new FormGroup({\n    repository: new FormControl(null, [requiredValidator()]),\n  });\n\n  connectToGithub() {\n    this.gitIntegrationService.startGitHubIntegration().subscribe(() => {\n      this.loadRepositories();\n    });\n  }\n\n  loadRepositories() {\n    this.repositoryListLoaded = false;\n    this.gitIntegrationService.getGitHubIntegration().subscribe((integration) => {\n      this.repositoryList = integration.gitRepositories;\n      this.repositoryListLoaded = true;\n    });\n  }\n\n  addRepository() {\n    this.gitIntegrationService\n      .attachGitHubIntegration(this.projectId, this.form.value.repository)\n      .subscribe();\n  }\n\n  ngOnInit() {\n    this.loadRepositories();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Github\n    \n    Connect to Github\n  \n\n  \n\n    \n    \n      \n        {{repository.fullName}}\n        \n      \n      Add repository\n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./integration-github.component.scss\n                \n                main {\n  padding: 20px;\n  background-color: var(--color-secondary-600);\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n\n  section {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n    color: var(--color-text);\n\n    .github {\n      width: 100%;\n    }\n\n    app-button {\n      align-items: center;\n      justify-content: center;\n      margin-bottom: 20px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Github        Connect to Github                          {{repository.fullName}}                    Add repository      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'IntegrationGithubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page/landing-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/landing-page/landing-page.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss'],\n})\nexport class LandingPageComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./landing-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LetContext.html":{"url":"interfaces/LetContext.html","title":"interface - LetContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LetContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/let.directive.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ngLet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngLet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ngLet:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface LetContext {\n  ngLet: T;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class LetDirective {\n  private _context: LetContext = { ngLet: null };\n\n  constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>) {\n    _viewContainer.createEmbeddedView(_templateRef, this._context);\n  }\n\n  @Input()\n  set ngLet(value: T) {\n    this._context.ngLet = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/LetDirective.html":{"url":"directives/LetDirective.html","title":"directive - LetDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  LetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/directives/let.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngLet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngLet\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngLet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/directives/let.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _viewContainer\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _templateRef\n                                                  \n                                                        \n                                                                        TemplateRef>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngLet\n                    \n                \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/directives/let.directive.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LetContext\n\n                    \n                \n                \n                    \n                        Default value : { ngLet: null }\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/directives/let.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ngLet\n                    \n                \n\n\n                \n                    \n                        setngLet(value: T)\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/directives/let.directive.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\ninterface LetContext {\n  ngLet: T;\n}\n\n@Directive({\n  selector: '[ngLet]',\n})\nexport class LetDirective {\n  private _context: LetContext = { ngLet: null };\n\n  constructor(_viewContainer: ViewContainerRef, _templateRef: TemplateRef>) {\n    _viewContainer.createEmbeddedView(_templateRef, this._context);\n  }\n\n  @Input()\n  set ngLet(value: T) {\n    this._context.ngLet = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListGroupComponent.html":{"url":"components/ListGroupComponent.html","title":"component - ListGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/components/list-group/list-group.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-group\n            \n\n            \n                styleUrls\n                ./list-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-group.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/components/list-group/list-group.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/components/list-group/list-group.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/components/list-group/list-group.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-group',\n  templateUrl: './list-group.component.html',\n  styleUrls: ['./list-group.component.scss'],\n})\nexport class ListGroupComponent implements OnInit {\n  @Input() label!: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  {{ label }}\n\n\n    \n\n    \n                \n                    ./list-group.component.scss\n                \n                h4 {\n  display: block;\n  width: 100%;\n  padding: 5px 0;\n  border-bottom: 1px solid var(--color-secondary-300);\n  color: var(--color-secondary-300);\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoggedInUsersGuard.html":{"url":"guards/LoggedInUsersGuard.html","title":"guard - LoggedInUsersGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoggedInUsersGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/guard/logged-in-users.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/guard/logged-in-users.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/guard/logged-in-users.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class LoggedInUsersGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/auth/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/login/login.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                error\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                loginSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/login/login.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/login/login.page.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n    password: new FormControl('', [requiredValidator()], []),\n    remember: new FormControl('', [], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:27\n                        \n                    \n\n            \n                \n                    Form group for login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        loginSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/login/login.page.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '@auth/services/user.service';\nimport { catchError, EMPTY, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n  ) {}\n\n  private loginSubscription?: Subscription;\n  public error?: string;\n\n  /**\n   * Form group for login.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator()], []),\n    password: new FormControl('', [requiredValidator()], []),\n    remember: new FormControl('', [], []),\n  });\n\n  ngOnInit() {\n    this.userService.getMyself().subscribe(() => {\n      localStorage.setItem('logged', 'true');\n      this.router.navigate(['/']);\n    });\n  }\n\n  login() {\n    if (this.loginSubscription && !this.loginSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.loginSubscription = this.authService\n        .login(this.form.value)\n        .pipe(\n          catchError((e) => {\n            this.handleError(e);\n            return EMPTY;\n          }),\n        )\n        .subscribe((response) => {\n          if (response.deleted) {\n            this.router.navigate(['/auth/restore-account']);\n          } else {\n            localStorage.setItem('logged', 'true');\n            this.router.navigate(['/']);\n          }\n        });\n    }\n  }\n\n  handleError(error: any) {\n    switch (error.status) {\n      case 403:\n        this.error = $localize`User is already logged`;\n        break;\n      case 404:\n        this.error = $localize`Wrong username or password`;\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Login to system\n          This is a secure site. Please enter your login information to enter or click here to register.\n        \n\n        \n          {{ error }}\n        \n\n        \n\n        \n\n        Forgot your password? Reset password.\n\n        \n          \n        \n\n        Log in\n\n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .remember-me {\n          margin-bottom: 1.5rem;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n\n        a {\n          color: var(--color-link);\n          cursor: pointer;\n          transition: color 0.2s ease;\n\n          &:hover {\n            color: var(--color-link-hover);\n          }\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Login to system          This is a secure site. Please enter your login information to enter or click here to register.                          {{ error }}                                Forgot your password? Reset password.                                  Log in                    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/_main/_main.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Main dependency module with all universal components and modules declarations\nThis module is required for application to run properly\n```js\nimport { MainModule } from '@app/main/main.module';(@)NgModule({\n  imports: [ ..., MainModule ],\n  ...\n})\nexport class ExampleModule {}\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injector, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CardComponent } from './components/card/card.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { FiltersComponent } from './components/filters/filters.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { InputDateTimeComponent } from './components/input-date-time/input-date-time.component';\nimport { InputComponent } from './components/input/input.component';\nimport { MainViewComponent } from './components/main-view/main-view.component';\nimport { NavElementWorkspaceComponent } from './components/nav-element-workspace/nav-element-workspace.component';\nimport { NavElementComponent } from './components/nav-element/nav-element.component';\nimport { OptionComponent } from './components/option/option.component';\nimport { SelectComponent } from './components/select/select.component';\nimport { SidebarNavigationComponent } from './components/sidebar-navigation/sidebar-navigation.component';\nimport { SnackbarOutletComponent } from './components/snackbar-outlet/snackbar-outlet.component';\nimport { SnackbarComponent } from './components/snackbar/snackbar.component';\nimport { TextareaComponent } from './components/textarea/textarea.component';\nimport { UpperNavigationComponent } from './components/upper-navigation/upper-navigation.component';\nimport { AlertDialog } from './dialogs/alert/alert.dialog';\nimport { ClickStopPropagationDirective } from './directives/click-stop-propagation.directive';\nimport { FocusInitialDirective } from './directives/focus-initial.directive';\nimport { LetDirective } from './directives/let.directive';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\nimport { MockPage } from './pages/mock/mock.page';\nimport { ValidationErrorPipe } from './pipes/validation-error.pipe';\nimport { ApiService } from './services/api.service';\nimport { DialogService } from './services/dialog.service';\n\n/**\n * Main module configuration object\n */\nconst ngModuleConfig = {\n  imports: [\n    /*=============================================\n    =             Local dependencies              =\n    =============================================*/\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n    ObserversModule,\n  ],\n  importExports: [\n    /*=============================================\n      =                Dependencies                 =\n      =============================================*/\n    DragDropModule,\n    PlatformModule,\n    OverlayModule,\n\n    /*=============================================\n      =              Material modules               =\n      =============================================*/\n    MatDialogModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTableModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n\n    /*=============================================\n      =              External modules               =\n      =============================================*/\n    FontAwesomeModule,\n  ],\n  declarations: [\n    /*=============================================\n    =         Local custom components             =\n    =============================================*/\n  ],\n  exportDeclarations: [\n    /*=============================================\n    =         Exported custom components          =\n    =============================================*/\n    InputComponent,\n    ButtonComponent,\n    ValidationErrorPipe,\n    AlertDialog,\n    IconComponent,\n    FocusInitialDirective,\n    SidebarNavigationComponent,\n    NavElementComponent,\n    NavElementWorkspaceComponent,\n    UpperNavigationComponent,\n    SelectComponent,\n    OptionComponent,\n    MainViewComponent,\n    TextareaComponent,\n    CheckboxComponent,\n    CardComponent,\n    ClickStopPropagationDirective,\n    InputDateTimeComponent,\n    LetDirective,\n    FiltersComponent,\n    SnackbarComponent,\n    SnackbarOutletComponent,\n    MockPage,\n  ],\n  providers: [\n    DialogService,\n    ApiService,\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    MatCheckboxModule,\n    MatDatepickerModule,\n  ],\n};\n\n/**\n * Main dependency module with all universal components and modules declarations\n * This module is required for application to run properly\n * @example\n * ```js\n * import { MainModule } from '@app/main/main.module';\n *\n * (@)NgModule({\n *   imports: [ ..., MainModule ],\n *   ...\n * })\n * export class ExampleModule {}\n * ```\n */\n@NgModule({\n  imports: [...ngModuleConfig.imports, ...ngModuleConfig.importExports],\n  declarations: [...ngModuleConfig.declarations, ...ngModuleConfig.exportDeclarations],\n  exports: [...ngModuleConfig.importExports, ...ngModuleConfig.exportDeclarations],\n  providers: [...ngModuleConfig.providers],\n})\nexport class MainModule {\n  static injector: Injector;\n\n  constructor(injector: Injector) {\n    MainModule.injector = injector;\n    (window as any).injector = injector;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainViewComponent.html":{"url":"components/MainViewComponent.html","title":"component - MainViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/main-view/main-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-view\n            \n\n            \n                styleUrls\n                ./main-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/main-view/main-view.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/main-view/main-view.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-view',\n  templateUrl: './main-view.component.html',\n  styleUrls: ['./main-view.component.scss'],\n})\nexport class MainViewComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  \n\n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./main-view.component.scss\n                \n                :host {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background-color: var(--color-secondary-700);\n}\n\nsection {\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow-x: hidden;\n\n  main {\n    width: 100%;\n    height: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberListComponent.html":{"url":"components/MemberListComponent.html","title":"component - MemberListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/member-list/member-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-list\n            \n\n            \n                styleUrls\n                ./member-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./member-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                memberList$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteMember\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addedMembers\n                            \n                            \n                                memberList\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(memberService: MemberService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addedMembers\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        memberList\n                    \n                \n                \n                    \n                        Type :     ProjectMember[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     \"create\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'edit'\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMember\n                        \n                    \n                \n            \n            \n                \ndeleteMember(id: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/components/member-list/member-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        memberList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/member-list/member-list.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.scss'],\n})\nexport class MemberListComponent implements OnInit {\n  public projectId!: number;\n\n  public memberList$!: Observable;\n\n  @Input()\n  addedMembers?: string[];\n\n  @Input()\n  type: 'create' | 'edit' = 'edit';\n\n  @Input()\n  memberList!: ProjectMember[];\n\n  constructor(private memberService: MemberService, private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n    this.projectId = projectId;\n\n    this.memberList$ = this.memberService.list(projectId);\n  }\n\n  deleteMember(id: number[]) {\n    this.memberService.remove(this.projectId, id).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n\n  \n  \n    Username\n     {{ row.user.username }} \n  \n\n  \n  \n    Email\n     {{ row.user.email }} \n  \n\n  \n  \n    Name\n     {{ row.user.name }} \n  \n\n  \n  \n    Surname\n     {{ row.user.surname }} \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Delete member\n        \n      \n    \n  \n\n  \n  \n\n\n\n\n  \n  \n    Username or Email\n     {{ row }} \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./member-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Username     {{ row.user.username }}           Email     {{ row.user.email }}           Name     {{ row.user.name }}           Surname     {{ row.user.surname }}                                                           Delete member                                Username or Email     {{ row }}       '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'MemberListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberService.html":{"url":"injectables/MemberService.html","title":"injectable - MemberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/member.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                leave\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                map\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/member.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(emails: string[], projects: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:49\n                \n            \n\n\n            \n                \n                    Adds members to projects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    emails\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        emails of people to add\n\n                                    \n                                \n                                \n                                    projects\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        leave\n                        \n                    \n                \n            \n            \n                \n                    \n                    leave(projectId: number, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:39\n                \n            \n\n\n            \n                \n                    Let member leave project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of the member who will leave the project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:19\n                \n            \n\n\n            \n                \n                    Lists members in given project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        map\n                        \n                    \n                \n            \n            \n                \n                    \n                    map(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:61\n                \n            \n\n\n            \n                \n                    Creates members map from given project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(projectId: number, id: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/member.service.ts:29\n                \n            \n\n\n            \n                \n                    Removes members from project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project which are members from\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        list of member ids to remove from project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { map, Observable } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class MemberService {\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Lists members in given project\n   * @param projectId project which are members from\n   * @returns Request observable, which completes when request is finished\n   */\n  public list(projectId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/member`);\n  }\n\n  /**\n   * Removes members from project\n   * @param projectId project which are members from\n   * @param id list of member ids to remove from project\n   * @returns Request observable, which completes when request is finished\n   */\n  public remove(projectId: number, id: number[]): Observable {\n    return this.apiService.put(`/project/${projectId}/member`, { body: id });\n  }\n\n  /**\n   * Let member leave project.\n   * @param projectId project which are members from\n   * @param id id of the member who will leave the project\n   * @returns Request observable, which completes when request is finished\n   */\n  public leave(projectId: number, id: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/member`, { body: id });\n  }\n\n  /**\n   * Adds members to projects.\n   * @param emails emails of people to add\n   * @param projectList projects where people will be added\n   * @returns Request observable, which completes when request is finished\n   */\n  public add(\n    emails: string[],\n    projects: number[],\n  ): Observable {\n    return this.apiService.post(`/project/member`, { body: { emails, projects } });\n  }\n\n  /**\n   * Creates members map from given project\n   * @param projectId project which are members from\n   * @returns Request observable, which completes when request is finished\n   */\n  public map(projectId: number): Observable> {\n    return this.list(projectId).pipe(\n      map((members) =>\n        members.reduce((acc: Map, member: ProjectMember) => {\n          acc.set(member.user.id, member);\n          return acc;\n        }, new Map()),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesModule.html":{"url":"modules/MessagesModule.html","title":"module - MessagesModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_imports\n\n\n\n\nMessagesRoutingModule\n\nMessagesRoutingModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nMessagesRoutingModule->MessagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/messages/messages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MessagesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MessagesRoutingModule } from './messages.routing';\n\n@NgModule({\n  imports: [CommonModule, MessagesRoutingModule],\n  declarations: [],\n})\nexport class MessagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesRoutingModule.html":{"url":"modules/MessagesRoutingModule.html","title":"module - MessagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/messages/messages.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\n\n/**\n * Messages routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/messages.svg',\n    },\n  },\n];\n\n/**\n * Messages routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MessagesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MockPage.html":{"url":"components/MockPage.html","title":"component - MockPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MockPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/pages/mock/mock.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mock\n            \n\n            \n                styleUrls\n                ./mock.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./mock.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                image\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/pages/mock/mock.page.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/pages/mock/mock.page.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/pages/mock/mock.page.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-mock',\n  templateUrl: './mock.page.html',\n  styleUrls: ['./mock.page.scss'],\n})\nexport class MockPage implements OnInit {\n  constructor(private activatedRoute: ActivatedRoute) {}\n\n  public image: string = '';\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(({ image }) => {\n      this.image = image;\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./mock.page.scss\n                \n                img {\n  width: 100%;\n  border: 4px solid #f39c12;\n}\n\n:host {\n  position: relative;\n\n  &::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    display: block;\n    padding: 1rem 4rem;\n    background-color: #f39c12;\n    border-radius: var(--border-radius);\n    color: #222;\n    content: 'Work in progress';\n    font-weight: bold;\n    transform: translate(-50%, -50%);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'MockPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModifyUser.html":{"url":"interfaces/ModifyUser.html","title":"interface - ModifyUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModifyUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavElementComponent.html":{"url":"components/NavElementComponent.html","title":"component - NavElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/nav-element/nav-element.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-element\n            \n\n            \n                styleUrls\n                ./nav-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                    Optional\n                                listElement\n                            \n                            \n                                    Public\n                                showArrow$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeNavElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                openNavElement\n                            \n                            \n                                    Public\n                                toggleNavElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routerLink\n                            \n                            \n                                showOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:24\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routerLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showOptions\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    openNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleNavElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleNavElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element/nav-element.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        listElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('elementList')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showArrow$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element/nav-element.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-nav-element',\n  templateUrl: './nav-element.component.html',\n  styleUrls: ['./nav-element.component.scss'],\n})\nexport class NavElementComponent implements AfterViewInit {\n  @Input()\n  public routerLink?: string;\n\n  @Input()\n  public showOptions?: boolean;\n\n  public active: boolean = false;\n\n  public showArrow$: BehaviorSubject = new BehaviorSubject(false);\n\n  @ViewChild('elementList')\n  listElement?: ElementRef;\n\n  faAngleDown = faAngleDown;\n\n  constructor() {}\n\n  public openNavElement() {\n    this.active = true;\n  }\n  public closeNavElement() {\n    this.active = false;\n  }\n  public toggleNavElement() {\n    if (!this.active) {\n      this.openNavElement();\n    } else {\n      this.closeNavElement();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.showArrow$.next(Boolean(this.listElement?.nativeElement.children.length));\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n  \n    \n      \n    \n    \n      \n        more_vert\n      \n      \n        \n      \n    \n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./nav-element.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n}\n\nsection {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  height: 46px;\n  align-items: center;\n  justify-content: space-between;\n  color: var(--color-neutral-300);\n  cursor: pointer;\n  transition: color 0.2s ease-in-out;\n\n  .element {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    padding: 0 0 0 20px;\n  }\n\n  .icons {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 0 5px 0 0;\n    }\n\n    .open-below {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: center;\n      padding: 0 5px;\n\n      // padding: 0 5px;\n\n      app-icon {\n        display: flex;\n        justify-content: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n\n    .options button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  &:hover {\n    color: var(--color-text);\n  }\n}\n\n.list {\n  display: none;\n  width: 100%;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    justify-content: center;\n    background-color: var(--color-secondary-600);\n  }\n}\n\n.hidden {\n  visibility: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              more_vert                                  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavElementWorkspaceComponent.html":{"url":"components/NavElementWorkspaceComponent.html","title":"component - NavElementWorkspaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavElementWorkspaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-element-workspace\n            \n\n            \n                styleUrls\n                ./nav-element-workspace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-element-workspace.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeWorkspace\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                    Optional\n                                listElement\n                            \n                            \n                                    Public\n                                showArrow$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeWorkspace\n                            \n                            \n                                createProject\n                            \n                            \n                                deleteProject\n                            \n                            \n                                deleteWorkspace\n                            \n                            \n                                editProject\n                            \n                            \n                                editWorkspace\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                openWithLocalVSCode\n                            \n                            \n                                openWithLocalVSCodeInsiders\n                            \n                            \n                                openWithVSCode\n                            \n                            \n                                    Public\n                                openWorkspace\n                            \n                            \n                                routeToProject\n                            \n                            \n                                routeToWorkspace\n                            \n                            \n                                    Public\n                                toggleWorkspace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routerLink\n                            \n                            \n                                workspace\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, dialogService: DialogService, projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        routerLink\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        workspace\n                    \n                \n                \n                    \n                        Type :         Workspace\n\n                    \n                \n                \n                    \n                        Default value : { id: -1 } as unknown as Workspace\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createProject\n                        \n                    \n                \n            \n            \n                \ncreateProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteWorkspace\n                        \n                    \n                \n            \n            \n                \ndeleteWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProject\n                        \n                    \n                \n            \n            \n                \neditProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editWorkspace\n                        \n                    \n                \n            \n            \n                \neditWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithLocalVSCode\n                        \n                    \n                \n            \n            \n                \nopenWithLocalVSCode(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithLocalVSCodeInsiders\n                        \n                    \n                \n            \n            \n                \nopenWithLocalVSCodeInsiders(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWithVSCode\n                        \n                    \n                \n            \n            \n                \nopenWithVSCode(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    openWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeToProject\n                        \n                    \n                \n            \n            \n                \nrouteToProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeToWorkspace\n                        \n                    \n                \n            \n            \n                \nrouteToWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeWorkspace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        listElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('elementList')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showArrow$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { BehaviorSubject } from 'rxjs';\nimport { Project } from 'src/app/dashboard/interfaces/project.interface';\nimport { Workspace } from 'src/app/dashboard/interfaces/workspace.interface';\nimport { ProjectService } from 'src/app/dashboard/services/project.service';\nimport { WorkspaceService } from 'src/app/dashboard/services/workspace.service';\nimport { DialogService } from '../../services/dialog.service';\n\n@Component({\n  selector: 'app-nav-element-workspace',\n  templateUrl: './nav-element-workspace.component.html',\n  styleUrls: ['./nav-element-workspace.component.scss'],\n})\nexport class NavElementWorkspaceComponent implements AfterViewInit {\n  @Input()\n  public routerLink?: string;\n\n  @Input()\n  public workspace: Workspace = { id: -1 } as unknown as Workspace;\n\n  faAngleDown = faAngleDown;\n  public activeWorkspace: boolean = false;\n\n  public showArrow$: BehaviorSubject = new BehaviorSubject(false);\n\n  @ViewChild('elementList')\n  listElement?: ElementRef;\n\n  constructor(\n    private workspaceService: WorkspaceService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private router: Router,\n  ) {}\n\n  public openWorkspace() {\n    this.activeWorkspace = true;\n  }\n  public closeWorkspace() {\n    this.activeWorkspace = false;\n  }\n  public toggleWorkspace() {\n    if (!this.activeWorkspace) {\n      this.openWorkspace();\n    } else {\n      this.closeWorkspace();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.showArrow$.next(Boolean(this.listElement?.nativeElement.children.length));\n    });\n  }\n\n  routeToWorkspace() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id]));\n  }\n\n  routeToProject(project: Project) {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, project.id]));\n  }\n\n  createProject() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, 'create']));\n  }\n\n  editProject(project: Project) {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, project.id, 'edit']));\n  }\n\n  deleteProject(project: Project) {\n    this.dialogService.confirmProjectDelete(project).subscribe(() => {\n      this.projectService.delete(project.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n\n  editWorkspace() {\n    this.router\n      .navigateByUrl('/', { skipLocationChange: true })\n      .then(() => this.router.navigate(['/', this.workspace.id, 'edit']));\n  }\n\n  deleteWorkspace() {\n    this.dialogService.confirmWorkspaceDelete(this.workspace).subscribe(() => {\n      this.workspaceService.delete(this.workspace.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n\n  openWithVSCode(project: Project) {\n    window.open(`https://github.dev/${project.gitHubIntegration}`, '_blank');\n  }\n\n  openWithLocalVSCode(project: Project) {\n    window.open(\n      `vscode://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,\n      '_blank',\n    );\n  }\n\n  openWithLocalVSCodeInsiders(project: Project) {\n    window.open(\n      `vscode-insiders://vscode.git/clone?url=https://github.com/${project.gitHubIntegration}`,\n      '_blank',\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n      \n      \n        \n          more_vert\n        \n        \n          \n            Create project\n          \n          \n            Manage projects\n          \n          \n            Edit workspace\n          \n          \n            Delete workspace\n          \n        \n      \n    \n  \n  \n    \n      \n        {{projectWithPriv.project.name}}\n        \n          \n            \n              more_vert\n            \n            \n              \n                Open in github.dev\n              \n              \n                Open in Visual Studio Code\n              \n              \n                Open in Visual Studio Code Insiders\n              \n              \n                Edit project\n              \n              \n                Delete project\n              \n            \n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./nav-element-workspace.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  @include typo-title;\n\n  background-color: var(--color-secondary-600);\n}\n\nli {\n  background-color: var(--color-secondary-700);\n}\n\n.workspace {\n  display: flex;\n  width: 100%;\n  height: 46px;\n  justify-content: space-between;\n  border-radius: var(--border-radius);\n  color: var(--color-neutral-300);\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n\n  .element {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n    padding: 0 0 0 30px;\n  }\n\n  .icons {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 0 5px 0 0;\n    }\n\n    .open-below {\n      display: flex;\n      height: 100%;\n      align-items: center;\n      justify-content: center;\n      padding: 0 5px;\n\n      app-icon {\n        display: flex;\n        justify-content: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n\n    .options button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  &:hover {\n    background-color: var(--color-secondary-500);\n  }\n}\n\n.project {\n  display: none;\n  width: 100%;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    justify-content: center;\n    background-color: var(--color-secondary-600);\n    color: var(--color-neutral-300);\n    transition: background-color 0.2s ease-in-out;\n\n    li {\n      display: flex;\n      width: 100%;\n      height: 46px;\n      align-items: center;\n      justify-content: space-between;\n      border-radius: var(--border-radius);\n\n      .sub-element {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        align-items: center;\n        padding: 0 0 0 40px;\n      }\n\n      .icons {\n        display: flex;\n        height: 100%;\n        align-items: center;\n        padding: 0 5px 0 0;\n      }\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n  }\n}\n\nbutton {\n  display: flex;\n  align-items: center;\n}\n\n.hidden {\n  visibility: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                more_vert                                      Create project                                Manage projects                                Edit workspace                                Delete workspace                                                  {{projectWithPriv.project.name}}                                            more_vert                                                      Open in github.dev                                            Open in Visual Studio Code                                            Open in Visual Studio Code Insiders                                            Edit project                                            Delete project                                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavElementWorkspaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionComponent.html":{"url":"components/OptionComponent.html","title":"component - OptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/option/option.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-option\n            \n\n            \n                styleUrls\n                ./option.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faQuestion\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    viewValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/option/option.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string | IconDefinition\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/option/option.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/option/option.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faQuestion\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/option/option.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        viewValue\n                    \n                \n\n                \n                    \n                        getviewValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/option/option.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input } from '@angular/core';\nimport { faQuestion, IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-option',\n  templateUrl: './option.component.html',\n  styleUrls: ['./option.component.scss'],\n})\nexport class OptionComponent {\n  @Input() value!: any;\n  @Input() icon?: string | IconDefinition;\n\n  faQuestion = faQuestion;\n\n  public get viewValue(): string {\n    return this.ref.nativeElement.innerText;\n  }\n\n  constructor(private ref: ElementRef) {}\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./option.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'OptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PersistentMap.html":{"url":"classes/PersistentMap.html","title":"class - PersistentMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PersistentMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/persistent-map.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _persistentKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                clear\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    Private\n                                saveState\n                            \n                            \n                                    \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PersistentMapOptions, entries?:  | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/persistent-map.class.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PersistentMapOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                     | null\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _persistentKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/persistent-map.class.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: K)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveState\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        set\n                        \n                    \n                \n            \n            \n                \n                    \n                    set(key: K, value: V)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/persistent-map.class.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface PersistentMapOptions {\n  persistentKey: string;\n}\n\nexport class PersistentMap extends Map {\n  override clear(): void {\n    localStorage.removeItem(this._persistentKey);\n    super.clear();\n  }\n\n  override delete(key: K): boolean {\n    const temp = super.delete(key);\n    this.saveState();\n    return temp;\n  }\n\n  override set(key: K, value: V): this {\n    const temp = super.set(key, value);\n    this.saveState();\n    return temp;\n  }\n\n  private saveState() {\n    localStorage.setItem(this._persistentKey, JSON.stringify([...this.entries()]));\n  }\n\n  private _persistentKey = '';\n\n  constructor(\n    { persistentKey }: PersistentMapOptions,\n    entries?: readonly (readonly [K, V])[] | null,\n  ) {\n    super(\n      persistentKey && localStorage.getItem(persistentKey)\n        ? JSON.parse(localStorage.getItem(persistentKey)!)\n        : entries,\n    );\n\n    if (!persistentKey) {\n      console.error('PersistentMap need persistentKey option');\n      return;\n    }\n\n    this._persistentKey = persistentKey;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersistentMapOptions.html":{"url":"interfaces/PersistentMapOptions.html","title":"interface - PersistentMapOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersistentMapOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/persistent-map.class.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            persistentKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        persistentKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        persistentKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersistentMapOptions {\n  persistentKey: string;\n}\n\nexport class PersistentMap extends Map {\n  override clear(): void {\n    localStorage.removeItem(this._persistentKey);\n    super.clear();\n  }\n\n  override delete(key: K): boolean {\n    const temp = super.delete(key);\n    this.saveState();\n    return temp;\n  }\n\n  override set(key: K, value: V): this {\n    const temp = super.set(key, value);\n    this.saveState();\n    return temp;\n  }\n\n  private saveState() {\n    localStorage.setItem(this._persistentKey, JSON.stringify([...this.entries()]));\n  }\n\n  private _persistentKey = '';\n\n  constructor(\n    { persistentKey }: PersistentMapOptions,\n    entries?: readonly (readonly [K, V])[] | null,\n  ) {\n    super(\n      persistentKey && localStorage.getItem(persistentKey)\n        ? JSON.parse(localStorage.getItem(persistentKey)!)\n        : entries,\n    );\n\n    if (!persistentKey) {\n      console.error('PersistentMap need persistentKey option');\n      return;\n    }\n\n    this._persistentKey = persistentKey;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/project.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gitHubIntegration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gitHubIntegration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gitHubIntegration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub repository name\n\"SamPanDonte/untitled\"\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project's ID.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project's name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectMembers:     ProjectMember[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectMember[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of projects members\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ProjectMember } from './project-member.interface';\n\nexport interface Project {\n  /**\n   * The project's ID.\n   */\n  id: number;\n\n  /**\n   * The project's name.\n   */\n  name: string;\n\n  /**\n   * GitHub repository name\n   * @example\n   * \"SamPanDonte/untitled\"\n   */\n  gitHubIntegration: string;\n\n  /**\n   * List of projects members\n   */\n  projectMembers?: ProjectMember[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectMember.html":{"url":"interfaces/ProjectMember.html","title":"interface - ProjectMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/project-member.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            privileges\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        privileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        privileges:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectMember {\n  user: {\n    id: number;\n    name: string;\n    surname: string;\n    email: string;\n    avatar: string;\n    username: string;\n  };\n  privileges: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeWorkspace\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/project.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeWorkspace\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeWorkspace(projectId: number, newWorkspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:57\n                \n            \n\n\n            \n                \n                    Changes the workspace of the project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project to move\n\n                                    \n                                \n                                \n                                    newWorkspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace where the project will be moved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(project: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:47\n                \n            \n\n\n            \n                \n                    Creates a new project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:29\n                \n            \n\n\n            \n                \n                    Deletes the project by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the project to delete from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:20\n                \n            \n\n\n            \n                \n                    Gets a project by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the project to get from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:64\n                \n            \n\n\n            \n                \n                    List projects in given workspace.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/project.service.ts:38\n                \n            \n\n\n            \n                \n                    Updates a project.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project object to update in the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { map } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Project } from '../interfaces/project.interface';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Gets a project by its ID.\n   * @param projectId identifier of the project to get from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(projectId: number) {\n    return this.apiService.get(`/project/${projectId}`);\n  }\n\n  /**\n   * Deletes the project by its ID.\n   * @param projectId identifier of the project to delete from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(projectId: number) {\n    return this.apiService.delete(`/project/${projectId}`);\n  }\n\n  /**\n   * Updates a project.\n   * @param project project object to update in the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public update(project: Project) {\n    return this.apiService.put(`/project/${project.id}`, { body: project });\n  }\n\n  /**\n   * Creates a new project.\n   * @param project project to add\n   * @returns Request observable, which completes when request is finished\n   */\n  public create(project: { name: string; workspaceId: number }) {\n    return this.apiService.post('/project', { body: project });\n  }\n\n  /**\n   * Changes the workspace of the project.\n   * @param projectId project to move\n   * @param newWorkspaceId workspace where the project will be moved\n   * @returns Request observable, which completes when request is finished\n   */\n  public changeWorkspace(projectId: number, newWorkspaceId: number) {\n    return this.apiService.put(`/project/${projectId}/workspace/${newWorkspaceId}`);\n  }\n\n  /**\n   * List projects in given workspace.\n   */\n  public list() {\n    return this.apiService.get('/workspace').pipe(\n      map((workspaces) =>\n        workspaces.reduce((projects: any, workspace: Workspace) => {\n          projects.push(...workspace.projectsWithPrivileges.map((p) => p.project));\n          return projects;\n        }, []),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsListPage.html":{"url":"components/ProjectsListPage.html","title":"component - ProjectsListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/projects-list/projects-list.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects-list\n            \n\n            \n                styleUrls\n                ./projects-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./projects-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faPlus\n                            \n                            \n                                projects$\n                            \n                            \n                                workspace$\n                            \n                            \n                                    Private\n                                workspaceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProject\n                            \n                            \n                                    Public\n                                editProject\n                            \n                            \n                                    Public\n                                openProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, workspaceService: WorkspaceService, projectService: ProjectService, dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    editProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workspace$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/projects-list/projects-list.page.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WorkspaceService } from '../../services/workspace.service';\nimport { map, Observable } from 'rxjs';\nimport { Project } from '../../interfaces/project.interface';\nimport { Workspace } from '../../interfaces/workspace.interface';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from 'src/app/_main/services/dialog.service';\nimport { ProjectService } from '../../services/project.service';\n\n@Component({\n  selector: 'app-projects-list',\n  templateUrl: './projects-list.page.html',\n  styleUrls: ['./projects-list.page.scss'],\n})\nexport class ProjectsListPage {\n  workspace$: Observable;\n  projects$: Observable;\n\n  faPlus = faPlus;\n\n  private workspaceId!: number;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private router: Router,\n  ) {\n    const { workspaceId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n\n    this.workspace$ = this.workspaceService.get(workspaceId);\n    this.projects$ = this.workspace$.pipe(\n      map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)),\n    );\n  }\n\n  public editProject(project: Project) {\n    this.router.navigate(['/', this.workspaceId, project.id, 'edit']);\n  }\n\n  public openProject(project: Project) {\n    this.router.navigate(['/', this.workspaceId, project.id]);\n  }\n\n  deleteProject(project: Project) {\n    this.dialogService.confirmProjectDelete(project).subscribe(() => {\n      this.projectService.delete(project.id).subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n\n  {{ (workspace$ | async)?.name }}\n  New project\n\n\n\n\n\n  \n  \n    Name\n     {{ row.name }} \n  \n\n  \n  \n    Statistics\n     - \n  \n\n  \n  \n    Last update\n     - \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Edit project\n        \n        \n          Delete project\n        \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./projects-list.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ (workspace$ | async)?.name }}  New project        Name     {{ row.name }}           Statistics     -           Last update     -                                                           Edit project                          Delete project                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Random.html":{"url":"classes/Random.html","title":"class - Random","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Random\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/random.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                m_w\n                            \n                            \n                                    Private\n                                m_z\n                            \n                            \n                                    Private\n                                mask\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                random\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(seed: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/classes/random.class.ts:4\n                            \n                        \n\n                \n                    \n                            Random number generation class with optional seed\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        seed\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the seed to use in random number generation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        m_w\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 123456789\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        m_z\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 987654321\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0xffffffff\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/classes/random.class.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        random\n                        \n                    \n                \n            \n            \n                \n                    \n                    random()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/random.class.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Random {\n  private m_w = 123456789;\n  private m_z = 987654321;\n  private mask = 0xffffffff;\n\n  /**\n   * Random number generation class with optional seed\n   * @param seed the seed to use in random number generation\n   */\n  constructor(seed: number = new Date().getTime()) {\n    this.m_w = (123456789 + seed) & this.mask;\n    this.m_z = (987654321 - seed) & this.mask;\n  }\n\n  // Returns number between 0 (inclusive) and 1.0 (exclusive),\n  // just like Math.random().\n  public random() {\n    this.m_z = (36969 * (this.m_z & 65535) + (this.m_z >> 16)) & this.mask;\n    this.m_w = (18000 * (this.m_w & 65535) + (this.m_w >> 16)) & this.mask;\n    let result = ((this.m_z >> 0;\n    result /= 4294967296;\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/register/register.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                error\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                RegisterStage\n                            \n                            \n                                    Private\n                                    Optional\n                                registerSubscription\n                            \n                            \n                                    Public\n                                    Optional\n                                stage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                nextStage\n                            \n                            \n                                previousStage\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/register/register.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousStage\n                        \n                    \n                \n            \n            \n                \npreviousStage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/register/register.page.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', [requiredValidator(), emailValidator()], []),\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n    name: new FormControl('', [requiredValidator()], []),\n    surname: new FormControl('', [requiredValidator()], []),\n    username: new FormControl('', [requiredValidator()], []),\n    agreements: new FormControl('', [requiredValidator()], []),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:33\n                        \n                    \n\n            \n                \n                    Form group for register.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RegisterStage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RegisterStage\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        registerSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegisterStage\n\n                    \n                \n                \n                    \n                        Default value : RegisterStage.IMPORTANT_DATA\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/pages/register/register.page.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { emailValidator } from '@main/validators/email.validator';\nimport { passwordValidator } from '@main/validators/password.validator';\nimport { sameAsValidator } from '@main/validators/same-as.validator';\nimport { catchError, EMPTY, Subscription } from 'rxjs';\nimport { requiredValidator } from 'src/app/_main/validators/required.validator';\nimport { AuthService } from '../../services/auth.service';\n\nenum RegisterStage {\n  IMPORTANT_DATA,\n  PERSONAL_DATA,\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  private registerSubscription?: Subscription;\n  public stage?: RegisterStage = RegisterStage.IMPORTANT_DATA;\n  RegisterStage = RegisterStage;\n\n  public error?: string;\n\n  /**\n   * Form group for register.\n   */\n  public form = new FormGroup({\n    email: new FormControl('', [requiredValidator(), emailValidator()], []),\n    password: new FormControl('', [requiredValidator(), passwordValidator()], []),\n    repeatPassword: new FormControl(\n      '',\n      [\n        requiredValidator(),\n        passwordValidator(),\n        sameAsValidator('password', $localize`Given passwords are not the same `),\n      ],\n      [],\n    ),\n    name: new FormControl('', [requiredValidator()], []),\n    surname: new FormControl('', [requiredValidator()], []),\n    username: new FormControl('', [requiredValidator()], []),\n    agreements: new FormControl('', [requiredValidator()], []),\n  });\n\n  nextStage() {\n    let formFields: string[] = ['email', 'password', 'repeatPassword', 'agreements'];\n    let correctData: boolean = true;\n    for (let field of formFields) {\n      this.form.get(field)?.markAsTouched();\n      this.form.get(field)?.updateValueAndValidity();\n      if (this.form.get(field)?.invalid) {\n        correctData = false;\n      }\n    }\n    if (correctData) {\n      this.stage = RegisterStage.PERSONAL_DATA;\n    }\n  }\n\n  previousStage() {\n    this.stage = RegisterStage.IMPORTANT_DATA;\n  }\n\n  register() {\n    if (this.registerSubscription && !this.registerSubscription.closed) return;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.valid) {\n      this.registerSubscription = this.authService\n        .register(this.form.value)\n        .pipe(\n          catchError((e) => {\n            this.handleError(e);\n            return EMPTY;\n          }),\n        )\n        .subscribe(() => {\n          this.router.navigate(['/']);\n        });\n    }\n  }\n\n  handleError(error: any) {\n    switch (error.status) {\n      case 422:\n        switch (error.error.message) {\n          case 'this email is already taken':\n            this.error = $localize`Email is already taken`;\n            break;\n          case 'this username is already taken':\n            this.error = $localize`Username is already taken`;\n        }\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Register\n          This is a secure site. Please enter your register information or if you have an\n            account already, click here to login.\n        \n\n        \n          {{ error }}\n        \n\n        \n          \n\n          \n\n          \n\n          \n            \n              I agree to the End User License Agreement and Privacy Statement.\n            \n          \n\n          Next\n        \n        \n          \n\n          \n\n          \n          \n            Back\n            Register\n          \n        \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .agreements {\n          display: flex;\n        }\n\n        app-input {\n          width: 100%;\n        }\n\n        app-button {\n          align-self: flex-end;\n        }\n\n        a {\n          color: var(--color-link);\n          cursor: pointer;\n          transition: color 0.2s ease;\n\n          &:hover {\n            color: var(--color-link-hover);\n          }\n        }\n\n        .buttons {\n          display: flex;\n          width: 100%;\n          justify-content: space-between;\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Register          This is a secure site. Please enter your register information or if you have an            account already, click here to login.                          {{ error }}                                                                                  I agree to the End User License Agreement and Privacy Statement.                                Next                                                                    Back            Register                                      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestOptions.html":{"url":"interfaces/RequestOptions.html","title":"interface - RequestOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/request-options.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Request options interface\nUse this interface to configure request options like body, params, headers, etc.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            context\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            observe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reportProgress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            responseType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withCredentials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Body to send with the request. Used int POST, PATH, PATCH, DELETE requests.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:         HttpContext\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpContext\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional context to attach with request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     HttpHeaders | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to send with the request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        observe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        observe:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Part of the response to observe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:     HttpParams | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpParams | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Query params to send with the request.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportProgress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reportProgress:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used to report progress events like download or upload progress.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responseType:     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Response type to expect from the server.\nFor example:\n\nblob - will return a Blob object (used when API sends back a file).\njson - will return a JSON object.\ntext - will return a string.\n\nDefault is json.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If you want the credentials (cookie authentication token) to be passable through a call,\nyou need to add { withCredentials: true } in your httpClient call.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpContext, HttpHeaders, HttpParams } from '@angular/common/http';\n\n/**\n * Request options interface\n * Use this interface to configure request options like body, params, headers, etc.\n */\nexport interface RequestOptions {\n  /**\n   * Body to send with the request. Used int POST, PATH, PATCH, DELETE requests.\n   */\n  body?: any;\n  /**\n   * Headers to send with the request.\n   */\n  headers?:\n    | HttpHeaders\n    | {\n        [header: string]: string | string[];\n      };\n  /**\n   * Additional context to attach with request.\n   */\n  context?: HttpContext;\n  /**\n   * Part of the response to observe.\n   */\n  observe?: 'body';\n  /**\n   * Query params to send with the request.\n   */\n  params?:\n    | HttpParams\n    | {\n        [param: string]: string | number | boolean | ReadonlyArray;\n      };\n  /**\n   * Used to report progress events like download or upload progress.\n   */\n  reportProgress?: boolean;\n\n  /**\n   * Response type to expect from the server.\n   * For example:\n   * - blob - will return a Blob object (used when API sends back a file).\n   * - json - will return a JSON object.\n   * - text - will return a string.\n   *\n   * Default is json.\n   */\n  responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  /**\n   * If you want the credentials (cookie authentication token) to be passable through a call,\n   * you need to add `{ withCredentials: true }` in your httpClient call.\n   */\n  withCredentials?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestoreAccountPage.html":{"url":"components/RestoreAccountPage.html","title":"component - RestoreAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RestoreAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/pages/restore-account/restore-account.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-restore-account-page\n            \n\n            \n                styleUrls\n                ./restore-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./restore-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/pages/restore-account/restore-account.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/restore-account/restore-account.page.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restore\n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/pages/restore-account/restore-account.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\n\n@Component({\n  selector: 'app-restore-account-page',\n  templateUrl: './restore-account.page.html',\n  styleUrls: ['./restore-account.page.scss'],\n})\nexport class RestoreAccountPage {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  logOut() {\n    this.authService.logout().subscribe();\n  }\n\n  restore() {\n    this.authService.recoverAccount().subscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n          Restore account\n          Your account has been deleted. You can restore your account within 7 days of\n            deletion.\n        \n\n        \n          Log out\n          Restore\n        \n      \n    \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./restore-account.page.scss\n                \n                .logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin-top: 20px;\n  background-image: url('/assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n}\n\n.main {\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-neutral-800);\n\n  .box {\n    display: flex;\n    width: 100%;\n    height: 100%;\n\n    .form-side {\n      display: flex;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      align-items: center;\n      justify-content: space-between;\n      background-color: var(--color-gray-800);\n\n      form {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n        justify-content: center;\n        padding: 4rem;\n\n        h2 {\n          margin-bottom: 0.5rem;\n        }\n\n        p {\n          margin-bottom: 1.5rem;\n        }\n\n        .actions {\n          display: flex;\n          width: 100%;\n          justify-content: flex-end;\n          margin-bottom: 1rem;\n\n          > *:not(:last-child) {\n            margin-right: 1rem;\n          }\n        }\n      }\n    }\n\n    .image-side {\n      background-color: var(--color-gray-700);\n    }\n  }\n}\n\n@screen sm {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen md {\n  .main {\n    .box {\n      width: 500px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 0;\n      }\n    }\n  }\n}\n\n@screen lg {\n  .main {\n    .box {\n      width: 950px;\n      height: 770px;\n\n      .form-side {\n        width: 500px;\n      }\n\n      .image-side {\n        width: 450px;\n      }\n    }\n  }\n}\n\n@screen xl {\n  .main {\n    .box {\n      width: 1240px;\n      height: 770px;\n\n      .form-side {\n        width: 520px;\n      }\n\n      .image-side {\n        width: 720px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Restore account          Your account has been deleted. You can restore your account within 7 days of            deletion.                          Log out          Restore                            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'RestoreAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterExtensionsService.html":{"url":"injectables/RouterExtensionsService.html","title":"injectable - RouterExtensionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RouterExtensionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/router-extensions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    snapshot\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/router-extensions.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        snapshot\n                    \n                \n\n                \n                    \n                        getsnapshot()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/services/router-extensions.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterExtensionsService {\n  constructor(private router: Router) {}\n  public get snapshot() {\n    let node = (this.router.routerState.snapshot as any)._root;\n    while (node.children[0]) {\n      node = node.children[0];\n    }\n\n    return { params: node.value.params };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SchedulePage.html":{"url":"components/SchedulePage.html","title":"component - SchedulePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SchedulePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/schedule/schedule.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-schedule-page\n            \n\n            \n                styleUrls\n                ./schedule.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./schedule.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cursor\n                            \n                            \n                                    Public\n                                limitAfter\n                            \n                            \n                                    Public\n                                limitBefore\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                schedule$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dates\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, activatedRoute: ActivatedRoute, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/schedule/schedule.page.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cursor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dayjs().toDate()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limitAfter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limitBefore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        schedule$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/schedule/schedule.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dates\n                    \n                \n\n                \n                    \n                        getdates()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/pages/schedule/schedule.page.ts:23\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport { Schedule } from '@tasks/interfaces/schedule.interface';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-schedule-page',\n  templateUrl: './schedule.page.html',\n  styleUrls: ['./schedule.page.scss'],\n})\nexport class SchedulePage implements OnInit {\n  public schedule$: Observable;\n  public project$: Observable;\n\n  public cursor = dayjs().toDate();\n  public limitAfter = 20;\n  public limitBefore = 0;\n\n  public get dates() {\n    const { cursor, limitBefore, limitAfter } = this;\n\n    const dates = [];\n\n    for (let i = 0; i \n    \n\n    \n        \n\n\n  \n    \n      \n        {{ cursor | date:'MMMM' }}\n      \n    \n    \n      \n    \n    \n      \n      \n        \n          {{ singleSchedule.user.name.substring(0, 1) }}\n        \n      \n    \n  \n\n  \n    \n      \n      \n        {{ date | date:'d' }}\n        {{ date | date:'EEE' }}\n      \n    \n    \n      \n      \n    \n    \n      \n      \n        \n          \n            \n              {{ task.name }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./schedule.page.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  padding: 2rem;\n}\n\n.schedule {\n  display: flex;\n  width: 100%;\n  padding-left: 10px;\n\n  // Sections\n\n  .people-header {\n    width: 80px;\n    height: 100%;\n    flex-shrink: 0;\n    margin-right: 1rem;\n    background-color: var(--color-secondary-800);\n    border-radius: var(--border-radius);\n  }\n\n  .timeline {\n    width: 100%;\n    height: 100%;\n    flex-grow: 1;\n    background-color: var(--color-secondary-800);\n    border-radius: var(--border-radius);\n    overflow-x: auto;\n\n    .cell {\n      width: 130px;\n      border-right: 1px solid var(--color-secondary-600);\n    }\n\n    .group-event-row {\n      .cell {\n        border-top: 1px solid var(--color-secondary-600);\n      }\n    }\n\n    .single-person-row {\n      .cell {\n        border-top: 1px solid var(--color-secondary-600);\n      }\n    }\n  }\n\n  // Rows\n  .header-event-row,\n  .group-event-row,\n  .single-person-row {\n    display: flex;\n  }\n\n  .header-row {\n    @include typo-title;\n\n    display: flex;\n    height: 64px;\n    color: var(--color-text);\n  }\n\n  .group-event-row {\n    display: flex;\n    height: 30px;\n  }\n\n  .single-person-row {\n    display: flex;\n    width: 100%;\n    height: 100px;\n  }\n\n  .cell {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    flex-shrink: 0;\n    align-items: center;\n    justify-content: center;\n\n    .number {\n      @include typo-title;\n    }\n\n    .day-of-week {\n      @include typo-body;\n    }\n\n    .task {\n      width: 100%;\n      height: 100%;\n      padding: 10px;\n      background-color: var(--color-primary-500);\n      border-radius: var(--border-radius);\n      color: var(--color-text);\n    }\n  }\n}\n\n.avatar {\n  @include typo-heading-5;\n\n  display: flex;\n  width: 40px;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-primary-500);\n  border-radius: 50%;\n  color: var(--color-text);\n  text-transform: uppercase;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ cursor | date:\\'MMMM\\' }}                                                          {{ singleSchedule.user.name.substring(0, 1) }}                                              {{ date | date:\\'d\\' }}        {{ date | date:\\'EEE\\' }}                                                                                          {{ task.name }}                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SchedulePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/select/select.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select\n            \n\n            \n                styleUrls\n                ./select.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                options\n                            \n                            \n                                    Optional\n                                optionsMap\n                            \n                            \n                                    Optional\n                                queryOptions\n                            \n                            \n                                selected$\n                            \n                            \n                                yet\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateOptions\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                floatingLabel\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/select/select.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOptions\n                        \n                    \n                \n            \n            \n                \nupdateOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/select/select.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        optionsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        queryOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(OptionComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/select/select.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:77\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/select/select.component.ts:20\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, ContentChildren, Input, OnInit, QueryList } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Subject } from 'rxjs';\nimport { OptionComponent } from '../option/option.component';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n})\nexport class SelectComponent extends ControlAccessor implements AfterViewInit, OnInit {\n  @ContentChildren(OptionComponent) queryOptions?: QueryList;\n  options?: any[];\n  optionsMap?: Map = new Map();\n  @Input() floatingLabel: string = '';\n  yet: boolean = false;\n\n  selected$: Subject = new Subject();\n\n  get selected() {\n    return this.optionsMap?.get(this.control.value);\n  }\n\n  ngOnInit(): void {\n    this.control.valueChanges.subscribe((value) => {\n      console.log('Value changed to: ' + value);\n      this.optionsMap?.forEach((option, key) => {\n        const selected = key === value;\n        option.selected = selected;\n        if (selected) {\n          this.selected$.next(option);\n        }\n      });\n    });\n\n    this.selected$.subscribe((val) => {\n      console.log(val);\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.queryOptions?.changes.subscribe((options) => {\n      console.log('updated options');\n      this.updateOptions();\n    });\n    this.updateOptions();\n  }\n\n  updateOptions() {\n    console.log(this.control.value);\n\n    this.yet = false;\n    this.options = this.queryOptions?.map((x) => {\n      const option = { value: x.value, viewValue: x.viewValue, icon: x.icon };\n\n      this.optionsMap!.set(x.value, option);\n      return option;\n    });\n    setTimeout(() => {\n      this.selected$.next(this.optionsMap?.get(this.control.value));\n      this.yet = true;\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ floatingLabel }}\n  \n    \n      \n      {{ selectedItem.viewValue }}\n    \n    \n      \n        \n        {{ option.viewValue }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./select.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ floatingLabel }}                  {{ selectedItem.viewValue }}                              {{ option.viewValue }}            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionsService.html":{"url":"injectables/SessionsService.html","title":"injectable - SessionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/services/sessions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/services/sessions.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/services/sessions.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/services/sessions.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserSession } from 'src/app/settings/interfaces/session.interface';\nimport { ApiService } from 'src/app/_main/services/api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionsService {\n  constructor(private apiService: ApiService) {}\n\n  public list(): Observable {\n    return this.apiService.get(`/session`);\n  }\n\n  public delete(id: number) {\n    return this.apiService.delete(`/session/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsAccountPage.html":{"url":"components/SettingsAccountPage.html","title":"component - SettingsAccountPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsAccountPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-account/settings-account.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-account-page\n            \n\n            \n                styleUrls\n                ./settings-account.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-account.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccountMailCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-account/settings-account.page.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccountMailCheck\n                        \n                    \n                \n            \n            \n                \ndeleteAccountMailCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-account/settings-account.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('', requiredValidator()),\n    name: new FormControl('', requiredValidator()),\n    surname: new FormControl('', requiredValidator()),\n    username: new FormControl('', requiredValidator()),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-account/settings-account.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AuthService } from '@auth/services/auth.service';\nimport { UserService } from '@auth/services/user.service';\nimport { requiredValidator } from '@main/validators/required.validator';\n\n@Component({\n  selector: 'app-settings-account-page',\n  templateUrl: './settings-account.page.html',\n  styleUrls: ['./settings-account.page.scss'],\n})\nexport class SettingsAccountPage implements OnInit {\n  constructor(private userService: UserService, private authService: AuthService) {}\n\n  public form = new FormGroup({\n    email: new FormControl('', requiredValidator()),\n    name: new FormControl('', requiredValidator()),\n    surname: new FormControl('', requiredValidator()),\n    username: new FormControl('', requiredValidator()),\n  });\n\n  ngOnInit() {\n    this.userService.getMyself().subscribe((response) => {\n      this.form.patchValue(response);\n    });\n  }\n\n  submit() {\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n    if (this.form.invalid) return;\n\n    this.userService.update(this.form.value).subscribe(() => {});\n  }\n\n  resetPassword() {\n    this.authService.resetPassword(this.form.value.email).subscribe(() => {\n      this.authService.logout().subscribe();\n    });\n  }\n\n  deleteAccountMailCheck() {\n    this.authService.deleteAccount().subscribe(() => {\n      // dodac popup czy na pewno zgadzamy sie na usuniecie konta, jesli tak to infomracja ze zostal wyslany link na maila dezaktywujacy konto i ze ma mozliwosc jego przywrocenia do 7 dni\n      this.authService.logout().subscribe();\n    });\n  }\n}\n\n    \n\n    \n        Account\n\n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n    Update profile\n  \n\n  \n  \n    Change password\n    It's highly recommended to change the password every 30 days. It will increase your\n      account security.\n    \n      Change password\n    \n  \n\n  \n  \n    Delete account\n    Delete your account permanently. All not shared owned projects will also be deleted.\n      This action is reversible in period of 7 days - you need to log in to your account in this time to revert your\n      account deletion.\n    \n      Delete account\n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings-account.page.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n}\n\n.actions {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Account                                Update profile          Change password    It\\'s highly recommended to change the password every 30 days. It will increase your      account security.          Change password              Delete account    Delete your account permanently. All not shared owned projects will also be deleted.      This action is reversible in period of 7 days - you need to log in to your account in this time to revert your      account deletion.          Delete account      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsAccountPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsIntegrationsPage.html":{"url":"components/SettingsIntegrationsPage.html","title":"component - SettingsIntegrationsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsIntegrationsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-integrations\n            \n\n            \n                styleUrls\n                ./settings-integrations.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-integrations.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gitHubAccounts$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                getConnectedProjects\n                            \n                            \n                                    Public\n                                loadGitHubIntegration\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gitIntegrationService: GitIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnect\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnect(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConnectedProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConnectedProjects(account: GitAccount)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                GitAccount\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        loadGitHubIntegration\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadGitHubIntegration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        gitHubAccounts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-integrations/settings-integrations.page.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GitAccount } from '@dashboard/interfaces/git-integration.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { map, Observable, take } from 'rxjs';\n\ninterface GitAccountWithUsage {\n  account: GitAccount;\n  usage: Observable;\n}\n\n@Component({\n  selector: 'app-settings-integrations',\n  templateUrl: './settings-integrations.page.html',\n  styleUrls: ['./settings-integrations.page.scss'],\n})\nexport class SettingsIntegrationsPage implements OnInit {\n  public gitHubAccounts$!: Observable;\n\n  constructor(private gitIntegrationService: GitIntegrationService) {}\n\n  ngOnInit() {\n    this.loadGitHubIntegration();\n  }\n\n  public loadGitHubIntegration(): void {\n    this.gitHubAccounts$ = this.gitIntegrationService.getConnectedGitHubAccounts().pipe(\n      map((accounts) => {\n        return accounts.map((account) => {\n          return {\n            account,\n            usage: this.getConnectedProjects(account).pipe(take(1)),\n          };\n        });\n      }),\n    );\n  }\n\n  public disconnect(account: GitAccount): void {\n    this.gitIntegrationService.deleteConnectedGitHubAccount(account.id).subscribe(({ link }) => {\n      window.open(link, '_blank');\n    });\n  }\n\n  public getConnectedProjects(account: GitAccount): Observable {\n    return this.gitIntegrationService\n      .getGitHubAccountConnectedProjects(account)\n      .pipe(map((projects) => projects.map((project: any) => project.name).join(', ')));\n  }\n}\n\n    \n\n    \n        Integrations\n\n\n\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-integrations.page.scss\n                \n                .list {\n  > * {\n    display: block;\n    margin-top: 1rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Integrations              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsIntegrationsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsLocalizationPage.html":{"url":"components/SettingsLocalizationPage.html","title":"component - SettingsLocalizationPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsLocalizationPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-localization/settings-localization.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-localization-page\n            \n\n            \n                styleUrls\n                ./settings-localization.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-localization.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                form\n                            \n                            \n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:44\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    language: new FormControl('', requiredValidator()),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      code: 'de-DE',\n      name: 'Deutsch',\n    },\n    {\n      code: 'en-GB',\n      name: 'English (British)',\n    },\n    {\n      code: 'es-ES',\n      name: 'Español',\n    },\n    {\n      code: 'it-IT',\n      name: 'Italiano',\n    },\n    {\n      code: 'pl-PL',\n      name: 'Polski',\n    },\n    {\n      code: 'en-US',\n      name: 'English (American)',\n    },\n    {\n      code: 'uk-UA',\n      name: 'Українська',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-localization/settings-localization.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { requiredValidator } from '@main/validators/required.validator';\n\n@Component({\n  selector: 'app-settings-localization-page',\n  templateUrl: './settings-localization.page.html',\n  styleUrls: ['./settings-localization.page.scss'],\n})\nexport class SettingsLocalizationPage implements OnInit {\n  public form = new FormGroup({\n    language: new FormControl('', requiredValidator()),\n  });\n\n  languages = [\n    {\n      code: 'de-DE',\n      name: 'Deutsch',\n    },\n    {\n      code: 'en-GB',\n      name: 'English (British)',\n    },\n    {\n      code: 'es-ES',\n      name: 'Español',\n    },\n    {\n      code: 'it-IT',\n      name: 'Italiano',\n    },\n    {\n      code: 'pl-PL',\n      name: 'Polski',\n    },\n    {\n      code: 'en-US',\n      name: 'English (American)',\n    },\n    {\n      code: 'uk-UA',\n      name: 'Українська',\n    },\n  ];\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  changeLanguage() {\n    location.href = `https://workflow.adiantek.ovh/${this.form.value.language}/settings/localization`;\n  }\n\n  submit() {}\n}\n\n    \n\n    \n        Localization\n\n\n  \n  \n    {{ language.name }}\n  \n\n  \n  \n    Save settings\n  \n\n\n\n    \n\n    \n                \n                    ./settings-localization.page.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n}\n\n.actions {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Localization        {{ language.name }}          Save settings  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsLocalizationPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_declarations\n\n\n\n\nIntegrationEntryComponent\n\nIntegrationEntryComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nIntegrationEntryComponent->SettingsModule\n\n\n\n\n\nListGroupComponent\n\nListGroupComponent\n\nSettingsModule -->\n\nListGroupComponent->SettingsModule\n\n\n\n\n\nSettingsAccountPage\n\nSettingsAccountPage\n\nSettingsModule -->\n\nSettingsAccountPage->SettingsModule\n\n\n\n\n\nSettingsIntegrationsPage\n\nSettingsIntegrationsPage\n\nSettingsModule -->\n\nSettingsIntegrationsPage->SettingsModule\n\n\n\n\n\nSettingsLocalizationPage\n\nSettingsLocalizationPage\n\nSettingsModule -->\n\nSettingsLocalizationPage->SettingsModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\nSettingsModule -->\n\nSettingsPage->SettingsModule\n\n\n\n\n\nSettingsSessionsPage\n\nSettingsSessionsPage\n\nSettingsModule -->\n\nSettingsSessionsPage->SettingsModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nSettingsModule -->\n\nMainModule->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IntegrationEntryComponent\n                        \n                        \n                            ListGroupComponent\n                        \n                        \n                            SettingsAccountPage\n                        \n                        \n                            SettingsIntegrationsPage\n                        \n                        \n                            SettingsLocalizationPage\n                        \n                        \n                            SettingsPage\n                        \n                        \n                            SettingsSessionsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainModule\n                        \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '@main/_main.module';\nimport { SettingsPage } from 'src/app/settings/pages/settings/settings.page';\nimport { IntegrationEntryComponent } from './components/integration-entry/integration-entry.component';\nimport { ListGroupComponent } from './components/list-group/list-group.component';\nimport { SettingsAccountPage } from './pages/settings-account/settings-account.page';\nimport { SettingsIntegrationsPage } from './pages/settings-integrations/settings-integrations.page';\nimport { SettingsLocalizationPage } from './pages/settings-localization/settings-localization.page';\nimport { SettingsSessionsPage } from './pages/settings-sessions/settings-sessions.page';\nimport { SettingsRoutingModule } from './settings.routing';\n\n@NgModule({\n  imports: [CommonModule, MainModule, ReactiveFormsModule, SettingsRoutingModule],\n  declarations: [\n    SettingsPage,\n    SettingsLocalizationPage,\n    SettingsAccountPage,\n    SettingsIntegrationsPage,\n    SettingsSessionsPage,\n    ListGroupComponent,\n    IntegrationEntryComponent,\n  ],\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings/settings.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-page\n            \n\n            \n                styleUrls\n                ./settings.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faAddressCard\n                            \n                            \n                                faCircleNodes\n                            \n                            \n                                faGlobe\n                            \n                            \n                                faUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings/settings.page.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings/settings.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faAddressCard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAddressCard\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCircleNodes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCircleNodes\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGlobe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGlobe\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faUser\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings/settings.page.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { faAddressCard, faCircleNodes, faGlobe, faUser } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-settings-page',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  faUser = faUser;\n  faGlobe = faGlobe;\n  faCircleNodes = faCircleNodes;\n  faAddressCard = faAddressCard;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n\n  \n  \n    \n\n      \n      \n        \n          \n          Account\n        \n      \n\n      \n      \n        \n          \n          Localization\n        \n      \n\n      \n      \n        \n          \n          Integrations\n        \n      \n\n      \n      \n        \n          \n          Sessions\n        \n      \n\n    \n  \n\n  \n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings.page.scss\n                \n                @import '../../../../styles/typography';\n\nsection {\n  display: flex;\n  justify-content: center;\n}\n\n.sidebar {\n  width: 315px;\n  height: 100%;\n  padding: 40px;\n\n  a {\n    @include typo-body;\n\n    position: relative;\n    display: flex;\n    align-items: center;\n    padding: 8px 10px;\n    margin-bottom: 0.35rem;\n    border-radius: var(--border-radius);\n    color: var(--color-text);\n    transition: background-color 0.2s ease-in-out;\n\n    app-icon {\n      margin-right: 1rem;\n    }\n\n    &:hover {\n      background-color: var(--color-secondary-500);\n    }\n\n    &.active {\n      background-color: var(--color-secondary-500);\n\n      &::before {\n        position: absolute;\n        top: 10%;\n        left: -10px;\n        width: 4px;\n        height: 80%;\n        background-color: var(--color-primary-700);\n        border-radius: var(--border-radius);\n        content: '';\n      }\n    }\n  }\n}\n\n.content {\n  width: 100%;\n  max-width: 800px;\n  padding: 40px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Account                                                      Localization                                                      Integrations                                                      Sessions                              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingsAccountPage } from './pages/settings-account/settings-account.page';\nimport { SettingsIntegrationsPage } from './pages/settings-integrations/settings-integrations.page';\nimport { SettingsLocalizationPage } from './pages/settings-localization/settings-localization.page';\nimport { SettingsSessionsPage } from './pages/settings-sessions/settings-sessions.page';\nimport { SettingsPage } from './pages/settings/settings.page';\n\n/**\n * Messages routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage,\n    children: [\n      {\n        path: 'account',\n        component: SettingsAccountPage,\n      },\n      {\n        path: 'localization',\n        component: SettingsLocalizationPage,\n      },\n      {\n        path: 'integrations',\n        component: SettingsIntegrationsPage,\n      },\n      {\n        path: 'sessions',\n        component: SettingsSessionsPage,\n      },\n    ],\n  },\n];\n\n/**\n * Messages routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsSessionsPage.html":{"url":"components/SettingsSessionsPage.html","title":"component - SettingsSessionsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsSessionsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/pages/settings-sessions/settings-sessions.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-sessions\n            \n\n            \n                styleUrls\n                ./settings-sessions.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-sessions.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sessionsList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agentType\n                            \n                            \n                                changeDate\n                            \n                            \n                                deleteSession\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agentType\n                        \n                    \n                \n            \n            \n                \nagentType(type: string, agent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    agent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSession\n                        \n                    \n                \n            \n            \n                \ndeleteSession(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sessionsList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/pages/settings-sessions/settings-sessions.page.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as dayjs from 'dayjs';\nimport { Observable } from 'rxjs';\nimport * as UAParser from 'ua-parser-js';\nimport { UserSession } from '../../interfaces/session.interface';\nimport { SessionsService } from '../../services/sessions.service';\n\n@Component({\n  selector: 'app-settings-sessions',\n  templateUrl: './settings-sessions.page.html',\n  styleUrls: ['./settings-sessions.page.scss'],\n})\nexport class SettingsSessionsPage implements OnInit {\n  public sessionsList$!: Observable;\n\n  constructor(private sessionService: SessionsService) {}\n  ngOnInit() {\n    this.sessionsList$ = this.sessionService.list();\n  }\n\n  changeDate(date: number) {\n    let currentDate = dayjs();\n    let sessionDate = dayjs(date);\n\n    if (currentDate.year() != sessionDate.year()) {\n      if (currentDate.diff(sessionDate, 'month') > 0) {\n        return sessionDate.format('LL');\n      } else {\n        return sessionDate.format('LLL');\n      }\n    } else {\n      return sessionDate.format('MMMM D, h:mm A');\n    }\n  }\n\n  agentType(type: string, agent: string) {\n    let uaParser = new UAParser(agent);\n    let osName = uaParser.getOS().name || 'Unknown system';\n    let browser = uaParser.getBrowser().name || 'Unknown browser';\n    if (type == 'os') {\n      return osName;\n    }\n    if (type == 'browser') {\n      return browser;\n    }\n    return osName + ', ' + browser;\n  }\n\n  deleteSession(id: number) {\n    this.sessionService.delete(id).subscribe();\n  }\n}\n\n    \n\n    \n        Sessions\n\n\n\n  \n  \n    \n      \n        \n          \n            \n              \n                {{ agentType(\"os\", session.userAgent) }},\n              \n              \n                {{ agentType(\"browser\", session.userAgent) }}\n              \n            \n            \n              \n                {{ session.geoip.city }}, {{ session.geoip.country }}\n              \n              \n                {{ changeDate(session.lastUsed) }}\n              \n              \n                Active now\n              \n            \n          \n          \n            Log out\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-sessions.page.scss\n                \n                .list {\n  > * {\n    display: block;\n    margin-top: 1rem;\n  }\n}\n\n.sessions-entry {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px;\n  border: 1px solid var(--color-secondary-300);\n  border-radius: var(--border-radius);\n\n  .labels {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    margin-bottom: 0;\n\n    .agent,\n    .local {\n      display: flex;\n    }\n\n    mark {\n      display: block;\n      margin-left: 0.5rem;\n      background-color: transparent;\n      color: var(--color-purple-300);\n    }\n\n    .description {\n      display: block;\n      padding-left: 0.5rem;\n      opacity: 0.5;\n    }\n  }\n}\n\n.actions {\n  flex-grow: 1;\n  flex-shrink: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Sessions                                                                          {{ agentType(\"os\", session.userAgent) }},                                            {{ agentType(\"browser\", session.userAgent) }}                                                                    {{ session.geoip.city }}, {{ session.geoip.country }}                                            {{ changeDate(session.lastUsed) }}                                            Active now                                                          Log out                              '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsSessionsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarNavigationComponent.html":{"url":"components/SidebarNavigationComponent.html","title":"component - SidebarNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar-navigation\n            \n\n            \n                styleUrls\n                ./sidebar-navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar-navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                workspaceList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWorkspace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createWorkspace\n                        \n                    \n                \n            \n            \n                \ncreateWorkspace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        workspaceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Workspace } from 'src/app/dashboard/interfaces/workspace.interface';\nimport { WorkspaceService } from 'src/app/dashboard/services/workspace.service';\n\n@Component({\n  selector: 'app-sidebar-navigation',\n  templateUrl: './sidebar-navigation.component.html',\n  styleUrls: ['./sidebar-navigation.component.scss'],\n})\nexport class SidebarNavigationComponent {\n  @Input()\n  public icon!: String;\n\n  public workspaceList?: Observable;\n\n  createWorkspace() {\n    this.router.navigate(['/', 'create']);\n  }\n\n  constructor(private workspaceService: WorkspaceService, private router: Router) {\n    this.workspaceList = this.workspaceService.list();\n  }\n}\n\n    \n\n    \n        \n  \n  \n\nDashboard\n\n  Workspaces\n  \n    \n      \n        {{workspace.name}}\n      \n    \n  \n  \n    \n      Create workspace\n    \n    \n      Manage workspaces\n    \n  \n\nEmails\nMessages\n    \n\n    \n                \n                    ./sidebar-navigation.component.scss\n                \n                :host {\n  display: flex;\n  width: 250px;\n  height: 100%;\n  flex-direction: column;\n  flex-shrink: 0;\n  background-color: var(--color-secondary-800);\n}\n\n.logo {\n  width: calc(100% - 80px);\n  height: 64px;\n  margin: 10px 20px 0;\n  background-image: url('../../../../assets/metadata/logo_with_name.svg');\n  background-position: 0 50%;\n  background-repeat: no-repeat;\n  cursor: pointer;\n  transform-origin: 50% 25%;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Dashboard  Workspaces                    {{workspace.name}}                        Create workspace              Manage workspaces      EmailsMessages'\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SinglePersonSchedule.html":{"url":"interfaces/SinglePersonSchedule.html","title":"interface - SinglePersonSchedule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SinglePersonSchedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/schedule.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tasks\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserData } from '@auth/interfaces/user.interface';\n\nexport type Schedule = SinglePersonSchedule[];\n\nexport interface SinglePersonSchedule {\n  user: UserData;\n  tasks: Map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/snackbar/snackbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationName\n                            \n                            \n                                faClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setAnimationName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                duration\n                            \n                            \n                                message\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.animation-name\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    colorStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 'gray'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        duration\n                    \n                \n                \n                    \n                        Default value : 4000\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uid\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:15\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        style.animation-name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAnimationName\n                        \n                    \n                \n            \n            \n                \nsetAnimationName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        animationName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.animation-name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faClose\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faClose\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar/snackbar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        colorStyle\n                    \n                \n\n                \n                    \n                        getcolorStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_main/components/snackbar/snackbar.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { faClose } from '@fortawesome/free-solid-svg-icons';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { SnackbarData } from './snackbar.interface';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss'],\n})\nexport class SnackbarComponent implements OnInit {\n  faClose = faClose;\n\n  @Input()\n  public uid!: string;\n\n  @Input()\n  public message!: SnackbarData['message'];\n\n  @Input()\n  public duration: SnackbarData['duration'] = 4000;\n\n  @Input()\n  public color: SnackbarData['color'] = 'gray';\n\n  @HostBinding('style.animation-name')\n  public animationName: string = 'open';\n\n  public get colorStyle(): string {\n    switch (this.color) {\n      case 'gray':\n        return 'var(--color-gray-500)';\n      case 'green':\n        return '#00b300';\n    }\n  }\n\n  constructor(private snackbarService: SnackbarService) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.close();\n    }, this.duration);\n  }\n\n  close() {\n    this.setAnimationName('close');\n    setTimeout(() => {\n      this.snackbarService.close(this.uid);\n    }, 1000);\n  }\n\n  setAnimationName(name: string) {\n    this.animationName = name;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ message }}\n  \n  \n\n\n    \n\n    \n                \n                    ./snackbar.component.scss\n                \n                :host {\n  display: block;\n  overflow: visible;\n  animation: open 1s ease-in-out forwards;\n}\n\n.content {\n  display: flex;\n  padding: 1rem;\n  border-radius: var(--border-radius);\n\n  .message {\n    margin-right: 0.75rem;\n    color: var(--color-text);\n  }\n\n  .close-button {\n    position: relative;\n    width: 24px;\n    height: 24px;\n    color: var(--color-text);\n    cursor: pointer;\n\n    &::before,\n    &::after {\n      position: absolute;\n      top: 0;\n      left: 50%;\n      display: block;\n      width: 1px;\n      height: 1rem;\n      margin-top: 0.25rem;\n      background-color: var(--color-text);\n      border-radius: 50%;\n      content: '';\n      transition: background-color 0.4s ease;\n    }\n\n    &::before {\n      transform: rotate(45deg);\n    }\n\n    &::after {\n      transform: rotate(-45deg);\n    }\n  }\n}\n\n@keyframes open {\n  from {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n}\n\n@keyframes close {\n  from {\n    opacity: 1;\n    transform: translateX(0%);\n  }\n\n  to {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ message }}    '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnackbarData.html":{"url":"interfaces/SnackbarData.html","title":"interface - SnackbarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SnackbarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/components/snackbar/snackbar.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     \"gray\" | \"green\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"gray\" | \"green\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SnackbarData {\n  color: 'gray' | 'green';\n  message: string;\n  duration: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarOutletComponent.html":{"url":"components/SnackbarOutletComponent.html","title":"component - SnackbarOutletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SnackbarOutletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar-outlet\n            \n\n            \n                styleUrls\n                ./snackbar-outlet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./snackbar-outlet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackbars$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trackSnackbarTuple\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        trackSnackbarTuple\n                        \n                    \n                \n            \n            \n                \ntrackSnackbarTuple(_index: number, undefined: [string, SnackbarData])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                [string, SnackbarData]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackbars$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.snackbarService.snackbars$\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { SnackbarData } from '../snackbar/snackbar.interface';\n\n@Component({\n  selector: 'app-snackbar-outlet',\n  templateUrl: './snackbar-outlet.component.html',\n  styleUrls: ['./snackbar-outlet.component.scss'],\n})\nexport class SnackbarOutletComponent {\n  public snackbars$ = this.snackbarService.snackbars$;\n\n  constructor(private snackbarService: SnackbarService) {}\n\n  trackSnackbarTuple(_index: number, [uid, _]: [string, SnackbarData]) {\n    return uid;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./snackbar-outlet.component.scss\n                \n                :host {\n  position: absolute;\n  z-index: 50;\n  top: 74px;\n  right: 0;\n  display: flex;\n  overflow: hidden;\n  flex-direction: column;\n  align-items: flex-end;\n  padding-right: 10px;\n}\n\napp-snackbar:not(:last-child) {\n  margin-bottom: 0.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarOutletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/services/snackbar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackbars$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                closeAll\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/services/snackbar.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        show\n                        \n                    \n                \n            \n            \n                \n                    \n                    show(message: string, color: \"gray\" | \"green\", duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/services/snackbar.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    color\n                                    \n                                            \"gray\" | \"green\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'gray'\n                                    \n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        4000\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackbars$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Map())\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/services/snackbar.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SnackbarData } from '@main/components/snackbar/snackbar.interface';\nimport { Service } from '@main/decorators/service.decorator';\nimport { BehaviorSubject } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\n@Service()\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  constructor() {}\n\n  public snackbars$ = new BehaviorSubject>(new Map());\n\n  public show(message: string, color: 'gray' | 'green' = 'gray', duration: number = 4000) {\n    const data = { message, duration, color };\n    const uid = uuid();\n\n    const map = this.snackbars$.value;\n    map.set(uid, data);\n\n    this.snackbars$.next(map);\n  }\n\n  public close(uid: string) {\n    const map = this.snackbars$.value;\n    map.delete(uid);\n  }\n\n  public closeAll() {\n    this.snackbars$.next(new Map());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Status.html":{"url":"interfaces/Status.html","title":"interface - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/status.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Task status/column interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            begin\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            final\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        begin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        begin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status begin (used to determine if the task is in progress or not). If begin is true,\nthe work on the task does not started yet.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         color\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         color\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status color (used to display as the background of the labels)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        final\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        final:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status final (used to determine if the task is done or not)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status id (unique per database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status name (Header displayed in labels or on the top of the columns)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { color } from '../../_main/interfaces/color.interface';\nimport { Task } from './task.interface';\n\n/**\n * Task status/column interface\n */\nexport interface Status {\n  /**\n   * Status id (unique per database)\n   */\n  id: number;\n\n  /**\n   * Status name (Header displayed in labels or on the top of the columns)\n   */\n  name: string;\n\n  /**\n   * Status color (used to display as the background of the labels)\n   */\n  color: color;\n\n  /**\n   * Status final (used to determine if the task is done or not)\n   */\n  final: boolean;\n\n  /**\n   * Status begin (used to determine if the task is in progress or not). If begin is true,\n   * the work on the task does not started yet.\n   */\n  begin: boolean;\n}\n\n/**\n * Status with task interface - status column with tasks\n */\nexport interface StatusWithTasks extends Status {\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/StatusColorPipe.html":{"url":"pipes/StatusColorPipe.html","title":"pipe - StatusColorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StatusColorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/status-color.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        statusColor\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value:  | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/status-color.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                             | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Status } from '@tasks/interfaces/status.interface';\n\n@Pipe({\n  name: 'statusColor',\n})\nexport class StatusColorPipe implements PipeTransform {\n  transform(value: Status['name'] | undefined): any {\n    switch (value) {\n      case 'TO DO':\n      case 'To Do':\n        return '#4A5465';\n      case 'IN PROGRESS':\n      case 'In Progress':\n        return '#f39c12';\n      case 'DONE':\n      case 'Done':\n        return '#2ECC71';\n      default:\n        return '#4A5465';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusLabelComponent.html":{"url":"components/StatusLabelComponent.html","title":"component - StatusLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatusLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/status-label/status-label.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NgControl, useClass: TestNgControl }\n                \n            \n\n\n            \n                selector\n                app-status-label\n            \n\n            \n                styleUrls\n                ./status-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./status-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                isOpen$\n                            \n                            \n                                    Public\n                                    \n                                ngControl\n                            \n                            \n                                overlay\n                            \n                            \n                                    Public\n                                statuses$\n                            \n                            \n                                statusMap\n                            \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                            \n                                statuses\n                            \n                            \n                                statusId\n                            \n                            \n                                taskId\n                            \n                            \n                                variant\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    statuses\n                                \n                                \n                                    isOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statuses\n                    \n                \n                \n                    \n                        Type :         Status[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statusId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        taskId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        variant\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"small\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/components/status-label/status-label.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        isOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('overlay')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statuses$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/status-label/status-label.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        statuses\n                    \n                \n\n\n                \n                    \n                        setstatuses(statuses: Status[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            statuses\n                                                    \n                                                            \n                                                                            Status[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:43\n                                \n                            \n\n                \n                    \n                        setisOpen(val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/tasks/components/status-label/status-label.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { TaskService } from '@tasks/services/task.service';\nimport { TestNgControl } from '@tests/helpers/ng-control-testing-provider.helper';\nimport { BehaviorSubject, filter, fromEvent, take } from 'rxjs';\n\n@Component({\n  selector: 'app-status-label',\n  templateUrl: './status-label.component.html',\n  styleUrls: ['./status-label.component.scss'],\n  providers: [{ provide: NgControl, useClass: TestNgControl }],\n})\nexport class StatusLabelComponent extends ControlAccessor {\n  @Input() variant: 'default' | 'small' = 'default';\n  @Input() projectId!: number;\n  @Input() statusId!: number;\n  @Input() taskId?: number;\n  @Input() set statuses(statuses: Status[]) {\n    this.statuses$.next(statuses);\n    this.statusMap = statuses.reduce((acc, status) => {\n      acc.set(status.id, status);\n      return acc;\n    }, new Map());\n  }\n\n  statusMap = new Map();\n\n  constructor(public override ngControl: NgControl, private taskService: TaskService) {\n    super(ngControl);\n  }\n\n  @ViewChild('overlay') overlay!: ElementRef;\n\n  public statuses$ = new BehaviorSubject([]);\n  public readonly isOpen$ = new BehaviorSubject(false);\n\n  public set isOpen(val: boolean) {\n    this.isOpen$.next(val);\n  }\n\n  public get isOpen() {\n    return this.isOpen$.value;\n  }\n\n  public open() {\n    setTimeout(() => {\n      fromEvent(document, 'click')\n        .pipe(\n          take(1),\n          filter((e) => !this.overlay?.nativeElement.contains(e.target as Node)),\n        )\n        .subscribe(() => this.close());\n      this.isOpen$.next(true);\n    });\n  }\n\n  public close() {\n    this.isOpen$.next(false);\n  }\n\n  public toggle() {\n    if (this.isOpen) {\n      return this.close();\n    }\n    return this.open();\n  }\n\n  public select(status: Status) {\n    if (this.taskId && this.projectId)\n      this.taskService.changeStatus(status.id, this.taskId, this.projectId).subscribe(() => {\n        this.close();\n        location.reload();\n      });\n  }\n}\n\n    \n\n    \n        \n\n  {{ statusMap.get(statusId)?.name }}\n\n\n\n  \n    \n      {{ status.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./status-label.component.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  width: 100%;\n  padding: 0 1rem;\n  margin: 0 1rem;\n}\n\n.status {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  max-width: 250px;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-secondary-400);\n  border-radius: var(--border-radius);\n  text-transform: uppercase;\n\n  &.small {\n    width: auto;\n    height: auto;\n    padding: 0.25rem 0.75rem;\n  }\n}\n\n.statuses-overlay {\n  padding: 1rem;\n  padding: 0.5rem 0;\n  background-color: var(--color-secondary-500);\n  border-radius: var(--border-radius);\n\n  li {\n    display: flex;\n    align-items: center;\n    padding: 0.5rem 1rem;\n    background-color: var(--color-secondary-500);\n    color: var(--color-text);\n    cursor: pointer;\n    transition: background-color 0.4s ease;\n\n    &:hover {\n      background-color: var(--color-secondary-400);\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ statusMap.get(statusId)?.name }}            {{ status.name }}      '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatusLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusService.html":{"url":"injectables/StatusService.html","title":"injectable - StatusService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/services/status.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                listWithTasks\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, taskService: TaskService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/services/status.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        board\n                        \n                    \n                \n            \n            \n                \n                    \n                    board(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:39\n                \n            \n\n\n            \n                \n                    Creates new status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the created status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:59\n                \n            \n\n\n            \n                \n                    Deletes status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(projectId: number, statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:29\n                \n            \n\n\n            \n                \n                    Get status information\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to get status\n\n                                    \n                                \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status id needed to get status information\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:19\n                \n            \n\n\n            \n                \n                    Get list of statuses\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable with list of statuses\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        listWithTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    listWithTasks(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(projectId: number, status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/status.service.ts:49\n                \n            \n\n\n            \n                \n                    Updates status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create status\n\n                                    \n                                \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the updated status\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Task } from '@tasks/interfaces/task.interface';\nimport { combineLatest, map, Observable } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Status, StatusWithTasks } from '../interfaces/status.interface';\nimport { TaskService } from './task.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StatusService {\n  constructor(private apiService: ApiService, private taskService: TaskService) {}\n\n  /**\n   * Get list of statuses\n   * @param projectId Project id needed to create status\n   * @returns Request observable with list of statuses\n   */\n  public list(projectId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/status/`);\n  }\n\n  /**\n   * Get status information\n   * @param statusId Status id needed to get status information\n   * @param projectId Project id needed to get status\n   * @returns Request observable with the status\n   */\n  public get(projectId: number, statusId: number): Observable {\n    return this.apiService.get(`/project/${projectId}/status/${statusId}`);\n  }\n\n  /**\n   * Creates new status\n   * @param status Status to create\n   * @param projectId Project id needed to create status\n   * @returns Request observable with the created status\n   */\n  public create(projectId: number, status: Status): Observable {\n    return this.apiService.post(`/project/${projectId}/status/`, { body: status });\n  }\n\n  /**\n   * Updates status\n   * @param status Status to update\n   * @param projectId Project id needed to create status\n   * @returns Request observable with the updated status\n   */\n  public update(projectId: number, status: Status): Observable {\n    return this.apiService.put(`/project/${projectId}/status/${status.id}`, { body: status });\n  }\n\n  /**\n   * Deletes status\n   * @param status Status id to delete\n   * @param projectId Project id needed to create status\n   * @returns Request observable\n   */\n  public delete(projectId: number, status: Status): Observable {\n    return this.apiService.delete(`/project/${projectId}/status/${status.id}`);\n  }\n\n  public listWithTasks(projectId: number): Observable {\n    return combineLatest([this.list(projectId), this.taskService.list(projectId)]).pipe(\n      map(([statuses, tasks]) => {\n        statuses.forEach((status) => {\n          (status as StatusWithTasks).tasks = tasks.filter((task) => task.statusId === status.id);\n        });\n        return statuses as StatusWithTasks[];\n      }),\n    );\n  }\n\n  public board(projectId: number): Observable {\n    return combineLatest([this.list(projectId), this.taskService.list(projectId)]).pipe(\n      map(([statuses, tasks]) => {\n        const board: [Task | string, StatusWithTasks[]][] = [];\n        const OTHER = ['OTHER', statuses.map((s) => ({ ...s, tasks: [] }))] as [\n          string,\n          StatusWithTasks[],\n        ];\n\n        for (const task of tasks) {\n          if (task.subTasks?.length) {\n            const statusesWithSubtasks = statuses.map((status) => ({\n              ...status,\n              tasks: task.subTasks?.filter((subtask) => subtask.statusId === status.id) || [],\n            }));\n            board.push([task, statusesWithSubtasks]);\n          } else {\n            let status = OTHER[1].find((status) => status.id === task.statusId)!;\n            if (!status.tasks) {\n              status.tasks = [];\n            }\n            status.tasks.push(task);\n          }\n        }\n\n        board.push(OTHER);\n        return board;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StatusWithTasks.html":{"url":"interfaces/StatusWithTasks.html","title":"interface - StatusWithTasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StatusWithTasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/status.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Status with task interface - status column with tasks\n\n            \n\n            \n                Extends\n            \n            \n                        Status\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tasks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { color } from '../../_main/interfaces/color.interface';\nimport { Task } from './task.interface';\n\n/**\n * Task status/column interface\n */\nexport interface Status {\n  /**\n   * Status id (unique per database)\n   */\n  id: number;\n\n  /**\n   * Status name (Header displayed in labels or on the top of the columns)\n   */\n  name: string;\n\n  /**\n   * Status color (used to display as the background of the labels)\n   */\n  color: color;\n\n  /**\n   * Status final (used to determine if the task is done or not)\n   */\n  final: boolean;\n\n  /**\n   * Status begin (used to determine if the task is in progress or not). If begin is true,\n   * the work on the task does not started yet.\n   */\n  begin: boolean;\n}\n\n/**\n * Status with task interface - status column with tasks\n */\nexport interface StatusWithTasks extends Status {\n  tasks: Task[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/task.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Project task interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            assigneeId\n                                        \n                                \n                                \n                                        \n                                            deadline\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            estimatedDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mergedPullList\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parentTaskId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pull\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subTasks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assigneeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assigneeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional user id who is assigned to task\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deadline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deadline:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task deadline to be completed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task description\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estimatedDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estimatedDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task estimated date to work on it\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task id (unique per project)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional link to the GitHub issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mergedPullList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mergedPullList:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional merged pull requests list\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Task name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentTaskId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentTaskId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Parent task id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pull\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pull:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional link to the GitHub pull request\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Status id (unique per database)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subTasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subTasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of subtasks\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\n\n/**\n * Project task interface\n */\nexport interface Task {\n  /**\n   * Task id (unique per project)\n   */\n  id: number;\n\n  /**\n   * Task name\n   */\n  name: string;\n\n  /**\n   * Task description\n   */\n  description: string;\n\n  /**\n   * Task deadline to be completed\n   */\n  deadline: Date;\n\n  /**\n   * Task estimated date to work on it\n   */\n  estimatedDate: Date;\n\n  /**\n   * Status id (unique per database)\n   */\n  statusId?: number;\n\n  /**\n   * Parent task id\n   */\n  parentTaskId?: number;\n\n  /**\n   * List of subtasks\n   */\n  subTasks?: Task[];\n\n  /**\n   * Optional link to the GitHub issue\n   */\n  issue?: string;\n\n  /**\n   * Optional link to the GitHub pull request\n   */\n  pull?: string;\n\n  /**\n   * Optional merged pull requests list\n   */\n  mergedPullList?: String[];\n\n  /**\n   * Optional user id who is assigned to task\n   */\n  assigneeId?: number;\n}\n\n/**\n * Extended project task interface\n */\nexport interface TaskWithAdditionalData extends Omit {\n  /**\n   * Project identifier\n   */\n  projectId: number;\n\n  /**\n   * Workspace identifier\n   */\n  workspaceId: string;\n\n  /**\n   * Boolean to determine if task is connected to GitHub issue\n   */\n  connectWithIssueOnGitHub: boolean;\n\n  /**\n   * Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n   */\n  issueAttachGithub: boolean;\n\n  /**\n   * Boolean to determine if task is connected to GitHub pull request\n   */\n  connectWithPullRequestOnGitHub: boolean;\n\n  /**\n   * GitHub pull to which the task is connected to\n   */\n  pull: GitPull;\n\n  /**\n   * GitHub issue to which the task is connected to\n   */\n  issue: GitIssue;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDialog.html":{"url":"components/TaskDialog.html","title":"component - TaskDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/dialogs/task/task.dialog.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-dialog\n            \n\n            \n                styleUrls\n                ./task.dialog.scss\n            \n\n\n\n            \n                templateUrl\n                ./task.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                isGitHubIntegrationAvailable\n                            \n                            \n                                    Public\n                                issueList$\n                            \n                            \n                                    Public\n                                projectList$\n                            \n                            \n                                    Public\n                                pullList$\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                subTaskTypes\n                            \n                            \n                                TaskDialogVariant\n                            \n                            \n                                    Public\n                                taskPriorities\n                            \n                            \n                                    Public\n                                taskTypes\n                            \n                            \n                                    Public\n                                workspaceList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                clearGitHubIntegrationFields\n                            \n                            \n                                confirm\n                            \n                            \n                                loadParamsFromUrl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onProjectIdChange\n                            \n                            \n                                onWorkspaceIdChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: TaskDialogData, dialogRef: MatDialogRef, statusService: StatusService, workspaceService: WorkspaceService, gitIntegrationService: GitIntegrationService, routerExtensions: RouterExtensionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        TaskDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerExtensions\n                                                  \n                                                        \n                                                                        RouterExtensionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearGitHubIntegrationFields\n                        \n                    \n                \n            \n            \n                \nclearGitHubIntegrationFields()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadParamsFromUrl\n                        \n                    \n                \n            \n            \n                \nloadParamsFromUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onProjectIdChange\n                        \n                    \n                \n            \n            \n                \nonProjectIdChange(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWorkspaceIdChange\n                        \n                    \n                \n            \n            \n                \nonWorkspaceIdChange(workspaceId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/dialogs/task/task.dialog.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspaceId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(TaskType.TASK, [requiredValidator()]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(this.taskPriorities[2], [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n\n    // GitHub issue integration fields\n    connectWithIssueOnGitHub: new FormControl(false),\n    issueAttachGithub: new FormControl(false),\n    issue: new FormControl(null),\n\n    // Github pull requests integration fields\n    connectWithPullRequestOnGitHub: new FormControl(false),\n    pull: new FormControl(null),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isGitHubIntegrationAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pullList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        subTaskTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Enum.entries(SubTaskType)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TaskDialogVariant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TaskDialogVariant\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskPriorities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(TaskPriority)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskTypes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Enum.entries(TaskType)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/dialogs/task/task.dialog.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { Enum } from '@main/classes/enum.class';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { TaskPriority } from '@tasks/enums/task-priority.enum';\nimport { SubTaskType, TaskType } from '@tasks/enums/task-type.enum';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\nimport { Task } from '../../interfaces/task.interface';\n\nexport enum TaskDialogVariant {\n  CREATE = 'create',\n  EDIT = 'edit',\n}\n\nexport interface TaskDialogData {\n  workspaceId: number;\n  projectId?: number;\n  variant: TaskDialogVariant;\n  task?: Partial;\n  subtask?: boolean;\n}\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task.dialog.html',\n  styleUrls: ['./task.dialog.scss'],\n})\nexport class TaskDialog implements OnInit {\n  TaskDialogVariant = TaskDialogVariant;\n\n  public taskTypes = Enum.entries(TaskType);\n  public subTaskTypes = Enum.entries(SubTaskType);\n  public taskPriorities = Object.values(TaskPriority);\n\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n  public projectList$: Observable = new BehaviorSubject([]);\n  public issueList$!: Observable;\n  public pullList$!: Observable;\n\n  public isGitHubIntegrationAvailable: boolean = false;\n\n  public form = new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(TaskType.TASK, [requiredValidator()]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(this.taskPriorities[2], [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n\n    // GitHub issue integration fields\n    connectWithIssueOnGitHub: new FormControl(false),\n    issueAttachGithub: new FormControl(false),\n    issue: new FormControl(null),\n\n    // Github pull requests integration fields\n    connectWithPullRequestOnGitHub: new FormControl(false),\n    pull: new FormControl(null),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TaskDialogData,\n    private dialogRef: MatDialogRef,\n    private statusService: StatusService,\n    private workspaceService: WorkspaceService,\n    private gitIntegrationService: GitIntegrationService,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId, task } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n    if (task) this.form.patchValue(task);\n\n    this.workspaceList$ = this.workspaceService.list();\n\n    this.form.get('workspaceId')?.valueChanges.subscribe(this.onWorkspaceIdChange.bind(this));\n    this.form.get('projectId')?.valueChanges.subscribe(this.onProjectIdChange.bind(this));\n\n    if (workspaceId) {\n      this.onWorkspaceIdChange(workspaceId);\n    }\n\n    if (projectId) {\n      this.onProjectIdChange(projectId);\n    }\n  }\n\n  onWorkspaceIdChange(workspaceId: number) {\n    this.projectList$ = this.projectList$ = this.workspaceService\n      .get(workspaceId)\n      .pipe(map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)));\n  }\n\n  onProjectIdChange(projectId: number) {\n    this.statusList$ = this.statusService.list(projectId);\n    this.clearGitHubIntegrationFields();\n\n    this.statusList$.subscribe((statuses) => {\n      const statusId = statuses.find((status) => status.begin)?.id;\n\n      if (!statusId) return;\n\n      this.form.patchValue({ statusId });\n    });\n\n    this.gitIntegrationService.hasGitHubIntegration(projectId!).subscribe((value) => {\n      this.isGitHubIntegrationAvailable = value;\n\n      if (this.isGitHubIntegrationAvailable) {\n        this.issueList$ = this.gitIntegrationService.gitHubIssueList(projectId);\n        this.pullList$ = this.gitIntegrationService.gitHubPullList(projectId);\n      } else {\n        this.issueList$ = new BehaviorSubject([]);\n        this.pullList$ = new BehaviorSubject([]);\n      }\n    });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  clearGitHubIntegrationFields() {\n    this.form.patchValue({\n      issueNumberGitHub: null,\n      issueAttachGithub: false,\n      connectWithIssueOnGitHub: false,\n    });\n  }\n\n  confirm() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    if (formValues.connectWithIssueOnGitHub && !formValues.issueAttachGithub) {\n      formValues.createIssue = true;\n    } else {\n      formValues.createIssue = false;\n    }\n\n    console.log(formValues);\n\n    this.dialogRef.close(formValues);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        Edit task: {{ data.task?.name }}\nCreate new task\nCreate new subtask\n\n  \n\n    \n    \n      {{ workspace.name }}\n      \n    \n\n    \n    \n      \n        {{project.name}}\n        \n      \n    \n\n    \n    \n      {{ type[0] | taskType\n        }}\n      \n    \n\n    \n    \n    \n\n    \n    \n\n    \n    \n      {{ status.name }}\n      \n    \n\n    \n    \n      {{\n        priority | taskPriority }}\n    \n\n    \n    \n    \n\n    \n    \n    \n\n    \n    Create or attach\n      GitHub issue simultaneously\n\n    \n      \n        Create\n        Attach\n      \n\n      \n        {{issue.title}}\n      \n    \n\n    \n    \n      Connect with GitHub pull request\n    \n\n    \n      \n        {{pullRequest.title}}\n        \n      \n    \n\n  \n\n\n  Cancel\n  Create\n  \n  Save changes\n  \n\n\n    \n\n    \n                \n                    ./task.dialog.scss\n                \n                form {\n  > * {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Edit task: {{ data.task?.name }}Create new taskCreate new subtask                {{ workspace.name }}                                {{project.name}}                                {{ type[0] | taskType        }}                                            {{ status.name }}                        {{        priority | taskPriority }}                                    Create or attach      GitHub issue simultaneously                  Create        Attach                    {{issue.title}}                        Connect with GitHub pull request                      {{pullRequest.title}}                      Cancel  Create    Save changes  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskDialogData.html":{"url":"interfaces/TaskDialogData.html","title":"interface - TaskDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/dialogs/task/task.dialog.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            projectId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subtask\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            task\n                                        \n                                \n                                \n                                        \n                                            variant\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtask\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtask:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Partial\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variant:         TaskDialogVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TaskDialogVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { Workspace } from '@dashboard/interfaces/workspace.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { Enum } from '@main/classes/enum.class';\nimport { RouterExtensionsService } from '@main/services/router-extensions.service';\nimport { TaskPriority } from '@tasks/enums/task-priority.enum';\nimport { SubTaskType, TaskType } from '@tasks/enums/task-type.enum';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { requiredValidator } from '../../../_main/validators/required.validator';\nimport { Task } from '../../interfaces/task.interface';\n\nexport enum TaskDialogVariant {\n  CREATE = 'create',\n  EDIT = 'edit',\n}\n\nexport interface TaskDialogData {\n  workspaceId: number;\n  projectId?: number;\n  variant: TaskDialogVariant;\n  task?: Partial;\n  subtask?: boolean;\n}\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task.dialog.html',\n  styleUrls: ['./task.dialog.scss'],\n})\nexport class TaskDialog implements OnInit {\n  TaskDialogVariant = TaskDialogVariant;\n\n  public taskTypes = Enum.entries(TaskType);\n  public subTaskTypes = Enum.entries(SubTaskType);\n  public taskPriorities = Object.values(TaskPriority);\n\n  public statusList$!: Observable;\n  public workspaceList$!: Observable;\n  public projectList$: Observable = new BehaviorSubject([]);\n  public issueList$!: Observable;\n  public pullList$!: Observable;\n\n  public isGitHubIntegrationAvailable: boolean = false;\n\n  public form = new FormGroup({\n    id: new FormControl(null),\n    parentTaskId: new FormControl(null),\n    type: new FormControl(TaskType.TASK, [requiredValidator()]),\n    name: new FormControl('', [requiredValidator()]),\n    statusId: new FormControl(null, [requiredValidator()]),\n    projectId: new FormControl(null, [requiredValidator()]),\n    workspaceId: new FormControl(null, [requiredValidator()]),\n    description: new FormControl(''),\n    priority: new FormControl(this.taskPriorities[2], [requiredValidator()]),\n    deadline: new FormControl(null),\n    estimatedDate: new FormControl(null),\n\n    // GitHub issue integration fields\n    connectWithIssueOnGitHub: new FormControl(false),\n    issueAttachGithub: new FormControl(false),\n    issue: new FormControl(null),\n\n    // Github pull requests integration fields\n    connectWithPullRequestOnGitHub: new FormControl(false),\n    pull: new FormControl(null),\n  });\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: TaskDialogData,\n    private dialogRef: MatDialogRef,\n    private statusService: StatusService,\n    private workspaceService: WorkspaceService,\n    private gitIntegrationService: GitIntegrationService,\n    private routerExtensions: RouterExtensionsService,\n  ) {}\n\n  ngOnInit() {\n    this.loadParamsFromUrl();\n\n    const { workspaceId, projectId, task } = this.data;\n    this.form.patchValue({ workspaceId, projectId });\n    if (task) this.form.patchValue(task);\n\n    this.workspaceList$ = this.workspaceService.list();\n\n    this.form.get('workspaceId')?.valueChanges.subscribe(this.onWorkspaceIdChange.bind(this));\n    this.form.get('projectId')?.valueChanges.subscribe(this.onProjectIdChange.bind(this));\n\n    if (workspaceId) {\n      this.onWorkspaceIdChange(workspaceId);\n    }\n\n    if (projectId) {\n      this.onProjectIdChange(projectId);\n    }\n  }\n\n  onWorkspaceIdChange(workspaceId: number) {\n    this.projectList$ = this.projectList$ = this.workspaceService\n      .get(workspaceId)\n      .pipe(map((workspace) => workspace.projectsWithPrivileges.map((project) => project.project)));\n  }\n\n  onProjectIdChange(projectId: number) {\n    this.statusList$ = this.statusService.list(projectId);\n    this.clearGitHubIntegrationFields();\n\n    this.statusList$.subscribe((statuses) => {\n      const statusId = statuses.find((status) => status.begin)?.id;\n\n      if (!statusId) return;\n\n      this.form.patchValue({ statusId });\n    });\n\n    this.gitIntegrationService.hasGitHubIntegration(projectId!).subscribe((value) => {\n      this.isGitHubIntegrationAvailable = value;\n\n      if (this.isGitHubIntegrationAvailable) {\n        this.issueList$ = this.gitIntegrationService.gitHubIssueList(projectId);\n        this.pullList$ = this.gitIntegrationService.gitHubPullList(projectId);\n      } else {\n        this.issueList$ = new BehaviorSubject([]);\n        this.pullList$ = new BehaviorSubject([]);\n      }\n    });\n  }\n\n  loadParamsFromUrl() {\n    const { workspaceId, projectId } = this.routerExtensions.snapshot.params;\n    this.data.workspaceId = this.data.workspaceId || Number(workspaceId);\n    this.data.projectId = this.data.projectId || Number(projectId);\n  }\n\n  clearGitHubIntegrationFields() {\n    this.form.patchValue({\n      issueNumberGitHub: null,\n      issueAttachGithub: false,\n      connectWithIssueOnGitHub: false,\n    });\n  }\n\n  confirm() {\n    const formValues = this.form.value;\n\n    this.form.markAllAsTouched();\n    this.form.updateValueAndValidity();\n\n    if (this.form.invalid) return;\n\n    if (formValues.connectWithIssueOnGitHub && !formValues.issueAttachGithub) {\n      formValues.createIssue = true;\n    } else {\n      formValues.createIssue = false;\n    }\n\n    console.log(formValues);\n\n    this.dialogRef.close(formValues);\n  }\n\n  cancel() {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskListPage.html":{"url":"components/TaskListPage.html","title":"component - TaskListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/pages/task-list/task-list.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-list\n            \n\n            \n                styleUrls\n                ./task-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./task-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assigneeControl\n                            \n                            \n                                expandedSubtasks\n                            \n                            \n                                faCheck\n                            \n                            \n                                faChevronRight\n                            \n                            \n                                faCodeCommit\n                            \n                            \n                                faCodePullRequest\n                            \n                            \n                                faPlus\n                            \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Public\n                                filtersControl\n                            \n                            \n                                isSubtasksRow\n                            \n                            \n                                    Public\n                                members$\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                statusList\n                            \n                            \n                                    Public\n                                statusList$\n                            \n                            \n                                    Public\n                                taskList$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDate\n                            \n                            \n                                createSubtask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                editTask\n                            \n                            \n                                getStatus\n                            \n                            \n                                    Public\n                                getSubtasksContainerHeight\n                            \n                            \n                                initAssigneeChanging\n                            \n                            \n                                populateSubtasks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, taskService: TaskService, statusService: StatusService, projectService: ProjectService, dialogService: DialogService, memberService: MemberService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDate\n                        \n                    \n                \n            \n            \n                \nchangeDate(date?: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubtask\n                        \n                    \n                \n            \n            \n                \ncreateSubtask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:123\n                \n            \n\n\n            \n                \n                    TODO: Move this method to service\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTask\n                        \n                    \n                \n            \n            \n                \neditTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus(statusId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSubtasksContainerHeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubtasksContainerHeight(taskId: number, element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initAssigneeChanging\n                        \n                    \n                \n            \n            \n                \ninitAssigneeChanging()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populateSubtasks\n                        \n                    \n                \n            \n            \n                \npopulateSubtasks(taskList: Task[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pages/task-list/task-list.page.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskList\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        assigneeControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandedSubtasks\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ESet()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faChevronRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faChevronRight\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodeCommit\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodeCommit\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCodePullRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCodePullRequest\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filtersControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubtasksRow\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        members$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        taskList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/pages/task-list/task-list.page.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from '@auth/services/user.service';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport {\n  faCheck,\n  faChevronRight,\n  faCodeCommit,\n  faCodePullRequest,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { ESet } from '@main/classes/e-set.class';\nimport { Filters } from '@main/classes/filters.class';\nimport { Filter } from '@main/interfaces/filters.interface';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskDialog, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { Status } from '@tasks/interfaces/status.interface';\nimport { Task } from '@tasks/interfaces/task.interface';\nimport { StatusService } from '@tasks/services/status.service';\nimport { TaskService } from '@tasks/services/task.service';\nimport * as dayjs from 'dayjs';\nimport { map, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.page.html',\n  styleUrls: ['./task-list.page.scss'],\n})\nexport class TaskListPage {\n  faPlus = faPlus;\n  faChevronRight = faChevronRight;\n  faCodeCommit = faCodeCommit;\n  faCodePullRequest = faCodePullRequest;\n  faCheck = faCheck;\n\n  public projectId!: number;\n\n  public taskList$!: Observable;\n  public statusList$!: Observable;\n  public project$!: Observable;\n  public members$!: Observable>;\n  public assigneeControl = new FormControl(null);\n\n  public statusList: Status[] = [];\n\n  public filters: Filter[] = [];\n  public filtersControl = new FormControl();\n\n  isSubtasksRow = (i: number, row: Object) => row.hasOwnProperty('withSubtasks');\n  expandedSubtasks = new ESet();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private taskService: TaskService,\n    private statusService: StatusService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private memberService: MemberService,\n    private userService: UserService,\n  ) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.projectId = projectId;\n    this.project$ = this.projectService.get(projectId);\n\n    /**\n     * TODO: Use method from service\n     */\n    this.members$ = this.memberService.list(projectId).pipe(\n      map((members) =>\n        members.reduce((acc: Map, member: ProjectMember) => {\n          acc.set(member.user.id, member);\n          return acc;\n        }, new Map()),\n      ),\n    );\n    this.taskList$ = this.taskService.list(projectId);\n    this.statusList$ = this.statusService.list(projectId);\n    this.statusList$.subscribe((list) => {\n      this.statusList = list;\n    });\n    this.userService.getMyself().subscribe((user) => {\n      this.filters.push(Filters.ONLY_MY_TASKS(user.id));\n    });\n\n    this.filtersControl.valueChanges.subscribe((filters) => {\n      this.taskList$ = this.taskService.list(projectId, filters);\n    });\n  }\n\n  getStatus(statusId: number) {\n    return this.statusList.find((status) => status.id === statusId)?.name;\n  }\n\n  changeDate(date?: Date) {\n    if (!date) return '-';\n    let sessionDate = dayjs(date);\n    return sessionDate.format('YYYY-MM-DD, hh:mm A');\n  }\n\n  populateSubtasks(taskList: Task[]) {\n    const populatedTasks = [];\n    const tasks = taskList.filter((task) => !task.parentTaskId);\n\n    for (const task of tasks) {\n      populatedTasks.push(task);\n\n      if (task.subTasks && task.subTasks.length) {\n        populatedTasks.push({ ...task, withSubtasks: true });\n      }\n    }\n\n    return populatedTasks;\n  }\n\n  /**\n   * TODO: Move this method to service\n   */\n  createSubtask(task: Task) {\n    this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n        projectId: this.projectId,\n        subtask: true,\n        task: {\n          parentTaskId: task.id,\n        },\n      })\n      .afterClosed()\n      .subscribe((task) => {\n        if (!task) return;\n\n        this.taskService.create(this.projectId, task).subscribe(() => {\n          location.reload();\n        });\n      });\n  }\n\n  editTask(task: Task) {\n    this.taskService.openEditTaskDialog(this.projectId, task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  deleteTask(task: Task) {\n    this.taskService.deleteWithConfirmation(this.projectId, task).subscribe(() => {\n      location.reload();\n    });\n  }\n\n  initAssigneeChanging() {\n    this.assigneeControl.valueChanges.subscribe((assignee) => {});\n  }\n\n  public getSubtasksContainerHeight(taskId: number, element: HTMLElement) {\n    return `${Number(this.expandedSubtasks.has(taskId)) * element.scrollHeight}px`;\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n  \n    Title\n    Status\n    Assignee\n    Deadline\n    \n      \n    \n  \n\n  \n  \n    \n\n      \n      \n        \n          \n          #{{ task.id }}\n          {{ task.name }}\n          \n            \n          \n          \n            \n          \n          \n            \n            \n          \n        \n      \n\n      \n      \n        \n        \n      \n\n      \n      \n        \n        \n      \n\n      \n      {{changeDate(task.deadline)}}\n\n      \n      \n        \n          \n        \n        \n          \n            Edit task\n          \n          \n            Create subtask\n          \n          \n            Delete task\n          \n        \n      \n    \n    \n      \n\n        \n        \n          \n            #{{ subtask.id }}\n            {{ subtask.name }}\n            \n              \n            \n            \n              \n            \n            \n              \n              \n            \n          \n        \n\n        \n        \n          \n        \n\n        \n        \n          \n          \n        \n\n        \n        {{changeDate(subtask.deadline)}}\n\n        \n        \n          \n            \n          \n          \n            \n              Edit task\n            \n            \n              Create subtask\n            \n            \n              Delete task\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./task-list.page.scss\n                \n                @import '../../../../styles/typography';\n\n:host {\n  display: block;\n  padding: 2rem;\n}\n\n.table {\n  width: 100%;\n  padding-left: 10px;\n}\n\n.table .row .cell .status {\n  @include typo-title;\n\n  display: flex;\n  width: 100%;\n  max-width: 250px;\n  height: 100%;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  padding: 0 1rem;\n  margin: 0 1rem;\n  background-color: var(--color-secondary-400);\n  border-radius: var(--border-radius);\n}\n\n.task-title,\n.subtask-title {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  padding-left: 0.5rem;\n\n  .task-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .task-property {\n    display: flex;\n    margin-left: 1rem;\n    cursor: pointer;\n    opacity: 0.5;\n    transition: opacity 0.2s ease;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    .check {\n      margin-left: 5px;\n      color: #2ecc71;\n    }\n  }\n\n  &>app-icon {\n    margin-right: 1rem;\n    opacity: 0.5;\n    transition: transform .2s ease;\n  }\n}\n\n.subtasks {\n  position: relative;\n  overflow: hidden;\n  max-height: 0;\n  padding-left: 4rem;\n  transition: max-height 0.4s ease;\n\n  .subtask-title {\n    display: flex;\n  }\n\n  .subtask-id {\n    display: block;\n    margin-right: 1rem;\n    opacity: 0.5;\n  }\n\n  .row {\n    position: relative;\n\n    &::before,\n    &::after {\n      position: absolute;\n      top: 0;\n      left: -2.5rem;\n      display: block;\n      content: '';\n    }\n\n    &:last-child {\n      margin-bottom: 1rem;\n    }\n\n    &:not(:last-child)::before {\n      width: 2px;\n      height: calc(100% + 1rem);\n      background-color: var(--color-secondary-400);\n    }\n\n    &::after {\n      width: 29px;\n      height: 29px;\n      border: 2px solid var(--color-secondary-400);\n      border-top-width: 0;\n      border-right-width: 0;\n      border-bottom-left-radius: 50%;\n    }\n  }\n}\n\n.row {\n  cursor: pointer;\n\n  &.expanded {\n    .task-title>app-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Title    Status    Assignee    Deadline                                                                #{{ task.id }}          {{ task.name }}                                                                                                                                                                                                          {{changeDate(task.deadline)}}                                                                    Edit task                                Create subtask                                Delete task                                                                            #{{ subtask.id }}            {{ subtask.name }}                                                                                                                                                                                                                                                {{changeDate(subtask.deadline)}}                                                                                    Edit task                                      Create subtask                                      Delete task                                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaskListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskPriorityIconPipe.html":{"url":"pipes/TaskPriorityIconPipe.html","title":"pipe - TaskPriorityIconPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskPriorityIconPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-priority-icon.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskPriorityIcon\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-priority-icon.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskPriorityIcon',\n})\nexport class TaskPriorityIconPipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'lowest':\n        return 'cuPriorityLowest';\n      case 'low':\n        return 'cuPriorityLow';\n      case 'medium':\n        return 'cuPriorityMedium';\n      case 'high':\n        return 'cuPriorityHigh';\n      case 'highest':\n        return 'cuPriorityHighest';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskPriorityPipe.html":{"url":"pipes/TaskPriorityPipe.html","title":"pipe - TaskPriorityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskPriorityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-priority.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskPriority\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-priority.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskPriority',\n})\nexport class TaskPriorityPipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'lowest':\n        return $localize`Lowest`;\n      case 'low':\n        return $localize`Low`;\n      case 'medium':\n        return $localize`Medium`;\n      case 'high':\n        return $localize`High`;\n      case 'highest':\n        return $localize`Highest`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/services/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assign\n                            \n                            \n                                    Public\n                                changeStatus\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                deleteWithConfirmation\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                openCreateNewTaskDialog\n                            \n                            \n                                    Public\n                                openCreateSubtaskDialog\n                            \n                            \n                                    Public\n                                openEditTaskDialog\n                            \n                            \n                                    Public\n                                schedule\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, gitIntegrationService: GitIntegrationService, dialogService: DialogService, projectService: ProjectService, memberService: MemberService, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/services/task.service.ts:33\n                            \n                        \n\n                \n                    \n                            Default constructor with dependency injection.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ApiService\n\n                                                        \n                                                \n                                                \n                                                        gitIntegrationService\n                                                  \n                                                        \n                                                                        GitIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        memberService\n                                                  \n                                                        \n                                                                        MemberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        assign\n                        \n                    \n                \n            \n            \n                \n                    \n                    assign(userId: number | null, taskId: number, projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:269\n                \n            \n\n\n            \n                \n                    Assign task to specific user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user to assign task to (if null, task will be unassigned)\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task to assign\n\n                                    \n                                \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id needed to assign task\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Updated task object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeStatus(statusId: number, taskId: number, projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:282\n                \n            \n\n\n            \n                \n                    Change status of specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    statusId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        status to change task to\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task to change status of\n\n                                    \n                                \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        project id needed to change status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Updated task object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(projectId: number, task: TaskWithAdditionalData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:74\n                \n            \n\n\n            \n                \n                    Creates new task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to create task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                TaskWithAdditionalData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the created task\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(projectId: number, taskId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:119\n                \n            \n\n\n            \n                \n                    Deletes task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to delete task\n\n                                    \n                                \n                                \n                                    taskId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteWithConfirmation\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteWithConfirmation(projectId: number, task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:129\n                \n            \n\n\n            \n                \n                    Opens dialog to delete specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to delete task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable with true if task was deleted, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(projectId: number, filters?: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:53\n                \n            \n\n\n            \n                \n                    Get list of tasks\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to list all tasks\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with list of tasks\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateNewTaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateNewTaskDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:181\n                \n            \n\n\n            \n                \n                    Opens dialog to create new task\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        created task, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateSubtaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateSubtaskDialog(projectId: number, parentTask: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:204\n                \n            \n\n\n            \n                \n                    Opens dialog to create new subtask\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update subtask\n\n                                    \n                                \n                                \n                                    parentTask\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parent task id to which attach subtask\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        created subtask, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openEditTaskDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openEditTaskDialog(projectId: number, task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:155\n                \n            \n\n\n            \n                \n                    Opens dialog to edit specific task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable with updated task, EMPTY otherwise (when user cancels the dialog)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        schedule\n                        \n                    \n                \n            \n            \n                \n                    \n                    schedule(projectId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:231\n                \n            \n\n\n            \n                \n                    Generates schedule object for specific project\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id to generate schedule from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Schedule object with all tasks\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(projectId: number, task: TaskWithAdditionalData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/services/task.service.ts:98\n                \n            \n\n\n            \n                \n                    Updates task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Project id needed to update task\n\n                                    \n                                \n                                \n                                    task\n                                    \n                                                TaskWithAdditionalData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Task to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable with the updated task\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/services/task.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ProjectMember } from '@dashboard/interfaces/project-member.interface';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { GitIntegrationService } from '@dashboard/services/git-integration.service';\nimport { MemberService } from '@dashboard/services/member.service';\nimport { ProjectService } from '@dashboard/services/project.service';\nimport { AlertDialogVariant } from '@main/dialogs/alert/alert.dialog';\nimport { Filter } from '@main/interfaces/filters.interface';\nimport { applyFilters } from '@main/operators/apply-filters.operator';\nimport { DialogService } from '@main/services/dialog.service';\nimport { SnackbarService } from '@main/services/snackbar.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { Schedule } from '@tasks/interfaces/schedule.interface';\nimport * as dayjs from 'dayjs';\nimport {\n  combineLatest,\n  EMPTY,\n  map,\n  Observable,\n  of,\n  ReplaySubject,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs';\nimport { ApiService } from '../../_main/services/api.service';\nimport { Task, TaskWithAdditionalData } from '../interfaces/task.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  private lists = new Map>();\n\n  /**\n   * Default constructor with dependency injection.\n   * @param apiService ApiService\n   */\n  constructor(\n    private apiService: ApiService,\n    private gitIntegrationService: GitIntegrationService,\n    private dialogService: DialogService,\n    private projectService: ProjectService,\n    private memberService: MemberService,\n    private snackbarService: SnackbarService,\n  ) {}\n\n  /**\n   * Get list of tasks\n   * @param projectId Project id needed to list all tasks\n   * @returns Request observable with list of tasks\n   */\n  public list(projectId: number, filters?: Filter[]): Observable {\n    let subject: ReplaySubject;\n    if (this.lists.has(projectId)) {\n      subject = this.lists.get(projectId)!;\n    } else {\n      subject = new ReplaySubject();\n      this.lists.set(projectId, subject);\n      this.apiService.get(`/project/${projectId}/task`).subscribe((tasks) => {\n        subject.next(tasks);\n      });\n    }\n\n    return subject.pipe(applyFilters(filters));\n  }\n\n  /**\n   * Creates new task\n   * @param task Task to create\n   * @param projectId Project id needed to create task\n   * @returns Request observable with the created task\n   */\n  public create(projectId: number, task: TaskWithAdditionalData): Observable {\n    return this.apiService.post(`/project/${projectId}/task/`, { body: task }).pipe(\n      switchMap((newTask) => {\n        if (task.connectWithPullRequestOnGitHub) {\n          return this.gitIntegrationService.connectGitHubPull(projectId, newTask.id, task.pull);\n        } else return of(newTask);\n      }),\n      switchMap((newTask) => {\n        if (task.connectWithIssueOnGitHub && task.issue) {\n          return this.gitIntegrationService.connectGitHubIssue(projectId, newTask.id, task.issue);\n        } else return of(newTask);\n      }),\n      tap(() => {\n        this.snackbarService.show($localize`Task created successfully!`);\n      }),\n    );\n  }\n\n  /**\n   * Updates task\n   * @param task Task to update\n   * @param projectId Project id needed to update task\n   * @returns Request observable with the updated task\n   */\n  public update(projectId: number, task: TaskWithAdditionalData): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${task.id}`, { body: task }).pipe(\n      switchMap((newTask) => {\n        if (task.connectWithPullRequestOnGitHub) {\n          return this.gitIntegrationService.connectGitHubPull(projectId, newTask.id, task.pull);\n        } else return of(newTask);\n      }),\n      switchMap((newTask) => {\n        if (task.connectWithIssueOnGitHub) {\n          return this.gitIntegrationService.connectGitHubIssue(projectId, newTask.id, task.issue);\n        } else return of(newTask);\n      }),\n    );\n  }\n\n  /**\n   * Deletes task\n   * @param taskId Task id to delete\n   * @param projectId Project id needed to delete task\n   * @returns Request observable\n   */\n  public delete(projectId: number, taskId: number): Observable {\n    return this.apiService.delete(`/project/${projectId}/task/${taskId}`);\n  }\n\n  /**\n   * Opens dialog to delete specific task\n   * @param projectId Project id needed to delete task\n   * @param task Task to delete\n   * @returns Observable with true if task was deleted, EMPTY otherwise (when user cancels the dialog)\n   */\n  public deleteWithConfirmation(projectId: number, task: Task): Observable {\n    return this.dialogService\n      .confirm({\n        title: $localize`Delete task \"${task.name}\"`,\n        message: $localize`Are you sure you want to delete this task \"${task.name}\"?`,\n        confirmText: $localize`Delete`,\n        cancelText: $localize`Cancel`,\n        variant: AlertDialogVariant.IMPORTANT,\n      })\n      .pipe(\n        switchMap((confirmed) => {\n          if (confirmed) {\n            return this.delete(projectId, task.id).pipe(switchMap(() => of(true)));\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to edit specific task\n   * @param projectId Project id needed to update task\n   * @param task Task to update\n   * @returns Observable with updated task, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openEditTaskDialog(projectId: number, task: Task): Observable {\n    return this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.EDIT,\n        projectId,\n        task,\n      })\n      .afterClosed()\n      .pipe(\n        tap((data) => {\n          console.log(data);\n        }),\n        switchMap((updatedTask: any) => {\n          if (updatedTask) {\n            return this.update(projectId, updatedTask);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to create new task\n   * @returns created task, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openCreateNewTaskDialog() {\n    return this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n      } as TaskDialogData)\n      .afterClosed()\n      .pipe(\n        switchMap((task: TaskWithAdditionalData) => {\n          if (task) {\n            return this.create(task.projectId, task);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Opens dialog to create new subtask\n   * @param projectId Project id needed to update subtask\n   * @param parentTask Parent task id to which attach subtask\n   * @returns created subtask, EMPTY otherwise (when user cancels the dialog)\n   */\n  public openCreateSubtaskDialog(projectId: number, parentTask: Task): Observable {\n    return this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n        projectId: projectId,\n        subtask: true,\n        task: {\n          parentTaskId: parentTask.id,\n        },\n      })\n      .afterClosed()\n      .pipe(\n        switchMap((newTask: any) => {\n          if (newTask) {\n            return this.create(projectId, newTask);\n          } else {\n            return EMPTY;\n          }\n        }),\n      );\n  }\n\n  /**\n   * Generates schedule object for specific project\n   * @param projectId Project id to generate schedule from\n   * @returns Schedule object with all tasks\n   */\n  public schedule(projectId: number): Observable {\n    return combineLatest([\n      this.list(projectId).pipe(take(1)),\n      this.memberService.list(projectId).pipe(take(1)),\n    ]).pipe(\n      map(([tasks, members]: [tasks: Task[], members: ProjectMember[]]) => {\n        const schedules = [];\n\n        for (const { user } of members) {\n          schedules.push({ user, tasks: new Map() });\n        }\n\n        for (const task of tasks) {\n          const schedule = schedules.find((s) => s.user.id === task.assigneeId);\n\n          if (!schedule) continue;\n\n          if (task.estimatedDate) {\n            schedule.tasks.set(dayjs(task.estimatedDate).format('YYYY-MM-DD'), task);\n          } else {\n            if (!schedule.tasks.has(null)) schedule.tasks.set(null, []);\n\n            schedule.tasks.get(null).push(task);\n          }\n        }\n\n        return schedules;\n      }),\n    );\n  }\n\n  /**\n   * Assign task to specific user\n   * @param userId user to assign task to (if null, task will be unassigned)\n   * @param taskId task to assign\n   * @param projectId project id needed to assign task\n   * @returns Updated task object\n   */\n  public assign(userId: number | null, taskId: number, projectId: number): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${taskId}`, {\n      body: { assigneeId: userId },\n    });\n  }\n\n  /**\n   * Change status of specific task\n   * @param statusId status to change task to\n   * @param taskId task to change status of\n   * @param projectId project id needed to change status\n   * @returns Updated task object\n   */\n  public changeStatus(statusId: number, taskId: number, projectId: number): Observable {\n    return this.apiService.put(`/project/${projectId}/task/${taskId}`, {\n      body: { statusId },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskTypeIconPipe.html":{"url":"pipes/TaskTypeIconPipe.html","title":"pipe - TaskTypeIconPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskTypeIconPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-type-icon.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskTypeIcon\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type-icon.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskTypeIcon',\n})\nexport class TaskTypeIconPipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'TASK':\n        return 'cuTask';\n      case 'ISSUE':\n        return 'cuIssue';\n      case 'EPIC':\n        return 'cuEpic';\n      case 'USER_STORY':\n        return 'cuUserStory';\n      case 'SUBTASK':\n        return 'cuSubtask';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TaskTypePipe.html":{"url":"pipes/TaskTypePipe.html","title":"pipe - TaskTypePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TaskTypePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/pipes/task-type.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        taskType\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tasks/pipes/task-type.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'taskType',\n})\nexport class TaskTypePipe implements PipeTransform {\n  transform(value: any): any {\n    switch (value) {\n      case 'TASK':\n        return $localize`Task`;\n      case 'USER_STORY':\n        return $localize`User story`;\n      case 'ISSUE':\n        return $localize`Issue`;\n      case 'EPIC':\n        return $localize`Epic`;\n      case 'SUBTASK':\n        return $localize`Subtask`;\n      default:\n        console.warn('Unknown task type:', value);\n        return value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskWithAdditionalData.html":{"url":"interfaces/TaskWithAdditionalData.html","title":"interface - TaskWithAdditionalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskWithAdditionalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/tasks/interfaces/task.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Extended project task interface\n\n            \n\n            \n                Extends\n            \n            \n                    Omit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connectWithIssueOnGitHub\n                                        \n                                \n                                \n                                        \n                                            connectWithPullRequestOnGitHub\n                                        \n                                \n                                \n                                        \n                                            issue\n                                        \n                                \n                                \n                                        \n                                            issueAttachGithub\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            pull\n                                        \n                                \n                                \n                                        \n                                            workspaceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectWithIssueOnGitHub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectWithIssueOnGitHub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task is connected to GitHub issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connectWithPullRequestOnGitHub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectWithPullRequestOnGitHub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task is connected to GitHub pull request\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issue:         GitIssue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitIssue\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub issue to which the task is connected to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueAttachGithub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueAttachGithub:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Project identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pull\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pull:         GitPull\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitPull\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GitHub pull to which the task is connected to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workspaceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        workspaceId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace identifier\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { GitIssue, GitPull } from '@dashboard/interfaces/git-integration.interface';\n\n/**\n * Project task interface\n */\nexport interface Task {\n  /**\n   * Task id (unique per project)\n   */\n  id: number;\n\n  /**\n   * Task name\n   */\n  name: string;\n\n  /**\n   * Task description\n   */\n  description: string;\n\n  /**\n   * Task deadline to be completed\n   */\n  deadline: Date;\n\n  /**\n   * Task estimated date to work on it\n   */\n  estimatedDate: Date;\n\n  /**\n   * Status id (unique per database)\n   */\n  statusId?: number;\n\n  /**\n   * Parent task id\n   */\n  parentTaskId?: number;\n\n  /**\n   * List of subtasks\n   */\n  subTasks?: Task[];\n\n  /**\n   * Optional link to the GitHub issue\n   */\n  issue?: string;\n\n  /**\n   * Optional link to the GitHub pull request\n   */\n  pull?: string;\n\n  /**\n   * Optional merged pull requests list\n   */\n  mergedPullList?: String[];\n\n  /**\n   * Optional user id who is assigned to task\n   */\n  assigneeId?: number;\n}\n\n/**\n * Extended project task interface\n */\nexport interface TaskWithAdditionalData extends Omit {\n  /**\n   * Project identifier\n   */\n  projectId: number;\n\n  /**\n   * Workspace identifier\n   */\n  workspaceId: string;\n\n  /**\n   * Boolean to determine if task is connected to GitHub issue\n   */\n  connectWithIssueOnGitHub: boolean;\n\n  /**\n   * Boolean to determine if task should be attached to existing GitHub issue instead of creating new one\n   */\n  issueAttachGithub: boolean;\n\n  /**\n   * Boolean to determine if task is connected to GitHub pull request\n   */\n  connectWithPullRequestOnGitHub: boolean;\n\n  /**\n   * GitHub pull to which the task is connected to\n   */\n  pull: GitPull;\n\n  /**\n   * GitHub issue to which the task is connected to\n   */\n  issue: GitIssue;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_declarations\n\n\n\n\nBoardPage\n\nBoardPage\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nBoardPage->TasksModule\n\n\n\n\n\nBoardTaskComponent\n\nBoardTaskComponent\n\nTasksModule -->\n\nBoardTaskComponent->TasksModule\n\n\n\n\n\nInputAssigneeComponent\n\nInputAssigneeComponent\n\nTasksModule -->\n\nInputAssigneeComponent->TasksModule\n\n\n\n\n\nSchedulePage\n\nSchedulePage\n\nTasksModule -->\n\nSchedulePage->TasksModule\n\n\n\n\n\nStatusColorPipe\n\nStatusColorPipe\n\nTasksModule -->\n\nStatusColorPipe->TasksModule\n\n\n\n\n\nStatusLabelComponent\n\nStatusLabelComponent\n\nTasksModule -->\n\nStatusLabelComponent->TasksModule\n\n\n\n\n\nTaskDialog\n\nTaskDialog\n\nTasksModule -->\n\nTaskDialog->TasksModule\n\n\n\n\n\nTaskListPage\n\nTaskListPage\n\nTasksModule -->\n\nTaskListPage->TasksModule\n\n\n\n\n\nTaskPriorityIconPipe\n\nTaskPriorityIconPipe\n\nTasksModule -->\n\nTaskPriorityIconPipe->TasksModule\n\n\n\n\n\nTaskPriorityPipe\n\nTaskPriorityPipe\n\nTasksModule -->\n\nTaskPriorityPipe->TasksModule\n\n\n\n\n\nTaskTypeIconPipe\n\nTaskTypeIconPipe\n\nTasksModule -->\n\nTaskTypeIconPipe->TasksModule\n\n\n\n\n\nTaskTypePipe\n\nTaskTypePipe\n\nTasksModule -->\n\nTaskTypePipe->TasksModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nTasksModule -->\n\nMainModule->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardPage\n                        \n                        \n                            BoardTaskComponent\n                        \n                        \n                            InputAssigneeComponent\n                        \n                        \n                            SchedulePage\n                        \n                        \n                            StatusColorPipe\n                        \n                        \n                            StatusLabelComponent\n                        \n                        \n                            TaskDialog\n                        \n                        \n                            TaskListPage\n                        \n                        \n                            TaskPriorityIconPipe\n                        \n                        \n                            TaskPriorityPipe\n                        \n                        \n                            TaskTypeIconPipe\n                        \n                        \n                            TaskTypePipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainModule\n                        \n                        \n                            TasksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainModule } from '../_main/_main.module';\nimport { BoardTaskComponent } from './components/board-task/board-task.component';\nimport { InputAssigneeComponent } from './components/input-assignee/input-assignee.component';\nimport { StatusLabelComponent } from './components/status-label/status-label.component';\nimport { ViewOptionsComponent } from './components/view-options/view-options.component';\nimport { TaskDialog } from './dialogs/task/task.dialog';\nimport { BoardPage } from './pages/board/board.page';\nimport { SchedulePage } from './pages/schedule/schedule.page';\nimport { TaskListPage } from './pages/task-list/task-list.page';\nimport { StatusColorPipe } from './pipes/status-color.pipe';\nimport { TaskPriorityIconPipe } from './pipes/task-priority-icon.pipe';\nimport { TaskPriorityPipe } from './pipes/task-priority.pipe';\nimport { TaskTypeIconPipe } from './pipes/task-type-icon.pipe';\nimport { TaskTypePipe } from './pipes/task-type.pipe';\nimport { TasksRoutingModule } from './tasks.routing';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, MainModule, TasksRoutingModule],\n  declarations: [\n    BoardPage,\n    BoardTaskComponent,\n    TaskListPage,\n    TaskDialog,\n    TaskTypePipe,\n    TaskPriorityPipe,\n    TaskPriorityIconPipe,\n    TaskTypeIconPipe,\n    ViewOptionsComponent,\n    SchedulePage,\n    InputAssigneeComponent,\n    StatusLabelComponent,\n    StatusColorPipe,\n  ],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksRoutingModule.html":{"url":"modules/TasksRoutingModule.html","title":"module - TasksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tasks/tasks.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MockPage } from '@main/pages/mock/mock.page';\nimport { BoardPage } from './pages/board/board.page';\nimport { SchedulePage } from './pages/schedule/schedule.page';\nimport { TaskListPage } from './pages/task-list/task-list.page';\n\n/**\n * Tasks routes list\n */\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'board',\n  },\n  {\n    path: 'board',\n    component: BoardPage,\n  },\n  {\n    path: 'list',\n    component: TaskListPage,\n  },\n  {\n    path: 'schedule',\n    component: SchedulePage,\n  },\n  {\n    path: 'calendar',\n    component: MockPage,\n    data: {\n      image: 'assets/mocks/calendar.svg',\n    },\n  },\n];\n\n/**\n * Tasks routes module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TasksRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestNgControl.html":{"url":"classes/TestNgControl.html","title":"class - TestNgControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestNgControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/helpers/ng-control-testing-provider.helper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NgControl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _control\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                viewToModelUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    control\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _control\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        viewToModelUpdate\n                        \n                    \n                \n            \n            \n                \nviewToModelUpdate(newValue: any)\n                \n            \n\n\n            \n                \n                    Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n\n                \n                    \n                        getcontrol()\n                    \n                \n                            \n                                \n                                    Defined in src/tests/helpers/ng-control-testing-provider.helper.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { AbstractControl, FormControl, NgControl } from '@angular/forms';\n\nexport class TestNgControl extends NgControl {\n  private _control = new FormControl('');\n  viewToModelUpdate(newValue: any): void {\n    this._control = newValue;\n  }\n  get control(): AbstractControl | null {\n    return this._control;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextareaComponent.html":{"url":"components/TextareaComponent.html","title":"component - TextareaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextareaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/textarea/textarea.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                ControlAccessor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-textarea\n            \n\n            \n                styleUrls\n                ./textarea.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./textarea.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _required\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                ngControl\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIfIsRequired\n                            \n                            \n                                    Private\n                                initCheckForTouch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cols\n                            \n                            \n                                floatingLabel\n                            \n                            \n                                hint\n                            \n                            \n                                placeholder\n                            \n                            \n                                rows\n                            \n                            \n                                staticLabel\n                            \n                            \n                                autocomplete\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cols\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        floatingLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:13\n                            \n                        \n                \n                    \n                        Floating label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:28\n                            \n                        \n                \n                    \n                        Hint to display beneath the input to provide additional information of how to use the input\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:23\n                            \n                        \n                \n                    \n                        Input placeholder text\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rows\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        staticLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_main/components/textarea/textarea.component.ts:18\n                            \n                        \n                \n                    \n                        Static label text to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autocomplete\n                    \n                \n                \n                    \n                        Type :     \"on\" | \"off\"\n\n                    \n                \n                \n                    \n                        Default value : 'off'\n                    \n                \n                            \n                                \n                                    Inherited from         ControlAccessor\n\n                                \n                            \n                        \n                            \n                                    Defined in         ControlAccessor:19\n\n                            \n                        \n                \n                    \n                        Property that defines if field should prompt user how to fill it. For example\nin a form, if a field is email, it will give the user last used emails\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkIfIsRequired\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfIsRequired()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:88\n\n                \n            \n\n\n            \n                \n                    Check if the control is required by provided validators.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initCheckForTouch\n                        \n                    \n                \n            \n            \n                \n                    \n                    initCheckForTouch()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:102\n\n                \n            \n\n\n            \n                \n                    Apply the touched observable on ngControl and control fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:150\n\n                \n            \n\n\n            \n                \n                    A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:126\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called when the control's value changes in the UI.\nThis method is called by the forms API on initialization to update the form model when values propagate from the view to the model.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control value changes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:133\n\n                \n            \n\n\n            \n                \n                    Registers a callback function that is called by the forms API on initialization to update the form model on blur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback to be called when the control is touched.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:139\n\n                \n            \n\n\n            \n                \n                    Set disabled state on the control. If set to true, the control will be disabled.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        State to set to the control\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ControlAccessor\n\n                \n            \n            \n                \n                        Defined in         ControlAccessor:118\n\n                \n            \n\n\n            \n                \n                    Writes a new value to the element.\nThis method is called by the forms API to write to the view when programmatic\nchanges from model to view are requested.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value for the element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:36\n\n                        \n                    \n\n            \n                \n                    Private property to set filed as required\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:48\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is destroyed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NgControl\n\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:77\n\n                        \n                    \n\n            \n                \n                    control to be used by the accessor\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        touched$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         ControlAccessor\n\n                            \n                        \n                    \n                        \n                                Defined in         ControlAccessor:53\n\n                        \n                    \n\n            \n                \n                    Observable that emits when the control is touched.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ControlAccessor } from '@main/classes/control-accessor.class';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.scss'],\n})\nexport class TextareaComponent extends ControlAccessor {\n  /**\n   * Floating label text to display\n   */\n  @Input() floatingLabel?: string;\n\n  /**\n   * Static label text to display\n   */\n  @Input() staticLabel?: string;\n\n  /**\n   * Input placeholder text\n   */\n  @Input() placeholder: string = '';\n\n  /**\n   * Hint to display beneath the input to provide additional information of how to use the input\n   */\n  @Input() hint?: string;\n\n  @Input() rows?: number = 4;\n\n  @Input() cols?: number = 50;\n}\n\n    \n\n    \n        \n  {{ staticLabel }}\n  \n    {{ floatingLabel }}\n    \n    {{ ngControl.control?.errors | validationError }}\n    {{ hint }}\n  \n\n\n    \n\n    \n                \n                    ./textarea.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ staticLabel }}      {{ floatingLabel }}        {{ ngControl.control?.errors | validationError }}    {{ hint }}  '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextareaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpperNavigationComponent.html":{"url":"components/UpperNavigationComponent.html","title":"component - UpperNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpperNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_main/components/upper-navigation/upper-navigation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-upper-navigation\n            \n\n            \n                styleUrls\n                ./upper-navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./upper-navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _isButtonDisabled\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                faCog\n                            \n                            \n                                faSignOut\n                            \n                            \n                                faUser\n                            \n                            \n                                openBelow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeProfile\n                            \n                            \n                                createNewTask\n                            \n                            \n                                    Public\n                                isButtonDisabled\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openProfile\n                            \n                            \n                                    Public\n                                toggleProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogService: DialogService, taskService: TaskService, workspaceService: WorkspaceService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTask\n                        \n                    \n                \n            \n            \n                \ncreateNewTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isButtonDisabled\n                        \n                    \n                \n            \n            \n                \n                    \n                    isButtonDisabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _isButtonDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCog\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faSignOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faSignOut\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faUser\n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openBelow\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('openBelow')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/_main/components/upper-navigation/upper-navigation.component.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth/services/auth.service';\nimport { WorkspaceService } from '@dashboard/services/workspace.service';\nimport { faAngleDown, faCog, faSignOut, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { DialogService } from '@main/services/dialog.service';\nimport { TaskDialog, TaskDialogData, TaskDialogVariant } from '@tasks/dialogs/task/task.dialog';\nimport { TaskService } from '@tasks/services/task.service';\nimport { fromEvent, map, skip, take } from 'rxjs';\n\n@Component({\n  selector: 'app-upper-navigation',\n  templateUrl: './upper-navigation.component.html',\n  styleUrls: ['./upper-navigation.component.scss'],\n})\nexport class UpperNavigationComponent implements OnInit {\n  constructor(\n    private dialogService: DialogService,\n    private taskService: TaskService,\n    private workspaceService: WorkspaceService,\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.workspaceService.list().pipe(\n      map((workspaces) => {\n        if (workspaces.length === 0) {\n          this._isButtonDisabled = false;\n        } else if (\n          workspaces.filter((workspace) => workspace.projectsWithPrivileges.length).length === 0\n        ) {\n          this._isButtonDisabled = false;\n        } else {\n          this._isButtonDisabled = true;\n        }\n      }),\n    );\n  }\n\n  @ViewChild('openBelow') openBelow!: ElementRef;\n\n  faAngleDown = faAngleDown;\n  faUser = faUser;\n  faCog = faCog;\n  faSignOut = faSignOut;\n\n  public active: boolean = false;\n  public _isButtonDisabled = true;\n\n  createNewTask() {\n    this.dialogService\n      .open(TaskDialog, {\n        variant: TaskDialogVariant.CREATE,\n      } as TaskDialogData)\n      .afterClosed()\n      .subscribe((result) => {\n        if (result) {\n          this.taskService.create(result.projectId, result).subscribe(() => {\n            location.reload();\n          });\n        }\n      });\n  }\n\n  logout() {\n    this.authService.logout().subscribe(() => {\n      this.router.navigate(['/', 'auth', 'login']);\n    });\n  }\n\n  public isButtonDisabled() {\n    return this._isButtonDisabled;\n  }\n  public openProfile() {\n    this.active = true;\n    fromEvent(document, 'click')\n      .pipe(skip(1), take(1))\n      .subscribe(() => {\n        this.closeProfile();\n      });\n  }\n\n  public closeProfile() {\n    this.active = false;\n  }\n  public toggleProfile() {\n    if (!this.active) {\n      this.openProfile();\n    } else {\n      this.closeProfile();\n    }\n  }\n}\n\n    \n\n    \n        New task\n\n\n\n  \n  \n    \n    \n    \n      \n    \n  \n\n\n  \n    \n      \n        \n        Profile\n      \n    \n    \n      \n        \n        Settings\n      \n    \n    \n      \n        \n        Log out\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./upper-navigation.component.scss\n                \n                :host {\n  display: flex;\n  width: 100%;\n  height: 62px;\n\n  // flex-shrink: 0;\n  align-items: center;\n  background-color: var(--color-secondary-800);\n  color: var(--color-text);\n}\n\napp-button {\n  align-items: center;\n  justify-content: center;\n  padding: 10px 20px;\n  margin: 0;\n}\n\n.flex-end-position {\n  position: absolute;\n  right: 0;\n  display: flex;\n  height: 62px;\n\n  .profile {\n    width: 200px;\n\n    .open-below {\n      position: absolute;\n      right: 0;\n      display: flex;\n      height: 100%;\n      align-items: center;\n      padding: 10px;\n      cursor: pointer;\n\n      app-icon {\n        display: flex;\n        align-items: center;\n\n        &.active {\n          transform: scaleY(-1);\n        }\n      }\n    }\n  }\n}\n\n.options {\n  position: absolute;\n  z-index: 2;\n  top: 62px;\n  right: 0;\n  display: none;\n  width: 200px;\n  cursor: pointer;\n\n  &.active {\n    display: block;\n    background-color: var(--color-secondary-600);\n    color: var(--color-text);\n\n    a {\n      position: relative;\n      display: flex;\n      align-items: center;\n      padding: 12px 10px;\n      border-radius: var(--border-radius);\n      color: var(--color-text);\n      transition: background-color 0.2s ease-in-out;\n\n      app-icon {\n        margin-right: 1rem;\n        margin-left: 2rem;\n      }\n\n      &:hover {\n        background-color: var(--color-secondary-500);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'New task                                                        Profile                                    Settings                                    Log out            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'UpperNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMyself\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/services/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMyself\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyself()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(modUser: ModifyUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/services/user.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modUser\n                                    \n                                                ModifyUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ModifyUser } from '@auth/interfaces/user.interface';\nimport { ApiService } from '@main/services/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private apiService: ApiService) {}\n\n  public update(modUser: ModifyUser): Observable {\n    return this.apiService.put(`/auth/edit`, { body: modUser });\n  }\n\n  public getMyself() {\n    return this.apiService.get(`/auth/me`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserSession.html":{"url":"interfaces/UserSession.html","title":"interface - UserSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings/interfaces/session.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            geoip\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ip\n                                        \n                                \n                                \n                                        \n                                            lastUsed\n                                        \n                                \n                                \n                                        \n                                            remembered\n                                        \n                                \n                                \n                                        \n                                            userAgent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geoip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geoip:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastUsed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remembered\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remembered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserSession {\n  id: number;\n  userAgent: string;\n  ip: string;\n  lastUsed: number;\n  remembered: boolean;\n  geoip: {\n    city: string;\n    country: string;\n  };\n  current: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUtils.html":{"url":"classes/UserUtils.html","title":"class - UserUtils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/classes/user.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getColorById\n                            \n                            \n                                    Static\n                                getColorByUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getColorById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/classes/user.class.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getColorByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/classes/user.class.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Color\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Random } from '@main/classes/random.class';\nimport * as Color from 'color';\n\nexport class UserUtils {\n  public static getColorById(id: number): Color {\n    const random = new Random(id);\n    const randomNumber = random.random();\n    const hue = randomNumber * 255;\n    return Color.hsl(hue, 95, 41);\n  }\n\n  /**\n   * @unsupported\n   */\n  public static getColorByUsername(username: string): Color {\n    let numberRepresentation = username\n      .split('')\n      .map((c) => c.charCodeAt(0))\n      .reduce((sum, n) => sum * 10 ** 6 + n, 0);\n\n    // This requires some tweaks to make the number smaller.\n    numberRepresentation = numberRepresentation / 10000000;\n\n    const random = new Random(numberRepresentation);\n    const randomNumber = random.random();\n    const hue = randomNumber * 255;\n    return Color.hsl(hue, 95, 41);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserWithPrivileges.html":{"url":"interfaces/UserWithPrivileges.html","title":"interface - UserWithPrivileges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserWithPrivileges\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            privileges\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        privileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        privileges:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  surname: string;\n  email: string;\n  username: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserWithPrivileges {\n  user: User;\n  privileges: number;\n}\n\nexport interface ModifyUser {\n  name: string;\n  surname: string;\n  password: string;\n  avatar: string;\n}\n\nexport interface UserData {\n  id: number;\n  name: string;\n  surname: string;\n  username: string;\n  avatar: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/classes/utils.class.ts\n        \n\n\n            \n                Description\n            \n            \n                Utilities class with some useful methods not available in any libraries.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                has\n                            \n                            \n                                    Static\n                                isLetter\n                            \n                            \n                                    Static\n                                regexIndexOf\n                            \n                            \n                                    Static\n                                snakeCase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        has\n                        \n                    \n                \n            \n            \n                \n                    \n                    has(object: any, keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:45\n                \n            \n\n\n            \n                \n                    Check if object has all the properties from array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Object to check\n\n                                    \n                                \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        keys to search for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if object has all of the specified properties, false otherwise.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isLetter\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLetter(char: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:59\n                \n            \n\n\n            \n                \n                    Checks if passed character is a letter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    char\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Character to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        regexIndexOf\n                        \n                    \n                \n            \n            \n                \n                    \n                    regexIndexOf(string: string, regex: RegExp, startPos: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:12\n                \n            \n\n\n            \n                \n                    Function to find first occurrence of regex in string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        String to search in\n\n                                    \n                                \n                                \n                                    regex\n                                    \n                                            RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Regex to search for\n\n                                    \n                                \n                                \n                                    startPos\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Optional starting position in the string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The index of the first match\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        snakeCase\n                        \n                    \n                \n            \n            \n                \n                    \n                    snakeCase(inputString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/classes/utils.class.ts:22\n                \n            \n\n\n            \n                \n                    Converts string from camelCase and PascalCase to snake_case\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        String to convert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string in snake_case\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Utils {\n  /**\n   * Function to find first occurrence of regex in string\n   * @param string String to search in\n   * @param regex Regex to search for\n   * @param startPos Optional starting position in the string\n   * @returns The index of the first match\n   */\n  public static regexIndexOf(string: string, regex: RegExp, startPos: number = 0) {\n    var indexOf = string.substring(startPos).search(regex);\n    return indexOf >= 0 ? indexOf + startPos : indexOf;\n  }\n\n  /**\n   * Converts string from camelCase and PascalCase to snake_case\n   * @param inputString String to convert\n   * @returns string in snake_case\n   */\n  public static snakeCase(inputString: string) {\n    return inputString\n      .split('')\n      .map((character, index) => {\n        if (Utils.isLetter(character) && character == character.toUpperCase()) {\n          if (index > 0) {\n            return '_' + character.toLowerCase();\n          } else {\n            return character.toLowerCase();\n          }\n        } else {\n          return character;\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Check if object has all the properties from array\n   * @param object Object to check\n   * @param keys keys to search for\n   * @returns true if object has all of the specified properties, false otherwise.\n   */\n  public static has(object: any, keys: string[]) {\n    for (const key of keys) {\n      if (!object.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Checks if passed character is a letter\n   * @param char Character to check\n   * @returns\n   */\n  public static isLetter(char: String) {\n    if (char.length > 1) return false;\n    return (char >= 'A' && char = 'a' && char \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationError.html":{"url":"interfaces/ValidationError.html","title":"interface - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_main/interfaces/validation-error.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Validation error interface. Used with form controls to specify what validators returned errors.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Human readable error message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of the error. For example 'required', 'minlength', 'maxlength', 'pattern', 'email', etc.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ValidationError {\n  /**\n   * Type of the error. For example 'required', 'minlength', 'maxlength', 'pattern', 'email', etc.\n   */\n  type: string;\n  /**\n   * Human readable error message.\n   */\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ValidationErrorPipe.html":{"url":"pipes/ValidationErrorPipe.html","title":"pipe - ValidationErrorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ValidationErrorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/_main/pipes/validation-error.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe to transform validation errors to a human readable string\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        validationError\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_main/pipes/validation-error.pipe.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe value to be transformed\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        message from validation error\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe to transform validation errors to a human readable string\n */\n@Pipe({\n  name: 'validationError',\n})\nexport class ValidationErrorPipe implements PipeTransform {\n  /**\n   *\n   * @param value - The value to be transformed\n   * @returns message from validation error\n   */\n  transform(value: any): any {\n    return value?.message || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOptionsComponent.html":{"url":"components/ViewOptionsComponent.html","title":"component - ViewOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/components/view-options/view-options.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-options\n            \n\n            \n                styleUrls\n                ./view-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./view-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                penToSquare\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/view-options/view-options.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/components/view-options/view-options.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFilter\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        penToSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPenToSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/components/view-options/view-options.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { faFilter, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-view-options',\n  templateUrl: './view-options.component.html',\n  styleUrls: ['./view-options.component.scss'],\n})\nexport class ViewOptionsComponent {\n  penToSquare = faPenToSquare;\n  filter = faFilter;\n\n  public workspaceId: number;\n  public projectId: number;\n\n  @Input()\n  project!: Project;\n\n  @Input()\n  title!: string;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{title}}\n      {{title}} {{project.name}}\n    \n    \n      \n        General\n      \n      \n        Members\n      \n    \n    \n      \n        General\n      \n      \n        Members\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./view-options.component.scss\n                \n                :host {\n  width: 100%;\n  align-items: center;\n  color: var(--color-text);\n}\n\nsection {\n  position: relative;\n  display: flex;\n  margin-bottom: 1rem;\n\n  .tabs {\n    display: flex;\n\n    .project-name {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      margin-right: 10px;\n    }\n\n    a {\n      position: relative;\n      display: block;\n      padding: 10px;\n      margin-right: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      &.active {\n        color: var(--color-text);\n\n        &::before {\n          position: absolute;\n          bottom: 10px;\n          left: 5px;\n          width: calc(100% - 10px);\n          height: 2px;\n          background-color: var(--color-primary-700);\n          border-radius: var(--border-radius);\n          content: '';\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}      {{title}} {{project.name}}                      General                    Members                            General                    Members            '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewOptionsComponent-1.html":{"url":"components/ViewOptionsComponent-1.html","title":"component - ViewOptionsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks/components/view-options/view-options.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-options\n            \n\n            \n                styleUrls\n                ./view-options.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./view-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faGithub\n                            \n                            \n                                filter\n                            \n                            \n                                    Public\n                                isFiltersOpen\n                            \n                            \n                                penToSquare\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                workspaceId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                filtersControl\n                            \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :         Filter[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersControl\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks/components/view-options/view-options.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faGithub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGithub\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFilter\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isFiltersOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        penToSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPenToSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        workspaceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/tasks/components/view-options/view-options.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from '@dashboard/interfaces/project.interface';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faFilter, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport { Filter } from '@main/interfaces/filters.interface';\n\n@Component({\n  selector: 'app-view-options',\n  templateUrl: './view-options.component.html',\n  styleUrls: ['./view-options.component.scss'],\n})\nexport class ViewOptionsComponent {\n  penToSquare = faPenToSquare;\n  faGithub = faGithub;\n  filter = faFilter;\n\n  public workspaceId: number;\n  public projectId: number;\n\n  @Input()\n  project!: Project;\n\n  @Input()\n  filters: Filter[] = [];\n\n  @Input()\n  public filtersControl = new FormControl();\n\n  public isFiltersOpen = false;\n\n  constructor(private activatedRoute: ActivatedRoute) {\n    const { workspaceId, projectId } = this.activatedRoute.snapshot.params;\n\n    this.workspaceId = workspaceId;\n    this.projectId = projectId;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{project.name}}\n      \n        \n      \n    \n    \n      Board\n    \n    \n      List\n    \n    \n      Schedule\n    \n    \n      Calendar\n    \n    \n      Backlog\n    \n  \n  \n    \n      \n      Edit\n    \n    \n      \n      Filters\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./view-options.component.scss\n                \n                :host {\n  width: 100%;\n  align-items: center;\n  color: var(--color-text);\n}\n\nsection {\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n\n  .tabs {\n    display: flex;\n\n    .project-name {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      margin-right: 10px;\n\n      a {\n        padding: 0;\n        margin-left: 1rem;\n      }\n    }\n\n    a {\n      position: relative;\n      display: block;\n      padding: 10px 10px 15px 10px;\n      margin-right: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      &.active {\n        color: var(--color-text);\n\n        &::before {\n          position: absolute;\n          bottom: 10px;\n          left: 5px;\n          width: calc(100% - 10px);\n          height: 2px;\n          background-color: var(--color-primary-700);\n          border-radius: var(--border-radius);\n          content: '';\n        }\n      }\n    }\n  }\n\n  .options {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    .options-element {\n      position: relative;\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      color: var(--color-neutral-300);\n      cursor: pointer;\n\n      app-icon {\n        display: flex;\n        align-items: center;\n        padding-right: 10px;\n      }\n\n      &:hover {\n        color: var(--color-text);\n      }\n\n      .overlay {\n        position: absolute;\n        z-index: 150;\n        right: 0;\n        bottom: 0;\n        width: 200px;\n        padding: 1rem;\n        background-color: var(--color-secondary-600);\n        border-radius: var(--border-radius);\n        transform: translateY(100%);\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{project.name}}                                  Board              List              Schedule              Calendar              Backlog                        Edit                    Filters                          '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewOptionsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Workspace.html":{"url":"interfaces/Workspace.html","title":"interface - Workspace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Workspace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/interfaces/workspace.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Main workspace (projects/spaces grouping entity) interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            projectsWithPrivileges\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Workspace name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectsWithPrivileges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectsWithPrivileges:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Project } from './project.interface';\n/**\n * Main workspace (projects/spaces grouping entity) interface\n */\nexport interface Workspace {\n  /**\n   * Workspace ID\n   */\n  id: number;\n  /**\n   * Workspace name\n   */\n  name: string;\n\n  projectsWithPrivileges: {\n    project: Project;\n    privileges: number;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspaceService.html":{"url":"injectables/WorkspaceService.html","title":"injectable - WorkspaceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkspaceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/services/workspace.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Workspaces management service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Private\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/services/workspace.service.ts:14\n                            \n                        \n\n                \n                    \n                            Default constructor with ApiService dependency.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Api service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:62\n                \n            \n\n\n            \n                \n                    Creates a new workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace to modify\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:36\n                \n            \n\n\n            \n                \n                    Deletes the workspace by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the workspace to delete from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:27\n                \n            \n\n\n            \n                \n                    Gets a workspace by its ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        identifier of the workspace to get from the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:53\n                \n            \n\n\n            \n                \n                    Lists all available workspaces.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:45\n                \n            \n\n\n            \n                \n                    Updates a workspace.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        workspace object to update in the API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Request observable, which completes when request is finished\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(identifier: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ServiceValidator({DELETE: undefined, GET: undefined})\n                \n            \n\n            \n                \n                    Defined in src/app/dashboard/services/workspace.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        list$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/services/workspace.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ServiceValidator } from '@main/decorators/service-validator.decorator';\nimport { Observable, Subject } from 'rxjs';\nimport { ApiService } from 'src/app/_main/services/api.service';\nimport { Workspace } from '../interfaces/workspace.interface';\n\n/**\n * Workspaces management service\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class WorkspaceService {\n  list$ = new Subject();\n\n  /**\n   * Default constructor with `ApiService` dependency.\n   * @param apiService Api service\n   */\n  constructor(private apiService: ApiService) {}\n\n  /**\n   * Gets a workspace by its ID.\n   * @param id identifier of the workspace to get from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public get(id: number): Observable {\n    return this.apiService.get(`/workspace/${id}`);\n  }\n\n  /**\n   * Deletes the workspace by its ID.\n   * @param id identifier of the workspace to delete from the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public delete(id: number): Observable {\n    return this.apiService.delete(`/workspace/${id}`).pipe(this.validate('DELETE'));\n  }\n\n  /**\n   * Updates a workspace.\n   * @param workspace workspace object to update in the API\n   * @returns Request observable, which completes when request is finished\n   */\n  public update(workspace: Workspace): Observable {\n    return this.apiService.put(`/workspace/${workspace.id}`, { body: workspace });\n  }\n\n  /**\n   * Lists all available workspaces.\n   * @returns Request observable, which completes when request is finished\n   */\n  public list(): Observable {\n    return this.apiService.get(`/workspace`);\n  }\n\n  /**\n   * Creates a new workspace.\n   * @param workspace workspace to modify\n   * @returns Request observable, which completes when request is finished\n   */\n  public create(workspace: Workspace): Observable {\n    return this.apiService.post(`/workspace`, { body: workspace });\n  }\n\n  @ServiceValidator({\n    DELETE: {\n      400: $localize`Workspace is not empty. Only empty workspaces can be deleted.`,\n    },\n    GET: {\n      404: $localize`Workspace with this ID does not exist.`,\n    },\n  })\n  private validate(identifier: string): any {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspacesListPage.html":{"url":"components/WorkspacesListPage.html","title":"component - WorkspacesListPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WorkspacesListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts\n\n\n\n    \n        Description\n    \n    \n        Workspaces list page component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-workspaces-list-page\n            \n\n            \n                styleUrls\n                ./workspaces-list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./workspaces-list.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                faPlus\n                            \n                            \n                                    Public\n                                    Optional\n                                workspaces$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteWorkspace\n                            \n                            \n                                editWorkspace\n                            \n                            \n                                loadWorkspaces\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openWorkspace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(workspaceService: WorkspaceService, projectService: ProjectService, dialogService: DialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:20\n                            \n                        \n\n                \n                    \n                            Default constructor with dependency injection.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        workspaceService\n                                                  \n                                                        \n                                                                        WorkspaceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Workspace service\n\n                                                        \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                        DialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteWorkspace\n                        \n                    \n                \n            \n            \n                \ndeleteWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:62\n                \n            \n\n\n            \n                \n                    Shows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editWorkspace\n                        \n                    \n                \n            \n            \n                \neditWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:75\n                \n            \n\n\n            \n                \n                    Navigates to the workspace edit page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Workspace to edit\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadWorkspaces\n                        \n                    \n                \n            \n            \n                \nloadWorkspaces()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:54\n                \n            \n\n\n            \n                \n                    Loads the workspaces list from the workspace service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:47\n                \n            \n\n\n            \n                \n                    Lifecycle hook to load workspaces at the start of the page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWorkspace\n                        \n                    \n                \n            \n            \n                \nopenWorkspace(workspace: Workspace)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    workspace\n                                    \n                                                Workspace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        faPlus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPlus\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:37\n                        \n                    \n\n            \n                \n                    Plus icon to display on the add button\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        workspaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts:42\n                        \n                    \n\n            \n                \n                    Workspaces list observable to use in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Observable } from 'rxjs';\nimport { Page } from 'src/app/_main/decorators/page.decorator';\nimport { DialogService } from 'src/app/_main/services/dialog.service';\nimport { Workspace } from '../../interfaces/workspace.interface';\nimport { ProjectService } from '../../services/project.service';\nimport { WorkspaceService } from '../../services/workspace.service';\n\n/**\n * Workspaces list page component.\n */\n@Page()\n@Component({\n  selector: 'app-workspaces-list-page',\n  templateUrl: './workspaces-list.page.html',\n  styleUrls: ['./workspaces-list.page.scss'],\n})\nexport class WorkspacesListPage implements OnInit {\n  /**\n   * Default constructor with dependency injection.\n   * @param workspaceService Workspace service\n   * @param dialogService Dialog service\n   * @param router Router service\n   */\n  constructor(\n    private workspaceService: WorkspaceService,\n    private projectService: ProjectService,\n    private dialogService: DialogService,\n    private router: Router,\n  ) {}\n\n  /**\n   * Plus icon to display on the add button\n   */\n  public faPlus = faPlus;\n\n  /**\n   * Workspaces list observable to use in the template.\n   */\n  public workspaces$?: Observable;\n\n  /**\n   * Lifecycle hook to load workspaces at the start of the page.\n   */\n  ngOnInit() {\n    this.loadWorkspaces();\n  }\n\n  /**\n   * Loads the workspaces list from the workspace service.\n   */\n  loadWorkspaces() {\n    this.workspaces$ = this.workspaceService.list();\n  }\n\n  /**\n   * Shows an alert dialog to confirm the workspace deletion and deletes the workspace if confirmed.\n   * @param workspace Workspace to delete\n   */\n  deleteWorkspace(workspace: Workspace) {\n    this.dialogService.confirmWorkspaceDelete(workspace).subscribe(() => {\n      this.workspaceService.delete(workspace.id).subscribe(() => {\n        // this.loadWorkspaces();\n        window.location.reload();\n      });\n    });\n  }\n\n  /**\n   * Navigates to the workspace edit page.\n   * @param workspace Workspace to edit\n   */\n  editWorkspace(workspace: Workspace) {\n    this.router.navigate(['/', workspace.id, 'edit']);\n  }\n\n  openWorkspace(workspace: Workspace) {\n    this.router.navigate(['/', workspace.id]);\n  }\n}\n\n    \n\n    \n        \n\n  Workspaces\n  New workspace\n\n\n\n\n\n  \n  \n    Name\n     {{ row.name }} \n  \n\n  \n  \n    Statistics\n     - \n  \n\n  \n  \n    Last update\n     - \n  \n\n  \n  \n    \n    \n      \n        \n      \n      \n        \n          Edit workspace\n        \n        \n          Delete workspace\n        \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./workspaces-list.page.scss\n                \n                :host {\n  display: block;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Workspaces  New workspace        Name     {{ row.name }}           Statistics     -           Last update     -                                                           Edit workspace                          Delete workspace                        '\n    var COMPONENTS = [{'name': 'AddMemberDialog', 'selector': 'app-add-member-dialog'},{'name': 'AlertDialog', 'selector': 'app-alert-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardPage', 'selector': 'app-board'},{'name': 'BoardTaskComponent', 'selector': 'app-board-task'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChangePasswordPage', 'selector': 'app-change-password'},{'name': 'CheckboxComponent', 'selector': 'app-checkbox'},{'name': 'ControlAccessor', 'selector': ''},{'name': 'CreateProjectMembersPage', 'selector': 'app-create-project-members'},{'name': 'CreateProjectPage', 'selector': 'app-create-project'},{'name': 'CreateWorkspacePage', 'selector': 'app-create-workspace-page'},{'name': 'DeleteAccountPage', 'selector': 'app-delete-account.page'},{'name': 'EditProjectMembersPage', 'selector': 'app-edit-project-members'},{'name': 'EditProjectPage', 'selector': 'app-edit-project'},{'name': 'EditWorkspacePage', 'selector': 'app-edit-workspace-page'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'ForgotPasswordPage', 'selector': 'app-forgot-page'},{'name': 'GithubIntegrationPage', 'selector': 'app-github-integration-page'},{'name': 'IconComponent', 'selector': 'app-icon'},{'name': 'InputAssigneeComponent', 'selector': 'app-input-assignee'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'InputDateTimeComponent', 'selector': 'app-input-date-time'},{'name': 'IntegrationEntryComponent', 'selector': 'app-integration-entry'},{'name': 'IntegrationGithubComponent', 'selector': 'app-integration-github'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'ListGroupComponent', 'selector': 'app-list-group'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'MainViewComponent', 'selector': 'app-main-view'},{'name': 'MemberListComponent', 'selector': 'app-member-list'},{'name': 'MockPage', 'selector': 'app-mock'},{'name': 'NavElementComponent', 'selector': 'app-nav-element'},{'name': 'NavElementWorkspaceComponent', 'selector': 'app-nav-element-workspace'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'ProjectsListPage', 'selector': 'app-projects-list'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'RestoreAccountPage', 'selector': 'app-restore-account-page'},{'name': 'SchedulePage', 'selector': 'app-schedule-page'},{'name': 'SelectComponent', 'selector': 'app-select'},{'name': 'SettingsAccountPage', 'selector': 'app-settings-account-page'},{'name': 'SettingsIntegrationsPage', 'selector': 'app-settings-integrations'},{'name': 'SettingsLocalizationPage', 'selector': 'app-settings-localization-page'},{'name': 'SettingsPage', 'selector': 'app-settings-page'},{'name': 'SettingsSessionsPage', 'selector': 'app-settings-sessions'},{'name': 'SidebarNavigationComponent', 'selector': 'app-sidebar-navigation'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'SnackbarOutletComponent', 'selector': 'app-snackbar-outlet'},{'name': 'StatusLabelComponent', 'selector': 'app-status-label'},{'name': 'TaskDialog', 'selector': 'app-task-dialog'},{'name': 'TaskListPage', 'selector': 'app-task-list'},{'name': 'TextareaComponent', 'selector': 'app-textarea'},{'name': 'UpperNavigationComponent', 'selector': 'app-upper-navigation'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'ViewOptionsComponent', 'selector': 'app-view-options'},{'name': 'WorkspacesListPage', 'selector': 'app-workspaces-list-page'}];\n    var DIRECTIVES = [{'name': 'ClickStopPropagationDirective', 'selector': '[click-stop-propagation]'},{'name': 'FocusInitialDirective', 'selector': '[appFocusInitial]'},{'name': 'LetDirective', 'selector': '[ngLet]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkspacesListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/_main/_main.module.ts\n            \n            variable\n            ngModuleConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/classes/control-accessor.class.ts\n            \n            component\n            ControlAccessor\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/_main/classes/e-set.class.ts\n            \n            class\n            ESet\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/classes/enum.class.ts\n            \n            class\n            Enum\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/_main/classes/filters.class.ts\n            \n            class\n            Filters\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/classes/persistent-map.class.ts\n            \n            class\n            PersistentMap\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/_main/classes/persistent-map.class.ts\n            \n            interface\n            PersistentMapOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/classes/random.class.ts\n            \n            class\n            Random\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/_main/classes/utils.class.ts\n            \n            class\n            Utils\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/_main/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/_main/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_main/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/_main/components/filters/filters.component.ts\n            \n            component\n            FiltersComponent\n            \n                57 %\n                (11/19)\n            \n        \n        \n            \n                \n                src/app/_main/components/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/_main/components/input-date-time/input-date-time.component.ts\n            \n            component\n            InputDateTimeComponent\n            \n                50 %\n                (10/20)\n            \n        \n        \n            \n                \n                src/app/_main/components/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                70 %\n                (17/24)\n            \n        \n        \n            \n                \n                src/app/_main/components/main-view/main-view.component.ts\n            \n            component\n            MainViewComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_main/components/nav-element-workspace/nav-element-workspace.component.ts\n            \n            component\n            NavElementWorkspaceComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/_main/components/nav-element/nav-element.component.ts\n            \n            component\n            NavElementComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/_main/components/option/option.component.ts\n            \n            component\n            OptionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/_main/components/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                src/app/_main/components/sidebar-navigation/sidebar-navigation.component.ts\n            \n            component\n            SidebarNavigationComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/_main/components/snackbar-outlet/snackbar-outlet.component.ts\n            \n            component\n            SnackbarOutletComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/components/snackbar/snackbar.component.ts\n            \n            component\n            SnackbarComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/_main/components/snackbar/snackbar.interface.ts\n            \n            interface\n            SnackbarData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/components/textarea/textarea.component.ts\n            \n            component\n            TextareaComponent\n            \n                84 %\n                (16/19)\n            \n        \n        \n            \n                \n                src/app/_main/components/upper-navigation/upper-navigation.component.ts\n            \n            component\n            UpperNavigationComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/debug.decorator.ts\n            \n            function\n            Debug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/page.decorator.ts\n            \n            function\n            Page\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/service-validator.decorator.ts\n            \n            interface\n            ErrorValidationTree\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/service-validator.decorator.ts\n            \n            function\n            ServiceValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/decorators/service.decorator.ts\n            \n            function\n            Service\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/dialogs/alert/alert.dialog.ts\n            \n            component\n            AlertDialog\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/_main/dialogs/alert/alert.dialog.ts\n            \n            interface\n            AlertDialogData\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/_main/directives/click-stop-propagation.directive.ts\n            \n            directive\n            ClickStopPropagationDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_main/directives/focus-initial.directive.ts\n            \n            directive\n            FocusInitialDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_main/directives/let.directive.ts\n            \n            directive\n            LetDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/directives/let.directive.ts\n            \n            interface\n            LetContext\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/interfaces/filters.interface.ts\n            \n            interface\n            FilterCheckbox\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/_main/interfaces/request-options.interface.ts\n            \n            interface\n            RequestOptions\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/_main/interfaces/validation-error.interface.ts\n            \n            interface\n            ValidationError\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_main/operators/apply-filters.operator.ts\n            \n            function\n            applyFilters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/operators/catch-response.operator.ts\n            \n            function\n            catchResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_main/pages/mock/mock.page.ts\n            \n            component\n            MockPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_main/pipes/validation-error.pipe.ts\n            \n            pipe\n            ValidationErrorPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/_main/services/dialog.service.ts\n            \n            injectable\n            DialogService\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/_main/services/router-extensions.service.ts\n            \n            injectable\n            RouterExtensionsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/_main/services/snackbar.service.ts\n            \n            injectable\n            SnackbarService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/_main/validators/email.validator.ts\n            \n            function\n            emailValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/validators/max-length.validator.ts\n            \n            function\n            maxLengthValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/validators/password.validator.ts\n            \n            function\n            passwordValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/validators/required.validator.ts\n            \n            function\n            requiredValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_main/validators/same-as.validator.ts\n            \n            function\n            sameAsValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/guard/logged-in-users.guard.ts\n            \n            guard\n            LoggedInUsersGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            ModifyUser\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            UserData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/auth/interfaces/user.interface.ts\n            \n            interface\n            UserWithPrivileges\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/pages/change-password/change-password.page.ts\n            \n            component\n            ChangePasswordPage\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/auth/pages/delete-account/delete-account.page.ts\n            \n            component\n            DeleteAccountPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/pages/forgot-password/forgot-password.page.ts\n            \n            component\n            ForgotPasswordPage\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/auth/pages/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/auth/pages/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/auth/pages/restore-account/restore-account.page.ts\n            \n            component\n            RestoreAccountPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/auth/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/classes/user.class.ts\n            \n            class\n            UserUtils\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/components/integration-github/integration-github.component.ts\n            \n            component\n            IntegrationGithubComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/components/member-list/member-list.component.ts\n            \n            component\n            MemberListComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/components/view-options/view-options.component.ts\n            \n            component\n            ViewOptionsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n            \n            component\n            AddMemberDialog\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/dialogs/add-member/add-member.dialog.ts\n            \n            interface\n            AddMemberDialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitAccount\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitIntegration\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitIssue\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitPull\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/git-integration.interface.ts\n            \n            interface\n            GitRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/project-member.interface.ts\n            \n            interface\n            ProjectMember\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/project.interface.ts\n            \n            interface\n            Project\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/interfaces/workspace.interface.ts\n            \n            interface\n            Workspace\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/create-project-members/create-project-members.page.ts\n            \n            component\n            CreateProjectMembersPage\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/create-project/create-project.page.ts\n            \n            component\n            CreateProjectPage\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/create-workspace/create-workspace.page.ts\n            \n            component\n            CreateWorkspacePage\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/edit-project-members/edit-project-members.page.ts\n            \n            component\n            EditProjectMembersPage\n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/edit-project/edit-project.page.ts\n            \n            component\n            EditProjectPage\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/edit-workspace/edit-workspace.page.ts\n            \n            component\n            EditWorkspacePage\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/github-integration/github-integration.page.ts\n            \n            component\n            GithubIntegrationPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/projects-list/projects-list.page.ts\n            \n            component\n            ProjectsListPage\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/pages/workspaces-list/workspaces-list.page.ts\n            \n            component\n            WorkspacesListPage\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/dashboard/services/git-integration.service.ts\n            \n            injectable\n            GitIntegrationService\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                src/app/dashboard/services/member.service.ts\n            \n            injectable\n            MemberService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/dashboard/services/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/services/workspace.service.ts\n            \n            injectable\n            WorkspaceService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/settings/components/integration-entry/integration-entry.component.ts\n            \n            component\n            IntegrationEntryComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/settings/components/list-group/list-group.component.ts\n            \n            component\n            ListGroupComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/settings/interfaces/session.interface.ts\n            \n            interface\n            UserSession\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-account/settings-account.page.ts\n            \n            component\n            SettingsAccountPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n            \n            component\n            SettingsIntegrationsPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-integrations/settings-integrations.page.ts\n            \n            interface\n            GitAccountWithUsage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-localization/settings-localization.page.ts\n            \n            component\n            SettingsLocalizationPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings-sessions/settings-sessions.page.ts\n            \n            component\n            SettingsSessionsPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/pages/settings/settings.page.ts\n            \n            component\n            SettingsPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/settings/services/sessions.service.ts\n            \n            injectable\n            SessionsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/tasks/components/board-task/board-task.component.ts\n            \n            component\n            BoardTaskComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tasks/components/input-assignee/input-assignee.component.ts\n            \n            component\n            InputAssigneeComponent\n            \n                40 %\n                (11/27)\n            \n        \n        \n            \n                \n                src/app/tasks/components/status-label/status-label.component.ts\n            \n            component\n            StatusLabelComponent\n            \n                40 %\n                (11/27)\n            \n        \n        \n            \n                \n                src/app/tasks/components/view-options/view-options.component.ts\n            \n            component\n            ViewOptionsComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/tasks/dialogs/task/task.dialog.ts\n            \n            component\n            TaskDialog\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/tasks/dialogs/task/task.dialog.ts\n            \n            interface\n            TaskDialogData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/schedule.interface.ts\n            \n            interface\n            SinglePersonSchedule\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/status.interface.ts\n            \n            interface\n            Status\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/status.interface.ts\n            \n            interface\n            StatusWithTasks\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/task.interface.ts\n            \n            interface\n            Task\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/tasks/interfaces/task.interface.ts\n            \n            interface\n            TaskWithAdditionalData\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/tasks/pages/board/board.page.ts\n            \n            component\n            BoardPage\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/tasks/pages/schedule/schedule.page.ts\n            \n            component\n            SchedulePage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tasks/pages/task-list/task-list.page.ts\n            \n            component\n            TaskListPage\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/status-color.pipe.ts\n            \n            pipe\n            StatusColorPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/task-priority-icon.pipe.ts\n            \n            pipe\n            TaskPriorityIconPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/task-priority.pipe.ts\n            \n            pipe\n            TaskPriorityPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/task-type-icon.pipe.ts\n            \n            pipe\n            TaskTypeIconPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/pipes/task-type.pipe.ts\n            \n            pipe\n            TaskTypePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/tasks/services/status.service.ts\n            \n            injectable\n            StatusService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/tasks/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/_main.mocks.prod.ts\n            \n            function\n            initMocks\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/_main.mocks.ts\n            \n            function\n            initMocks\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/helpers/response.mock.helper.ts\n            \n            variable\n            NO_CONTENT_PROVIDED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/helpers/response.mock.helper.ts\n            \n            variable\n            SUCCESS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/workspaces.mocks.ts\n            \n            function\n            workspacesMock\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/mocks/workspaces.mocks.ts\n            \n            function\n            workspacesSeed\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tests/helpers/mat-dialog-testing-provider.helper.ts\n            \n            variable\n            MatDialogTestingProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers/ng-control-testing-provider.helper.ts\n            \n            class\n            TestNgControl\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tests/helpers/validator-testing.helper.ts\n            \n            function\n            expectToFail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers/validator-testing.helper.ts\n            \n            function\n            expectToPass\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/test.ts\n            \n            variable\n            context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tests/test.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/typings/typings.ts\n            \n            interface\n            FormGroup\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/cdk : ^13.3.0\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/material : ^13.3.0\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @fortawesome/angular-fontawesome : ^0.10.2\n        \n            @fortawesome/fontawesome-svg-core : ^6.1.0\n        \n            @fortawesome/free-brands-svg-icons : ^6.1.0\n        \n            @fortawesome/free-regular-svg-icons : ^6.1.0\n        \n            @fortawesome/free-solid-svg-icons : ^6.1.0\n        \n            color : ^4.2.3\n        \n            concurrently : ^7.1.0\n        \n            dayjs : ^1.11.2\n        \n            miragejs : ^0.1.43\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            ua-parser-js : ^1.0.2\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AlertDialogVariant   (src/.../alert.dialog.ts)\n                        \n                        \n                            RegisterStage   (src/.../register.page.ts)\n                        \n                        \n                            SubTaskType   (src/.../task-type.enum.ts)\n                        \n                        \n                            TaskDialogVariant   (src/.../task.dialog.ts)\n                        \n                        \n                            TaskPriority   (src/.../task-priority.enum.ts)\n                        \n                        \n                            TaskType   (src/.../task-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/dialogs/alert/alert.dialog.ts\n    \n        \n            \n                \n                    \n                        \n                        AlertDialogVariant\n                    \n                \n                    \n                        \n                            Type of the dialog variant. Used to specify what dialog styling should be used.\n\n                        \n                    \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n                        \n                            \n                                 IMPORTANT\n                            \n                        \n                        \n                            \n                                Value : important\n                            \n                        \n            \n        \n\n    src/app/auth/pages/register/register.page.ts\n    \n        \n            \n                \n                    \n                        \n                        RegisterStage\n                    \n                \n                        \n                            \n                                 IMPORTANT_DATA\n                            \n                        \n                        \n                            \n                                 PERSONAL_DATA\n                            \n                        \n            \n        \n\n    src/app/tasks/enums/task-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        SubTaskType\n                    \n                \n                        \n                            \n                                 SUBTASK\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TaskType\n                    \n                \n                        \n                            \n                                 TASK\n                            \n                        \n                        \n                            \n                                 USER_STORY\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 EPIC\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/tasks/dialogs/task/task.dialog.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDialogVariant\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n                        \n                            \n                                Value : edit\n                            \n                        \n            \n        \n\n    src/app/tasks/enums/task-priority.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskPriority\n                    \n                \n                        \n                            \n                                 HIGHEST\n                            \n                        \n                        \n                            \n                                Value : highest\n                            \n                        \n                        \n                            \n                                 HIGH\n                            \n                        \n                        \n                            \n                                Value : high\n                            \n                        \n                        \n                            \n                                 MEDIUM\n                            \n                        \n                        \n                            \n                                Value : medium\n                            \n                        \n                        \n                            \n                                 LOW\n                            \n                        \n                        \n                            \n                                Value : low\n                            \n                        \n                        \n                            \n                                 LOWEST\n                            \n                        \n                        \n                            \n                                Value : lowest\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            applyFilters   (src/.../apply-filters.operator.ts)\n                        \n                        \n                            catchResponse   (src/.../catch-response.operator.ts)\n                        \n                        \n                            Debug   (src/.../debug.decorator.ts)\n                        \n                        \n                            emailValidator   (src/.../email.validator.ts)\n                        \n                        \n                            expectToFail   (src/.../validator-testing.helper.ts)\n                        \n                        \n                            expectToPass   (src/.../validator-testing.helper.ts)\n                        \n                        \n                            initMocks   (src/.../_main.mocks.prod.ts)\n                        \n                        \n                            initMocks   (src/.../_main.mocks.ts)\n                        \n                        \n                            maxLengthValidator   (src/.../max-length.validator.ts)\n                        \n                        \n                            Page   (src/.../page.decorator.ts)\n                        \n                        \n                            passwordValidator   (src/.../password.validator.ts)\n                        \n                        \n                            requiredValidator   (src/.../required.validator.ts)\n                        \n                        \n                            sameAsValidator   (src/.../same-as.validator.ts)\n                        \n                        \n                            Service   (src/.../service.decorator.ts)\n                        \n                        \n                            ServiceValidator   (src/.../service-validator.decorator.ts)\n                        \n                        \n                            workspacesMock   (src/.../workspaces.mocks.ts)\n                        \n                        \n                            workspacesSeed   (src/.../workspaces.mocks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/operators/apply-filters.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters(filters?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/operators/catch-response.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        catchResponse\n                        \n                    \n                \n            \n            \n                \ncatchResponse(message: string, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/debug.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Debug\n                        \n                    \n                \n            \n            \n                \nDebug()\n                \n            \n\n\n\n\n        \n    \n    src/app/_main/validators/email.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailValidator\n                        \n                    \n                \n            \n            \n                \nemailValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if email is valid\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/tests/helpers/validator-testing.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        expectToFail\n                        \n                    \n                \n            \n            \n                \nexpectToFail(val: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expectToPass\n                        \n                    \n                \n            \n            \n                \nexpectToPass(val: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/mocks/_main.mocks.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initMocks\n                        \n                    \n                \n            \n            \n                \ninitMocks()\n                \n            \n\n\n\n\n            \n                \n                    Production version of mocking initializer\nThis file need to be in file replacements in angular.json\n{\n \"replace\": \"src/mocks/_main.mocks.ts\",\n \"with\": \"src/mocks/_main.mocks.prod.ts\"\n}\n\n                \n            \n        \n    \n    src/mocks/_main.mocks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initMocks\n                        \n                    \n                \n            \n            \n                \ninitMocks()\n                \n            \n\n\n\n\n            \n                \n                    Function to initialize mocking server with all routes\n\n\n                \n            \n        \n    \n    src/app/_main/validators/max-length.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        maxLengthValidator\n                        \n                    \n                \n            \n            \n                \nmaxLengthValidator(length: number)\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if the length is not greater than specyfic number\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/page.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Page\n                        \n                    \n                \n            \n            \n                \nPage()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to mark component or directive as a page.\n(@)Page()\n(@)Component({\n  selector: 'app-example-page',\n  templateUrl: './example.page.html',\n  styleUrls: ['./example.page.scss'],\n})\nexport class CreateWorkspacePage { ... }\n\n                \n            \n        \n    \n    src/app/_main/validators/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if password is valid\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/validators/required.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        requiredValidator\n                        \n                    \n                \n            \n            \n                \nrequiredValidator()\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if value was provided\n\n\n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/validators/same-as.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sameAsValidator\n                        \n                    \n                \n            \n            \n                \nsameAsValidator(compareWith: string, message: string)\n                \n            \n\n\n\n\n            \n                \n                    Validator to check if password is valid\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    compareWith\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_main/decorators/service.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Service\n                        \n                    \n                \n            \n            \n                \nService()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to mark class as a service and store theirs instances in global variable.\n\n\n                \n            \n        \n    \n    src/app/_main/decorators/service-validator.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ServiceValidator\n                        \n                    \n                \n            \n            \n                \nServiceValidator(errorValidationTree: ErrorValidationTree)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorValidationTree\n                                    \n                                                ErrorValidationTree\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/mocks/workspaces.mocks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        workspacesMock\n                        \n                    \n                \n            \n            \n                \nworkspacesMock(server: Server)\n                \n            \n\n\n\n\n            \n                \n                    Function to create mocking routes for workspaces.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    server\n                                    \n                                            Server\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Miragejs server\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workspacesSeed\n                        \n                    \n                \n            \n            \n                \nworkspacesSeed(server: Server)\n                \n            \n\n\n\n\n            \n                \n                    Function to seed data into the mocking server\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    server\n                                    \n                                            Server\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Miragejs server\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWorkflow - Clean and powerful work management app.\n\n\n  \n  \n  Workflow is a task management app with multiple independent modules to speed up work.\n    tasks / mail / messages\n  \n\n\n\n  DEVELOPMENT SERVER\n  \n\n\n\n  \n  \n  \n  \n\n\n\n\n\nGetting started\nAt first install node.js and npm from https://nodejs.org/en/. In the second step run command:\nnpm installAnd you are ready to go. It's highly recommended to use yarn instead of npm.\nnpm install -g yarn\nyarn install\n\nDevelopment server\nFor a dev server run:\nyarn startNavigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\n\n\nBuild\nTo build the project run:\nyarn buildThe build artifacts will be stored in the dist/ directory.\n\n\nRunning unit tests\nTo execute the unit tests via Karma run:\nyarn start:test\n\nRunning end-to-end tests\nTo execute the end-to-end tests via Cypress run:\nyarn e2e\n\nBuilding documentation\nTo build documentation via compodoc run:\nyarn start:docsAPI Documentation and repository\nEndpoints documentation is shared using Swagger library here. The repository is in other GitHub account here.\nRecommended Versions\nnode - 16.13.0\nyarn - 1.22.17\nAngular CLI - 13.2.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBasic License\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_EmailsModule\n\n\n\ncluster_EmailsModule_imports\n\n\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_declarations\n\n\n\ncluster_TasksModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nMainModule->AuthModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nMainModule->DashboardModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nMainModule->SettingsModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nMainModule->TasksModule\n\n\n\n\n\nChangePasswordPage\n\nChangePasswordPage\n\nAuthModule -->\n\nChangePasswordPage->AuthModule\n\n\n\n\n\nDeleteAccountPage\n\nDeleteAccountPage\n\nAuthModule -->\n\nDeleteAccountPage->AuthModule\n\n\n\n\n\nForgotPasswordPage\n\nForgotPasswordPage\n\nAuthModule -->\n\nForgotPasswordPage->AuthModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nAuthModule -->\n\nLoginPage->AuthModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nAuthModule -->\n\nRegisterPage->AuthModule\n\n\n\n\n\nRestoreAccountPage\n\nRestoreAccountPage\n\nAuthModule -->\n\nRestoreAccountPage->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAddMemberDialog\n\nAddMemberDialog\n\nDashboardModule -->\n\nAddMemberDialog->DashboardModule\n\n\n\n\n\nCreateProjectMembersPage\n\nCreateProjectMembersPage\n\nDashboardModule -->\n\nCreateProjectMembersPage->DashboardModule\n\n\n\n\n\nCreateProjectPage\n\nCreateProjectPage\n\nDashboardModule -->\n\nCreateProjectPage->DashboardModule\n\n\n\n\n\nCreateWorkspacePage\n\nCreateWorkspacePage\n\nDashboardModule -->\n\nCreateWorkspacePage->DashboardModule\n\n\n\n\n\nEditProjectMembersPage\n\nEditProjectMembersPage\n\nDashboardModule -->\n\nEditProjectMembersPage->DashboardModule\n\n\n\n\n\nEditProjectPage\n\nEditProjectPage\n\nDashboardModule -->\n\nEditProjectPage->DashboardModule\n\n\n\n\n\nEditWorkspacePage\n\nEditWorkspacePage\n\nDashboardModule -->\n\nEditWorkspacePage->DashboardModule\n\n\n\n\n\nIntegrationGithubComponent\n\nIntegrationGithubComponent\n\nDashboardModule -->\n\nIntegrationGithubComponent->DashboardModule\n\n\n\n\n\nMemberListComponent\n\nMemberListComponent\n\nDashboardModule -->\n\nMemberListComponent->DashboardModule\n\n\n\n\n\nProjectsListPage\n\nProjectsListPage\n\nDashboardModule -->\n\nProjectsListPage->DashboardModule\n\n\n\n\n\nViewOptionsComponent\n\nViewOptionsComponent\n\nDashboardModule -->\n\nViewOptionsComponent->DashboardModule\n\n\n\n\n\nWorkspacesListPage\n\nWorkspacesListPage\n\nDashboardModule -->\n\nWorkspacesListPage->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nGitIntegrationService\n\nGitIntegrationService\n\nDashboardModule -->\n\nGitIntegrationService->DashboardModule\n\n\n\n\n\nEmailsRoutingModule\n\nEmailsRoutingModule\n\n\n\nEmailsModule\n\nEmailsModule\n\nEmailsModule -->\n\nEmailsRoutingModule->EmailsModule\n\n\n\n\n\nMessagesRoutingModule\n\nMessagesRoutingModule\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nMessagesRoutingModule->MessagesModule\n\n\n\n\n\nIntegrationEntryComponent\n\nIntegrationEntryComponent\n\nSettingsModule -->\n\nIntegrationEntryComponent->SettingsModule\n\n\n\n\n\nListGroupComponent\n\nListGroupComponent\n\nSettingsModule -->\n\nListGroupComponent->SettingsModule\n\n\n\n\n\nSettingsAccountPage\n\nSettingsAccountPage\n\nSettingsModule -->\n\nSettingsAccountPage->SettingsModule\n\n\n\n\n\nSettingsIntegrationsPage\n\nSettingsIntegrationsPage\n\nSettingsModule -->\n\nSettingsIntegrationsPage->SettingsModule\n\n\n\n\n\nSettingsLocalizationPage\n\nSettingsLocalizationPage\n\nSettingsModule -->\n\nSettingsLocalizationPage->SettingsModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\nSettingsModule -->\n\nSettingsPage->SettingsModule\n\n\n\n\n\nSettingsSessionsPage\n\nSettingsSessionsPage\n\nSettingsModule -->\n\nSettingsSessionsPage->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\nBoardPage\n\nBoardPage\n\nTasksModule -->\n\nBoardPage->TasksModule\n\n\n\n\n\nBoardTaskComponent\n\nBoardTaskComponent\n\nTasksModule -->\n\nBoardTaskComponent->TasksModule\n\n\n\n\n\nInputAssigneeComponent\n\nInputAssigneeComponent\n\nTasksModule -->\n\nInputAssigneeComponent->TasksModule\n\n\n\n\n\nSchedulePage\n\nSchedulePage\n\nTasksModule -->\n\nSchedulePage->TasksModule\n\n\n\n\n\nStatusColorPipe\n\nStatusColorPipe\n\nTasksModule -->\n\nStatusColorPipe->TasksModule\n\n\n\n\n\nStatusLabelComponent\n\nStatusLabelComponent\n\nTasksModule -->\n\nStatusLabelComponent->TasksModule\n\n\n\n\n\nTaskDialog\n\nTaskDialog\n\nTasksModule -->\n\nTaskDialog->TasksModule\n\n\n\n\n\nTaskListPage\n\nTaskListPage\n\nTasksModule -->\n\nTaskListPage->TasksModule\n\n\n\n\n\nTaskPriorityIconPipe\n\nTaskPriorityIconPipe\n\nTasksModule -->\n\nTaskPriorityIconPipe->TasksModule\n\n\n\n\n\nTaskPriorityPipe\n\nTaskPriorityPipe\n\nTasksModule -->\n\nTaskPriorityPipe->TasksModule\n\n\n\n\n\nTaskTypeIconPipe\n\nTaskTypeIconPipe\n\nTasksModule -->\n\nTaskTypeIconPipe->TasksModule\n\n\n\n\n\nTaskTypePipe\n\nTaskTypePipe\n\nTasksModule -->\n\nTaskTypePipe->TasksModule\n\n\n\n\n\nTasksRoutingModule\n\nTasksRoutingModule\n\nTasksModule -->\n\nTasksRoutingModule->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    56 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    30 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        84 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            color   (src/.../color.interface.ts)\n                        \n                        \n                            Filter   (src/.../filters.interface.ts)\n                        \n                        \n                            FilterType   (src/.../filters.interface.ts)\n                        \n                        \n                            Schedule   (src/.../schedule.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_main/interfaces/color.interface.ts\n    \n    \n        \n            \n                \n                    \n                    color\n                \n            \n            \n                \n                            number\n\n                \n            \n        \n    \n    src/app/_main/interfaces/filters.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                            FilterCheckbox\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/tasks/interfaces/schedule.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Schedule\n                \n            \n            \n                \n                            SinglePersonSchedule[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            MatDialogTestingProvider   (src/.../mat-dialog-testing-provider.helper.ts)\n                        \n                        \n                            ngModuleConfig   (src/.../_main.module.ts)\n                        \n                        \n                            NO_CONTENT_PROVIDED   (src/.../response.mock.helper.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            SUCCESS   (src/.../response.mock.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tests/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('../', true, /\\.spec\\.ts$/)\n                    \n                \n\n            \n                \n                    Context for searching for tests\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n            \n                \n                    Context builder form karma tests\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiURL: '/api',\n  disableConsoleLog: true,\n}\n                    \n                \n\n            \n                \n                    Variant of global environment file for production.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Whether the application is running in production mode.\n   */\n  production: false,\n\n  /**\n   * API URL for the backend.\n   */\n  apiURL: '/api',\n\n  /**\n   * Whether to disable console logging.\n   */\n  disableConsoleLog: false,\n}\n                    \n                \n\n            \n                \n                    Global environment configuration object, replaced in configurations other than development. Stores build specific data.\n\n                \n            \n\n        \n    \n\n    src/tests/helpers/mat-dialog-testing-provider.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MatDialogTestingProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  MatDialogModule,\n  { provide: MAT_DIALOG_DATA, useValue: {} },\n  { provide: MatDialogRef, useValue: {} },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/_main/_main.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ngModuleConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  imports: [\n    /*=============================================\n    =             Local dependencies              =\n    =============================================*/\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n    ObserversModule,\n  ],\n  importExports: [\n    /*=============================================\n      =                Dependencies                 =\n      =============================================*/\n    DragDropModule,\n    PlatformModule,\n    OverlayModule,\n\n    /*=============================================\n      =              Material modules               =\n      =============================================*/\n    MatDialogModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTableModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n\n    /*=============================================\n      =              External modules               =\n      =============================================*/\n    FontAwesomeModule,\n  ],\n  declarations: [\n    /*=============================================\n    =         Local custom components             =\n    =============================================*/\n  ],\n  exportDeclarations: [\n    /*=============================================\n    =         Exported custom components          =\n    =============================================*/\n    InputComponent,\n    ButtonComponent,\n    ValidationErrorPipe,\n    AlertDialog,\n    IconComponent,\n    FocusInitialDirective,\n    SidebarNavigationComponent,\n    NavElementComponent,\n    NavElementWorkspaceComponent,\n    UpperNavigationComponent,\n    SelectComponent,\n    OptionComponent,\n    MainViewComponent,\n    TextareaComponent,\n    CheckboxComponent,\n    CardComponent,\n    ClickStopPropagationDirective,\n    InputDateTimeComponent,\n    LetDirective,\n    FiltersComponent,\n    SnackbarComponent,\n    SnackbarOutletComponent,\n    MockPage,\n  ],\n  providers: [\n    DialogService,\n    ApiService,\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    MatCheckboxModule,\n    MatDatepickerModule,\n  ],\n}\n                    \n                \n\n            \n                \n                    Main module configuration object\n\n                \n            \n\n        \n    \n\n    src/mocks/helpers/response.mock.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NO_CONTENT_PROVIDED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 400,\n  body: {\n    message: 'No data provided',\n  },\n}\n                    \n                \n\n            \n                \n                    Object to mock no content provided response. Mainly used when request checks\nfor data in body, but nothing is provided.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SUCCESS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  status: 200,\n  body: {\n    message: 'Success',\n  },\n}\n                    \n                \n\n            \n                \n                    Object to mock success response. Used often to notify app that request was\nsuccessful.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/architecture.html":{"url":"additional-documentation/architecture.html","title":"additional-page - Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture\nArchitecture of the application is maintained with base Angular methodologies. For more information's about Angular methodologies see Angular documentation.\nNaming conventions\nEach file should be named using only lower case letters and  - to replace spaces. Filename should be .. where  is the name of the file (ex. hello-world),  is the type of the file (ex. module or component) and the  is the extension of the file (ex. .ts).\nSingle responsibility principle\nEach file should have only one responsibility. For example, src/app/hello-world/hello-world.module.ts should have only one responsibility to create the module. For more information's about the Single Responsibility Principle see Wikipedia.\nModules\nApp is splitter into separated modules. Each module has it's own folder in src/app directory. In this dedicated space each module has it's own .module.ts file and optionally .routing.ts file.\nClasses\nIf project is using some additional classes logic like class grouped utility functions or abstract control classes, then they should be placed in dedicated folder in classes/ directory.\nComponents\nComponents are the main building blocks of the application. They are the most important part of the architecture. Each component has it's own folder in components/ directory. In this dedicated space each component has it's own .component.ts file.\nDecorators\nDecorators are used to add additional functionality to the components. For example, @Component decorator is used to mark the component as a component. Each decorator has it's own file in decorators/ directory. In this dedicated space each pipe has it's own .decorator.ts file. For more information's about decorators see Angular documentation.\nDialogs\nDialogs are used to display information to the user. Dialogs are located in dialogs/ directory. For more information's about dialogs see Angular documentation.\nDirectives\nDirectives are used to add additional functionality to the components. For example, @Directive decorator is used to mark the directive as a directive. Each decorator has it's own file in directives/ directory. In this dedicated space each directive has it's own .directive.ts file. For more information's about directives see Angular documentation.\nEnums\nEnums are used to define the values of the enumeration. Each enumerable value has it's own enum.ts file in enums/ directory.\nGuards\nGuards are used to protect routes from unauthorized access. Each guard has it's own folder in guards/ directory. In this dedicated space each guard has it's own .guard.ts file. For more information's about guards see Angular documentation.\nInterfaces\nInterfaces are used to structure the code. They are used to describe the shape of the object. For more information's about interfaces see Angular documentation.\nPipes\nPipes are used to transform data. Each pipe has it's own folder in pipes/ directory. In this dedicated space each pipe has it's own .pipe.ts file. For more information's about pipes see Angular documentation.\nServices\nServices are used to share data between components. Each service has it's own .service.ts file located in services/ directory in one of the modules.\nValidators\nValidators are used to validate the data (mainly in forms). Each validator has it's own .validator.ts file located in validators/ directory in one of the modules.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/localization.html":{"url":"additional-documentation/localization.html","title":"additional-page - Localization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocalization\nApp is localized using angular/localize. At the current stage of the project app is translated in:\nde-DE -> German (Germany)\nen-GB -> English (United Kingdom)\nen-US -> English (United States, Default app language)\nes-ES -> Spanish (Spain)\nit-IT -> Italian (Italy)\npl-PL -> Polish (Poland)\nuk-UA -> Ukrainian (Ukraine)Configuration\nEach language is listed in angular.json file in i18n section.\nFor polish language for example:\n\"i18n\": {\n  ...\n  \"locales\": {\n    \"pl-PL\": {\n      \"translation\": \"src/locales/messages.pl-PL.xlf\"\n    },\n    ...\n  }\n}Languages also requires separated file in src/locales folder to be created before build.\nIn the future adding new language will need some more work to do. For example adding new element in language selection list.\nMaking translations\nBefore translating strings first what you need to do is to extract all translatable strings from the app. To do this run the command:\nyarn extract:i18nEach language translations are located in src/locales folder, for example src/locales/messages.pl-PL.xlf file. This files can be edited using any text editor, but more convenient is to use external tools.\nIn Visual Studio Code there is an extension named Angular I18n Editor. This extension is used to make translations in more human readable way. It serves an UI interface to edit translations. To open this extension press F1 and search for Angular I18n Editor: Open command.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/continuos-integration.html":{"url":"additional-documentation/continuos-integration.html","title":"additional-page - Continuos integration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCI/CD pipeline\nContinuos integration was resolved using tool named GitHub Actions. Actions are located in .github/workflows/ directory. At this moment there is one pipeline to deploy application named deploy.yml. This action after every push to the master branch rebuild the application and deploy it to the production environment using rsync protocol. This action also build documentation page, publishes it and runs tests. There is also included a small script to create badges to use them in Readme.md and documentation files. This file is named badge-generator.js and is located in the root directory.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
